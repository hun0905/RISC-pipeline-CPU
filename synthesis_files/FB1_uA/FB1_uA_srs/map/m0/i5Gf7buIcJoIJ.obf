//
// Written by ProtoCompiler 
// Product Version "R-2020.12-SP1-1"
// Program "ProtoCompiler", Mapper "map202012pcp4, Build 193R"
// Sun Apr  9 22:47:24 2023
//
// Source file index table:
// Object locations will have the form <file>:<line>
// file 0 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/xilinx/unisim_retarget.v "
// file 1 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/xilinx/unisim_vivado.v "
// file 2 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/vlog/hypermods.v "
// file 3 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/vlog/umr_capim.v "
// file 4 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/synip/hcei/zceistubs.v "
// file 5 "\./src/top.v "
// file 6 "\/home/u108/u108061217/RISC-V-pipeline-CPU/./src/top.v "
// file 7 "\./src/MEM_WB.v "
// file 8 "\/home/u108/u108061217/RISC-V-pipeline-CPU/./src/MEM_WB.v "
// file 9 "\./src/IM.v "
// file 10 "\/home/u108/u108061217/RISC-V-pipeline-CPU/./src/IM.v "
// file 11 "\./src/Adder.v "
// file 12 "\/home/u108/u108061217/RISC-V-pipeline-CPU/./src/Adder.v "
// file 13 "\./src/MUX.v "
// file 14 "\/home/u108/u108061217/RISC-V-pipeline-CPU/./src/MUX.v "
// file 15 "\./src/MUX3_1.v "
// file 16 "\/home/u108/u108061217/RISC-V-pipeline-CPU/./src/MUX3_1.v "
// file 17 "\./src/DM.v "
// file 18 "\/home/u108/u108061217/RISC-V-pipeline-CPU/./src/DM.v "
// file 19 "\./src/IF_ID.v "
// file 20 "\/home/u108/u108061217/RISC-V-pipeline-CPU/./src/IF_ID.v "
// file 21 "\./src/PC.v "
// file 22 "\/home/u108/u108061217/RISC-V-pipeline-CPU/./src/PC.v "
// file 23 "\./src/Hazard.v "
// file 24 "\/home/u108/u108061217/RISC-V-pipeline-CPU/./src/Hazard.v "
// file 25 "\./src/ALU.v "
// file 26 "\/home/u108/u108061217/RISC-V-pipeline-CPU/./src/ALU.v "
// file 27 "\./src/Control.v "
// file 28 "\/home/u108/u108061217/RISC-V-pipeline-CPU/./src/Control.v "
// file 29 "\./src/Registers.v "
// file 30 "\/home/u108/u108061217/RISC-V-pipeline-CPU/./src/Registers.v "
// file 31 "\./src/Forwarding.v "
// file 32 "\/home/u108/u108061217/RISC-V-pipeline-CPU/./src/Forwarding.v "
// file 33 "\./src/ImmGen.v "
// file 34 "\/home/u108/u108061217/RISC-V-pipeline-CPU/./src/ImmGen.v "
// file 35 "\./src/EX_MEM.v "
// file 36 "\/home/u108/u108061217/RISC-V-pipeline-CPU/./src/EX_MEM.v "
// file 37 "\./src/comparator.v "
// file 38 "\/home/u108/u108061217/RISC-V-pipeline-CPU/./src/comparator.v "
// file 39 "\./src/ID_EX.v "
// file 40 "\/home/u108/u108061217/RISC-V-pipeline-CPU/./src/ID_EX.v "
// file 41 "\./src/ALUControl.v "
// file 42 "\/home/u108/u108061217/RISC-V-pipeline-CPU/./src/ALUControl.v "
// file 43 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/nlconst.dat "
// file 44 "\/home/u108/u108061217/RISC-V-pipeline-CPU/top_ucdb/cclock_map.tcl "
// file 45 "\/remote/sbg_mfg/unix/golden/syn201903/lib/xilinx/unisim_m10i.v "
// file 46 "\/remote/sbg_mfg/unix/golden/syn201903/lib/xilinx/unisim.v "
// file 47 "\/remote/sbg_mfg/unix/golden/syn201903/lib/vlog/hypermods.v "
// file 48 "\/remote/sbg_mfg/unix/golden/syn201903/lib/vlog/umr_capim.v "
// file 49 "\/remote/sbg_mfg/unix/golden/syn201903/lib/synip/hcei/zceistubs.v "
// file 50 "\/remote/sbg_mfg/unix/golden/syn201903/lib/vlog/scemi_objects.v "
// file 51 "\/remote/sbg_mfg/unix/golden/syn201903/lib/vlog/scemi_pipes.svh "
// file 52 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/HAPS_DEFINE.v "
// file 53 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/daughterboards.v "
// file 54 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/customboards.v "
// file 55 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/haps-51.v "
// file 56 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/fpga-51a.v "
// file 57 "\/remote/sbg_mfg/unix/golden/syn201903/lib/xilinx/plandata/xc5vlx330ff1760.v "
// file 58 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/haps-51t.v "
// file 59 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/fpga-51ta.v "
// file 60 "\/remote/sbg_mfg/unix/golden/syn201903/lib/xilinx/plandata/xc5vlx330tff1738.v "
// file 61 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/haps-52.v "
// file 62 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/fpga-52a.v "
// file 63 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/fpga-52b.v "
// file 64 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/haps-54.v "
// file 65 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/fpga-54a.v "
// file 66 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/fpga-54b.v "
// file 67 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/fpga-54c.v "
// file 68 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/fpga-54d.v "
// file 69 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/haps_hs_v6t_75t.v "
// file 70 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/fpga_hs_v6t_75t.v "
// file 71 "\/remote/sbg_mfg/unix/golden/syn201903/lib/xilinx/plandata/xc6vlx75tff784.v "
// file 72 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/sv/sv_hs_v6t.v "
// file 73 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/haps-61-sp.v "
// file 74 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/fpga-61-spa.v "
// file 75 "\/remote/sbg_mfg/unix/golden/syn201903/lib/xilinx/plandata/xc6vlx760ff1760.v "
// file 76 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/sv/sv-6x.v "
// file 77 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/haps-62-sp.v "
// file 78 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/fpga-62-spa.v "
// file 79 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/fpga-62-spb.v "
// file 80 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/haps-62.v "
// file 81 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/fpga-62a.v "
// file 82 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/fpga-62b.v "
// file 83 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/haps-64.v "
// file 84 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/fpga-64a.v "
// file 85 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/fpga-64b.v "
// file 86 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/fpga-64c.v "
// file 87 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/fpga-64d.v "
// file 88 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/HAPS70_S12.v "
// file 89 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/FPGA70.v "
// file 90 "\/remote/sbg_mfg/unix/golden/syn201903/lib/xilinx/plandata/xc7v2000tflg1925.v "
// file 91 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/sv/CDE70.v "
// file 92 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/HAPS70_S24.v "
// file 93 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/HAPS70_S48.v "
// file 94 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/HAPSDX7_S4.v "
// file 95 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/FPGADX7_S4.v "
// file 96 "\/remote/sbg_mfg/unix/golden/syn201903/lib/xilinx/plandata/xc7vx690tffg1926.v "
// file 97 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/sv/CDEDX7.v "
// file 98 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/HAPSDX7_S6.v "
// file 99 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/FPGADX7_S6.v "
// file 100 "\/remote/sbg_mfg/unix/golden/syn201903/lib/xilinx/plandata/xc7vx980tffg1926.v "
// file 101 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/HAPS_ZSA.v "
// file 102 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/FPGA_ZSA.v "
// file 103 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/sv/CDE_ZSA.v "
// file 104 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/HAPS_ZSA2.v "
// file 105 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/FPGA_ZSA2.v "
// file 106 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/HAPS_KU.v "
// file 107 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/FPGAXCKU040.v "
// file 108 "\/remote/sbg_mfg/unix/golden/syn201903/lib/xilinx/plandata/xcku040-ffva1156.v "
// file 109 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/sv/CDEXCKU040.v "
// file 110 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/HAPS80_S26.v "
// file 111 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/daughterboards_ht3.v "
// file 112 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/FPGA80.v "
// file 113 "\/remote/sbg_mfg/unix/golden/syn201903/lib/xilinx/plandata/xcvu440-flga2892.v "
// file 114 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/sv/CDE80.v "
// file 115 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/HAPS80_S52.v "
// file 116 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/HAPS80_S104.v "
// file 117 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/haps_62_haps_v6t_75t_clock_distribution_cfg1.v "
// file 118 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/haps_61_sp_clock_distribution_cfg1.v "
// file 119 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/haps_62_clock_distribution_cfg1.v "
// file 120 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/haps_62_sp_clock_distribution_cfg1.v "
// file 121 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/haps_64_clock_distribution_cfg1.v "
// file 122 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/HAPS70_S12_clk_cfg1.v "
// file 123 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/HAPS70_S24_clk_cfg1.v "
// file 124 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/HAPS70_S48_clk_cfg1.v "
// file 125 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/HAPS_KU_clk_cfg.v "
// file 126 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/HAPS80_S26_clk.v "
// file 127 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/HAPS80_S52_clk.v "
// file 128 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/HAPS80_S104_clk.v "
// file 129 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/HAPS80D.v "
// file 130 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/GPIF_HT3.v "
// file 131 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/HAPS80D_clk.v "
// file 132 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/HAPS80D_modules.v "
// file 133 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/FPGA80D.v "
// file 134 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/sv/CDE80D.v "
// file 135 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/HAPS80DS.v "
// file 136 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/anaconda/HAPS_VU3Px1.v "
// file 137 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/anaconda/../haps/daughterboards_ht3.v "
// file 138 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/anaconda/HAPS_VU3Px1_clk.v "
// file 139 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/anaconda/FPGA_VU3P.v "
// file 140 "\/remote/sbg_mfg/unix/golden/syn201903/lib/xilinx/plandata/xcvu3p-ffvc1517.v "
// file 141 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/anaconda/../haps/sv/CDE80.v "
// file 142 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/anaconda/HAPS_AX3P.v "
// file 143 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/anaconda/HAPS100_modules.v "
// file 144 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/anaconda/modules_hc2.v "
// file 145 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/anaconda/modules_mgb2.v "
// file 146 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/anaconda/FPGA_AX3P.v "
// file 147 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/anaconda/HAPS100_1F.v "
// file 148 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/anaconda/modules_common.v "
// file 149 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/anaconda/FPGA100_1F.v "
// file 150 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/anaconda/xcvu19p-fsva3824.v "
// file 151 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/anaconda/HAPS100_4F.v "
// file 152 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/anaconda/FPGA100_4F.v "
// file 153 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/anaconda/HAPS100_12F.v "
// file 154 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/anaconda/HAPS100_12F_modules.v "
// file 155 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/anaconda/modules_mgb2b.v "
// file 156 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/anaconda/FPGA100_12F_A.v "
// file 157 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/anaconda/FPGA100_12F_B.v "
// file 158 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/anaconda/HAPS100_12F_BP1.v "
// file 159 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/anaconda/HAPS100_12F_BP2.v "
// file 160 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/anaconda/HAPS100_12F_BP3.v "
// file 161 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/anaconda/FPGA_DBDEV_HT3.v "
// file 162 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/BASECAMP.v "
// file 163 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/fpga/FPGA_BC.v "
// file 164 "\/remote/sbg_mfg/unix/golden/syn201903/lib/altera/plandata/1sg280lh3fvg55e.v "
// file 165 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/sv/CDE_BC.v "
// file 166 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/BASECAMP_clk.v "
// file 167 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/BASECAMP1.v "
// file 168 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/BASECAMP2.v "
// file 169 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/BASECAMP4.v "
// file 170 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/BASECAMP1_clk.v "
// file 171 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/BASECAMP2_clk.v "
// file 172 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/BASECAMP4_clk.v "
// file 173 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/board_utils.v "
// file 174 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/cables_ht3.v "
// file 175 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/mgb_cards.v "
// file 176 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/haps/ECDB.v "
// file 177 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/plandata/USERPART2400_HT3.v "
// file 178 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/plandata/userpart2400.v "
// file 179 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/plandata/USERPART4800_HT3.v "
// file 180 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/plandata/userpart4800.v "
// file 181 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/plandata/USERPART9600_HT3.v "
// file 182 "\/remote/srm515/fpgarite/clients/ui202012pcp4/src/misc/certify/lib/board/plandata/userpart9600.v "
// file 183 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/synip/umrbus3/netlist/umr3_him_async_fifo_2048x258_xcvu440_stub.v "
// file 184 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/synip/umrbus3/netlist/umr3_pcie_gen2_x4_haps80_xcvu440_mgb1_stub.v "
// file 185 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/synip/umrbus3/netlist/umr3_pcie_gen2_x4_haps80d_xcvu440_mgb1_stub.v "
// file 186 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/synip/umrbus3/umrbus3.v "
// file 187 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/synip/clocks/gsv_trigger_hypermods.v "
// file 188 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/vlog/scemi_objects.v "
// file 189 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/vlog/scemi_pipes.svh "
// file 190 "\/home/u108/u108061217/RISC-V-pipeline-CPU/RISC_V_CPU/pre_partition/pp0/targetsystem.vb "
// file 191 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/board/board_utils.v "
// file 192 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/board/haps/daughterboards.v "
// file 193 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/board/haps/daughterboards_ht3.v "
// file 194 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/board/haps/cables_ht3.v "
// file 195 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/board/haps/mgb_cards.v "
// file 196 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/board/haps/customboards.v "
// file 197 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/board/haps/ECDB.v "
// file 198 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/board/anaconda/HAPS100_4F.v "
// file 199 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/board/anaconda/HAPS100_modules.v "
// file 200 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/board/anaconda/modules_hc2.v "
// file 201 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/board/anaconda/modules_mgb2.v "
// file 202 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/board/anaconda/FPGA100_4F.v "
// file 203 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/board/anaconda/xcvu19p-fsva3824.v "
// file 204 "\/home/u108/u108061217/RISC-V-pipeline-CPU/RISC_V_CPU/pre_partition/pp0/cutomdb_top_io_ht3.v "
// file 205 "\/home/u108/u108061217/RISC-V-pipeline-CPU/design.fdc "
// file 206 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/common_files/srs_cons_var.fdc "
// file 207 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/common_files/tdm_cons_var.fdc "
// file 208 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_pinloc.fdc "
// file 209 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_iostd.fdc "
// file 210 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_attr.fdc "
// file 211 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_timing.fdc "
// file 212 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/common_files/clockgen_cons.fdc "
// file 213 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_haps_timing.fdc "
// file 214 "\./_nlvergenv_bqEzvm "
// file 215 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/synip/umrbus3/umrbus3_stub.v "
// file 216 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/synip/stubs/bsa19_sysip/bsa19_system_ip.v "
// file 217 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/synip/stubs/bsa19_sysip/bsa19_system_ip_wrapper.v "
// file 218 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/synip/stubs/bsa19_sysip/umr3_ds_loopback.v "
// file 219 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TraceBuildLib_FB1_uA_VJyEYy "
// file 220 "\./_nlvergenv_1MjEXm "
// file 221 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/synip/haps_systemip/system_memory.v "
// file 222 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/SysIPLib_haps_system_memory_32s_28s_32s_haps_system_memoryDini_156s_123s_122s_1s_Z2_FB1_uA_p53tJQ "
// file 223 "\./_nlvergenv_3wZSxI "
// file 224 "\./_nlvergenv_taQwZn "
// file 225 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/synip/tdm/hstdm/virtex/virtex_hstdm.v "
// file 226 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/synip/tdm/hstdm/virtex/virtex_ultrascale_hstdm_base4_mux.v "
// file 227 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/synip/i2cslave.v "
// file 228 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/synip/pllsync/rtl/clkgrp_sync_int.v "
// file 229 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/synip/pllsync/rtl/edge_det.v "
// file 230 "\/usr/cadtool/csr5306/synopsys/protocomp/R-2020.12-SP1-1/lib/synip/pllsync/rtl/watchdog_shft.v "
// file 231 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TraceBuildLib_FB1_uA_zZBt1f "
// file 232 "\./_nlvergenv_5r03wg "
// file 233 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_controller_0s_1048576s_0s_4s_12s_48s_32s_2s_FB1_uA_RiH3Fo "
// file 234 "\./_nlvergenv_lFgSOv "
// file 235 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_simulation_FB1_uA_hdT3OV "
// file 236 "\./_nlvergenv_EYiqy7 "
// file 237 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_ultrascale_plle3_Z1_FB1_uA_LeFnMS "
// file 238 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_ultrascale_plle3_Z1_0_FB1_uA_TKpQyg "
// file 239 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_ultrascale_plle3_Z1_1_FB1_uA_9GSmnE "
// file 240 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_ultrascale_plle3_Z1_2_FB1_uA_fFZ0d2 "
// file 241 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_ultrascale_plle3_Z1_3_FB1_uA_ZpjJ6p "
// file 242 "\./_nlvergenv_rJm7ZN "
// file 243 "\./_nlvergenv_TS5gW2 "
// file 244 "\./_nlvergenv_TpqUfx "
// file 245 "\./_nlvergenv_JyK7lg "
// file 246 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_tx_clkgen_0s_4s_1200s_150s_DATA_AND_CLOCK_1s_TRUE_40s_ULTRASCALE_PLUS_Z1_FB1_uA_vLjAQd "
// file 247 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TraceBuildLib_FB1_uA_pIvZdV "
// file 248 "\./_nlvergenv_14OSBC "
// file 249 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_tx_clkgen_0s_4s_1200s_150s_DATA_0s_FALSE_40s_ULTRASCALE_PLUS_Z1_FB1_uA_PJLNqN "
// file 250 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TraceBuildLib_FB1_uA_H60cuz "
// file 251 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_tx_clkgen_0s_4s_1200s_150s_DATA_AND_CLOCK_1s_TRUE_40s_ULTRASCALE_PLUS_Z1_0_FB1_uA_xwmNzl "
// file 252 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TraceBuildLib_FB1_uA_ToPQF7 "
// file 253 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_tx_clkgen_0s_4s_1200s_150s_DATA_AND_CLOCK_1s_TRUE_40s_ULTRASCALE_PLUS_Z1_1_FB1_uA_jzD9NT "
// file 254 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TraceBuildLib_FB1_uA_hTzVWF "
// file 255 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_tx_clkgen_0s_4s_1200s_150s_DATA_AND_CLOCK_1s_TRUE_40s_ULTRASCALE_PLUS_Z1_2_FB1_uA_R6WV7r "
// file 256 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TraceBuildLib_FB1_uA_nW1oje "
// file 257 "\./_nlvergenv_ZIrnv0 "
// file 258 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_tx_Z2_FB1_uA_v8XMUp "
// file 259 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TraceBuildLib_FB1_uA_xiyKWg "
// file 260 "\./_nlvergenv_DWJeZ7 "
// file 261 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_tx_Z2_0_FB1_uA_hukeCL "
// file 262 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TraceBuildLib_FB1_uA_TnKIaH "
// file 263 "\./_nlvergenv_dTjMJC "
// file 264 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_tx_Z2_1_FB1_uA_5pjt4t "
// file 265 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TraceBuildLib_FB1_uA_zBXBhu "
// file 266 "\./_nlvergenv_r4zmvu "
// file 267 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_tx_Z2_2_FB1_uA_rxQ4Gz "
// file 268 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TraceBuildLib_FB1_uA_TuPHrE "
// file 269 "\./_nlvergenv_jxXQcJ "
// file 270 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_tx_Z2_3_FB1_uA_r9Kod2 "
// file 271 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TraceBuildLib_FB1_uA_JYoeIb "
// file 272 "\./_nlvergenv_1SPGdl "
// file 273 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_tx_Z2_4_FB1_uA_5hFBtS "
// file 274 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TraceBuildLib_FB1_uA_Z2UYI6 "
// file 275 "\./_nlvergenv_Jz2TYk "
// file 276 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_tx_Z2_5_FB1_uA_jLGTJ6 "
// file 277 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TraceBuildLib_FB1_uA_75rxZp "
// file 278 "\./_nlvergenv_FAXMfJ "
// file 279 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_tx_Z2_6_FB1_uA_z9CkJJ "
// file 280 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TraceBuildLib_FB1_uA_X6jPG7 "
// file 281 "\./_nlvergenv_LzjUEv "
// file 282 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_tx_Z2_7_FB1_uA_5igseK "
// file 283 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TraceBuildLib_FB1_uA_deqmSc "
// file 284 "\./_nlvergenv_5n9PwF "
// file 285 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_tx_Z2_8_FB1_uA_1Adb97 "
// file 286 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TraceBuildLib_FB1_uA_Tn91sF "
// file 287 "\./_nlvergenv_z0CtNc "
// file 288 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_tx_Z2_9_FB1_uA_zXeNpT "
// file 289 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TraceBuildLib_FB1_uA_zicHnv "
// file 290 "\./_nlvergenv_tGHbm7 "
// file 291 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_tx_Z2_10_FB1_uA_rprXH2 "
// file 292 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TraceBuildLib_FB1_uA_zYJK8J "
// file 293 "\./_nlvergenv_X6wQBr "
// file 294 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_tx_Z2_11_FB1_uA_tn2lCD "
// file 295 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TraceBuildLib_FB1_uA_FPMAHq "
// file 296 "\./_nlvergenv_RGkSOd "
// file 297 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_tx_Z2_12_FB1_uA_QvHehG "
// file 298 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TraceBuildLib_FB1_uA_QIhTuy "
// file 299 "\./_nlvergenv_YTexJq "
// file 300 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_tx_Z2_13_FB1_uA_WXpzt8 "
// file 301 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TraceBuildLib_FB1_uA_KOOeM5 "
// file 302 "\./_nlvergenv_IaXe72 "
// file 303 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_tx_Z2_14_FB1_uA_iOHs2Z "
// file 304 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TraceBuildLib_FB1_uA_IkuWi2 "
// file 305 "\./_nlvergenv_W8u8B4 "
// file 306 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_tx_Z2_15_FB1_uA_oidJMg "
// file 307 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TraceBuildLib_FB1_uA_c68Dlo "
// file 308 "\./_nlvergenv_63BGWv "
// file 309 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_tx_Z2_16_FB1_uA_CbT4PX "
// file 310 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TraceBuildLib_FB1_uA_iufKya "
// file 311 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TraceBuildLib_FB1_uA_ugcrjn "
// file 312 "\./_nlvergenv_0idc8z "
// file 313 "\./_nlvergenv_UIbyhi "
// file 314 "\/home/u108/u108061217/RISC-V-pipeline-CPU/synthesis_files/FB1_uA/FB1_uA_srs/pre_map/pm0/TdmLib_hstdm_memory_Z1_FB1_uA_0SHRzg "
// file 315 "\./xcvu19p-fsva3824.v "

`timescale 100 ps/100 ps
module MUX (
  PCIF,
  PC,
  ADDOUTID,
  N_3_i,
  PCSRCID,
  ufpga_lock_clk_o,
  ufpga_lock_ce_o,
  ufpga_lock_cdo_o,
  CDO_28
)
;
output [63:2] PCIF ;
input [63:2] PC ;
input [63:2] ADDOUTID ;
input N_3_i ;
input PCSRCID ;
inout ufpga_lock_clk_o /* synthesis syn_tristate = 1 */ ;
inout ufpga_lock_ce_o /* synthesis syn_tristate = 1 */ ;
input ufpga_lock_cdo_o ;
output CDO_28 ;
wire N_3_i ;
wire PCSRCID ;
wire ufpga_lock_clk_o ;
wire ufpga_lock_ce_o ;
wire ufpga_lock_cdo_o ;
wire CDO_28 ;
wire [7:0] out_0_0_cry_5_O;
wire [7:0] out_0_0_cry_13_O;
wire [7:0] out_0_0_cry_21_O;
wire [7:0] out_0_0_cry_29_O;
wire [7:0] out_0_0_cry_37_O;
wire [6:0] out_0_0_cry_45_O;
wire [0:0] out_cry_2_O;
wire VCC ;
wire out_axb_1 ;
wire out_axb_6 ;
wire out_axb_2 ;
wire out_axb_8 ;
wire out_axb_3 ;
wire out_axb_13 ;
wire out_axb_4 ;
wire out_axb_10 ;
wire out_axb_7 ;
wire out_axb_9 ;
wire out_axb_15 ;
wire out_0_0_cry_47 ;
wire out_395 ;
wire out_axb_14 ;
wire out_axb_12 ;
wire out_axb_11 ;
wire out_axb_5 ;
wire out_axb_0 ;
wire out_0_0_axb_47 ;
wire out_0_0_axb_46 ;
wire out_0_0_axb_45 ;
wire out_0_0_axb_44 ;
wire out_0_0_axb_43 ;
wire out_0_0_axb_42 ;
wire out_0_0_axb_41 ;
wire out_0_0_axb_40 ;
wire out_0_0_axb_39 ;
wire out_0_0_axb_38 ;
wire out_0_0_axb_37 ;
wire out_0_0_axb_36 ;
wire out_0_0_axb_35 ;
wire out_0_0_axb_34 ;
wire out_0_0_axb_33 ;
wire out_0_0_axb_32 ;
wire out_0_0_axb_31 ;
wire out_0_0_axb_30 ;
wire out_0_0_axb_29 ;
wire out_0_0_axb_28 ;
wire out_0_0_axb_27 ;
wire out_0_0_axb_26 ;
wire out_0_0_axb_25 ;
wire out_0_0_axb_24 ;
wire out_0_0_axb_23 ;
wire out_0_0_axb_22 ;
wire out_0_0_axb_21 ;
wire out_0_0_axb_20 ;
wire out_0_0_axb_19 ;
wire out_0_0_axb_18 ;
wire out_0_0_axb_17 ;
wire out_0_0_axb_16 ;
wire out_0_0_axb_15 ;
wire out_0_0_axb_14 ;
wire out_0_0_axb_13 ;
wire out_0_0_axb_12 ;
wire out_0_0_axb_11 ;
wire out_0_0_axb_10 ;
wire out_0_0_axb_9 ;
wire out_0_0_axb_8 ;
wire out_0_0_axb_7 ;
wire out_0_0_axb_6 ;
wire out_0_0_axb_5 ;
wire out_0_0_axb_4 ;
wire out_0_0_axb_3 ;
wire out_cry_0_cy ;
wire out_cry_0 ;
wire out_cry_1 ;
wire out_cry_2 ;
wire out_cry_3 ;
wire out_cry_4 ;
wire out_cry_5 ;
wire out_cry_6 ;
wire GND ;
wire out_cry_7 ;
wire out_cry_8 ;
wire out_cry_9 ;
wire out_cry_10 ;
wire out_cry_11 ;
wire out_cry_12 ;
wire out_cry_13 ;
wire out_cry_14 ;
wire out_0_0_cry_2 ;
wire out_0_0_cry_3 ;
wire out_0_0_cry_4 ;
wire out_0_0_cry_5 ;
wire out_0_0_cry_6 ;
wire out_0_0_cry_7 ;
wire out_0_0_cry_8 ;
wire out_0_0_cry_9 ;
wire out_0_0_cry_10 ;
wire out_0_0_cry_11 ;
wire out_0_0_cry_12 ;
wire out_0_0_cry_13 ;
wire out_0_0_cry_14 ;
wire out_0_0_cry_15 ;
wire out_0_0_cry_16 ;
wire out_0_0_cry_17 ;
wire out_0_0_cry_18 ;
wire out_0_0_cry_19 ;
wire out_0_0_cry_20 ;
wire out_0_0_cry_21 ;
wire out_0_0_cry_22 ;
wire out_0_0_cry_23 ;
wire out_0_0_cry_24 ;
wire out_0_0_cry_25 ;
wire out_0_0_cry_26 ;
wire out_0_0_cry_27 ;
wire out_0_0_cry_28 ;
wire out_0_0_cry_29 ;
wire out_0_0_cry_30 ;
wire out_0_0_cry_31 ;
wire out_0_0_cry_32 ;
wire out_0_0_cry_33 ;
wire out_0_0_cry_34 ;
wire out_0_0_cry_35 ;
wire out_0_0_cry_36 ;
wire out_0_0_cry_37 ;
wire out_0_0_cry_38 ;
wire out_0_0_cry_39 ;
wire out_0_0_cry_40 ;
wire out_0_0_cry_41 ;
wire out_0_0_cry_42 ;
wire out_0_0_cry_43 ;
wire out_0_0_cry_44 ;
wire out_0_0_cry_45 ;
wire out_0_0_cry_46 ;
wire out_0_0_cry_47_0 ;
wire NC0 ;
wire NC1 ;
wire CDO ;
wire CDO_0 ;
wire CDO_1 ;
wire CDO_2 ;
wire CDO_3 ;
wire CDO_4 ;
wire CDO_5 ;
wire CDO_6 ;
wire CDO_7 ;
wire CDO_8 ;
wire CDO_9 ;
wire CDO_10 ;
wire CDO_11 ;
wire CDO_12 ;
wire CDO_13 ;
wire CDO_14 ;
wire CDO_15 ;
wire CDO_16 ;
wire CDO_17 ;
wire CDO_18 ;
wire CDO_19 ;
wire CDO_20 ;
wire CDO_21 ;
wire CDO_22 ;
wire CDO_23 ;
wire CDO_24 ;
wire CDO_25 ;
wire CDO_26 ;
wire CDO_27 ;
wire NC2 ;
wire NC3 ;
wire NC4 ;
wire NC5 ;
wire NC6 ;
wire NC7 ;
wire NC8 ;
wire NC9 ;
wire NC10 ;
wire NC11 ;
wire NC12 ;
wire NC13 ;
wire NC14 ;
wire NC15 ;
wire NC16 ;
wire NC17 ;
wire NC18 ;
wire NC19 ;
wire NC20 ;
wire NC21 ;
wire NC22 ;
wire NC23 ;
wire NC24 ;
wire NC25 ;
wire NC26 ;
wire NC27 ;
wire NC28 ;
wire NC29 ;
wire NC30 ;
wire NC31 ;
// @14:1
  LUT3 out_axb_15_cZ (
	.I0(PC[63]),
	.I1(ADDOUTID[63]),
	.I2(PCSRCID),
	.O(out_axb_15)
);
defparam out_axb_15_cZ.INIT=8'hCA;
// @5:60
  LUT3 \out[2]  (
	.I0(PC[2]),
	.I1(ADDOUTID[2]),
	.I2(PCSRCID),
	.O(PCIF[2])
);
defparam \out[2] .INIT=8'hC5;
// @5:60
  LUT3 out_0_0_cry_5_RNIJ54P (
	.I0(out_0_0_cry_5_O[1]),
	.I1(ADDOUTID[3]),
	.I2(PCSRCID),
	.O(PCIF[3])
);
defparam out_0_0_cry_5_RNIJ54P.INIT=8'hCA;
// @5:60
  LUT3 out_0_0_cry_5_RNIK64P (
	.I0(out_0_0_cry_5_O[2]),
	.I1(ADDOUTID[4]),
	.I2(PCSRCID),
	.O(PCIF[4])
);
defparam out_0_0_cry_5_RNIK64P.INIT=8'hCA;
// @5:60
  LUT3 out_0_0_cry_5_RNIL74P (
	.I0(out_0_0_cry_5_O[3]),
	.I1(ADDOUTID[5]),
	.I2(PCSRCID),
	.O(PCIF[5])
);
defparam out_0_0_cry_5_RNIL74P.INIT=8'hCA;
// @5:60
  LUT3 out_0_0_cry_5_RNIM84P (
	.I0(out_0_0_cry_5_O[4]),
	.I1(ADDOUTID[6]),
	.I2(PCSRCID),
	.O(PCIF[6])
);
defparam out_0_0_cry_5_RNIM84P.INIT=8'hCA;
// @5:60
  LUT3 out_0_0_cry_5_RNIN94P (
	.I0(out_0_0_cry_5_O[5]),
	.I1(ADDOUTID[7]),
	.I2(PCSRCID),
	.O(PCIF[7])
);
defparam out_0_0_cry_5_RNIN94P.INIT=8'hCA;
// @5:60
  LUT3 out_0_0_cry_5_RNIOA4P (
	.I0(out_0_0_cry_5_O[6]),
	.I1(ADDOUTID[8]),
	.I2(PCSRCID),
	.O(PCIF[8])
);
defparam out_0_0_cry_5_RNIOA4P.INIT=8'hCA;
// @5:60
  LUT3 out_0_0_cry_5_RNIPB4P (
	.I0(out_0_0_cry_5_O[7]),
	.I1(ADDOUTID[9]),
	.I2(PCSRCID),
	.O(PCIF[9])
);
defparam out_0_0_cry_5_RNIPB4P.INIT=8'hCA;
// @5:60
  LUT3 out_0_0_cry_13_RNIGULH (
	.I0(out_0_0_cry_13_O[0]),
	.I1(ADDOUTID[10]),
	.I2(PCSRCID),
	.O(PCIF[10])
);
defparam out_0_0_cry_13_RNIGULH.INIT=8'hCA;
// @5:60
  LUT3 out_0_0_cry_13_RNIHVLH (
	.I0(out_0_0_cry_13_O[1]),
	.I1(ADDOUTID[11]),
	.I2(PCSRCID),
	.O(PCIF[11])
);
defparam out_0_0_cry_13_RNIHVLH.INIT=8'hCA;
// @5:60
  LUT3 out_0_0_cry_13_RNII0MH (
	.I0(out_0_0_cry_13_O[2]),
	.I1(ADDOUTID[12]),
	.I2(PCSRCID),
	.O(PCIF[12])
);
defparam out_0_0_cry_13_RNII0MH.INIT=8'hCA;
// @5:60
  LUT3 out_0_0_cry_13_RNIJ1MH (
	.I0(out_0_0_cry_13_O[3]),
	.I1(ADDOUTID[13]),
	.I2(PCSRCID),
	.O(PCIF[13])
);
defparam out_0_0_cry_13_RNIJ1MH.INIT=8'hCA;
// @5:60
  LUT3 out_0_0_cry_13_RNIK2MH (
	.I0(out_0_0_cry_13_O[4]),
	.I1(ADDOUTID[14]),
	.I2(PCSRCID),
	.O(PCIF[14])
);
defparam out_0_0_cry_13_RNIK2MH.INIT=8'hCA;
// @5:60
  LUT3 out_0_0_cry_13_RNIL3MH (
	.I0(out_0_0_cry_13_O[5]),
	.I1(ADDOUTID[15]),
	.I2(PCSRCID),
	.O(PCIF[15])
);
defparam out_0_0_cry_13_RNIL3MH.INIT=8'hCA;
// @5:60
  LUT3 out_0_0_cry_13_RNIM4MH (
	.I0(out_0_0_cry_13_O[6]),
	.I1(ADDOUTID[16]),
	.I2(PCSRCID),
	.O(PCIF[16])
);
defparam out_0_0_cry_13_RNIM4MH.INIT=8'hCA;
// @5:60
  LUT3 out_0_0_cry_13_RNIN5MH (
	.I0(out_0_0_cry_13_O[7]),
	.I1(ADDOUTID[17]),
	.I2(PCSRCID),
	.O(PCIF[17])
);
defparam out_0_0_cry_13_RNIN5MH.INIT=8'hCA;
// @5:60
  LUT3 out_0_0_cry_21_RNIN7MH (
	.I0(out_0_0_cry_21_O[0]),
	.I1(ADDOUTID[18]),
	.I2(PCSRCID),
	.O(PCIF[18])
);
defparam out_0_0_cry_21_RNIN7MH.INIT=8'hCA;
// @14:1
  LUT2 out_395_cZ (
	.I0(out_0_0_cry_47),
	.I1(PCSRCID),
	.O(out_395)
);
defparam out_395_cZ.INIT=4'h2;
// @14:1
  LUT3 out_axb_14_cZ (
	.I0(PC[62]),
	.I1(ADDOUTID[62]),
	.I2(PCSRCID),
	.O(out_axb_14)
);
defparam out_axb_14_cZ.INIT=8'hCA;
// @14:1
  LUT3 out_axb_12_cZ (
	.I0(PC[60]),
	.I1(ADDOUTID[60]),
	.I2(PCSRCID),
	.O(out_axb_12)
);
defparam out_axb_12_cZ.INIT=8'hCA;
// @14:1
  LUT3 out_axb_11_cZ (
	.I0(PC[59]),
	.I1(ADDOUTID[59]),
	.I2(PCSRCID),
	.O(out_axb_11)
);
defparam out_axb_11_cZ.INIT=8'hCA;
// @14:1
  LUT3 out_axb_5_cZ (
	.I0(PC[53]),
	.I1(ADDOUTID[53]),
	.I2(PCSRCID),
	.O(out_axb_5)
);
defparam out_axb_5_cZ.INIT=8'hCA;
// @14:1
  LUT3 out_axb_0_cZ (
	.I0(PC[48]),
	.I1(ADDOUTID[48]),
	.I2(PCSRCID),
	.O(out_axb_0)
);
defparam out_axb_0_cZ.INIT=8'hCA;
// @14:1
  LUT1 out_0_0_axb_47_cZ (
	.I0(PC[47]),
	.O(out_0_0_axb_47)
);
defparam out_0_0_axb_47_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_46_cZ (
	.I0(PC[46]),
	.O(out_0_0_axb_46)
);
defparam out_0_0_axb_46_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_45_cZ (
	.I0(PC[45]),
	.O(out_0_0_axb_45)
);
defparam out_0_0_axb_45_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_44_cZ (
	.I0(PC[44]),
	.O(out_0_0_axb_44)
);
defparam out_0_0_axb_44_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_43_cZ (
	.I0(PC[43]),
	.O(out_0_0_axb_43)
);
defparam out_0_0_axb_43_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_42_cZ (
	.I0(PC[42]),
	.O(out_0_0_axb_42)
);
defparam out_0_0_axb_42_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_41_cZ (
	.I0(PC[41]),
	.O(out_0_0_axb_41)
);
defparam out_0_0_axb_41_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_40_cZ (
	.I0(PC[40]),
	.O(out_0_0_axb_40)
);
defparam out_0_0_axb_40_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_39_cZ (
	.I0(PC[39]),
	.O(out_0_0_axb_39)
);
defparam out_0_0_axb_39_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_38_cZ (
	.I0(PC[38]),
	.O(out_0_0_axb_38)
);
defparam out_0_0_axb_38_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_37_cZ (
	.I0(PC[37]),
	.O(out_0_0_axb_37)
);
defparam out_0_0_axb_37_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_36_cZ (
	.I0(PC[36]),
	.O(out_0_0_axb_36)
);
defparam out_0_0_axb_36_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_35_cZ (
	.I0(PC[35]),
	.O(out_0_0_axb_35)
);
defparam out_0_0_axb_35_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_34_cZ (
	.I0(PC[34]),
	.O(out_0_0_axb_34)
);
defparam out_0_0_axb_34_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_33_cZ (
	.I0(PC[33]),
	.O(out_0_0_axb_33)
);
defparam out_0_0_axb_33_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_32_cZ (
	.I0(PC[32]),
	.O(out_0_0_axb_32)
);
defparam out_0_0_axb_32_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_31_cZ (
	.I0(PC[31]),
	.O(out_0_0_axb_31)
);
defparam out_0_0_axb_31_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_30_cZ (
	.I0(PC[30]),
	.O(out_0_0_axb_30)
);
defparam out_0_0_axb_30_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_29_cZ (
	.I0(PC[29]),
	.O(out_0_0_axb_29)
);
defparam out_0_0_axb_29_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_28_cZ (
	.I0(PC[28]),
	.O(out_0_0_axb_28)
);
defparam out_0_0_axb_28_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_27_cZ (
	.I0(PC[27]),
	.O(out_0_0_axb_27)
);
defparam out_0_0_axb_27_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_26_cZ (
	.I0(PC[26]),
	.O(out_0_0_axb_26)
);
defparam out_0_0_axb_26_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_25_cZ (
	.I0(PC[25]),
	.O(out_0_0_axb_25)
);
defparam out_0_0_axb_25_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_24_cZ (
	.I0(PC[24]),
	.O(out_0_0_axb_24)
);
defparam out_0_0_axb_24_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_23_cZ (
	.I0(PC[23]),
	.O(out_0_0_axb_23)
);
defparam out_0_0_axb_23_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_22_cZ (
	.I0(PC[22]),
	.O(out_0_0_axb_22)
);
defparam out_0_0_axb_22_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_21_cZ (
	.I0(PC[21]),
	.O(out_0_0_axb_21)
);
defparam out_0_0_axb_21_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_20_cZ (
	.I0(PC[20]),
	.O(out_0_0_axb_20)
);
defparam out_0_0_axb_20_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_19_cZ (
	.I0(PC[19]),
	.O(out_0_0_axb_19)
);
defparam out_0_0_axb_19_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_18_cZ (
	.I0(PC[18]),
	.O(out_0_0_axb_18)
);
defparam out_0_0_axb_18_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_17_cZ (
	.I0(PC[17]),
	.O(out_0_0_axb_17)
);
defparam out_0_0_axb_17_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_16_cZ (
	.I0(PC[16]),
	.O(out_0_0_axb_16)
);
defparam out_0_0_axb_16_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_15_cZ (
	.I0(PC[15]),
	.O(out_0_0_axb_15)
);
defparam out_0_0_axb_15_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_14_cZ (
	.I0(PC[14]),
	.O(out_0_0_axb_14)
);
defparam out_0_0_axb_14_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_13_cZ (
	.I0(PC[13]),
	.O(out_0_0_axb_13)
);
defparam out_0_0_axb_13_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_12_cZ (
	.I0(PC[12]),
	.O(out_0_0_axb_12)
);
defparam out_0_0_axb_12_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_11_cZ (
	.I0(PC[11]),
	.O(out_0_0_axb_11)
);
defparam out_0_0_axb_11_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_10_cZ (
	.I0(PC[10]),
	.O(out_0_0_axb_10)
);
defparam out_0_0_axb_10_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_9_cZ (
	.I0(PC[9]),
	.O(out_0_0_axb_9)
);
defparam out_0_0_axb_9_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_8_cZ (
	.I0(PC[8]),
	.O(out_0_0_axb_8)
);
defparam out_0_0_axb_8_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_7_cZ (
	.I0(PC[7]),
	.O(out_0_0_axb_7)
);
defparam out_0_0_axb_7_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_6_cZ (
	.I0(PC[6]),
	.O(out_0_0_axb_6)
);
defparam out_0_0_axb_6_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_5_cZ (
	.I0(PC[5]),
	.O(out_0_0_axb_5)
);
defparam out_0_0_axb_5_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_4_cZ (
	.I0(PC[4]),
	.O(out_0_0_axb_4)
);
defparam out_0_0_axb_4_cZ.INIT=2'h2;
// @14:1
  LUT1 out_0_0_axb_3_cZ (
	.I0(PC[3]),
	.O(out_0_0_axb_3)
);
defparam out_0_0_axb_3_cZ.INIT=2'h2;
// @5:60
  CARRY8 out_cry_2_cZ (
	.CO({out_cry_6, out_cry_5, out_cry_4, out_cry_3, out_cry_2, out_cry_1, out_cry_0, out_cry_0_cy}),
	.O({PCIF[54:48], out_cry_2_O[0]}),
	.CI(VCC),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, GND}),
	.S({out_axb_6, out_axb_5, out_axb_4, out_axb_3, out_axb_2, out_axb_1, out_axb_0, out_395})
);
// @5:60
  CARRY8 out_cry_10_cZ (
	.CO({out_cry_14, out_cry_13, out_cry_12, out_cry_11, out_cry_10, out_cry_9, out_cry_8, out_cry_7}),
	.O(PCIF[62:55]),
	.CI(out_cry_6),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, GND}),
	.S({out_axb_14, out_axb_13, out_axb_12, out_axb_11, out_axb_10, out_axb_9, out_axb_8, out_axb_7})
);
// @5:60
  CARRY8 out_0_0_cry_5_cZ (
	.CO({out_0_0_cry_9, out_0_0_cry_8, out_0_0_cry_7, out_0_0_cry_6, out_0_0_cry_5, out_0_0_cry_4, out_0_0_cry_3, out_0_0_cry_2}),
	.O(out_0_0_cry_5_O[7:0]),
	.CI(GND),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, VCC}),
	.S({out_0_0_axb_9, out_0_0_axb_8, out_0_0_axb_7, out_0_0_axb_6, out_0_0_axb_5, out_0_0_axb_4, out_0_0_axb_3, N_3_i})
);
// @5:60
  CARRY8 out_0_0_cry_13_cZ (
	.CO({out_0_0_cry_17, out_0_0_cry_16, out_0_0_cry_15, out_0_0_cry_14, out_0_0_cry_13, out_0_0_cry_12, out_0_0_cry_11, out_0_0_cry_10}),
	.O(out_0_0_cry_13_O[7:0]),
	.CI(out_0_0_cry_9),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, GND}),
	.S({out_0_0_axb_17, out_0_0_axb_16, out_0_0_axb_15, out_0_0_axb_14, out_0_0_axb_13, out_0_0_axb_12, out_0_0_axb_11, out_0_0_axb_10})
);
// @5:60
  CARRY8 out_0_0_cry_21_cZ (
	.CO({out_0_0_cry_25, out_0_0_cry_24, out_0_0_cry_23, out_0_0_cry_22, out_0_0_cry_21, out_0_0_cry_20, out_0_0_cry_19, out_0_0_cry_18}),
	.O(out_0_0_cry_21_O[7:0]),
	.CI(out_0_0_cry_17),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, GND}),
	.S({out_0_0_axb_25, out_0_0_axb_24, out_0_0_axb_23, out_0_0_axb_22, out_0_0_axb_21, out_0_0_axb_20, out_0_0_axb_19, out_0_0_axb_18})
);
// @5:60
  CARRY8 out_0_0_cry_29_cZ (
	.CO({out_0_0_cry_33, out_0_0_cry_32, out_0_0_cry_31, out_0_0_cry_30, out_0_0_cry_29, out_0_0_cry_28, out_0_0_cry_27, out_0_0_cry_26}),
	.O(out_0_0_cry_29_O[7:0]),
	.CI(out_0_0_cry_25),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, GND}),
	.S({out_0_0_axb_33, out_0_0_axb_32, out_0_0_axb_31, out_0_0_axb_30, out_0_0_axb_29, out_0_0_axb_28, out_0_0_axb_27, out_0_0_axb_26})
);
// @5:60
  CARRY8 out_0_0_cry_37_cZ (
	.CO({out_0_0_cry_41, out_0_0_cry_40, out_0_0_cry_39, out_0_0_cry_38, out_0_0_cry_37, out_0_0_cry_36, out_0_0_cry_35, out_0_0_cry_34}),
	.O(out_0_0_cry_37_O[7:0]),
	.CI(out_0_0_cry_33),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, GND}),
	.S({out_0_0_axb_41, out_0_0_axb_40, out_0_0_axb_39, out_0_0_axb_38, out_0_0_axb_37, out_0_0_axb_36, out_0_0_axb_35, out_0_0_axb_34})
);
// @5:60
  CARRY8 out_0_0_cry_45_cZ (
	.CO({NC0, out_0_0_cry_47, out_0_0_cry_47_0, out_0_0_cry_46, out_0_0_cry_45, out_0_0_cry_44, out_0_0_cry_43, out_0_0_cry_42}),
	.O({NC1, out_0_0_cry_45_O[6:0]}),
	.CI(out_0_0_cry_41),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, GND}),
	.S({GND, VCC, out_0_0_axb_47, out_0_0_axb_46, out_0_0_axb_45, out_0_0_axb_44, out_0_0_axb_43, out_0_0_axb_42})
);
  VCC VCC_cZ (
	.P(VCC)
);
  GND GND_cZ (
	.G(GND)
);
// @14:1
  LUT3 out_axb_7_lut6_2_o6 (
	.I0(PC[55]),
	.I1(ADDOUTID[55]),
	.I2(PCSRCID),
	.O(out_axb_7)
);
defparam out_axb_7_lut6_2_o6.INIT=8'hCA;
// @14:1
  LUT3 out_axb_7_lut6_2_o5 (
	.I0(PC[57]),
	.I1(ADDOUTID[57]),
	.I2(PCSRCID),
	.O(out_axb_9)
);
defparam out_axb_7_lut6_2_o5.INIT=8'hCA;
// @14:1
  LUT3 out_axb_4_lut6_2_o6 (
	.I0(PC[52]),
	.I1(ADDOUTID[52]),
	.I2(PCSRCID),
	.O(out_axb_4)
);
defparam out_axb_4_lut6_2_o6.INIT=8'hCA;
// @14:1
  LUT3 out_axb_4_lut6_2_o5 (
	.I0(PC[58]),
	.I1(ADDOUTID[58]),
	.I2(PCSRCID),
	.O(out_axb_10)
);
defparam out_axb_4_lut6_2_o5.INIT=8'hCA;
// @14:1
  LUT3 out_axb_3_lut6_2_o6 (
	.I0(PC[51]),
	.I1(ADDOUTID[51]),
	.I2(PCSRCID),
	.O(out_axb_3)
);
defparam out_axb_3_lut6_2_o6.INIT=8'hCA;
// @14:1
  LUT3 out_axb_3_lut6_2_o5 (
	.I0(PC[61]),
	.I1(ADDOUTID[61]),
	.I2(PCSRCID),
	.O(out_axb_13)
);
defparam out_axb_3_lut6_2_o5.INIT=8'hCA;
// @14:1
  LUT3 out_axb_2_lut6_2_o6 (
	.I0(PC[50]),
	.I1(ADDOUTID[50]),
	.I2(PCSRCID),
	.O(out_axb_2)
);
defparam out_axb_2_lut6_2_o6.INIT=8'hCA;
// @14:1
  LUT3 out_axb_2_lut6_2_o5 (
	.I0(PC[56]),
	.I1(ADDOUTID[56]),
	.I2(PCSRCID),
	.O(out_axb_8)
);
defparam out_axb_2_lut6_2_o5.INIT=8'hCA;
// @14:1
  LUT3 out_axb_1_lut6_2_o6 (
	.I0(PC[49]),
	.I1(ADDOUTID[49]),
	.I2(PCSRCID),
	.O(out_axb_1)
);
defparam out_axb_1_lut6_2_o6.INIT=8'hCA;
// @14:1
  LUT3 out_axb_1_lut6_2_o5 (
	.I0(PC[54]),
	.I1(ADDOUTID[54]),
	.I2(PCSRCID),
	.O(out_axb_6)
);
defparam out_axb_1_lut6_2_o5.INIT=8'hCA;
  CFGLUT5 out_0_0_cry_21_RNIO8MH_518665_cfg29 (
	.I0(out_0_0_cry_21_O[1]),
	.I1(ADDOUTID[19]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_27),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_28),
	.O5(NC2),
	.O6(PCIF[19])
);
  CFGLUT5 out_0_0_cry_21_RNIG1NH_223579_cfg28 (
	.I0(out_0_0_cry_21_O[2]),
	.I1(ADDOUTID[20]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_26),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_27),
	.O5(NC3),
	.O6(PCIF[20])
);
  CFGLUT5 out_0_0_cry_21_RNIH2NH_260605_cfg27 (
	.I0(out_0_0_cry_21_O[3]),
	.I1(ADDOUTID[21]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_25),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_26),
	.O5(NC4),
	.O6(PCIF[21])
);
  CFGLUT5 out_0_0_cry_21_RNII3NH_297631_cfg26 (
	.I0(out_0_0_cry_21_O[4]),
	.I1(ADDOUTID[22]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_24),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_25),
	.O5(NC5),
	.O6(PCIF[22])
);
  CFGLUT5 out_0_0_cry_21_RNIJ4NH_334657_cfg25 (
	.I0(out_0_0_cry_21_O[5]),
	.I1(ADDOUTID[23]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_23),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_24),
	.O5(NC6),
	.O6(PCIF[23])
);
  CFGLUT5 out_0_0_cry_21_RNIK5NH_371683_cfg24 (
	.I0(out_0_0_cry_21_O[6]),
	.I1(ADDOUTID[24]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_22),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_23),
	.O5(NC7),
	.O6(PCIF[24])
);
  CFGLUT5 out_0_0_cry_21_RNIL6NH_408709_cfg23 (
	.I0(out_0_0_cry_21_O[7]),
	.I1(ADDOUTID[25]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_21),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_22),
	.O5(NC8),
	.O6(PCIF[25])
);
  CFGLUT5 out_0_0_cry_29_RNIU7NH_440375_cfg22 (
	.I0(out_0_0_cry_29_O[0]),
	.I1(ADDOUTID[26]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_20),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_21),
	.O5(NC9),
	.O6(PCIF[26])
);
  CFGLUT5 out_0_0_cry_29_RNIV8NH_477401_cfg21 (
	.I0(out_0_0_cry_29_O[1]),
	.I1(ADDOUTID[27]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_19),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_20),
	.O5(NC10),
	.O6(PCIF[27])
);
  CFGLUT5 out_0_0_cry_29_RNI0ANH_170172_cfg20 (
	.I0(out_0_0_cry_29_O[2]),
	.I1(ADDOUTID[28]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_18),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_19),
	.O5(NC11),
	.O6(PCIF[28])
);
  CFGLUT5 out_0_0_cry_29_RNI1BNH_207198_cfg19 (
	.I0(out_0_0_cry_29_O[3]),
	.I1(ADDOUTID[29]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_17),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_18),
	.O5(NC12),
	.O6(PCIF[29])
);
  CFGLUT5 out_0_0_cry_29_RNIP3OH_256367_cfg18 (
	.I0(out_0_0_cry_29_O[4]),
	.I1(ADDOUTID[30]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_16),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_17),
	.O5(NC13),
	.O6(PCIF[30])
);
  CFGLUT5 out_0_0_cry_29_RNIQ4OH_293393_cfg17 (
	.I0(out_0_0_cry_29_O[5]),
	.I1(ADDOUTID[31]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_15),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_16),
	.O5(NC14),
	.O6(PCIF[31])
);
  CFGLUT5 out_0_0_cry_29_RNIR5OH_330419_cfg16 (
	.I0(out_0_0_cry_29_O[6]),
	.I1(ADDOUTID[32]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_14),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_15),
	.O5(NC15),
	.O6(PCIF[32])
);
  CFGLUT5 out_0_0_cry_29_RNIS6OH_367445_cfg15 (
	.I0(out_0_0_cry_29_O[7]),
	.I1(ADDOUTID[33]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_13),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_14),
	.O5(NC16),
	.O6(PCIF[33])
);
  CFGLUT5 out_0_0_cry_37_RNIS8OH_479990_cfg14 (
	.I0(out_0_0_cry_37_O[0]),
	.I1(ADDOUTID[34]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_12),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_13),
	.O5(NC17),
	.O6(PCIF[34])
);
  CFGLUT5 out_0_0_cry_37_RNIT9OH_517016_cfg13 (
	.I0(out_0_0_cry_37_O[1]),
	.I1(ADDOUTID[35]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_11),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_12),
	.O5(NC18),
	.O6(PCIF[35])
);
  CFGLUT5 out_0_0_cry_37_RNIUAOH_37377_cfg12 (
	.I0(out_0_0_cry_37_O[2]),
	.I1(ADDOUTID[36]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_10),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_11),
	.O5(NC19),
	.O6(PCIF[36])
);
  CFGLUT5 out_0_0_cry_37_RNIVBOH_74403_cfg11 (
	.I0(out_0_0_cry_37_O[3]),
	.I1(ADDOUTID[37]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_9),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_10),
	.O5(NC20),
	.O6(PCIF[37])
);
  CFGLUT5 out_0_0_cry_37_RNI0DOH_283839_cfg10 (
	.I0(out_0_0_cry_37_O[4]),
	.I1(ADDOUTID[38]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_8),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_9),
	.O5(NC21),
	.O6(PCIF[38])
);
  CFGLUT5 out_0_0_cry_37_RNI1EOH_320865_cfg9 (
	.I0(out_0_0_cry_37_O[5]),
	.I1(ADDOUTID[39]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_7),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_8),
	.O5(NC22),
	.O6(PCIF[39])
);
  CFGLUT5 out_0_0_cry_37_RNIP6PH_370034_cfg8 (
	.I0(out_0_0_cry_37_O[6]),
	.I1(ADDOUTID[40]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_6),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_7),
	.O5(NC23),
	.O6(PCIF[40])
);
  CFGLUT5 out_0_0_cry_37_RNIQ7PH_407060_cfg7 (
	.I0(out_0_0_cry_37_O[7]),
	.I1(ADDOUTID[41]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_5),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_6),
	.O5(NC24),
	.O6(PCIF[41])
);
  CFGLUT5 out_0_0_cry_45_RNIQ9PH_519605_cfg6 (
	.I0(out_0_0_cry_45_O[0]),
	.I1(ADDOUTID[42]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_4),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_5),
	.O5(NC25),
	.O6(PCIF[42])
);
  CFGLUT5 out_0_0_cry_45_RNIRAPH_39966_cfg5 (
	.I0(out_0_0_cry_45_O[1]),
	.I1(ADDOUTID[43]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_3),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_4),
	.O5(NC26),
	.O6(PCIF[43])
);
  CFGLUT5 out_0_0_cry_45_RNISBPH_76992_cfg4 (
	.I0(out_0_0_cry_45_O[2]),
	.I1(ADDOUTID[44]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_2),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_3),
	.O5(NC27),
	.O6(PCIF[44])
);
  CFGLUT5 out_0_0_cry_45_RNITCPH_114018_cfg3 (
	.I0(out_0_0_cry_45_O[3]),
	.I1(ADDOUTID[45]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_1),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_2),
	.O5(NC28),
	.O6(PCIF[45])
);
  CFGLUT5 out_0_0_cry_45_RNIUDPH_151044_cfg2 (
	.I0(out_0_0_cry_45_O[4]),
	.I1(ADDOUTID[46]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO_0),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_1),
	.O5(NC29),
	.O6(PCIF[46])
);
  CFGLUT5 out_0_0_cry_45_RNIVEPH_188070_cfg1 (
	.I0(out_0_0_cry_45_O[5]),
	.I1(ADDOUTID[47]),
	.I2(PCSRCID),
	.I3(GND),
	.I4(GND),
	.CDI(CDO),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO_0),
	.O5(NC30),
	.O6(PCIF[47])
);
  CFGLUT5 out_s_15_474319_cfg0 (
	.I0(out_axb_15),
	.I1(out_cry_14),
	.I2(GND),
	.I3(GND),
	.I4(GND),
	.CDI(ufpga_lock_cdo_o),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(CDO),
	.O5(NC31),
	.O6(PCIF[63])
);
endmodule /* MUX */

module PC (
  ADDOUTID,
  PC,
  PCIF,
  N_810_0,
  rst_n_0_i,
  clk,
  PCSRCID,
  stall,
  in_enable,
  N_3_i
)
;
input [1:0] ADDOUTID ;
output [63:0] PC ;
input [63:2] PCIF ;
input N_810_0 ;
input rst_n_0_i ;
input clk ;
input PCSRCID ;
input stall ;
input in_enable ;
output N_3_i ;
wire N_810_0 ;
wire rst_n_0_i ;
wire clk ;
wire PCSRCID ;
wire stall ;
wire in_enable ;
wire N_3_i ;
wire [0:0] PC_0_modce;
wire GND ;
wire VCC ;
// @14:1
  INV \PC_0_mod_RNIT1E8[2]  (
	.I(PC[2]),
	.O(N_3_i)
);
// @22:10
  LUT3 \PC_0_modce_cZ[0]  (
	.I0(in_enable),
	.I1(stall),
	.I2(PCSRCID),
	.O(PC_0_modce[0])
);
defparam \PC_0_modce_cZ[0] .INIT=8'h10;
// @22:10
  FDCE \PC_0_mod_Z[63]  (
	.Q(PC[63]),
	.D(PCIF[63]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[62]  (
	.Q(PC[62]),
	.D(PCIF[62]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[61]  (
	.Q(PC[61]),
	.D(PCIF[61]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[60]  (
	.Q(PC[60]),
	.D(PCIF[60]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[59]  (
	.Q(PC[59]),
	.D(PCIF[59]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[58]  (
	.Q(PC[58]),
	.D(PCIF[58]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[57]  (
	.Q(PC[57]),
	.D(PCIF[57]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[56]  (
	.Q(PC[56]),
	.D(PCIF[56]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[55]  (
	.Q(PC[55]),
	.D(PCIF[55]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[54]  (
	.Q(PC[54]),
	.D(PCIF[54]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[53]  (
	.Q(PC[53]),
	.D(PCIF[53]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[52]  (
	.Q(PC[52]),
	.D(PCIF[52]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[51]  (
	.Q(PC[51]),
	.D(PCIF[51]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[50]  (
	.Q(PC[50]),
	.D(PCIF[50]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[49]  (
	.Q(PC[49]),
	.D(PCIF[49]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[48]  (
	.Q(PC[48]),
	.D(PCIF[48]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[47]  (
	.Q(PC[47]),
	.D(PCIF[47]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[46]  (
	.Q(PC[46]),
	.D(PCIF[46]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[45]  (
	.Q(PC[45]),
	.D(PCIF[45]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[44]  (
	.Q(PC[44]),
	.D(PCIF[44]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[43]  (
	.Q(PC[43]),
	.D(PCIF[43]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[42]  (
	.Q(PC[42]),
	.D(PCIF[42]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[41]  (
	.Q(PC[41]),
	.D(PCIF[41]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[40]  (
	.Q(PC[40]),
	.D(PCIF[40]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[39]  (
	.Q(PC[39]),
	.D(PCIF[39]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[38]  (
	.Q(PC[38]),
	.D(PCIF[38]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[37]  (
	.Q(PC[37]),
	.D(PCIF[37]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[36]  (
	.Q(PC[36]),
	.D(PCIF[36]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[35]  (
	.Q(PC[35]),
	.D(PCIF[35]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[34]  (
	.Q(PC[34]),
	.D(PCIF[34]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[33]  (
	.Q(PC[33]),
	.D(PCIF[33]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[32]  (
	.Q(PC[32]),
	.D(PCIF[32]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[31]  (
	.Q(PC[31]),
	.D(PCIF[31]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[30]  (
	.Q(PC[30]),
	.D(PCIF[30]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[29]  (
	.Q(PC[29]),
	.D(PCIF[29]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[28]  (
	.Q(PC[28]),
	.D(PCIF[28]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[27]  (
	.Q(PC[27]),
	.D(PCIF[27]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[26]  (
	.Q(PC[26]),
	.D(PCIF[26]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[25]  (
	.Q(PC[25]),
	.D(PCIF[25]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[24]  (
	.Q(PC[24]),
	.D(PCIF[24]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[23]  (
	.Q(PC[23]),
	.D(PCIF[23]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[22]  (
	.Q(PC[22]),
	.D(PCIF[22]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[21]  (
	.Q(PC[21]),
	.D(PCIF[21]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[20]  (
	.Q(PC[20]),
	.D(PCIF[20]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[19]  (
	.Q(PC[19]),
	.D(PCIF[19]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[18]  (
	.Q(PC[18]),
	.D(PCIF[18]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[17]  (
	.Q(PC[17]),
	.D(PCIF[17]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[16]  (
	.Q(PC[16]),
	.D(PCIF[16]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[15]  (
	.Q(PC[15]),
	.D(PCIF[15]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[14]  (
	.Q(PC[14]),
	.D(PCIF[14]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[13]  (
	.Q(PC[13]),
	.D(PCIF[13]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[12]  (
	.Q(PC[12]),
	.D(PCIF[12]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[11]  (
	.Q(PC[11]),
	.D(PCIF[11]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[10]  (
	.Q(PC[10]),
	.D(PCIF[10]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[9]  (
	.Q(PC[9]),
	.D(PCIF[9]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[8]  (
	.Q(PC[8]),
	.D(PCIF[8]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[7]  (
	.Q(PC[7]),
	.D(PCIF[7]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[6]  (
	.Q(PC[6]),
	.D(PCIF[6]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[5]  (
	.Q(PC[5]),
	.D(PCIF[5]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[4]  (
	.Q(PC[4]),
	.D(PCIF[4]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[3]  (
	.Q(PC[3]),
	.D(PCIF[3]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[2]  (
	.Q(PC[2]),
	.D(PCIF[2]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_810_0)
);
// @22:10
  FDCE \PC_0_mod_Z[1]  (
	.Q(PC[1]),
	.D(ADDOUTID[1]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(PC_0_modce[0])
);
// @22:10
  FDCE \PC_0_mod_Z[0]  (
	.Q(PC[0]),
	.D(ADDOUTID[0]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(PC_0_modce[0])
);
  VCC VCC_cZ (
	.P(VCC)
);
  GND GND_cZ (
	.G(GND)
);
endmodule /* PC */

(* MIXPORT=1 *)module IM (
  in_instruc,
  instrucmemrx,
  N_810_0,
  Addr,
  PC,
  rst_n_0_i,
  stall,
  instrucmemror_1_1_1z,
  instrucmemror_2_1_1z,
  rst_n_0,
  in_enable,
  clk
)
;
input [31:0] in_instruc ;
output [31:0] instrucmemrx ;
output N_810_0 ;
input [63:2] Addr ;
input [6:2] PC ;
input rst_n_0_i ;
input stall ;
output instrucmemror_1_1_1z ;
output instrucmemror_2_1_1z ;
input rst_n_0 ;
input in_enable ;
input clk ;
wire N_810_0 ;
wire rst_n_0_i ;
wire stall ;
wire instrucmemror_1_1_1z ;
wire instrucmemror_2_1_1z ;
wire rst_n_0 ;
wire in_enable ;
wire clk ;
wire [1:0] instrucmem_I_12_DOH;
wire [1:0] instrucmem_I_13_DOH;
wire un1_in_enable_1_i ;
wire GND ;
wire VCC ;
wire N_275 ;
wire N_280 ;
wire N_283 ;
wire N_287 ;
wire N_284 ;
wire N_288 ;
wire instrucmem_I_32_SPO ;
wire instrucmem_I_30_SPO ;
wire instrucmem_I_29_SPO ;
wire instrucmem_I_14_SPO ;
wire instrucmemro_9 ;
wire instrucmemrff_9 ;
wire instrucmemro_8 ;
wire instrucmemrff_8 ;
wire instrucmemro_7 ;
wire instrucmemrff_7 ;
wire instrucmemro_6 ;
wire instrucmemrff_6 ;
wire instrucmemro_5 ;
wire instrucmemrff_5 ;
wire instrucmemro_4 ;
wire instrucmemrff_4 ;
wire instrucmemro_3 ;
wire instrucmemrff_3 ;
wire instrucmemro_2 ;
wire instrucmemrff_2 ;
wire instrucmemro_1 ;
wire instrucmemrff_1 ;
wire instrucmemro_0 ;
wire instrucmemrff_0 ;
wire instrucmemro_24 ;
wire instrucmemrff_24 ;
wire instrucmemro_23 ;
wire instrucmemrff_23 ;
wire instrucmemro_22 ;
wire instrucmemrff_22 ;
wire instrucmemro_21 ;
wire instrucmemrff_21 ;
wire instrucmemro_20 ;
wire instrucmemrff_20 ;
wire instrucmemro_19 ;
wire N_279 ;
wire instrucmemrff_19 ;
wire instrucmemro_18 ;
wire instrucmemrff_18 ;
wire instrucmemro_17 ;
wire instrucmemrff_17 ;
wire instrucmemro_16 ;
wire instrucmemrff_16 ;
wire instrucmemro_15 ;
wire instrucmemrff_15 ;
wire instrucmemro_14 ;
wire instrucmemrff_14 ;
wire instrucmemro_13 ;
wire instrucmemrff_13 ;
wire instrucmemro_12 ;
wire instrucmemrff_12 ;
wire instrucmemro_11 ;
wire instrucmemrff_11 ;
wire instrucmemro_10 ;
wire instrucmemrff_10 ;
wire instrucmemro_31 ;
wire N_276 ;
wire instrucmemrff_31 ;
wire instrucmemro_30 ;
wire instrucmemrff_30 ;
wire instrucmemro_29 ;
wire instrucmemrff_29 ;
wire instrucmemro_28 ;
wire instrucmemrff_28 ;
wire instrucmemro_27 ;
wire instrucmemrff_27 ;
wire instrucmemro_26 ;
wire instrucmemrff_26 ;
wire instrucmemro_25 ;
wire instrucmemrff_25 ;
wire un1_in_enable_1_i_0_a2_a_0_3 ;
wire un1_in_enable_1_i_0_a2_a_0_4 ;
wire un1_in_enable_1_i_0_a2_a_0_9 ;
wire un1_in_enable_1_i_0_a2_a_0_14 ;
wire instrucmemror_1 ;
wire instrucmemror_20_tz ;
wire instrucmemror_4_0_1 ;
wire instrucmemror_0_1 ;
wire instrucmemror_2_0_0 ;
wire instrucmemror_14_tz ;
wire instrucmemror_19_tz ;
wire instrucmemror_13_tz ;
wire instrucmemror_2_tz ;
wire instrucmemror_4_tz ;
wire instrucmemror_16_tz ;
wire un1_in_enable_1_i_0_a2_a_0_0 ;
wire un1_in_enable_1_i_0_a2_a_0_1 ;
wire un1_in_enable_1_i_0_a2_a_0_2 ;
wire N_278 ;
wire instrucmemria_31_0_a2_0 ;
wire instrucmemror_12_tz ;
wire instrucmemror_0_0 ;
wire instrucmemror_5_tz ;
wire instrucmemror_16_tz_0 ;
wire instrucmemror_19_tz_0 ;
wire instrucmemror_20_tz_0 ;
wire un1_in_enable_1_i_0_a2_a_0_5_3 ;
wire un1_in_enable_1_i_0_a2_a_0_6 ;
wire un1_in_enable_1_i_0_a2_a_0_7 ;
wire un1_in_enable_1_i_0_a2_a_0_8 ;
wire N_286 ;
wire instrucmemria_30 ;
wire N_681 ;
// @9:14
  RAM32X1D instrucmem_I_32 (
	.DPO(instrucmemrx[29]),
	.SPO(instrucmem_I_32_SPO),
	.A0(Addr[2]),
	.A1(Addr[3]),
	.A2(Addr[4]),
	.A3(Addr[5]),
	.A4(Addr[6]),
	.D(in_instruc[29]),
	.DPRA0(PC[2]),
	.DPRA1(PC[3]),
	.DPRA2(PC[4]),
	.DPRA3(PC[5]),
	.DPRA4(PC[6]),
	.WCLK(clk),
	.WE(un1_in_enable_1_i)
);
// @9:14
  RAM32X1D instrucmem_I_30 (
	.DPO(instrucmemrx[30]),
	.SPO(instrucmem_I_30_SPO),
	.A0(Addr[2]),
	.A1(Addr[3]),
	.A2(Addr[4]),
	.A3(Addr[5]),
	.A4(Addr[6]),
	.D(in_instruc[30]),
	.DPRA0(PC[2]),
	.DPRA1(PC[3]),
	.DPRA2(PC[4]),
	.DPRA3(PC[5]),
	.DPRA4(PC[6]),
	.WCLK(clk),
	.WE(un1_in_enable_1_i)
);
// @9:14
  RAM32X1D instrucmem_I_29 (
	.DPO(instrucmemrx[31]),
	.SPO(instrucmem_I_29_SPO),
	.A0(Addr[2]),
	.A1(Addr[3]),
	.A2(Addr[4]),
	.A3(Addr[5]),
	.A4(Addr[6]),
	.D(in_instruc[31]),
	.DPRA0(PC[2]),
	.DPRA1(PC[3]),
	.DPRA2(PC[4]),
	.DPRA3(PC[5]),
	.DPRA4(PC[6]),
	.WCLK(clk),
	.WE(un1_in_enable_1_i)
);
// @9:14
  RAM32X1D instrucmem_I_14 (
	.DPO(instrucmemrx[28]),
	.SPO(instrucmem_I_14_SPO),
	.A0(Addr[2]),
	.A1(Addr[3]),
	.A2(Addr[4]),
	.A3(Addr[5]),
	.A4(Addr[6]),
	.D(in_instruc[28]),
	.DPRA0(PC[2]),
	.DPRA1(PC[3]),
	.DPRA2(PC[4]),
	.DPRA3(PC[5]),
	.DPRA4(PC[6]),
	.WCLK(clk),
	.WE(un1_in_enable_1_i)
);
// @9:14
  LUT4 instrucmemrff_9_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_9),
	.I3(N_288),
	.O(instrucmemrff_9)
);
defparam instrucmemrff_9_e.INIT=16'hF2F0;
// @9:14
  LUT4 instrucmemrff_8_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_8),
	.I3(N_288),
	.O(instrucmemrff_8)
);
defparam instrucmemrff_8_e.INIT=16'hF1F0;
// @9:14
  LUT4 instrucmemrff_7_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_7),
	.I3(N_283),
	.O(instrucmemrff_7)
);
defparam instrucmemrff_7_e.INIT=16'hF8F0;
// @9:14
  LUT4 instrucmemrff_6_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_6),
	.I3(N_283),
	.O(instrucmemrff_6)
);
defparam instrucmemrff_6_e.INIT=16'hF4F0;
// @9:14
  LUT4 instrucmemrff_5_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_5),
	.I3(N_283),
	.O(instrucmemrff_5)
);
defparam instrucmemrff_5_e.INIT=16'hF2F0;
// @9:14
  LUT4 instrucmemrff_4_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_4),
	.I3(N_283),
	.O(instrucmemrff_4)
);
defparam instrucmemrff_4_e.INIT=16'hF1F0;
// @9:14
  LUT4 instrucmemrff_3_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_3),
	.I3(N_275),
	.O(instrucmemrff_3)
);
defparam instrucmemrff_3_e.INIT=16'hF8F0;
// @9:14
  LUT4 instrucmemrff_2_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_2),
	.I3(N_275),
	.O(instrucmemrff_2)
);
defparam instrucmemrff_2_e.INIT=16'hF4F0;
// @9:14
  LUT4 instrucmemrff_1_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_1),
	.I3(N_275),
	.O(instrucmemrff_1)
);
defparam instrucmemrff_1_e.INIT=16'hF2F0;
// @9:14
  LUT4 instrucmemrff_0_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_0),
	.I3(N_275),
	.O(instrucmemrff_0)
);
defparam instrucmemrff_0_e.INIT=16'hF1F0;
// @9:14
  LUT4 instrucmemrff_24_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_24),
	.I3(N_284),
	.O(instrucmemrff_24)
);
defparam instrucmemrff_24_e.INIT=16'hF1F0;
// @9:14
  LUT4 instrucmemrff_23_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_23),
	.I3(N_287),
	.O(instrucmemrff_23)
);
defparam instrucmemrff_23_e.INIT=16'hF8F0;
// @9:14
  LUT4 instrucmemrff_22_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_22),
	.I3(N_287),
	.O(instrucmemrff_22)
);
defparam instrucmemrff_22_e.INIT=16'hF4F0;
// @9:14
  LUT4 instrucmemrff_21_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_21),
	.I3(N_287),
	.O(instrucmemrff_21)
);
defparam instrucmemrff_21_e.INIT=16'hF2F0;
// @9:14
  LUT4 instrucmemrff_20_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_20),
	.I3(N_287),
	.O(instrucmemrff_20)
);
defparam instrucmemrff_20_e.INIT=16'hF1F0;
// @9:14
  LUT4 instrucmemrff_19_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_19),
	.I3(N_279),
	.O(instrucmemrff_19)
);
defparam instrucmemrff_19_e.INIT=16'hF8F0;
// @9:14
  LUT4 instrucmemrff_18_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_18),
	.I3(N_279),
	.O(instrucmemrff_18)
);
defparam instrucmemrff_18_e.INIT=16'hF4F0;
// @9:14
  LUT4 instrucmemrff_17_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_17),
	.I3(N_279),
	.O(instrucmemrff_17)
);
defparam instrucmemrff_17_e.INIT=16'hF2F0;
// @9:14
  LUT4 instrucmemrff_16_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_16),
	.I3(N_279),
	.O(instrucmemrff_16)
);
defparam instrucmemrff_16_e.INIT=16'hF1F0;
// @9:14
  LUT4 instrucmemrff_15_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_15),
	.I3(N_280),
	.O(instrucmemrff_15)
);
defparam instrucmemrff_15_e.INIT=16'hF8F0;
// @9:14
  LUT4 instrucmemrff_14_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_14),
	.I3(N_280),
	.O(instrucmemrff_14)
);
defparam instrucmemrff_14_e.INIT=16'hF4F0;
// @9:14
  LUT4 instrucmemrff_13_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_13),
	.I3(N_280),
	.O(instrucmemrff_13)
);
defparam instrucmemrff_13_e.INIT=16'hF2F0;
// @9:14
  LUT4 instrucmemrff_12_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_12),
	.I3(N_280),
	.O(instrucmemrff_12)
);
defparam instrucmemrff_12_e.INIT=16'hF1F0;
// @9:14
  LUT4 instrucmemrff_11_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_11),
	.I3(N_288),
	.O(instrucmemrff_11)
);
defparam instrucmemrff_11_e.INIT=16'hF8F0;
// @9:14
  LUT4 instrucmemrff_10_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_10),
	.I3(N_288),
	.O(instrucmemrff_10)
);
defparam instrucmemrff_10_e.INIT=16'hF4F0;
// @9:14
  LUT4 instrucmemrff_31_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_31),
	.I3(N_276),
	.O(instrucmemrff_31)
);
defparam instrucmemrff_31_e.INIT=16'hF8F0;
// @9:14
  LUT4 instrucmemrff_30_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_30),
	.I3(N_276),
	.O(instrucmemrff_30)
);
defparam instrucmemrff_30_e.INIT=16'hF4F0;
// @9:14
  LUT4 instrucmemrff_29_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_29),
	.I3(N_276),
	.O(instrucmemrff_29)
);
defparam instrucmemrff_29_e.INIT=16'hF2F0;
// @9:14
  LUT4 instrucmemrff_28_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_28),
	.I3(N_276),
	.O(instrucmemrff_28)
);
defparam instrucmemrff_28_e.INIT=16'hF1F0;
// @9:14
  LUT4 instrucmemrff_27_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_27),
	.I3(N_284),
	.O(instrucmemrff_27)
);
defparam instrucmemrff_27_e.INIT=16'hF8F0;
// @9:14
  LUT4 instrucmemrff_26_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_26),
	.I3(N_284),
	.O(instrucmemrff_26)
);
defparam instrucmemrff_26_e.INIT=16'hF4F0;
// @9:14
  LUT4 instrucmemrff_25_e (
	.I0(Addr[2]),
	.I1(Addr[3]),
	.I2(instrucmemro_25),
	.I3(N_284),
	.O(instrucmemrff_25)
);
defparam instrucmemrff_25_e.INIT=16'hF2F0;
// @9:14
  LUT4 instrucmemwre_17_0_a2_0 (
	.I0(Addr[4]),
	.I1(Addr[5]),
	.I2(Addr[6]),
	.I3(un1_in_enable_1_i),
	.O(N_279)
);
defparam instrucmemwre_17_0_a2_0.INIT=16'h1000;
// @9:14
  LUT4 instrucmemwre_31_0_a2_0 (
	.I0(Addr[4]),
	.I1(Addr[5]),
	.I2(Addr[6]),
	.I3(un1_in_enable_1_i),
	.O(N_276)
);
defparam instrucmemwre_31_0_a2_0.INIT=16'h8000;
// @9:14
  LUT6 un1_in_enable_1_i_0_a2_a (
	.I0(un1_in_enable_1_i_0_a2_a_0_3),
	.I1(un1_in_enable_1_i_0_a2_a_0_4),
	.I2(un1_in_enable_1_i_0_a2_a_0_9),
	.I3(un1_in_enable_1_i_0_a2_a_0_14),
	.I4(in_enable),
	.I5(rst_n_0),
	.O(un1_in_enable_1_i)
);
defparam un1_in_enable_1_i_0_a2_a.INIT=64'h8000000000000000;
// @9:14
  LUT6 instrucmemror_2_1 (
	.I0(PC[4]),
	.I1(PC[5]),
	.I2(instrucmemror_1),
	.I3(instrucmemror_20_tz),
	.I4(instrucmemror_4_0_1),
	.I5(instrucmemror_0_1),
	.O(instrucmemror_2_1_1z)
);
defparam instrucmemror_2_1.INIT=64'hFFFFFFFFFFFFF8F0;
// @9:14
  LUT5 instrucmemror_0_1_cZ (
	.I0(PC[4]),
	.I1(PC[5]),
	.I2(instrucmemror_2_0_0),
	.I3(instrucmemror_14_tz),
	.I4(instrucmemror_19_tz),
	.O(instrucmemror_0_1)
);
defparam instrucmemror_0_1_cZ.INIT=32'hF4F4F4F0;
// @9:14
  LUT6 instrucmemror_1_1 (
	.I0(PC[4]),
	.I1(PC[5]),
	.I2(instrucmemror_13_tz),
	.I3(instrucmemror_2_tz),
	.I4(instrucmemror_4_tz),
	.I5(instrucmemror_16_tz),
	.O(instrucmemror_1_1_1z)
);
defparam instrucmemror_1_1.INIT=64'h3333333122222220;
// @5:62
  LUT6 un1_in_enable_1_i_0_a2_a_0_9_cZ (
	.I0(Addr[55]),
	.I1(Addr[56]),
	.I2(Addr[63]),
	.I3(un1_in_enable_1_i_0_a2_a_0_0),
	.I4(un1_in_enable_1_i_0_a2_a_0_1),
	.I5(un1_in_enable_1_i_0_a2_a_0_2),
	.O(un1_in_enable_1_i_0_a2_a_0_9)
);
defparam un1_in_enable_1_i_0_a2_a_0_9_cZ.INIT=64'h0100000000000000;
// @9:14
  LUT6 instrucmemror_2_0_0_cZ (
	.I0(instrucmemro_29),
	.I1(PC[4]),
	.I2(PC[5]),
	.I3(N_278),
	.I4(instrucmemria_31_0_a2_0),
	.I5(instrucmemror_12_tz),
	.O(instrucmemror_2_0_0)
);
defparam instrucmemror_2_0_0_cZ.INIT=64'hC3C38303C0C08000;
// @9:14
  LUT6 instrucmemror_4_0_1_cZ (
	.I0(instrucmemro_17),
	.I1(PC[4]),
	.I2(PC[5]),
	.I3(N_278),
	.I4(instrucmemror_0_0),
	.I5(instrucmemror_5_tz),
	.O(instrucmemror_4_0_1)
);
defparam instrucmemror_4_0_1_cZ.INIT=64'hFFFF3230FFFF0200;
// @9:14
  LUT6 instrucmemror_16_tz_cZ (
	.I0(instrucmemro_0),
	.I1(instrucmemro_2),
	.I2(PC[3]),
	.I3(PC[6]),
	.I4(PC[2]),
	.I5(instrucmemror_16_tz_0),
	.O(instrucmemror_16_tz)
);
defparam instrucmemror_16_tz_cZ.INIT=64'hFFFFFFFF000000CA;
// @9:14
  LUT6 instrucmemror_19_tz_cZ (
	.I0(instrucmemro_24),
	.I1(instrucmemro_10),
	.I2(PC[6]),
	.I3(PC[3]),
	.I4(PC[2]),
	.I5(instrucmemror_19_tz_0),
	.O(instrucmemror_19_tz)
);
defparam instrucmemror_19_tz_cZ.INIT=64'hFFFFFFFF00000CA0;
// @9:14
  LUT6 instrucmemror_20_tz_cZ (
	.I0(instrucmemro_14),
	.I1(instrucmemro_12),
	.I2(PC[3]),
	.I3(PC[6]),
	.I4(PC[2]),
	.I5(instrucmemror_20_tz_0),
	.O(instrucmemror_20_tz)
);
defparam instrucmemror_20_tz_cZ.INIT=64'hFFFFFFFF000000AC;
// @5:62
  LUT6 un1_in_enable_1_i_0_a2_a_0_14_cZ (
	.I0(Addr[7]),
	.I1(Addr[8]),
	.I2(un1_in_enable_1_i_0_a2_a_0_5_3),
	.I3(un1_in_enable_1_i_0_a2_a_0_6),
	.I4(un1_in_enable_1_i_0_a2_a_0_7),
	.I5(un1_in_enable_1_i_0_a2_a_0_8),
	.O(un1_in_enable_1_i_0_a2_a_0_14)
);
defparam un1_in_enable_1_i_0_a2_a_0_14_cZ.INIT=64'h1000000000000000;
// @9:14
  LUT6 instrucmemror_1_cZ (
	.I0(instrucmemro_28),
	.I1(instrucmemro_16),
	.I2(PC[4]),
	.I3(PC[5]),
	.I4(N_286),
	.I5(instrucmemria_30),
	.O(instrucmemror_1)
);
defparam instrucmemror_1_cZ.INIT=64'hFFFFFFFFA00C0000;
// @9:14
  LUT5 instrucmemror_2_tz_cZ (
	.I0(instrucmemro_4),
	.I1(instrucmemro_22),
	.I2(PC[6]),
	.I3(PC[3]),
	.I4(PC[2]),
	.O(instrucmemror_2_tz)
);
defparam instrucmemror_2_tz_cZ.INIT=32'h0000C00A;
// @9:14
  LUT5 instrucmemror_4_tz_cZ (
	.I0(instrucmemro_6),
	.I1(instrucmemro_7),
	.I2(PC[6]),
	.I3(PC[3]),
	.I4(PC[2]),
	.O(instrucmemror_4_tz)
);
defparam instrucmemror_4_tz_cZ.INIT=32'h0C000A00;
// @9:14
  LUT5 instrucmemror_5_tz_cZ (
	.I0(instrucmemro_8),
	.I1(instrucmemro_9),
	.I2(PC[6]),
	.I3(PC[3]),
	.I4(PC[2]),
	.O(instrucmemror_5_tz)
);
defparam instrucmemror_5_tz_cZ.INIT=32'h000C000A;
// @9:14
  LUT5 instrucmemror_12_tz_cZ (
	.I0(instrucmemro_18),
	.I1(instrucmemro_19),
	.I2(PC[3]),
	.I3(PC[6]),
	.I4(PC[2]),
	.O(instrucmemror_12_tz)
);
defparam instrucmemror_12_tz_cZ.INIT=32'hC000A000;
// @9:14
  LUT5 instrucmemror_13_tz_cZ (
	.I0(instrucmemro_20),
	.I1(instrucmemro_23),
	.I2(PC[6]),
	.I3(PC[3]),
	.I4(PC[2]),
	.O(instrucmemror_13_tz)
);
defparam instrucmemror_13_tz_cZ.INIT=32'hC00000A0;
// @9:14
  LUT5 instrucmemror_14_tz_cZ (
	.I0(instrucmemro_25),
	.I1(instrucmemro_27),
	.I2(PC[6]),
	.I3(PC[3]),
	.I4(PC[2]),
	.O(instrucmemror_14_tz)
);
defparam instrucmemror_14_tz_cZ.INIT=32'hC0A00000;
// @9:14
  LUT5 instrucmemror_20_tz_0_cZ (
	.I0(instrucmemro_13),
	.I1(instrucmemro_15),
	.I2(PC[3]),
	.I3(PC[6]),
	.I4(PC[2]),
	.O(instrucmemror_20_tz_0)
);
defparam instrucmemror_20_tz_0_cZ.INIT=32'h00CA0000;
// @9:14
  LUT5 instrucmemror_19_tz_0_cZ (
	.I0(instrucmemro_11),
	.I1(instrucmemro_26),
	.I2(PC[3]),
	.I3(PC[6]),
	.I4(PC[2]),
	.O(instrucmemror_19_tz_0)
);
defparam instrucmemror_19_tz_0_cZ.INIT=32'h00A0C000;
// @9:14
  LUT5 instrucmemror_16_tz_0_cZ (
	.I0(instrucmemro_1),
	.I1(instrucmemro_3),
	.I2(PC[6]),
	.I3(PC[3]),
	.I4(PC[2]),
	.O(instrucmemror_16_tz_0)
);
defparam instrucmemror_16_tz_0_cZ.INIT=32'h0C0A0000;
// @9:14
  LUT6 instrucmemror_0_0_cZ (
	.I0(instrucmemro_5),
	.I1(instrucmemro_21),
	.I2(PC[6]),
	.I3(PC[3]),
	.I4(N_681),
	.I5(PC[2]),
	.O(instrucmemror_0_0)
);
defparam instrucmemror_0_0_cZ.INIT=64'h00CA000000000000;
// @9:14
  LUT4 instrucmemria_31_0_a2_0_cZ (
	.I0(instrucmemro_31),
	.I1(PC[3]),
	.I2(PC[6]),
	.I3(PC[2]),
	.O(instrucmemria_31_0_a2_0)
);
defparam instrucmemria_31_0_a2_0_cZ.INIT=16'h8000;
// @9:14
  LUT6 instrucmemria_30_0_a2 (
	.I0(instrucmemro_30),
	.I1(PC[3]),
	.I2(PC[6]),
	.I3(PC[4]),
	.I4(PC[5]),
	.I5(PC[2]),
	.O(instrucmemria_30)
);
defparam instrucmemria_30_0_a2.INIT=64'h0000000080000000;
// @5:62
  LUT6 un1_in_enable_1_i_0_a2_a_0_0_cZ (
	.I0(Addr[33]),
	.I1(Addr[34]),
	.I2(Addr[35]),
	.I3(Addr[36]),
	.I4(Addr[37]),
	.I5(Addr[38]),
	.O(un1_in_enable_1_i_0_a2_a_0_0)
);
defparam un1_in_enable_1_i_0_a2_a_0_0_cZ.INIT=64'h0000000000000001;
// @5:62
  LUT6 un1_in_enable_1_i_0_a2_a_0_1_cZ (
	.I0(Addr[27]),
	.I1(Addr[28]),
	.I2(Addr[29]),
	.I3(Addr[30]),
	.I4(Addr[31]),
	.I5(Addr[32]),
	.O(un1_in_enable_1_i_0_a2_a_0_1)
);
defparam un1_in_enable_1_i_0_a2_a_0_1_cZ.INIT=64'h0000000000000001;
// @5:62
  LUT6 un1_in_enable_1_i_0_a2_a_0_2_cZ (
	.I0(Addr[21]),
	.I1(Addr[22]),
	.I2(Addr[23]),
	.I3(Addr[24]),
	.I4(Addr[25]),
	.I5(Addr[26]),
	.O(un1_in_enable_1_i_0_a2_a_0_2)
);
defparam un1_in_enable_1_i_0_a2_a_0_2_cZ.INIT=64'h0000000000000001;
// @5:62
  LUT6 un1_in_enable_1_i_0_a2_a_0_3_cZ (
	.I0(Addr[15]),
	.I1(Addr[16]),
	.I2(Addr[17]),
	.I3(Addr[18]),
	.I4(Addr[19]),
	.I5(Addr[20]),
	.O(un1_in_enable_1_i_0_a2_a_0_3)
);
defparam un1_in_enable_1_i_0_a2_a_0_3_cZ.INIT=64'h0000000000000001;
// @5:62
  LUT6 un1_in_enable_1_i_0_a2_a_0_4_cZ (
	.I0(Addr[9]),
	.I1(Addr[10]),
	.I2(Addr[11]),
	.I3(Addr[12]),
	.I4(Addr[13]),
	.I5(Addr[14]),
	.O(un1_in_enable_1_i_0_a2_a_0_4)
);
defparam un1_in_enable_1_i_0_a2_a_0_4_cZ.INIT=64'h0000000000000001;
// @5:62
  LUT6 un1_in_enable_1_i_0_a2_a_0_6_cZ (
	.I0(Addr[45]),
	.I1(Addr[46]),
	.I2(Addr[47]),
	.I3(Addr[48]),
	.I4(Addr[49]),
	.I5(Addr[50]),
	.O(un1_in_enable_1_i_0_a2_a_0_6)
);
defparam un1_in_enable_1_i_0_a2_a_0_6_cZ.INIT=64'h0000000000000001;
// @5:62
  LUT6 un1_in_enable_1_i_0_a2_a_0_7_cZ (
	.I0(Addr[39]),
	.I1(Addr[40]),
	.I2(Addr[41]),
	.I3(Addr[42]),
	.I4(Addr[43]),
	.I5(Addr[44]),
	.O(un1_in_enable_1_i_0_a2_a_0_7)
);
defparam un1_in_enable_1_i_0_a2_a_0_7_cZ.INIT=64'h0000000000000001;
// @5:62
  LUT6 un1_in_enable_1_i_0_a2_a_0_8_cZ (
	.I0(Addr[57]),
	.I1(Addr[58]),
	.I2(Addr[59]),
	.I3(Addr[60]),
	.I4(Addr[61]),
	.I5(Addr[62]),
	.O(un1_in_enable_1_i_0_a2_a_0_8)
);
defparam un1_in_enable_1_i_0_a2_a_0_8_cZ.INIT=64'h0000000000000001;
// @9:14
  LUT3 instrucmemria_24_0_a2_0 (
	.I0(PC[6]),
	.I1(PC[3]),
	.I2(PC[2]),
	.O(N_286)
);
defparam instrucmemria_24_0_a2_0.INIT=8'h02;
// @9:14
  LUT3 instrucmemria_21_0_a2_0 (
	.I0(PC[6]),
	.I1(PC[3]),
	.I2(PC[2]),
	.O(N_278)
);
defparam instrucmemria_21_0_a2_0.INIT=8'h20;
// @5:62
  LUT4 un1_in_enable_1_i_0_a2_a_0_5_3_cZ (
	.I0(Addr[51]),
	.I1(Addr[52]),
	.I2(Addr[53]),
	.I3(Addr[54]),
	.O(un1_in_enable_1_i_0_a2_a_0_5_3)
);
defparam un1_in_enable_1_i_0_a2_a_0_5_3_cZ.INIT=16'h0001;
// @9:14
  LUT2 instrucmemria_7_0_a2_0 (
	.I0(PC[4]),
	.I1(PC[5]),
	.O(N_681)
);
defparam instrucmemria_7_0_a2_0.INIT=4'h2;
// @6:59
  LUT2 stop_i_a2 (
	.I0(in_enable),
	.I1(stall),
	.O(N_810_0)
);
defparam stop_i_a2.INIT=4'h1;
// @9:14
  RAM32M16 instrucmem_I_12 (
	.DOA(instrucmemrx[1:0]),
	.DOB(instrucmemrx[3:2]),
	.DOC(instrucmemrx[5:4]),
	.DOD(instrucmemrx[7:6]),
	.DOE(instrucmemrx[9:8]),
	.DOF(instrucmemrx[11:10]),
	.DOG(instrucmemrx[13:12]),
	.DOH(instrucmem_I_12_DOH[1:0]),
	.ADDRA(PC[6:2]),
	.ADDRB(PC[6:2]),
	.ADDRC(PC[6:2]),
	.ADDRD(PC[6:2]),
	.ADDRE(PC[6:2]),
	.ADDRF(PC[6:2]),
	.ADDRG(PC[6:2]),
	.ADDRH(Addr[6:2]),
	.DIA(in_instruc[1:0]),
	.DIB(in_instruc[3:2]),
	.DIC(in_instruc[5:4]),
	.DID(in_instruc[7:6]),
	.DIE(in_instruc[9:8]),
	.DIF(in_instruc[11:10]),
	.DIG(in_instruc[13:12]),
	.DIH({GND, GND}),
	.WCLK(clk),
	.WE(un1_in_enable_1_i)
);
defparam instrucmem_I_12.INIT_A=64'h0000000000000000;
defparam instrucmem_I_12.INIT_B=64'h0000000000000000;
defparam instrucmem_I_12.INIT_C=64'h0000000000000000;
defparam instrucmem_I_12.INIT_D=64'h0000000000000000;
// @9:14
  RAM32M16 instrucmem_I_13 (
	.DOA(instrucmemrx[15:14]),
	.DOB(instrucmemrx[17:16]),
	.DOC(instrucmemrx[19:18]),
	.DOD(instrucmemrx[21:20]),
	.DOE(instrucmemrx[23:22]),
	.DOF(instrucmemrx[25:24]),
	.DOG(instrucmemrx[27:26]),
	.DOH(instrucmem_I_13_DOH[1:0]),
	.ADDRA(PC[6:2]),
	.ADDRB(PC[6:2]),
	.ADDRC(PC[6:2]),
	.ADDRD(PC[6:2]),
	.ADDRE(PC[6:2]),
	.ADDRF(PC[6:2]),
	.ADDRG(PC[6:2]),
	.ADDRH(Addr[6:2]),
	.DIA(in_instruc[15:14]),
	.DIB(in_instruc[17:16]),
	.DIC(in_instruc[19:18]),
	.DID(in_instruc[21:20]),
	.DIE(in_instruc[23:22]),
	.DIF(in_instruc[25:24]),
	.DIG(in_instruc[27:26]),
	.DIH({GND, GND}),
	.WCLK(clk),
	.WE(un1_in_enable_1_i)
);
defparam instrucmem_I_13.INIT_A=64'h0000000000000000;
defparam instrucmem_I_13.INIT_B=64'h0000000000000000;
defparam instrucmem_I_13.INIT_C=64'h0000000000000000;
defparam instrucmem_I_13.INIT_D=64'h0000000000000000;
// @9:14
  FDC instrucmemrff_9_Z (
	.Q(instrucmemro_9),
	.D(instrucmemrff_9),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_8_Z (
	.Q(instrucmemro_8),
	.D(instrucmemrff_8),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_7_Z (
	.Q(instrucmemro_7),
	.D(instrucmemrff_7),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_6_Z (
	.Q(instrucmemro_6),
	.D(instrucmemrff_6),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_5_Z (
	.Q(instrucmemro_5),
	.D(instrucmemrff_5),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_4_Z (
	.Q(instrucmemro_4),
	.D(instrucmemrff_4),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_3_Z (
	.Q(instrucmemro_3),
	.D(instrucmemrff_3),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_2_Z (
	.Q(instrucmemro_2),
	.D(instrucmemrff_2),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_1_Z (
	.Q(instrucmemro_1),
	.D(instrucmemrff_1),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_0_Z (
	.Q(instrucmemro_0),
	.D(instrucmemrff_0),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_24_Z (
	.Q(instrucmemro_24),
	.D(instrucmemrff_24),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_23_Z (
	.Q(instrucmemro_23),
	.D(instrucmemrff_23),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_22_Z (
	.Q(instrucmemro_22),
	.D(instrucmemrff_22),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_21_Z (
	.Q(instrucmemro_21),
	.D(instrucmemrff_21),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_20_Z (
	.Q(instrucmemro_20),
	.D(instrucmemrff_20),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_19_Z (
	.Q(instrucmemro_19),
	.D(instrucmemrff_19),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_18_Z (
	.Q(instrucmemro_18),
	.D(instrucmemrff_18),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_17_Z (
	.Q(instrucmemro_17),
	.D(instrucmemrff_17),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_16_Z (
	.Q(instrucmemro_16),
	.D(instrucmemrff_16),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_15_Z (
	.Q(instrucmemro_15),
	.D(instrucmemrff_15),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_14_Z (
	.Q(instrucmemro_14),
	.D(instrucmemrff_14),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_13_Z (
	.Q(instrucmemro_13),
	.D(instrucmemrff_13),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_12_Z (
	.Q(instrucmemro_12),
	.D(instrucmemrff_12),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_11_Z (
	.Q(instrucmemro_11),
	.D(instrucmemrff_11),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_10_Z (
	.Q(instrucmemro_10),
	.D(instrucmemrff_10),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_31_Z (
	.Q(instrucmemro_31),
	.D(instrucmemrff_31),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_30_Z (
	.Q(instrucmemro_30),
	.D(instrucmemrff_30),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_29_Z (
	.Q(instrucmemro_29),
	.D(instrucmemrff_29),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_28_Z (
	.Q(instrucmemro_28),
	.D(instrucmemrff_28),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_27_Z (
	.Q(instrucmemro_27),
	.D(instrucmemrff_27),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_26_Z (
	.Q(instrucmemro_26),
	.D(instrucmemrff_26),
	.C(clk),
	.CLR(rst_n_0_i)
);
// @9:14
  FDC instrucmemrff_25_Z (
	.Q(instrucmemro_25),
	.D(instrucmemrff_25),
	.C(clk),
	.CLR(rst_n_0_i)
);
  GND GND_cZ (
	.G(GND)
);
  VCC VCC_cZ (
	.P(VCC)
);
// @9:14
  LUT4 instrucmemwre_24_0_a2_0_lut6_2_o6 (
	.I0(Addr[4]),
	.I1(Addr[5]),
	.I2(Addr[6]),
	.I3(un1_in_enable_1_i),
	.O(N_284)
);
defparam instrucmemwre_24_0_a2_0_lut6_2_o6.INIT=16'h4000;
// @9:14
  LUT4 instrucmemwre_24_0_a2_0_lut6_2_o5 (
	.I0(Addr[4]),
	.I1(Addr[5]),
	.I2(Addr[6]),
	.I3(un1_in_enable_1_i),
	.O(N_288)
);
defparam instrucmemwre_24_0_a2_0_lut6_2_o5.INIT=16'h0400;
// @9:14
  LUT4 instrucmemwre_7_0_a2_1_lut6_2_o6 (
	.I0(Addr[4]),
	.I1(Addr[5]),
	.I2(Addr[6]),
	.I3(un1_in_enable_1_i),
	.O(N_283)
);
defparam instrucmemwre_7_0_a2_1_lut6_2_o6.INIT=16'h0200;
// @9:14
  LUT4 instrucmemwre_7_0_a2_1_lut6_2_o5 (
	.I0(Addr[4]),
	.I1(Addr[5]),
	.I2(Addr[6]),
	.I3(un1_in_enable_1_i),
	.O(N_287)
);
defparam instrucmemwre_7_0_a2_1_lut6_2_o5.INIT=16'h2000;
// @9:14
  LUT4 instrucmemwre_2_0_a2_1_lut6_2_o6 (
	.I0(Addr[4]),
	.I1(Addr[5]),
	.I2(Addr[6]),
	.I3(un1_in_enable_1_i),
	.O(N_275)
);
defparam instrucmemwre_2_0_a2_1_lut6_2_o6.INIT=16'h0100;
// @9:14
  LUT4 instrucmemwre_2_0_a2_1_lut6_2_o5 (
	.I0(Addr[4]),
	.I1(Addr[5]),
	.I2(Addr[6]),
	.I3(un1_in_enable_1_i),
	.O(N_280)
);
defparam instrucmemwre_2_0_a2_1_lut6_2_o5.INIT=16'h0800;
endmodule /* IM */

module IF_ID (
  PCID,
  INSTRUCID,
  PC,
  instrucmemrx,
  rst_n_0_i,
  clk,
  stall,
  PCSRCID,
  instrucmemror_2_1,
  instrucmemror_1_1,
  in_enable
)
;
output [63:0] PCID ;
output [31:0] INSTRUCID ;
input [63:0] PC ;
input [31:0] instrucmemrx ;
input rst_n_0_i ;
input clk ;
input stall ;
input PCSRCID ;
input instrucmemror_2_1 ;
input instrucmemror_1_1 ;
input in_enable ;
wire rst_n_0_i ;
wire clk ;
wire stall ;
wire PCSRCID ;
wire instrucmemror_2_1 ;
wire instrucmemror_1_1 ;
wire in_enable ;
wire [31:0] un1_instruc_0_a2;
wire [63:0] un1_pc;
wire N_73_i ;
wire N_75_i ;
wire N_77_i ;
wire N_79_i ;
wire N_81_i ;
wire N_5 ;
wire GND ;
wire VCC ;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[30]  (
	.I0(in_enable),
	.I1(instrucmemror_1_1),
	.I2(instrucmemror_2_1),
	.I3(instrucmemrx[30]),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[30])
);
defparam \un1_instruc_0_a2_cZ[30] .INIT=32'h00005400;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[31]  (
	.I0(in_enable),
	.I1(instrucmemror_1_1),
	.I2(instrucmemror_2_1),
	.I3(instrucmemrx[31]),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[31])
);
defparam \un1_instruc_0_a2_cZ[31] .INIT=32'h00005400;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[15]  (
	.I0(in_enable),
	.I1(instrucmemrx[15]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[15])
);
defparam \un1_instruc_0_a2_cZ[15] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[16]  (
	.I0(in_enable),
	.I1(instrucmemrx[16]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[16])
);
defparam \un1_instruc_0_a2_cZ[16] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[17]  (
	.I0(in_enable),
	.I1(instrucmemrx[17]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[17])
);
defparam \un1_instruc_0_a2_cZ[17] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[18]  (
	.I0(in_enable),
	.I1(instrucmemrx[18]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[18])
);
defparam \un1_instruc_0_a2_cZ[18] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[19]  (
	.I0(in_enable),
	.I1(instrucmemrx[19]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[19])
);
defparam \un1_instruc_0_a2_cZ[19] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[20]  (
	.I0(in_enable),
	.I1(instrucmemrx[20]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[20])
);
defparam \un1_instruc_0_a2_cZ[20] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[21]  (
	.I0(in_enable),
	.I1(instrucmemrx[21]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[21])
);
defparam \un1_instruc_0_a2_cZ[21] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[22]  (
	.I0(in_enable),
	.I1(instrucmemrx[22]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[22])
);
defparam \un1_instruc_0_a2_cZ[22] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[23]  (
	.I0(in_enable),
	.I1(instrucmemrx[23]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[23])
);
defparam \un1_instruc_0_a2_cZ[23] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[24]  (
	.I0(in_enable),
	.I1(instrucmemrx[24]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[24])
);
defparam \un1_instruc_0_a2_cZ[24] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[25]  (
	.I0(in_enable),
	.I1(instrucmemrx[25]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[25])
);
defparam \un1_instruc_0_a2_cZ[25] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[26]  (
	.I0(in_enable),
	.I1(instrucmemrx[26]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[26])
);
defparam \un1_instruc_0_a2_cZ[26] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[27]  (
	.I0(in_enable),
	.I1(instrucmemrx[27]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[27])
);
defparam \un1_instruc_0_a2_cZ[27] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[28]  (
	.I0(in_enable),
	.I1(instrucmemror_1_1),
	.I2(instrucmemror_2_1),
	.I3(instrucmemrx[28]),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[28])
);
defparam \un1_instruc_0_a2_cZ[28] .INIT=32'h00005400;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[29]  (
	.I0(in_enable),
	.I1(instrucmemror_1_1),
	.I2(instrucmemror_2_1),
	.I3(instrucmemrx[29]),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[29])
);
defparam \un1_instruc_0_a2_cZ[29] .INIT=32'h00005400;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[0]  (
	.I0(in_enable),
	.I1(instrucmemrx[0]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[0])
);
defparam \un1_instruc_0_a2_cZ[0] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[1]  (
	.I0(in_enable),
	.I1(instrucmemrx[1]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[1])
);
defparam \un1_instruc_0_a2_cZ[1] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[2]  (
	.I0(in_enable),
	.I1(instrucmemrx[2]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[2])
);
defparam \un1_instruc_0_a2_cZ[2] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[3]  (
	.I0(in_enable),
	.I1(instrucmemrx[3]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[3])
);
defparam \un1_instruc_0_a2_cZ[3] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[4]  (
	.I0(in_enable),
	.I1(instrucmemrx[4]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[4])
);
defparam \un1_instruc_0_a2_cZ[4] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[5]  (
	.I0(in_enable),
	.I1(instrucmemrx[5]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[5])
);
defparam \un1_instruc_0_a2_cZ[5] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[6]  (
	.I0(in_enable),
	.I1(instrucmemrx[6]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[6])
);
defparam \un1_instruc_0_a2_cZ[6] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[7]  (
	.I0(in_enable),
	.I1(instrucmemrx[7]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[7])
);
defparam \un1_instruc_0_a2_cZ[7] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[8]  (
	.I0(in_enable),
	.I1(instrucmemrx[8]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[8])
);
defparam \un1_instruc_0_a2_cZ[8] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[9]  (
	.I0(in_enable),
	.I1(instrucmemrx[9]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[9])
);
defparam \un1_instruc_0_a2_cZ[9] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[10]  (
	.I0(in_enable),
	.I1(instrucmemrx[10]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[10])
);
defparam \un1_instruc_0_a2_cZ[10] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[11]  (
	.I0(in_enable),
	.I1(instrucmemrx[11]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[11])
);
defparam \un1_instruc_0_a2_cZ[11] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[12]  (
	.I0(in_enable),
	.I1(instrucmemrx[12]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[12])
);
defparam \un1_instruc_0_a2_cZ[12] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[13]  (
	.I0(in_enable),
	.I1(instrucmemrx[13]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[13])
);
defparam \un1_instruc_0_a2_cZ[13] .INIT=32'h00004440;
// @20:1
  LUT5 \un1_instruc_0_a2_cZ[14]  (
	.I0(in_enable),
	.I1(instrucmemrx[14]),
	.I2(instrucmemror_1_1),
	.I3(instrucmemror_2_1),
	.I4(PCSRCID),
	.O(un1_instruc_0_a2[14])
);
defparam \un1_instruc_0_a2_cZ[14] .INIT=32'h00004440;
// @20:14
  LUT2 \out_pc_RNO[2]  (
	.I0(PC[2]),
	.I1(PCSRCID),
	.O(N_73_i)
);
defparam \out_pc_RNO[2] .INIT=4'h2;
// @20:14
  LUT2 \out_pc_RNO[3]  (
	.I0(PC[3]),
	.I1(PCSRCID),
	.O(N_75_i)
);
defparam \out_pc_RNO[3] .INIT=4'h2;
// @20:14
  LUT2 \out_pc_RNO[4]  (
	.I0(PC[4]),
	.I1(PCSRCID),
	.O(N_77_i)
);
defparam \out_pc_RNO[4] .INIT=4'h2;
// @20:14
  LUT2 \out_pc_RNO[5]  (
	.I0(PC[5]),
	.I1(PCSRCID),
	.O(N_79_i)
);
defparam \out_pc_RNO[5] .INIT=4'h2;
// @20:14
  LUT2 \out_pc_RNO[6]  (
	.I0(PC[6]),
	.I1(PCSRCID),
	.O(N_81_i)
);
defparam \out_pc_RNO[6] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[0]  (
	.I0(PC[0]),
	.I1(PCSRCID),
	.O(un1_pc[0])
);
defparam \un1_pc_cZ[0] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[1]  (
	.I0(PC[1]),
	.I1(PCSRCID),
	.O(un1_pc[1])
);
defparam \un1_pc_cZ[1] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[7]  (
	.I0(PC[7]),
	.I1(PCSRCID),
	.O(un1_pc[7])
);
defparam \un1_pc_cZ[7] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[8]  (
	.I0(PC[8]),
	.I1(PCSRCID),
	.O(un1_pc[8])
);
defparam \un1_pc_cZ[8] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[9]  (
	.I0(PC[9]),
	.I1(PCSRCID),
	.O(un1_pc[9])
);
defparam \un1_pc_cZ[9] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[10]  (
	.I0(PC[10]),
	.I1(PCSRCID),
	.O(un1_pc[10])
);
defparam \un1_pc_cZ[10] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[11]  (
	.I0(PC[11]),
	.I1(PCSRCID),
	.O(un1_pc[11])
);
defparam \un1_pc_cZ[11] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[12]  (
	.I0(PC[12]),
	.I1(PCSRCID),
	.O(un1_pc[12])
);
defparam \un1_pc_cZ[12] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[13]  (
	.I0(PC[13]),
	.I1(PCSRCID),
	.O(un1_pc[13])
);
defparam \un1_pc_cZ[13] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[14]  (
	.I0(PC[14]),
	.I1(PCSRCID),
	.O(un1_pc[14])
);
defparam \un1_pc_cZ[14] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[15]  (
	.I0(PC[15]),
	.I1(PCSRCID),
	.O(un1_pc[15])
);
defparam \un1_pc_cZ[15] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[16]  (
	.I0(PC[16]),
	.I1(PCSRCID),
	.O(un1_pc[16])
);
defparam \un1_pc_cZ[16] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[17]  (
	.I0(PC[17]),
	.I1(PCSRCID),
	.O(un1_pc[17])
);
defparam \un1_pc_cZ[17] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[18]  (
	.I0(PC[18]),
	.I1(PCSRCID),
	.O(un1_pc[18])
);
defparam \un1_pc_cZ[18] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[19]  (
	.I0(PC[19]),
	.I1(PCSRCID),
	.O(un1_pc[19])
);
defparam \un1_pc_cZ[19] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[20]  (
	.I0(PC[20]),
	.I1(PCSRCID),
	.O(un1_pc[20])
);
defparam \un1_pc_cZ[20] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[21]  (
	.I0(PC[21]),
	.I1(PCSRCID),
	.O(un1_pc[21])
);
defparam \un1_pc_cZ[21] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[22]  (
	.I0(PC[22]),
	.I1(PCSRCID),
	.O(un1_pc[22])
);
defparam \un1_pc_cZ[22] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[23]  (
	.I0(PC[23]),
	.I1(PCSRCID),
	.O(un1_pc[23])
);
defparam \un1_pc_cZ[23] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[24]  (
	.I0(PC[24]),
	.I1(PCSRCID),
	.O(un1_pc[24])
);
defparam \un1_pc_cZ[24] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[25]  (
	.I0(PC[25]),
	.I1(PCSRCID),
	.O(un1_pc[25])
);
defparam \un1_pc_cZ[25] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[26]  (
	.I0(PC[26]),
	.I1(PCSRCID),
	.O(un1_pc[26])
);
defparam \un1_pc_cZ[26] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[27]  (
	.I0(PC[27]),
	.I1(PCSRCID),
	.O(un1_pc[27])
);
defparam \un1_pc_cZ[27] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[28]  (
	.I0(PC[28]),
	.I1(PCSRCID),
	.O(un1_pc[28])
);
defparam \un1_pc_cZ[28] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[29]  (
	.I0(PC[29]),
	.I1(PCSRCID),
	.O(un1_pc[29])
);
defparam \un1_pc_cZ[29] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[30]  (
	.I0(PC[30]),
	.I1(PCSRCID),
	.O(un1_pc[30])
);
defparam \un1_pc_cZ[30] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[31]  (
	.I0(PC[31]),
	.I1(PCSRCID),
	.O(un1_pc[31])
);
defparam \un1_pc_cZ[31] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[32]  (
	.I0(PC[32]),
	.I1(PCSRCID),
	.O(un1_pc[32])
);
defparam \un1_pc_cZ[32] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[33]  (
	.I0(PC[33]),
	.I1(PCSRCID),
	.O(un1_pc[33])
);
defparam \un1_pc_cZ[33] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[34]  (
	.I0(PC[34]),
	.I1(PCSRCID),
	.O(un1_pc[34])
);
defparam \un1_pc_cZ[34] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[35]  (
	.I0(PC[35]),
	.I1(PCSRCID),
	.O(un1_pc[35])
);
defparam \un1_pc_cZ[35] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[36]  (
	.I0(PC[36]),
	.I1(PCSRCID),
	.O(un1_pc[36])
);
defparam \un1_pc_cZ[36] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[37]  (
	.I0(PC[37]),
	.I1(PCSRCID),
	.O(un1_pc[37])
);
defparam \un1_pc_cZ[37] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[38]  (
	.I0(PC[38]),
	.I1(PCSRCID),
	.O(un1_pc[38])
);
defparam \un1_pc_cZ[38] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[39]  (
	.I0(PC[39]),
	.I1(PCSRCID),
	.O(un1_pc[39])
);
defparam \un1_pc_cZ[39] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[40]  (
	.I0(PC[40]),
	.I1(PCSRCID),
	.O(un1_pc[40])
);
defparam \un1_pc_cZ[40] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[41]  (
	.I0(PC[41]),
	.I1(PCSRCID),
	.O(un1_pc[41])
);
defparam \un1_pc_cZ[41] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[42]  (
	.I0(PC[42]),
	.I1(PCSRCID),
	.O(un1_pc[42])
);
defparam \un1_pc_cZ[42] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[43]  (
	.I0(PC[43]),
	.I1(PCSRCID),
	.O(un1_pc[43])
);
defparam \un1_pc_cZ[43] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[44]  (
	.I0(PC[44]),
	.I1(PCSRCID),
	.O(un1_pc[44])
);
defparam \un1_pc_cZ[44] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[45]  (
	.I0(PC[45]),
	.I1(PCSRCID),
	.O(un1_pc[45])
);
defparam \un1_pc_cZ[45] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[46]  (
	.I0(PC[46]),
	.I1(PCSRCID),
	.O(un1_pc[46])
);
defparam \un1_pc_cZ[46] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[47]  (
	.I0(PC[47]),
	.I1(PCSRCID),
	.O(un1_pc[47])
);
defparam \un1_pc_cZ[47] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[48]  (
	.I0(PC[48]),
	.I1(PCSRCID),
	.O(un1_pc[48])
);
defparam \un1_pc_cZ[48] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[49]  (
	.I0(PC[49]),
	.I1(PCSRCID),
	.O(un1_pc[49])
);
defparam \un1_pc_cZ[49] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[50]  (
	.I0(PC[50]),
	.I1(PCSRCID),
	.O(un1_pc[50])
);
defparam \un1_pc_cZ[50] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[51]  (
	.I0(PC[51]),
	.I1(PCSRCID),
	.O(un1_pc[51])
);
defparam \un1_pc_cZ[51] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[52]  (
	.I0(PC[52]),
	.I1(PCSRCID),
	.O(un1_pc[52])
);
defparam \un1_pc_cZ[52] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[53]  (
	.I0(PC[53]),
	.I1(PCSRCID),
	.O(un1_pc[53])
);
defparam \un1_pc_cZ[53] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[54]  (
	.I0(PC[54]),
	.I1(PCSRCID),
	.O(un1_pc[54])
);
defparam \un1_pc_cZ[54] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[55]  (
	.I0(PC[55]),
	.I1(PCSRCID),
	.O(un1_pc[55])
);
defparam \un1_pc_cZ[55] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[56]  (
	.I0(PC[56]),
	.I1(PCSRCID),
	.O(un1_pc[56])
);
defparam \un1_pc_cZ[56] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[57]  (
	.I0(PC[57]),
	.I1(PCSRCID),
	.O(un1_pc[57])
);
defparam \un1_pc_cZ[57] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[58]  (
	.I0(PC[58]),
	.I1(PCSRCID),
	.O(un1_pc[58])
);
defparam \un1_pc_cZ[58] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[59]  (
	.I0(PC[59]),
	.I1(PCSRCID),
	.O(un1_pc[59])
);
defparam \un1_pc_cZ[59] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[60]  (
	.I0(PC[60]),
	.I1(PCSRCID),
	.O(un1_pc[60])
);
defparam \un1_pc_cZ[60] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[61]  (
	.I0(PC[61]),
	.I1(PCSRCID),
	.O(un1_pc[61])
);
defparam \un1_pc_cZ[61] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[62]  (
	.I0(PC[62]),
	.I1(PCSRCID),
	.O(un1_pc[62])
);
defparam \un1_pc_cZ[62] .INIT=4'h2;
// @20:1
  LUT2 \un1_pc_cZ[63]  (
	.I0(PC[63]),
	.I1(PCSRCID),
	.O(un1_pc[63])
);
defparam \un1_pc_cZ[63] .INIT=4'h2;
// @20:1
  LUT2 un1_hazard_i_0 (
	.I0(stall),
	.I1(PCSRCID),
	.O(N_5)
);
defparam un1_hazard_i_0.INIT=4'hD;
// @20:15
  FDCE \out_instruc_Z[11]  (
	.Q(INSTRUCID[11]),
	.D(un1_instruc_0_a2[11]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[10]  (
	.Q(INSTRUCID[10]),
	.D(un1_instruc_0_a2[10]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[9]  (
	.Q(INSTRUCID[9]),
	.D(un1_instruc_0_a2[9]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[8]  (
	.Q(INSTRUCID[8]),
	.D(un1_instruc_0_a2[8]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[7]  (
	.Q(INSTRUCID[7]),
	.D(un1_instruc_0_a2[7]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[6]  (
	.Q(INSTRUCID[6]),
	.D(un1_instruc_0_a2[6]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[5]  (
	.Q(INSTRUCID[5]),
	.D(un1_instruc_0_a2[5]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[4]  (
	.Q(INSTRUCID[4]),
	.D(un1_instruc_0_a2[4]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[3]  (
	.Q(INSTRUCID[3]),
	.D(un1_instruc_0_a2[3]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[2]  (
	.Q(INSTRUCID[2]),
	.D(un1_instruc_0_a2[2]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[1]  (
	.Q(INSTRUCID[1]),
	.D(un1_instruc_0_a2[1]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[0]  (
	.Q(INSTRUCID[0]),
	.D(un1_instruc_0_a2[0]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[26]  (
	.Q(INSTRUCID[26]),
	.D(un1_instruc_0_a2[26]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[25]  (
	.Q(INSTRUCID[25]),
	.D(un1_instruc_0_a2[25]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[24]  (
	.Q(INSTRUCID[24]),
	.D(un1_instruc_0_a2[24]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[23]  (
	.Q(INSTRUCID[23]),
	.D(un1_instruc_0_a2[23]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[22]  (
	.Q(INSTRUCID[22]),
	.D(un1_instruc_0_a2[22]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[21]  (
	.Q(INSTRUCID[21]),
	.D(un1_instruc_0_a2[21]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[20]  (
	.Q(INSTRUCID[20]),
	.D(un1_instruc_0_a2[20]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[19]  (
	.Q(INSTRUCID[19]),
	.D(un1_instruc_0_a2[19]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[18]  (
	.Q(INSTRUCID[18]),
	.D(un1_instruc_0_a2[18]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[17]  (
	.Q(INSTRUCID[17]),
	.D(un1_instruc_0_a2[17]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[16]  (
	.Q(INSTRUCID[16]),
	.D(un1_instruc_0_a2[16]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[15]  (
	.Q(INSTRUCID[15]),
	.D(un1_instruc_0_a2[15]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[14]  (
	.Q(INSTRUCID[14]),
	.D(un1_instruc_0_a2[14]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[13]  (
	.Q(INSTRUCID[13]),
	.D(un1_instruc_0_a2[13]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[12]  (
	.Q(INSTRUCID[12]),
	.D(un1_instruc_0_a2[12]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[31]  (
	.Q(INSTRUCID[31]),
	.D(un1_instruc_0_a2[31]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[30]  (
	.Q(INSTRUCID[30]),
	.D(un1_instruc_0_a2[30]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[29]  (
	.Q(INSTRUCID[29]),
	.D(un1_instruc_0_a2[29]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[28]  (
	.Q(INSTRUCID[28]),
	.D(un1_instruc_0_a2[28]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:15
  FDCE \out_instruc_Z[27]  (
	.Q(INSTRUCID[27]),
	.D(un1_instruc_0_a2[27]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[63]  (
	.Q(PCID[63]),
	.D(un1_pc[63]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[62]  (
	.Q(PCID[62]),
	.D(un1_pc[62]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[61]  (
	.Q(PCID[61]),
	.D(un1_pc[61]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[60]  (
	.Q(PCID[60]),
	.D(un1_pc[60]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[59]  (
	.Q(PCID[59]),
	.D(un1_pc[59]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[58]  (
	.Q(PCID[58]),
	.D(un1_pc[58]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[57]  (
	.Q(PCID[57]),
	.D(un1_pc[57]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[56]  (
	.Q(PCID[56]),
	.D(un1_pc[56]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[55]  (
	.Q(PCID[55]),
	.D(un1_pc[55]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[54]  (
	.Q(PCID[54]),
	.D(un1_pc[54]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[53]  (
	.Q(PCID[53]),
	.D(un1_pc[53]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[52]  (
	.Q(PCID[52]),
	.D(un1_pc[52]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[51]  (
	.Q(PCID[51]),
	.D(un1_pc[51]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[50]  (
	.Q(PCID[50]),
	.D(un1_pc[50]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[49]  (
	.Q(PCID[49]),
	.D(un1_pc[49]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[48]  (
	.Q(PCID[48]),
	.D(un1_pc[48]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[47]  (
	.Q(PCID[47]),
	.D(un1_pc[47]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[46]  (
	.Q(PCID[46]),
	.D(un1_pc[46]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[45]  (
	.Q(PCID[45]),
	.D(un1_pc[45]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[44]  (
	.Q(PCID[44]),
	.D(un1_pc[44]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[43]  (
	.Q(PCID[43]),
	.D(un1_pc[43]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[42]  (
	.Q(PCID[42]),
	.D(un1_pc[42]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[41]  (
	.Q(PCID[41]),
	.D(un1_pc[41]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[40]  (
	.Q(PCID[40]),
	.D(un1_pc[40]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[39]  (
	.Q(PCID[39]),
	.D(un1_pc[39]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[38]  (
	.Q(PCID[38]),
	.D(un1_pc[38]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[37]  (
	.Q(PCID[37]),
	.D(un1_pc[37]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[36]  (
	.Q(PCID[36]),
	.D(un1_pc[36]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[35]  (
	.Q(PCID[35]),
	.D(un1_pc[35]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[34]  (
	.Q(PCID[34]),
	.D(un1_pc[34]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[33]  (
	.Q(PCID[33]),
	.D(un1_pc[33]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[32]  (
	.Q(PCID[32]),
	.D(un1_pc[32]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[31]  (
	.Q(PCID[31]),
	.D(un1_pc[31]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[30]  (
	.Q(PCID[30]),
	.D(un1_pc[30]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[29]  (
	.Q(PCID[29]),
	.D(un1_pc[29]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[28]  (
	.Q(PCID[28]),
	.D(un1_pc[28]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[27]  (
	.Q(PCID[27]),
	.D(un1_pc[27]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[26]  (
	.Q(PCID[26]),
	.D(un1_pc[26]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[25]  (
	.Q(PCID[25]),
	.D(un1_pc[25]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[24]  (
	.Q(PCID[24]),
	.D(un1_pc[24]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[23]  (
	.Q(PCID[23]),
	.D(un1_pc[23]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[22]  (
	.Q(PCID[22]),
	.D(un1_pc[22]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[21]  (
	.Q(PCID[21]),
	.D(un1_pc[21]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[20]  (
	.Q(PCID[20]),
	.D(un1_pc[20]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[19]  (
	.Q(PCID[19]),
	.D(un1_pc[19]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[18]  (
	.Q(PCID[18]),
	.D(un1_pc[18]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[17]  (
	.Q(PCID[17]),
	.D(un1_pc[17]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[16]  (
	.Q(PCID[16]),
	.D(un1_pc[16]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[15]  (
	.Q(PCID[15]),
	.D(un1_pc[15]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[14]  (
	.Q(PCID[14]),
	.D(un1_pc[14]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[13]  (
	.Q(PCID[13]),
	.D(un1_pc[13]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[12]  (
	.Q(PCID[12]),
	.D(un1_pc[12]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[11]  (
	.Q(PCID[11]),
	.D(un1_pc[11]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[10]  (
	.Q(PCID[10]),
	.D(un1_pc[10]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[9]  (
	.Q(PCID[9]),
	.D(un1_pc[9]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[8]  (
	.Q(PCID[8]),
	.D(un1_pc[8]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[7]  (
	.Q(PCID[7]),
	.D(un1_pc[7]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[6]  (
	.Q(PCID[6]),
	.D(N_81_i),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[5]  (
	.Q(PCID[5]),
	.D(N_79_i),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[4]  (
	.Q(PCID[4]),
	.D(N_77_i),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[3]  (
	.Q(PCID[3]),
	.D(N_75_i),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[2]  (
	.Q(PCID[2]),
	.D(N_73_i),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[1]  (
	.Q(PCID[1]),
	.D(un1_pc[1]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
// @20:14
  FDCE \out_pc_Z[0]  (
	.Q(PCID[0]),
	.D(un1_pc[0]),
	.C(clk),
	.CLR(rst_n_0_i),
	.CE(N_5)
);
  VCC VCC_cZ (
	.P(VCC)
);
  GND GND_cZ (
	.G(GND)
);
endmodule /* IF_ID */

(* haps_dut_top_srp_name="top" , haps_dut_fpga_name="FB1_uA" , haps_dut_hierarchy=1 *)module FB1_uA_dut (
  clk,
  rst_n,
  IMMID,
  N_1,
  ADDOUTID,
  PCSRCID,
  PC,
  in_enable,
  in_instruc,
  Addr,
  stall,
  PCID,
  INSTRUCID,
  IMMID_11_to_20,
  IMMID_22_to_22,
  IMMID_24_to_26,
  IMMID_28_to_51,
  MEMREADEX,
  MEMREADEX_aptn_ft,
  MEMREADMEM_aptn_ft,
  MEMREADMEM_aptn_ft_0,
  REGWRITEWB,
  REGWRITEWB_aptn_ft,
  rst_n_aptn_s,
  ALUOUTMEM_aptn_ft,
  ALUOUTMEM_aptn_ft_0,
  DMOUTWB,
  DMOUTWB_aptn_ft,
  WREX,
  WREX_aptn_ft,
  WRITEDATAWB,
  WRITEDATAWB_aptn_ft,
  WRMEM_aptn_ft,
  WRMEM_aptn_ft_0,
  WRWB,
  WRWB_aptn_ft,
  N_9835,
  ufpga_lock_clk_o,
  ufpga_lock_ce_o,
  ufpga_lock_cdo_o,
  CDO_28
)
;
(* haps_dut_bit_port=1 , WIRE=1 *)input clk ;
(* haps_dut_bit_port=1 *)output rst_n ;
(* haps_dut_bit_port=1 *)output [63:53] IMMID ;
(* haps_dut_bit_port=1 *)input N_1 ;
(* haps_dut_bit_port=1 , WIRE=1 *)input [63:0] ADDOUTID ;
(* haps_dut_bit_port=1 *)input PCSRCID ;
(* haps_dut_bit_port=1 , WIRE=1 *)output [63:0] PC ;
(* haps_dut_bit_port=1 , WIRE=1 *)input in_enable ;
(* haps_dut_bit_port=1 , WIRE=1 *)input [31:0] in_instruc ;
(* haps_dut_bit_port=1 *)input [63:2] Addr ;
(* haps_dut_bit_port=1 , WIRE=1 *)input stall ;
(* haps_dut_bit_port=1 *)output [63:0] PCID ;
(* haps_dut_bit_port=1 *)output [31:0] INSTRUCID ;
(* haps_dut_bit_port=1 *)output [20:11] IMMID_11_to_20 ;
(* haps_dut_bit_port=1 *)output [22:22] IMMID_22_to_22 ;
(* haps_dut_bit_port=1 *)output [26:24] IMMID_24_to_26 ;
(* haps_dut_bit_port=1 *)output [51:28] IMMID_28_to_51 ;
(* haps_dut_bit_port=1 *)input MEMREADEX ;
(* haps_dut_bit_port=1 *)output MEMREADEX_aptn_ft ;
(* haps_dut_bit_port=1 *)input MEMREADMEM_aptn_ft ;
(* haps_dut_bit_port=1 *)output MEMREADMEM_aptn_ft_0 ;
(* haps_dut_bit_port=1 *)input REGWRITEWB ;
(* haps_dut_bit_port=1 *)output REGWRITEWB_aptn_ft ;
(* haps_dut_bit_port=1 *)output rst_n_aptn_s ;
(* haps_dut_bit_port=1 *)input [10:0] ALUOUTMEM_aptn_ft ;
(* haps_dut_bit_port=1 *)output [10:0] ALUOUTMEM_aptn_ft_0 ;
(* haps_dut_bit_port=1 *)input [63:0] DMOUTWB ;
(* haps_dut_bit_port=1 *)output [63:0] DMOUTWB_aptn_ft ;
(* haps_dut_bit_port=1 *)input [3:0] WREX ;
(* haps_dut_bit_port=1 *)output [3:0] WREX_aptn_ft ;
(* haps_dut_bit_port=1 *)input [63:0] WRITEDATAWB ;
(* haps_dut_bit_port=1 *)output [63:0] WRITEDATAWB_aptn_ft ;
(* haps_dut_bit_port=1 *)input [4:0] WRMEM_aptn_ft ;
(* haps_dut_bit_port=1 *)output [4:0] WRMEM_aptn_ft_0 ;
(* haps_dut_bit_port=1 *)input [4:0] WRWB ;
(* haps_dut_bit_port=1 *)output [4:0] WRWB_aptn_ft ;
input N_9835 ;
inout ufpga_lock_clk_o /* synthesis syn_tristate = 1 */ ;
inout ufpga_lock_ce_o /* synthesis syn_tristate = 1 */ ;
input ufpga_lock_cdo_o ;
output CDO_28 ;
wire clk ;
wire rst_n ;
wire N_1 ;
wire PCSRCID ;
wire in_enable ;
wire stall ;
wire [20:11] IMMID_11_to_20;
wire MEMREADEX ;
wire MEMREADEX_aptn_ft ;
wire MEMREADMEM_aptn_ft ;
wire MEMREADMEM_aptn_ft_0 ;
wire REGWRITEWB ;
wire REGWRITEWB_aptn_ft ;
wire rst_n_aptn_s ;
wire N_9835 ;
wire ufpga_lock_clk_o ;
wire ufpga_lock_ce_o ;
wire ufpga_lock_cdo_o ;
wire CDO_28 ;
wire [63:2] PCIF;
wire [31:0] \im1.instrucmemrx ;
wire [0:0] N_810;
wire GND ;
wire VCC ;
wire rst_n_0 ;
wire aptn_reset_sync_rst_n ;
wire aptn_reset_sync_rst_n_0 ;
wire aptn_reset_sync_rst_n_1 ;
wire aptn_reset_sync_rst_n_2 ;
wire aptn_reset_sync_rst_n_3 ;
wire aptn_reset_sync_rst_n_4 ;
wire aptn_reset_sync_rst_n_5 ;
wire aptn_reset_sync_rst_n_6 ;
wire aptn_reset_sync_rst_n_7 ;
wire N_3_i ;
wire rst_n_0_i ;
wire \im1.instrucmemror_1_1  ;
wire \im1.instrucmemror_2_1  ;
  GND GND_cZ (
	.G(GND)
);
  VCC VCC_cZ (
	.P(VCC)
);
(* srp_build_pop_hier_unique_name="aptn_reset_sync_rst_n" , srp_build_pop_hier_opt_prefix="aptn_reset_sync" *)  FD aptn_reset_sync_rst_n_2_Z (
	.Q(aptn_reset_sync_rst_n_1),
	.D(aptn_reset_sync_rst_n_2),
	.C(clk)
);
defparam aptn_reset_sync_rst_n_2_Z.INIT=1'b0;
(* srp_build_pop_hier_unique_name="aptn_reset_sync_rst_n" , srp_build_pop_hier_opt_prefix="aptn_reset_sync" *)  FD aptn_reset_sync_rst_n_7_Z (
	.Q(aptn_reset_sync_rst_n_6),
	.D(aptn_reset_sync_rst_n_7),
	.C(clk)
);
defparam aptn_reset_sync_rst_n_7_Z.INIT=1'b0;
(* srp_build_pop_hier_unique_name="aptn_reset_sync_rst_n" , srp_build_pop_hier_opt_prefix="aptn_reset_sync" *)  FD aptn_reset_sync_rst_n_8_Z (
	.Q(aptn_reset_sync_rst_n_7),
	.D(N_9835),
	.C(clk)
);
defparam aptn_reset_sync_rst_n_8_Z.INIT=1'b0;
(* srp_build_pop_hier_unique_name="aptn_reset_sync_rst_n" , srp_build_pop_hier_opt_prefix="aptn_reset_sync" *)  FD aptn_reset_sync_rst_n_9_Z (
	.Q(rst_n),
	.D(aptn_reset_sync_rst_n_6),
	.C(clk)
);
defparam aptn_reset_sync_rst_n_9_Z.INIT=1'b0;
(* srp_build_pop_hier_unique_name="aptn_reset_sync_rst_n" , srp_build_pop_hier_opt_prefix="aptn_reset_sync" *)  FD aptn_reset_sync_rst_n_10_Z (
	.Q(rst_n_aptn_s),
	.D(aptn_reset_sync_rst_n_6),
	.C(clk)
);
defparam aptn_reset_sync_rst_n_10_Z.INIT=1'b0;
(* srp_build_pop_hier_unique_name="aptn_reset_sync_rst_n" , srp_build_pop_hier_opt_prefix="aptn_reset_sync" *)  FD aptn_reset_sync_rst_n_Z (
	.Q(rst_n_0),
	.D(aptn_reset_sync_rst_n),
	.C(clk)
);
defparam aptn_reset_sync_rst_n_Z.INIT=1'b0;
(* srp_build_pop_hier_unique_name="aptn_reset_sync_rst_n" , srp_build_pop_hier_opt_prefix="aptn_reset_sync" *)  FD aptn_reset_sync_rst_n_0_Z (
	.Q(aptn_reset_sync_rst_n),
	.D(aptn_reset_sync_rst_n_0),
	.C(clk)
);
defparam aptn_reset_sync_rst_n_0_Z.INIT=1'b0;
(* srp_build_pop_hier_unique_name="aptn_reset_sync_rst_n" , srp_build_pop_hier_opt_prefix="aptn_reset_sync" *)  FD aptn_reset_sync_rst_n_1_Z (
	.Q(aptn_reset_sync_rst_n_0),
	.D(aptn_reset_sync_rst_n_1),
	.C(clk)
);
defparam aptn_reset_sync_rst_n_1_Z.INIT=1'b0;
(* srp_build_pop_hier_unique_name="aptn_reset_sync_rst_n" , srp_build_pop_hier_opt_prefix="aptn_reset_sync" *)  FD aptn_reset_sync_rst_n_3_Z (
	.Q(aptn_reset_sync_rst_n_2),
	.D(aptn_reset_sync_rst_n_3),
	.C(clk)
);
defparam aptn_reset_sync_rst_n_3_Z.INIT=1'b0;
(* srp_build_pop_hier_unique_name="aptn_reset_sync_rst_n" , srp_build_pop_hier_opt_prefix="aptn_reset_sync" *)  FD aptn_reset_sync_rst_n_4_Z (
	.Q(aptn_reset_sync_rst_n_3),
	.D(aptn_reset_sync_rst_n_4),
	.C(clk)
);
defparam aptn_reset_sync_rst_n_4_Z.INIT=1'b0;
(* srp_build_pop_hier_unique_name="aptn_reset_sync_rst_n" , srp_build_pop_hier_opt_prefix="aptn_reset_sync" *)  FD aptn_reset_sync_rst_n_5_Z (
	.Q(aptn_reset_sync_rst_n_4),
	.D(aptn_reset_sync_rst_n_5),
	.C(clk)
);
defparam aptn_reset_sync_rst_n_5_Z.INIT=1'b0;
(* srp_build_pop_hier_unique_name="aptn_reset_sync_rst_n" , srp_build_pop_hier_opt_prefix="aptn_reset_sync" *)  FD aptn_reset_sync_rst_n_6_Z (
	.Q(aptn_reset_sync_rst_n_5),
	.D(aptn_reset_sync_rst_n_6),
	.C(clk)
);
defparam aptn_reset_sync_rst_n_6_Z.INIT=1'b0;
// @22:10
  INV \aptn_reset_sync_rst_n_RNIMJ38.O  (
	.I(rst_n_0),
	.O(rst_n_0_i)
);
// @5:60
  MUX mux3 (
	.PCIF(PCIF[63:2]),
	.PC(PC[63:2]),
	.ADDOUTID(ADDOUTID[63:2]),
	.N_3_i(N_3_i),
	.PCSRCID(PCSRCID),
	.ufpga_lock_clk_o(ufpga_lock_clk_o),
	.ufpga_lock_ce_o(ufpga_lock_ce_o),
	.ufpga_lock_cdo_o(ufpga_lock_cdo_o),
	.CDO_28(CDO_28)
);
// @5:61
  PC pc1 (
	.ADDOUTID(ADDOUTID[1:0]),
	.PC(PC[63:0]),
	.PCIF(PCIF[63:2]),
	.N_810_0(N_810[0]),
	.rst_n_0_i(rst_n_0_i),
	.clk(clk),
	.PCSRCID(PCSRCID),
	.stall(stall),
	.in_enable(in_enable),
	.N_3_i(N_3_i)
);
// @5:62
  IM im1 (
	.in_instruc(in_instruc[31:0]),
	.instrucmemrx(\im1.instrucmemrx [31:0]),
	.N_810_0(N_810[0]),
	.Addr(Addr[63:2]),
	.PC(PC[6:2]),
	.rst_n_0_i(rst_n_0_i),
	.stall(stall),
	.instrucmemror_1_1_1z(\im1.instrucmemror_1_1 ),
	.instrucmemror_2_1_1z(\im1.instrucmemror_2_1 ),
	.rst_n_0(rst_n_0),
	.in_enable(in_enable),
	.clk(clk)
);
// @5:64
  IF_ID ifid1 (
	.PCID(PCID[63:0]),
	.INSTRUCID(INSTRUCID[31:0]),
	.PC(PC[63:0]),
	.instrucmemrx(\im1.instrucmemrx [31:0]),
	.rst_n_0_i(rst_n_0_i),
	.clk(clk),
	.stall(stall),
	.PCSRCID(PCSRCID),
	.instrucmemror_2_1(\im1.instrucmemror_2_1 ),
	.instrucmemror_1_1(\im1.instrucmemror_1_1 ),
	.in_enable(in_enable)
);
assign IMMID[53] = GND;
assign IMMID[54] = GND;
assign IMMID[55] = GND;
assign IMMID[56] = GND;
assign IMMID[57] = GND;
assign IMMID[58] = GND;
assign IMMID[59] = GND;
assign IMMID[60] = GND;
assign IMMID[61] = GND;
assign IMMID[62] = GND;
assign IMMID[63] = GND;
assign IMMID_11_to_20[12] = N_1;
assign IMMID_11_to_20[11] = IMMID_11_to_20[12];
assign IMMID_11_to_20[13] = GND;
assign IMMID_11_to_20[14] = GND;
assign IMMID_11_to_20[15] = GND;
assign IMMID_11_to_20[16] = GND;
assign IMMID_11_to_20[17] = GND;
assign IMMID_11_to_20[18] = GND;
assign IMMID_11_to_20[19] = GND;
assign IMMID_11_to_20[20] = GND;
assign IMMID_22_to_22[22] = GND;
assign IMMID_24_to_26[24] = GND;
assign IMMID_24_to_26[25] = GND;
assign IMMID_24_to_26[26] = GND;
assign IMMID_28_to_51[28] = GND;
assign IMMID_28_to_51[29] = GND;
assign IMMID_28_to_51[30] = GND;
assign IMMID_28_to_51[31] = GND;
assign IMMID_28_to_51[32] = GND;
assign IMMID_28_to_51[33] = GND;
assign IMMID_28_to_51[34] = GND;
assign IMMID_28_to_51[35] = GND;
assign IMMID_28_to_51[36] = GND;
assign IMMID_28_to_51[37] = GND;
assign IMMID_28_to_51[38] = GND;
assign IMMID_28_to_51[39] = GND;
assign IMMID_28_to_51[40] = GND;
assign IMMID_28_to_51[41] = GND;
assign IMMID_28_to_51[42] = GND;
assign IMMID_28_to_51[43] = GND;
assign IMMID_28_to_51[44] = GND;
assign IMMID_28_to_51[45] = GND;
assign IMMID_28_to_51[46] = GND;
assign IMMID_28_to_51[47] = GND;
assign IMMID_28_to_51[48] = GND;
assign IMMID_28_to_51[49] = GND;
assign IMMID_28_to_51[50] = GND;
assign IMMID_28_to_51[51] = GND;
assign MEMREADEX_aptn_ft = MEMREADEX;
assign MEMREADMEM_aptn_ft_0 = MEMREADMEM_aptn_ft;
assign REGWRITEWB_aptn_ft = REGWRITEWB;
assign ALUOUTMEM_aptn_ft_0[0] = ALUOUTMEM_aptn_ft[0];
assign ALUOUTMEM_aptn_ft_0[1] = ALUOUTMEM_aptn_ft[1];
assign ALUOUTMEM_aptn_ft_0[2] = ALUOUTMEM_aptn_ft[2];
assign ALUOUTMEM_aptn_ft_0[3] = ALUOUTMEM_aptn_ft[3];
assign ALUOUTMEM_aptn_ft_0[4] = ALUOUTMEM_aptn_ft[4];
assign ALUOUTMEM_aptn_ft_0[5] = ALUOUTMEM_aptn_ft[5];
assign ALUOUTMEM_aptn_ft_0[6] = ALUOUTMEM_aptn_ft[6];
assign ALUOUTMEM_aptn_ft_0[7] = ALUOUTMEM_aptn_ft[7];
assign ALUOUTMEM_aptn_ft_0[8] = ALUOUTMEM_aptn_ft[8];
assign ALUOUTMEM_aptn_ft_0[9] = ALUOUTMEM_aptn_ft[9];
assign ALUOUTMEM_aptn_ft_0[10] = ALUOUTMEM_aptn_ft[10];
assign DMOUTWB_aptn_ft[0] = DMOUTWB[0];
assign DMOUTWB_aptn_ft[1] = DMOUTWB[1];
assign DMOUTWB_aptn_ft[2] = DMOUTWB[2];
assign DMOUTWB_aptn_ft[3] = DMOUTWB[3];
assign DMOUTWB_aptn_ft[4] = DMOUTWB[4];
assign DMOUTWB_aptn_ft[5] = DMOUTWB[5];
assign DMOUTWB_aptn_ft[6] = DMOUTWB[6];
assign DMOUTWB_aptn_ft[7] = DMOUTWB[7];
assign DMOUTWB_aptn_ft[8] = DMOUTWB[8];
assign DMOUTWB_aptn_ft[9] = DMOUTWB[9];
assign DMOUTWB_aptn_ft[10] = DMOUTWB[10];
assign DMOUTWB_aptn_ft[11] = DMOUTWB[11];
assign DMOUTWB_aptn_ft[12] = DMOUTWB[12];
assign DMOUTWB_aptn_ft[13] = DMOUTWB[13];
assign DMOUTWB_aptn_ft[14] = DMOUTWB[14];
assign DMOUTWB_aptn_ft[15] = DMOUTWB[15];
assign DMOUTWB_aptn_ft[16] = DMOUTWB[16];
assign DMOUTWB_aptn_ft[17] = DMOUTWB[17];
assign DMOUTWB_aptn_ft[18] = DMOUTWB[18];
assign DMOUTWB_aptn_ft[19] = DMOUTWB[19];
assign DMOUTWB_aptn_ft[20] = DMOUTWB[20];
assign DMOUTWB_aptn_ft[21] = DMOUTWB[21];
assign DMOUTWB_aptn_ft[22] = DMOUTWB[22];
assign DMOUTWB_aptn_ft[23] = DMOUTWB[23];
assign DMOUTWB_aptn_ft[24] = DMOUTWB[24];
assign DMOUTWB_aptn_ft[25] = DMOUTWB[25];
assign DMOUTWB_aptn_ft[26] = DMOUTWB[26];
assign DMOUTWB_aptn_ft[27] = DMOUTWB[27];
assign DMOUTWB_aptn_ft[28] = DMOUTWB[28];
assign DMOUTWB_aptn_ft[29] = DMOUTWB[29];
assign DMOUTWB_aptn_ft[30] = DMOUTWB[30];
assign DMOUTWB_aptn_ft[31] = DMOUTWB[31];
assign DMOUTWB_aptn_ft[32] = DMOUTWB[32];
assign DMOUTWB_aptn_ft[33] = DMOUTWB[33];
assign DMOUTWB_aptn_ft[34] = DMOUTWB[34];
assign DMOUTWB_aptn_ft[35] = DMOUTWB[35];
assign DMOUTWB_aptn_ft[36] = DMOUTWB[36];
assign DMOUTWB_aptn_ft[37] = DMOUTWB[37];
assign DMOUTWB_aptn_ft[38] = DMOUTWB[38];
assign DMOUTWB_aptn_ft[39] = DMOUTWB[39];
assign DMOUTWB_aptn_ft[40] = DMOUTWB[40];
assign DMOUTWB_aptn_ft[41] = DMOUTWB[41];
assign DMOUTWB_aptn_ft[42] = DMOUTWB[42];
assign DMOUTWB_aptn_ft[43] = DMOUTWB[43];
assign DMOUTWB_aptn_ft[44] = DMOUTWB[44];
assign DMOUTWB_aptn_ft[45] = DMOUTWB[45];
assign DMOUTWB_aptn_ft[46] = DMOUTWB[46];
assign DMOUTWB_aptn_ft[47] = DMOUTWB[47];
assign DMOUTWB_aptn_ft[48] = DMOUTWB[48];
assign DMOUTWB_aptn_ft[49] = DMOUTWB[49];
assign DMOUTWB_aptn_ft[50] = DMOUTWB[50];
assign DMOUTWB_aptn_ft[51] = DMOUTWB[51];
assign DMOUTWB_aptn_ft[52] = DMOUTWB[52];
assign DMOUTWB_aptn_ft[53] = DMOUTWB[53];
assign DMOUTWB_aptn_ft[54] = DMOUTWB[54];
assign DMOUTWB_aptn_ft[55] = DMOUTWB[55];
assign DMOUTWB_aptn_ft[56] = DMOUTWB[56];
assign DMOUTWB_aptn_ft[57] = DMOUTWB[57];
assign DMOUTWB_aptn_ft[58] = DMOUTWB[58];
assign DMOUTWB_aptn_ft[59] = DMOUTWB[59];
assign DMOUTWB_aptn_ft[60] = DMOUTWB[60];
assign DMOUTWB_aptn_ft[61] = DMOUTWB[61];
assign DMOUTWB_aptn_ft[62] = DMOUTWB[62];
assign DMOUTWB_aptn_ft[63] = DMOUTWB[63];
assign WREX_aptn_ft[0] = WREX[0];
assign WREX_aptn_ft[1] = WREX[1];
assign WREX_aptn_ft[2] = WREX[2];
assign WREX_aptn_ft[3] = WREX[3];
assign WRITEDATAWB_aptn_ft[0] = WRITEDATAWB[0];
assign WRITEDATAWB_aptn_ft[1] = WRITEDATAWB[1];
assign WRITEDATAWB_aptn_ft[2] = WRITEDATAWB[2];
assign WRITEDATAWB_aptn_ft[3] = WRITEDATAWB[3];
assign WRITEDATAWB_aptn_ft[4] = WRITEDATAWB[4];
assign WRITEDATAWB_aptn_ft[5] = WRITEDATAWB[5];
assign WRITEDATAWB_aptn_ft[6] = WRITEDATAWB[6];
assign WRITEDATAWB_aptn_ft[7] = WRITEDATAWB[7];
assign WRITEDATAWB_aptn_ft[8] = WRITEDATAWB[8];
assign WRITEDATAWB_aptn_ft[9] = WRITEDATAWB[9];
assign WRITEDATAWB_aptn_ft[10] = WRITEDATAWB[10];
assign WRITEDATAWB_aptn_ft[11] = WRITEDATAWB[11];
assign WRITEDATAWB_aptn_ft[12] = WRITEDATAWB[12];
assign WRITEDATAWB_aptn_ft[13] = WRITEDATAWB[13];
assign WRITEDATAWB_aptn_ft[14] = WRITEDATAWB[14];
assign WRITEDATAWB_aptn_ft[15] = WRITEDATAWB[15];
assign WRITEDATAWB_aptn_ft[16] = WRITEDATAWB[16];
assign WRITEDATAWB_aptn_ft[17] = WRITEDATAWB[17];
assign WRITEDATAWB_aptn_ft[18] = WRITEDATAWB[18];
assign WRITEDATAWB_aptn_ft[19] = WRITEDATAWB[19];
assign WRITEDATAWB_aptn_ft[20] = WRITEDATAWB[20];
assign WRITEDATAWB_aptn_ft[21] = WRITEDATAWB[21];
assign WRITEDATAWB_aptn_ft[22] = WRITEDATAWB[22];
assign WRITEDATAWB_aptn_ft[23] = WRITEDATAWB[23];
assign WRITEDATAWB_aptn_ft[24] = WRITEDATAWB[24];
assign WRITEDATAWB_aptn_ft[25] = WRITEDATAWB[25];
assign WRITEDATAWB_aptn_ft[26] = WRITEDATAWB[26];
assign WRITEDATAWB_aptn_ft[27] = WRITEDATAWB[27];
assign WRITEDATAWB_aptn_ft[28] = WRITEDATAWB[28];
assign WRITEDATAWB_aptn_ft[29] = WRITEDATAWB[29];
assign WRITEDATAWB_aptn_ft[30] = WRITEDATAWB[30];
assign WRITEDATAWB_aptn_ft[31] = WRITEDATAWB[31];
assign WRITEDATAWB_aptn_ft[32] = WRITEDATAWB[32];
assign WRITEDATAWB_aptn_ft[33] = WRITEDATAWB[33];
assign WRITEDATAWB_aptn_ft[34] = WRITEDATAWB[34];
assign WRITEDATAWB_aptn_ft[35] = WRITEDATAWB[35];
assign WRITEDATAWB_aptn_ft[36] = WRITEDATAWB[36];
assign WRITEDATAWB_aptn_ft[37] = WRITEDATAWB[37];
assign WRITEDATAWB_aptn_ft[38] = WRITEDATAWB[38];
assign WRITEDATAWB_aptn_ft[39] = WRITEDATAWB[39];
assign WRITEDATAWB_aptn_ft[40] = WRITEDATAWB[40];
assign WRITEDATAWB_aptn_ft[41] = WRITEDATAWB[41];
assign WRITEDATAWB_aptn_ft[42] = WRITEDATAWB[42];
assign WRITEDATAWB_aptn_ft[43] = WRITEDATAWB[43];
assign WRITEDATAWB_aptn_ft[44] = WRITEDATAWB[44];
assign WRITEDATAWB_aptn_ft[45] = WRITEDATAWB[45];
assign WRITEDATAWB_aptn_ft[46] = WRITEDATAWB[46];
assign WRITEDATAWB_aptn_ft[47] = WRITEDATAWB[47];
assign WRITEDATAWB_aptn_ft[48] = WRITEDATAWB[48];
assign WRITEDATAWB_aptn_ft[49] = WRITEDATAWB[49];
assign WRITEDATAWB_aptn_ft[50] = WRITEDATAWB[50];
assign WRITEDATAWB_aptn_ft[51] = WRITEDATAWB[51];
assign WRITEDATAWB_aptn_ft[52] = WRITEDATAWB[52];
assign WRITEDATAWB_aptn_ft[53] = WRITEDATAWB[53];
assign WRITEDATAWB_aptn_ft[54] = WRITEDATAWB[54];
assign WRITEDATAWB_aptn_ft[55] = WRITEDATAWB[55];
assign WRITEDATAWB_aptn_ft[56] = WRITEDATAWB[56];
assign WRITEDATAWB_aptn_ft[57] = WRITEDATAWB[57];
assign WRITEDATAWB_aptn_ft[58] = WRITEDATAWB[58];
assign WRITEDATAWB_aptn_ft[59] = WRITEDATAWB[59];
assign WRITEDATAWB_aptn_ft[60] = WRITEDATAWB[60];
assign WRITEDATAWB_aptn_ft[61] = WRITEDATAWB[61];
assign WRITEDATAWB_aptn_ft[62] = WRITEDATAWB[62];
assign WRITEDATAWB_aptn_ft[63] = WRITEDATAWB[63];
assign WRMEM_aptn_ft_0[0] = WRMEM_aptn_ft[0];
assign WRMEM_aptn_ft_0[1] = WRMEM_aptn_ft[1];
assign WRMEM_aptn_ft_0[2] = WRMEM_aptn_ft[2];
assign WRMEM_aptn_ft_0[3] = WRMEM_aptn_ft[3];
assign WRMEM_aptn_ft_0[4] = WRMEM_aptn_ft[4];
assign WRWB_aptn_ft[0] = WRWB[0];
assign WRWB_aptn_ft[1] = WRWB[1];
assign WRWB_aptn_ft[2] = WRWB[2];
assign WRWB_aptn_ft[3] = WRWB[3];
assign WRWB_aptn_ft[4] = WRWB[4];
endmodule /* FB1_uA_dut */

(* haps_ip_type="system_memory" , DONT_TOUCH="TRUE" *)module haps_system_memory_32s_28s_32s_haps_system_memoryDini_156s_123s_122s_1s_Z2_FB1_uA (
  umr_clk,
  umr_reset,
  raddr_raw,
  wr_raw,
  rd_raw,
  enable_in,
  data_out
)
;
input umr_clk ;
input umr_reset ;
input [31:0] raddr_raw ;
input wr_raw ;
input rd_raw ;
input enable_in ;
output [31:0] data_out ;
wire umr_clk ;
wire umr_reset ;
wire wr_raw ;
wire rd_raw ;
wire enable_in ;
wire [0:0] pnr_addr_to_memory_wire;
wire [31:0] wr_data_to_memory_wire;
wire [27:0] wr_addr_to_memory_wire;
wire [1:0] \memory_core.state_rd ;
wire [31:0] \memory_core.memory_out ;
wire [27:1] \memory_core.addr_of_data_out ;
wire [27:0] \memory_core.rd_addr_to_memory ;
wire [31:0] \memory_core.data_out_wire ;
wire [31:0] \haps_system_memory_pnr_inst.xilinx_inst.usr_access_data ;
wire [1:0] memory_inst_memory_inst_0_0_DOUTPADOUTP;
wire [1:0] memory_inst_memory_inst_0_0_DOUTPBDOUTP;
wire [16:0] data_to_memory_outce;
wire [27:0] \memory_core.rd_addr_to_memory_qxu ;
wire [27:0] \memory_core.rd_addr_to_memory_i ;
wire [26:0] \memory_core.rd_addr_to_memory_cry ;
wire [27:0] \memory_core.rd_addr_to_memory_s ;
wire [27:0] \haps_system_memory_write_control_inst.addr_to_memory_out_qxu ;
wire [26:0] \haps_system_memory_write_control_inst.addr_to_memory_out_cry ;
wire [27:0] \haps_system_memory_write_control_inst.addr_to_memory_out_s ;
wire [7:7] \memory_core.data_out_wire_f0_i_o2_3 ;
wire [7:7] \memory_core.data_out_wire_f0_i_a3_0_0 ;
wire [7:7] \memory_core.data_out_wire_f0_i_a3_0_1 ;
wire [7:7] \memory_core.data_out_wire_f0_i_a3_0_2 ;
wire [2:2] addr_to_memory_out_cry_O;
wire [2:2] rd_addr_to_memory_cry_O;
wire [0:0] addr_of_data_out_cry_3_O;
wire [3:3] addr_of_data_out_s_27_CO;
wire umr_reset_sync ;
wire VCC ;
wire GND ;
wire i12_i ;
wire i11_i ;
wire wr_to_memory_wire ;
wire wr_to_memory ;
wire \memory_core.mem_en  ;
wire \haps_system_memory_write_control_inst.output_write  ;
wire \haps_system_memory_write_control_inst.first_body  ;
wire \haps_system_memory_pnr_inst.xilinx_inst.usr_access_cfgclk  ;
wire \haps_system_memory_pnr_inst.xilinx_inst.usr_access_datavalid  ;
wire N_60_i_0 ;
wire N_45_i_0 ;
wire N_43_i_0 ;
wire N_41_i_0 ;
wire N_25_i_0 ;
wire N_12_i_0 ;
wire N_27 ;
wire N_16 ;
wire N_337 ;
wire N_332 ;
wire N_329 ;
wire N_304 ;
wire N_301_mux ;
wire N_5_mux ;
wire N_5_mux_0 ;
wire N_5_mux_1 ;
wire N_5_mux_2 ;
wire N_5_mux_3 ;
wire N_5_mux_4 ;
wire N_5_mux_5 ;
wire N_5_mux_6 ;
wire N_5_mux_7 ;
wire N_5_mux_8 ;
wire N_5_mux_9 ;
wire N_5_mux_10 ;
wire N_5_mux_11 ;
wire N_5_mux_12 ;
wire N_5_mux_13 ;
wire N_5_mux_14 ;
wire N_5_mux_15 ;
wire N_5_mux_16 ;
wire N_5_mux_17 ;
wire N_5_mux_18 ;
wire N_5_mux_19 ;
wire N_5_mux_20 ;
wire N_5_mux_21 ;
wire N_5_mux_22 ;
wire N_5_mux_23 ;
wire N_5_mux_24 ;
wire N_5_mux_25 ;
wire N_5_mux_26 ;
wire N_5_mux_27 ;
wire N_5_mux_28 ;
wire N_5_mux_29 ;
wire N_5_mux_30 ;
wire \memory_core.addr_of_data_out_cry_0  ;
wire \memory_core.addr_of_data_out_cry_1  ;
wire \memory_core.addr_of_data_out_cry_2  ;
wire \memory_core.addr_of_data_out_cry_3  ;
wire \memory_core.addr_of_data_out_cry_4  ;
wire \memory_core.addr_of_data_out_cry_5  ;
wire \memory_core.addr_of_data_out_cry_6  ;
wire \memory_core.addr_of_data_out_cry_7  ;
wire \memory_core.addr_of_data_out_cry_8  ;
wire \memory_core.addr_of_data_out_cry_9  ;
wire \memory_core.addr_of_data_out_cry_10  ;
wire \memory_core.addr_of_data_out_cry_11  ;
wire \memory_core.addr_of_data_out_cry_12  ;
wire \memory_core.addr_of_data_out_cry_13  ;
wire \memory_core.addr_of_data_out_cry_14  ;
wire \memory_core.addr_of_data_out_cry_15  ;
wire \memory_core.addr_of_data_out_cry_16  ;
wire \memory_core.addr_of_data_out_cry_17  ;
wire \memory_core.addr_of_data_out_cry_18  ;
wire \memory_core.addr_of_data_out_cry_19  ;
wire \memory_core.addr_of_data_out_cry_20  ;
wire \memory_core.addr_of_data_out_cry_21  ;
wire \memory_core.addr_of_data_out_cry_22  ;
wire \memory_core.addr_of_data_out_cry_23  ;
wire \memory_core.addr_of_data_out_cry_24  ;
wire \memory_core.addr_of_data_out_cry_25  ;
wire \memory_core.addr_of_data_out_cry_26  ;
wire N_331_mux_i ;
wire N_274_i ;
wire i50_mux_i ;
wire i51_mux_i ;
wire i52_mux_i ;
wire i53_mux_i ;
wire i54_mux_i ;
wire i55_mux_i ;
wire i56_mux_i ;
wire i57_mux_i ;
wire i58_mux_i ;
wire i59_mux_i ;
wire i60_mux_i ;
wire i61_mux_i ;
wire i62_mux_i ;
wire i63_mux_i ;
wire i64_mux_i ;
wire i65_mux_i ;
wire i13_mux_i ;
wire i14_mux_i ;
wire i15_mux_i ;
wire i16_mux_i ;
wire i17_mux_i ;
wire i18_mux_i ;
wire i19_mux_i ;
wire i20_mux_i ;
wire i21_mux_i ;
wire i22_mux_i ;
wire i23_mux_i ;
wire i24_mux_i ;
wire i25_mux_i ;
wire i26_mux_i ;
wire i27_mux_i ;
wire i28_mux_i ;
wire i67_mux_i ;
wire N_85_i ;
wire N_84_i ;
wire N_83_i ;
wire N_82_i ;
wire N_81_i ;
wire N_4_i ;
wire N_6_i ;
wire N_8_i ;
wire N_167_i ;
wire \memory_core.rd_addr_to_memory_scalar  ;
wire umr_reset_sync_idup ;
wire \haps_system_memory_write_control_inst.m268_e_0  ;
wire \haps_system_memory_write_control_inst.m268_e_1  ;
wire \haps_system_memory_write_control_inst.m268_e_2  ;
wire \haps_system_memory_write_control_inst.first_body_0  ;
wire \haps_system_memory_write_control_inst.wr_to_memory_out  ;
wire \haps_system_memory_write_control_inst.addr_to_memory_out_cry_cy  ;
wire \memory_core.rd_addr_to_memory_cry_cy  ;
wire \haps_system_memory_write_control_inst.m248_0_e  ;
wire \haps_system_memory_write_control_inst.m287_0_e  ;
wire \haps_system_memory_write_control_inst.output_write_e_0_e  ;
wire NC0 ;
wire NC1 ;
wire NC2 ;
wire NC3 ;
wire NC4 ;
wire NC5 ;
wire NC6 ;
wire NC7 ;
wire NC8 ;
wire NC9 ;
wire NC10 ;
wire NC11 ;
wire NC12 ;
wire NC13 ;
wire NC14 ;
wire NC15 ;
wire NC16 ;
wire NC17 ;
wire NC18 ;
wire NC19 ;
wire NC20 ;
wire NC21 ;
wire NC22 ;
wire NC23 ;
wire NC24 ;
wire NC25 ;
wire NC26 ;
wire NC27 ;
wire NC28 ;
wire NC29 ;
wire NC30 ;
wire NC31 ;
wire NC32 ;
wire NC33 ;
wire NC34 ;
wire NC35 ;
wire NC36 ;
wire NC37 ;
wire NC38 ;
wire NC39 ;
wire NC40 ;
wire NC41 ;
wire NC42 ;
wire NC43 ;
wire NC44 ;
wire NC45 ;
wire NC46 ;
wire NC47 ;
wire NC48 ;
wire NC49 ;
wire NC50 ;
wire NC51 ;
wire NC52 ;
wire NC53 ;
wire NC54 ;
wire NC55 ;
wire NC56 ;
wire NC57 ;
wire NC58 ;
wire NC59 ;
wire \memory_core.mem_en_e_e_0  ;
  GND GND_cZ (
	.G(GND)
);
  VCC VCC_cZ (
	.P(VCC)
);
  FDR \memory_core.mem_en_Z  (
	.Q(\memory_core.mem_en ),
	.D(\memory_core.mem_en_e_e_0 ),
	.C(umr_clk),
	.R(umr_reset_sync)
);
  LUT5 \memory_core.mem_en_e_e_0_cZ  (
	.I0(enable_in),
	.I1(\memory_core.mem_en ),
	.I2(\memory_core.state_rd [0]),
	.I3(\memory_core.state_rd [1]),
	.I4(wr_raw),
	.O(\memory_core.mem_en_e_e_0 )
);
defparam \memory_core.mem_en_e_e_0_cZ .INIT=32'hEEAFCC0F;
// @221:473
  INV \memory_core.rd_addr_to_memory_206_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [0]),
	.O(\memory_core.rd_addr_to_memory_i [0])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_207_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [1]),
	.O(\memory_core.rd_addr_to_memory_i [1])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_208_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [2]),
	.O(\memory_core.rd_addr_to_memory_i [2])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_209_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [3]),
	.O(\memory_core.rd_addr_to_memory_i [3])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_210_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [4]),
	.O(\memory_core.rd_addr_to_memory_i [4])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_211_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [5]),
	.O(\memory_core.rd_addr_to_memory_i [5])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_212_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [6]),
	.O(\memory_core.rd_addr_to_memory_i [6])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_213_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [7]),
	.O(\memory_core.rd_addr_to_memory_i [7])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_214_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [8]),
	.O(\memory_core.rd_addr_to_memory_i [8])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_215_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [9]),
	.O(\memory_core.rd_addr_to_memory_i [9])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_216_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [10]),
	.O(\memory_core.rd_addr_to_memory_i [10])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_217_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [11]),
	.O(\memory_core.rd_addr_to_memory_i [11])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_218_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [12]),
	.O(\memory_core.rd_addr_to_memory_i [12])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_219_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [13]),
	.O(\memory_core.rd_addr_to_memory_i [13])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_220_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [14]),
	.O(\memory_core.rd_addr_to_memory_i [14])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_221_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [15]),
	.O(\memory_core.rd_addr_to_memory_i [15])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_222_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [16]),
	.O(\memory_core.rd_addr_to_memory_i [16])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_223_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [17]),
	.O(\memory_core.rd_addr_to_memory_i [17])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_224_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [18]),
	.O(\memory_core.rd_addr_to_memory_i [18])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_225_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [19]),
	.O(\memory_core.rd_addr_to_memory_i [19])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_226_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [20]),
	.O(\memory_core.rd_addr_to_memory_i [20])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_227_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [21]),
	.O(\memory_core.rd_addr_to_memory_i [21])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_228_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [22]),
	.O(\memory_core.rd_addr_to_memory_i [22])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_229_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [23]),
	.O(\memory_core.rd_addr_to_memory_i [23])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_230_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [24]),
	.O(\memory_core.rd_addr_to_memory_i [24])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_231_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [25]),
	.O(\memory_core.rd_addr_to_memory_i [25])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_232_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [26]),
	.O(\memory_core.rd_addr_to_memory_i [26])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_233_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [27]),
	.O(\memory_core.rd_addr_to_memory_i [27])
);
  INV \umr_reset_sync_idup.O  (
	.I(umr_reset_sync),
	.O(umr_reset_sync_idup)
);
// @221:236
  USR_ACCESSE2 \haps_system_memory_pnr_inst.xilinx_inst.usr_access_inst  (
	.CFGCLK(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_cfgclk ),
	.DATA(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [31:0]),
	.DATAVALID(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_datavalid )
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[0]  (
	.Q(wr_data_to_memory_wire[0]),
	.D(N_5_mux_30),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[0])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[1]  (
	.Q(wr_data_to_memory_wire[1]),
	.D(N_5_mux_29),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[0])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[2]  (
	.Q(wr_data_to_memory_wire[2]),
	.D(N_5_mux_28),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[0])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[3]  (
	.Q(wr_data_to_memory_wire[3]),
	.D(N_5_mux_27),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[0])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[4]  (
	.Q(wr_data_to_memory_wire[4]),
	.D(N_5_mux_26),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[0])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[5]  (
	.Q(wr_data_to_memory_wire[5]),
	.D(N_5_mux_25),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[0])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[6]  (
	.Q(wr_data_to_memory_wire[6]),
	.D(N_5_mux_24),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[0])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[7]  (
	.Q(wr_data_to_memory_wire[7]),
	.D(N_5_mux_23),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[0])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[8]  (
	.Q(wr_data_to_memory_wire[8]),
	.D(N_5_mux_22),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[0])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[9]  (
	.Q(wr_data_to_memory_wire[9]),
	.D(N_5_mux_21),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[0])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[10]  (
	.Q(wr_data_to_memory_wire[10]),
	.D(N_5_mux_20),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[0])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[11]  (
	.Q(wr_data_to_memory_wire[11]),
	.D(N_5_mux_19),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[0])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[12]  (
	.Q(wr_data_to_memory_wire[12]),
	.D(N_5_mux_18),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[0])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[13]  (
	.Q(wr_data_to_memory_wire[13]),
	.D(N_5_mux_17),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[0])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[14]  (
	.Q(wr_data_to_memory_wire[14]),
	.D(N_5_mux_16),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[0])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[15]  (
	.Q(wr_data_to_memory_wire[15]),
	.D(N_5_mux_15),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[0])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[16]  (
	.Q(wr_data_to_memory_wire[16]),
	.D(N_5_mux_14),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[16])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[17]  (
	.Q(wr_data_to_memory_wire[17]),
	.D(N_5_mux_13),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[16])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[18]  (
	.Q(wr_data_to_memory_wire[18]),
	.D(N_5_mux_12),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[16])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[19]  (
	.Q(wr_data_to_memory_wire[19]),
	.D(N_5_mux_11),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[16])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[20]  (
	.Q(wr_data_to_memory_wire[20]),
	.D(N_5_mux_10),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[16])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[21]  (
	.Q(wr_data_to_memory_wire[21]),
	.D(N_5_mux_9),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[16])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[22]  (
	.Q(wr_data_to_memory_wire[22]),
	.D(N_5_mux_8),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[16])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[23]  (
	.Q(wr_data_to_memory_wire[23]),
	.D(N_5_mux_7),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[16])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[24]  (
	.Q(wr_data_to_memory_wire[24]),
	.D(N_5_mux_6),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[16])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[25]  (
	.Q(wr_data_to_memory_wire[25]),
	.D(N_5_mux_5),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[16])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[26]  (
	.Q(wr_data_to_memory_wire[26]),
	.D(N_5_mux_4),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[16])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[27]  (
	.Q(wr_data_to_memory_wire[27]),
	.D(N_5_mux_3),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[16])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[28]  (
	.Q(wr_data_to_memory_wire[28]),
	.D(N_5_mux_2),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[16])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[29]  (
	.Q(wr_data_to_memory_wire[29]),
	.D(N_5_mux_1),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[16])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[30]  (
	.Q(wr_data_to_memory_wire[30]),
	.D(N_5_mux_0),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[16])
);
// @221:349
  FDRE \haps_system_memory_write_control_inst.data_to_memory_out_Z[31]  (
	.Q(wr_data_to_memory_wire[31]),
	.D(N_5_mux),
	.C(umr_clk),
	.R(umr_reset_sync),
	.CE(data_to_memory_outce[16])
);
// @221:427
  RAMB18E2 \memory_core.memory_inst_memory_inst_0_0  (
	.CASDOUTA({NC39, NC38, NC37, NC36, NC35, NC34, NC33, NC32, NC31, NC30, NC29, NC28, NC27, NC26, NC25, NC24}),
	.CASDOUTB({NC55, NC54, NC53, NC52, NC51, NC50, NC49, NC48, NC47, NC46, NC45, NC44, NC43, NC42, NC41, NC40}),
	.DOUTADOUT(\memory_core.memory_out [15:0]),
	.DOUTBDOUT(\memory_core.memory_out [31:16]),
	.CASDOUTPA({NC57, NC56}),
	.CASDOUTPB({NC59, NC58}),
	.DOUTPADOUTP(memory_inst_memory_inst_0_0_DOUTPADOUTP[1:0]),
	.DOUTPBDOUTP(memory_inst_memory_inst_0_0_DOUTPBDOUTP[1:0]),
	.ADDRENA(VCC),
	.ADDRENB(VCC),
	.CASDIMUXA(GND),
	.CASDIMUXB(GND),
	.CASDOMUXA(GND),
	.CASDOMUXB(GND),
	.CASOREGIMUXA(GND),
	.CASOREGIMUXB(GND),
	.CASDOMUXEN_A(GND),
	.CASDOMUXEN_B(GND),
	.CASOREGIMUXEN_A(GND),
	.CASOREGIMUXEN_B(GND),
	.CLKARDCLK(umr_clk),
	.CLKBWRCLK(umr_clk),
	.ENARDEN(i67_mux_i),
	.ENBWREN(VCC),
	.REGCEAREGCE(GND),
	.REGCEB(GND),
	.RSTRAMARSTRAM(GND),
	.RSTRAMB(GND),
	.RSTREGARSTREG(GND),
	.RSTREGB(GND),
	.SLEEP(GND),
	.ADDRARDADDR({GND, \memory_core.rd_addr_to_memory [7:0], VCC, VCC, VCC, VCC, VCC}),
	.ADDRBWRADDR({GND, N_41_i_0, N_81_i, N_82_i, N_83_i, N_84_i, N_43_i_0, N_85_i, N_45_i_0, VCC, VCC, VCC, VCC, VCC}),
	.CASDINA({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.CASDINB({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.DINADIN({i65_mux_i, i64_mux_i, i63_mux_i, i62_mux_i, i61_mux_i, i60_mux_i, i59_mux_i, i58_mux_i, i57_mux_i, i56_mux_i, i55_mux_i, i54_mux_i, i53_mux_i, i52_mux_i, i51_mux_i, i50_mux_i}),
	.DINBDIN({i28_mux_i, i27_mux_i, i26_mux_i, i25_mux_i, i24_mux_i, i23_mux_i, i22_mux_i, i21_mux_i, i20_mux_i, i19_mux_i, i18_mux_i, i17_mux_i, i16_mux_i, i15_mux_i, i14_mux_i, i13_mux_i}),
	.CASDINPA({GND, GND}),
	.CASDINPB({GND, GND}),
	.DINPADINP({GND, GND}),
	.DINPBDINP({GND, GND}),
	.WEA({GND, GND}),
	.WEBWE({wr_to_memory, wr_to_memory, wr_to_memory, wr_to_memory})
);
defparam \memory_core.memory_inst_memory_inst_0_0 .DOA_REG=0;
defparam \memory_core.memory_inst_memory_inst_0_0 .DOB_REG=0;
defparam \memory_core.memory_inst_memory_inst_0_0 .READ_WIDTH_A=36;
defparam \memory_core.memory_inst_memory_inst_0_0 .READ_WIDTH_B=18;
defparam \memory_core.memory_inst_memory_inst_0_0 .SRVAL_A=18'h00000;
defparam \memory_core.memory_inst_memory_inst_0_0 .SRVAL_B=18'h00000;
defparam \memory_core.memory_inst_memory_inst_0_0 .WRITE_MODE_A="READ_FIRST";
defparam \memory_core.memory_inst_memory_inst_0_0 .WRITE_MODE_B="READ_FIRST";
defparam \memory_core.memory_inst_memory_inst_0_0 .WRITE_WIDTH_A=18;
defparam \memory_core.memory_inst_memory_inst_0_0 .WRITE_WIDTH_B=36;
defparam \memory_core.memory_inst_memory_inst_0_0 .INIT_00=256'h5E0000000012000300000044ABCF000000050000000000191EA929AB0000009C;
defparam \memory_core.memory_inst_memory_inst_0_0 .INIT_01=256'h00000000800000010000007A000000210000007B0004000000380000FFFF0000;
defparam \memory_core.memory_inst_memory_inst_0_0 .INIT_03=256'h322D535032302E31522D323000000010754100004642315F0000000202040000;
defparam \memory_core.memory_inst_memory_inst_0_0 .INIT_04=256'h000000003629000032373A312032313A323032322020382028417072312D3120;
defparam \memory_core.memory_inst_memory_inst_0_0 .INIT_05=256'h32302E31522D3230000000100000000000000000000000000000000000000000;
defparam \memory_core.memory_inst_memory_inst_0_0 .INIT_06=256'h3629000032373A312032313A323032322020382028417072312D3120322D5350;
defparam \memory_core.memory_inst_memory_inst_0_0 .INIT_07=256'h4841505300000003000000000000000000000000000000000000000000000000;
defparam \memory_core.memory_inst_memory_inst_0_0 .INIT_08=256'hD000000000000000FFFF0000000000002D312D6500000001344600003130305F;
defparam \memory_core.memory_inst_memory_inst_0_0 .INIT_09=256'h003204B000150008F0000000003204B000140007F00000000000070800130006;
defparam \memory_core.memory_inst_memory_inst_0_0 .INIT_0A=256'h0022000BD0000000003204B00017000AF0000000003204B000160009F0000000;
defparam \memory_core.memory_inst_memory_inst_0_0 .INIT_0B=256'hF0000000003204B0003D0003F0000000003204B0003C0002F000000000000708;
defparam \memory_core.memory_inst_memory_inst_0_0 .INIT_0C=256'h00000708004100009000000000000708003F0005D0000000003204B0003E0004;
defparam \memory_core.memory_inst_memory_inst_0_0 .INIT_0D=256'h0046000090000000000004B00045000090000000000007080042000CD0000000;
defparam \memory_core.memory_inst_memory_inst_0_0 .INIT_0E=256'hF0000000003204B000530001F0000000000004B00047000090000000000004B0;
defparam \memory_core.memory_inst_memory_inst_0_0 .INIT_0F=256'h000000000000000000000000000000000000002000000000003204B000580001;
defparam \memory_core.memory_inst_memory_inst_0_0 .RSTREG_PRIORITY_A="REGCE";
defparam \memory_core.memory_inst_memory_inst_0_0 .RSTREG_PRIORITY_B="REGCE";
defparam \memory_core.memory_inst_memory_inst_0_0 .IS_CLKARDCLK_INVERTED=1'b0;
defparam \memory_core.memory_inst_memory_inst_0_0 .IS_CLKBWRCLK_INVERTED=1'b0;
// @221:473
  LUT6 \memory_core.N_167_i  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [2]),
	.I5(N_27),
	.O(N_167_i)
);
defparam \memory_core.N_167_i .INIT=64'hFFFF000100000000;
// @221:473
  LUT6 \memory_core.N_8_i  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [3]),
	.I5(N_27),
	.O(N_8_i)
);
defparam \memory_core.N_8_i .INIT=64'hFFFF000100000000;
// @221:473
  LUT6 \memory_core.N_6_i  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [4]),
	.I5(N_27),
	.O(N_6_i)
);
defparam \memory_core.N_6_i .INIT=64'hFFFF000100000000;
// @221:473
  LUT6 \memory_core.N_4_i  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [7]),
	.I5(N_27),
	.O(N_4_i)
);
defparam \memory_core.N_4_i .INIT=64'hFFFF000100000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[31]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [31]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [31])
);
defparam \memory_core.data_out_wire_cZ[31] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[30]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [30]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [30])
);
defparam \memory_core.data_out_wire_cZ[30] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[29]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [29]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [29])
);
defparam \memory_core.data_out_wire_cZ[29] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[28]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [28]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [28])
);
defparam \memory_core.data_out_wire_cZ[28] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[27]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [27]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [27])
);
defparam \memory_core.data_out_wire_cZ[27] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[26]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [26]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [26])
);
defparam \memory_core.data_out_wire_cZ[26] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[25]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [25]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [25])
);
defparam \memory_core.data_out_wire_cZ[25] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[24]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [24]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [24])
);
defparam \memory_core.data_out_wire_cZ[24] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[23]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [23]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [23])
);
defparam \memory_core.data_out_wire_cZ[23] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[22]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [22]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [22])
);
defparam \memory_core.data_out_wire_cZ[22] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[21]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [21]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [21])
);
defparam \memory_core.data_out_wire_cZ[21] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[20]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [20]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [20])
);
defparam \memory_core.data_out_wire_cZ[20] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[19]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [19]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [19])
);
defparam \memory_core.data_out_wire_cZ[19] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[18]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [18]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [18])
);
defparam \memory_core.data_out_wire_cZ[18] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[17]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [17]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [17])
);
defparam \memory_core.data_out_wire_cZ[17] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[16]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [16]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [16])
);
defparam \memory_core.data_out_wire_cZ[16] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[15]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [15]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [15])
);
defparam \memory_core.data_out_wire_cZ[15] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[14]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [14]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [14])
);
defparam \memory_core.data_out_wire_cZ[14] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[13]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [13]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [13])
);
defparam \memory_core.data_out_wire_cZ[13] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[12]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [12]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [12])
);
defparam \memory_core.data_out_wire_cZ[12] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[11]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [11]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [11])
);
defparam \memory_core.data_out_wire_cZ[11] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[10]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [10]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [10])
);
defparam \memory_core.data_out_wire_cZ[10] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[9]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [9]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [9])
);
defparam \memory_core.data_out_wire_cZ[9] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[8]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [8]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [8])
);
defparam \memory_core.data_out_wire_cZ[8] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[6]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [6]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [6])
);
defparam \memory_core.data_out_wire_cZ[6] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[5]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [5]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [5])
);
defparam \memory_core.data_out_wire_cZ[5] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[1]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [1]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [1])
);
defparam \memory_core.data_out_wire_cZ[1] .INIT=64'hFFFE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[0]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [5]),
	.I2(\memory_core.addr_of_data_out [7]),
	.I3(\memory_core.data_out_wire_f0_i_o2_3 [7]),
	.I4(\memory_core.memory_out [0]),
	.I5(N_27),
	.O(\memory_core.data_out_wire [0])
);
defparam \memory_core.data_out_wire_cZ[0] .INIT=64'hFFFE000000000000;
  LUT6 \haps_system_memory_write_control_inst.m268  (
	.I0(enable_in),
	.I1(wr_addr_to_memory_wire[6]),
	.I2(pnr_addr_to_memory_wire[0]),
	.I3(N_329),
	.I4(N_332),
	.I5(N_337),
	.O(wr_to_memory)
);
defparam \haps_system_memory_write_control_inst.m268 .INIT=64'hAF8F2F0F0F0F0F0F;
// @221:349
  LUT6 \haps_system_memory_write_control_inst.N_331_mux_i  (
	.I0(\haps_system_memory_write_control_inst.first_body ),
	.I1(\haps_system_memory_write_control_inst.output_write ),
	.I2(umr_reset_sync),
	.I3(raddr_raw[27]),
	.I4(raddr_raw[26]),
	.I5(N_301_mux),
	.O(N_331_mux_i)
);
defparam \haps_system_memory_write_control_inst.N_331_mux_i .INIT=64'hF1F0FFF0F0F0F0F0;
// @221:459
  LUT6 \memory_core.data_out_wire_f0_i_a3_0[7]  (
	.I0(\memory_core.addr_of_data_out [25]),
	.I1(\memory_core.addr_of_data_out [26]),
	.I2(N_16),
	.I3(\memory_core.data_out_wire_f0_i_a3_0_0 [7]),
	.I4(\memory_core.data_out_wire_f0_i_a3_0_1 [7]),
	.I5(\memory_core.data_out_wire_f0_i_a3_0_2 [7]),
	.O(N_27)
);
defparam \memory_core.data_out_wire_f0_i_a3_0[7] .INIT=64'h1000000000000000;
  LUT6 \haps_system_memory_write_control_inst.m268_e  (
	.I0(wr_addr_to_memory_wire[14]),
	.I1(wr_addr_to_memory_wire[17]),
	.I2(wr_addr_to_memory_wire[16]),
	.I3(\haps_system_memory_write_control_inst.m268_e_2 ),
	.I4(\haps_system_memory_write_control_inst.m268_e_1 ),
	.I5(\haps_system_memory_write_control_inst.m268_e_0 ),
	.O(N_337)
);
defparam \haps_system_memory_write_control_inst.m268_e .INIT=64'h0100000000000000;
  LUT6 m1_e_31 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[0]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_30)
);
defparam m1_e_31.INIT=64'h0008000000000000;
  LUT6 m1_e_30 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[1]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_29)
);
defparam m1_e_30.INIT=64'h0008000000000000;
  LUT6 m1_e_29 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[2]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_28)
);
defparam m1_e_29.INIT=64'h0008000000000000;
  LUT6 m1_e_28 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[3]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_27)
);
defparam m1_e_28.INIT=64'h0008000000000000;
  LUT6 m1_e_27 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[4]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_26)
);
defparam m1_e_27.INIT=64'h0008000000000000;
  LUT6 m1_e_26 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[5]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_25)
);
defparam m1_e_26.INIT=64'h0008000000000000;
  LUT6 m1_e_25 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[6]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_24)
);
defparam m1_e_25.INIT=64'h0008000000000000;
  LUT6 m1_e_24 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[7]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_23)
);
defparam m1_e_24.INIT=64'h0008000000000000;
  LUT6 m1_e_23 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[8]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_22)
);
defparam m1_e_23.INIT=64'h0008000000000000;
  LUT6 m1_e_22 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[9]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_21)
);
defparam m1_e_22.INIT=64'h0008000000000000;
  LUT6 m1_e_21 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[10]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_20)
);
defparam m1_e_21.INIT=64'h0008000000000000;
  LUT6 m1_e_20 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[11]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_19)
);
defparam m1_e_20.INIT=64'h0008000000000000;
  LUT6 m1_e_19 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[12]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_18)
);
defparam m1_e_19.INIT=64'h0008000000000000;
  LUT6 m1_e_18 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[13]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_17)
);
defparam m1_e_18.INIT=64'h0008000000000000;
  LUT6 m1_e_17 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[14]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_16)
);
defparam m1_e_17.INIT=64'h0008000000000000;
  LUT6 m1_e_16 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[15]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_15)
);
defparam m1_e_16.INIT=64'h0008000000000000;
// @221:349
  LUT6 \haps_system_memory_write_control_inst.wr_to_memory_out_e  (
	.I0(wr_to_memory_wire),
	.I1(\haps_system_memory_write_control_inst.output_write ),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[26]),
	.I5(N_60_i_0),
	.O(\haps_system_memory_write_control_inst.wr_to_memory_out )
);
defparam \haps_system_memory_write_control_inst.wr_to_memory_out_e .INIT=64'h000C0000AAAAAAAA;
// @221:459
  LUT6 \memory_core.data_out_wire_f0_i_o3_1[7]  (
	.I0(\memory_core.addr_of_data_out [2]),
	.I1(\memory_core.addr_of_data_out [3]),
	.I2(\memory_core.addr_of_data_out [4]),
	.I3(\memory_core.addr_of_data_out [6]),
	.I4(\memory_core.addr_of_data_out [5]),
	.I5(\memory_core.addr_of_data_out [7]),
	.O(N_16)
);
defparam \memory_core.data_out_wire_f0_i_o3_1[7] .INIT=64'h0000007FFFFFFFFF;
  LUT6 m1_e_0 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[15]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux)
);
defparam m1_e_0.INIT=64'h0004000000000000;
  LUT6 m1_e_1 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[14]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_0)
);
defparam m1_e_1.INIT=64'h0004000000000000;
  LUT6 m1_e_2 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[13]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_1)
);
defparam m1_e_2.INIT=64'h0004000000000000;
  LUT6 m1_e_3 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[12]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_2)
);
defparam m1_e_3.INIT=64'h0004000000000000;
  LUT6 m1_e_4 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[11]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_3)
);
defparam m1_e_4.INIT=64'h0004000000000000;
  LUT6 m1_e_5 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[10]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_4)
);
defparam m1_e_5.INIT=64'h0004000000000000;
  LUT6 m1_e_6 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[9]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_5)
);
defparam m1_e_6.INIT=64'h0004000000000000;
  LUT6 m1_e_7 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[8]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_6)
);
defparam m1_e_7.INIT=64'h0004000000000000;
  LUT6 m1_e_8 (
	.I0(raddr_raw[7]),
	.I1(raddr_raw[24]),
	.I2(raddr_raw[25]),
	.I3(raddr_raw[27]),
	.I4(raddr_raw[26]),
	.I5(\haps_system_memory_write_control_inst.output_write ),
	.O(N_5_mux_7)
);
defparam m1_e_8.INIT=64'h0000000002000000;
  LUT6 m1_e_9 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[6]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_8)
);
defparam m1_e_9.INIT=64'h0004000000000000;
  LUT6 m1_e_10 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[5]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_9)
);
defparam m1_e_10.INIT=64'h0004000000000000;
  LUT6 m1_e_11 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[4]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_10)
);
defparam m1_e_11.INIT=64'h0004000000000000;
  LUT6 m1_e_12 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[3]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_11)
);
defparam m1_e_12.INIT=64'h0004000000000000;
  LUT6 m1_e_13 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[2]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_12)
);
defparam m1_e_13.INIT=64'h0004000000000000;
  LUT6 m1_e_14 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[1]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_13)
);
defparam m1_e_14.INIT=64'h0004000000000000;
  LUT6 m1_e_15 (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[0]),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.I4(raddr_raw[27]),
	.I5(raddr_raw[26]),
	.O(N_5_mux_14)
);
defparam m1_e_15.INIT=64'h0004000000000000;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i22_mux_i  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [25]),
	.I1(wr_data_to_memory_wire[25]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i22_mux_i)
);
defparam \haps_system_memory_write_control_inst.i22_mux_i .INIT=8'hCA;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i67_mux_i  (
	.I0(\memory_core.mem_en ),
	.I1(\memory_core.state_rd [1]),
	.I2(rd_raw),
	.O(i67_mux_i)
);
defparam \haps_system_memory_write_control_inst.i67_mux_i .INIT=8'hE2;
  LUT5 \haps_system_memory_write_control_inst.m254_e  (
	.I0(i12_i),
	.I1(wr_addr_to_memory_wire[7]),
	.I2(wr_addr_to_memory_wire[5]),
	.I3(i11_i),
	.I4(wr_addr_to_memory_wire[2]),
	.O(N_329)
);
defparam \haps_system_memory_write_control_inst.m254_e .INIT=32'h040C0C0C;
  LUT6 \haps_system_memory_write_control_inst.m261_e  (
	.I0(wr_addr_to_memory_wire[5]),
	.I1(i11_i),
	.I2(wr_addr_to_memory_wire[7]),
	.I3(wr_addr_to_memory_wire[2]),
	.I4(i12_i),
	.I5(N_304),
	.O(N_332)
);
defparam \haps_system_memory_write_control_inst.m261_e .INIT=64'h0808000008000000;
  LUT6 \haps_system_memory_write_control_inst.m268_e_0_cZ  (
	.I0(wr_addr_to_memory_wire[9]),
	.I1(wr_addr_to_memory_wire[10]),
	.I2(wr_addr_to_memory_wire[26]),
	.I3(wr_addr_to_memory_wire[15]),
	.I4(wr_addr_to_memory_wire[11]),
	.I5(wr_to_memory_wire),
	.O(\haps_system_memory_write_control_inst.m268_e_0 )
);
defparam \haps_system_memory_write_control_inst.m268_e_0_cZ .INIT=64'h0000000100000000;
  LUT6 \haps_system_memory_write_control_inst.m268_e_1_cZ  (
	.I0(wr_addr_to_memory_wire[25]),
	.I1(wr_addr_to_memory_wire[8]),
	.I2(wr_addr_to_memory_wire[27]),
	.I3(wr_addr_to_memory_wire[24]),
	.I4(wr_addr_to_memory_wire[12]),
	.I5(wr_addr_to_memory_wire[13]),
	.O(\haps_system_memory_write_control_inst.m268_e_1 )
);
defparam \haps_system_memory_write_control_inst.m268_e_1_cZ .INIT=64'h0000000000000001;
  LUT6 \haps_system_memory_write_control_inst.m268_e_2_cZ  (
	.I0(wr_addr_to_memory_wire[18]),
	.I1(wr_addr_to_memory_wire[21]),
	.I2(wr_addr_to_memory_wire[20]),
	.I3(wr_addr_to_memory_wire[22]),
	.I4(wr_addr_to_memory_wire[23]),
	.I5(wr_addr_to_memory_wire[19]),
	.O(\haps_system_memory_write_control_inst.m268_e_2 )
);
defparam \haps_system_memory_write_control_inst.m268_e_2_cZ .INIT=64'h0000000000000001;
// @221:459
  LUT5 \memory_core.data_out_wire_f0_i_o2_3_cZ[7]  (
	.I0(\memory_core.rd_addr_to_memory [0]),
	.I1(\memory_core.addr_of_data_out [1]),
	.I2(\memory_core.addr_of_data_out [2]),
	.I3(\memory_core.addr_of_data_out [3]),
	.I4(\memory_core.addr_of_data_out [4]),
	.O(\memory_core.data_out_wire_f0_i_o2_3 [7])
);
defparam \memory_core.data_out_wire_f0_i_o2_3_cZ[7] .INIT=32'hFFFFFFFD;
// @221:459
  LUT6 \memory_core.data_out_wire_f0_i_a3_0_0_cZ[7]  (
	.I0(\memory_core.addr_of_data_out [8]),
	.I1(\memory_core.addr_of_data_out [9]),
	.I2(\memory_core.addr_of_data_out [10]),
	.I3(\memory_core.addr_of_data_out [11]),
	.I4(\memory_core.addr_of_data_out [12]),
	.I5(\memory_core.addr_of_data_out [13]),
	.O(\memory_core.data_out_wire_f0_i_a3_0_0 [7])
);
defparam \memory_core.data_out_wire_f0_i_a3_0_0_cZ[7] .INIT=64'h0000000000000001;
// @221:459
  LUT6 \memory_core.data_out_wire_f0_i_a3_0_1_cZ[7]  (
	.I0(\memory_core.addr_of_data_out [14]),
	.I1(\memory_core.addr_of_data_out [16]),
	.I2(\memory_core.addr_of_data_out [15]),
	.I3(\memory_core.addr_of_data_out [17]),
	.I4(\memory_core.addr_of_data_out [18]),
	.I5(\memory_core.addr_of_data_out [19]),
	.O(\memory_core.data_out_wire_f0_i_a3_0_1 [7])
);
defparam \memory_core.data_out_wire_f0_i_a3_0_1_cZ[7] .INIT=64'h0000000000000001;
// @221:459
  LUT6 \memory_core.data_out_wire_f0_i_a3_0_2_cZ[7]  (
	.I0(\memory_core.addr_of_data_out [20]),
	.I1(\memory_core.addr_of_data_out [22]),
	.I2(\memory_core.addr_of_data_out [21]),
	.I3(\memory_core.addr_of_data_out [23]),
	.I4(\memory_core.addr_of_data_out [24]),
	.I5(\memory_core.addr_of_data_out [27]),
	.O(\memory_core.data_out_wire_f0_i_a3_0_2 [7])
);
defparam \memory_core.data_out_wire_f0_i_a3_0_2_cZ[7] .INIT=64'h0000000000000001;
  LUT2 \haps_system_memory_write_control_inst.m256_e  (
	.I0(wr_addr_to_memory_wire[0]),
	.I1(wr_addr_to_memory_wire[1]),
	.O(N_304)
);
defparam \haps_system_memory_write_control_inst.m256_e .INIT=4'h8;
  LUT2 \haps_system_memory_write_control_inst.m1  (
	.I0(enable_in),
	.I1(wr_raw),
	.O(N_60_i_0)
);
defparam \haps_system_memory_write_control_inst.m1 .INIT=4'h8;
// @221:349
  LUT6 \haps_system_memory_write_control_inst.data_to_memory_outce[0]  (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[24]),
	.I2(raddr_raw[25]),
	.I3(raddr_raw[27]),
	.I4(raddr_raw[26]),
	.I5(N_60_i_0),
	.O(data_to_memory_outce[0])
);
defparam \haps_system_memory_write_control_inst.data_to_memory_outce[0] .INIT=64'h0202030000000000;
// @221:349
  LUT6 \haps_system_memory_write_control_inst.data_to_memory_outce[16]  (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(raddr_raw[24]),
	.I2(raddr_raw[25]),
	.I3(raddr_raw[27]),
	.I4(raddr_raw[26]),
	.I5(N_60_i_0),
	.O(data_to_memory_outce[16])
);
defparam \haps_system_memory_write_control_inst.data_to_memory_outce[16] .INIT=64'h0100030000000000;
  LUT6 \haps_system_memory_write_control_inst.first_body_e  (
	.I0(\haps_system_memory_write_control_inst.first_body ),
	.I1(raddr_raw[24]),
	.I2(raddr_raw[25]),
	.I3(raddr_raw[27]),
	.I4(raddr_raw[26]),
	.I5(N_60_i_0),
	.O(\haps_system_memory_write_control_inst.first_body_0 )
);
defparam \haps_system_memory_write_control_inst.first_body_e .INIT=64'hA8AAABAAAAAAAAAA;
// @221:349
  LUT3 \haps_system_memory_write_control_inst.addr_to_memory_out_261_m1  (
	.I0(wr_addr_to_memory_wire[27]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [27])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_261_m1 .INIT=8'h20;
  LUT4 \haps_system_memory_write_control_inst.m5  (
	.I0(wr_raw),
	.I1(enable_in),
	.I2(raddr_raw[24]),
	.I3(raddr_raw[25]),
	.O(N_301_mux)
);
defparam \haps_system_memory_write_control_inst.m5 .INIT=16'h0008;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_224_b0  (
	.I0(\memory_core.rd_addr_to_memory [18]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[18]),
	.I3(enable_in),
	.I4(wr_raw),
	.O(\memory_core.rd_addr_to_memory_qxu [18])
);
defparam \memory_core.rd_addr_to_memory_224_b0 .INIT=32'h30222222;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_223_b0  (
	.I0(\memory_core.rd_addr_to_memory [17]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[17]),
	.I3(enable_in),
	.I4(wr_raw),
	.O(\memory_core.rd_addr_to_memory_qxu [17])
);
defparam \memory_core.rd_addr_to_memory_223_b0 .INIT=32'h30222222;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_225_b0  (
	.I0(\memory_core.rd_addr_to_memory [19]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[19]),
	.I3(enable_in),
	.I4(wr_raw),
	.O(\memory_core.rd_addr_to_memory_qxu [19])
);
defparam \memory_core.rd_addr_to_memory_225_b0 .INIT=32'h30222222;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_221_b0  (
	.I0(\memory_core.rd_addr_to_memory [15]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[15]),
	.I3(enable_in),
	.I4(wr_raw),
	.O(\memory_core.rd_addr_to_memory_qxu [15])
);
defparam \memory_core.rd_addr_to_memory_221_b0 .INIT=32'h30222222;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_226_b0  (
	.I0(\memory_core.rd_addr_to_memory [20]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[20]),
	.I3(wr_raw),
	.I4(enable_in),
	.O(\memory_core.rd_addr_to_memory_qxu [20])
);
defparam \memory_core.rd_addr_to_memory_226_b0 .INIT=32'h30222222;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_222_b0  (
	.I0(\memory_core.rd_addr_to_memory [16]),
	.I1(raddr_raw[16]),
	.I2(enable_in),
	.I3(wr_raw),
	.I4(umr_reset_sync),
	.O(\memory_core.rd_addr_to_memory_qxu [16])
);
defparam \memory_core.rd_addr_to_memory_222_b0 .INIT=32'h0000CAAA;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_219_b0  (
	.I0(\memory_core.rd_addr_to_memory [13]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[13]),
	.I3(enable_in),
	.I4(wr_raw),
	.O(\memory_core.rd_addr_to_memory_qxu [13])
);
defparam \memory_core.rd_addr_to_memory_219_b0 .INIT=32'h30222222;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_218_b0  (
	.I0(\memory_core.rd_addr_to_memory [12]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[12]),
	.I3(enable_in),
	.I4(wr_raw),
	.O(\memory_core.rd_addr_to_memory_qxu [12])
);
defparam \memory_core.rd_addr_to_memory_218_b0 .INIT=32'h30222222;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_216_b0  (
	.I0(\memory_core.rd_addr_to_memory [10]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[10]),
	.I3(enable_in),
	.I4(wr_raw),
	.O(\memory_core.rd_addr_to_memory_qxu [10])
);
defparam \memory_core.rd_addr_to_memory_216_b0 .INIT=32'h30222222;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_213_b0  (
	.I0(\memory_core.rd_addr_to_memory [7]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[7]),
	.I3(enable_in),
	.I4(wr_raw),
	.O(\memory_core.rd_addr_to_memory_qxu [7])
);
defparam \memory_core.rd_addr_to_memory_213_b0 .INIT=32'h30222222;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_209_b0  (
	.I0(\memory_core.rd_addr_to_memory [3]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[3]),
	.I3(enable_in),
	.I4(wr_raw),
	.O(\memory_core.rd_addr_to_memory_qxu [3])
);
defparam \memory_core.rd_addr_to_memory_209_b0 .INIT=32'h30222222;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_208_b0  (
	.I0(\memory_core.rd_addr_to_memory [2]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[2]),
	.I3(enable_in),
	.I4(wr_raw),
	.O(\memory_core.rd_addr_to_memory_qxu [2])
);
defparam \memory_core.rd_addr_to_memory_208_b0 .INIT=32'h30222222;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_207_b0  (
	.I0(\memory_core.rd_addr_to_memory [1]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[1]),
	.I3(enable_in),
	.I4(wr_raw),
	.O(\memory_core.rd_addr_to_memory_qxu [1])
);
defparam \memory_core.rd_addr_to_memory_207_b0 .INIT=32'h30222222;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_206_b0  (
	.I0(\memory_core.rd_addr_to_memory [0]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[0]),
	.I3(enable_in),
	.I4(wr_raw),
	.O(\memory_core.rd_addr_to_memory_qxu [0])
);
defparam \memory_core.rd_addr_to_memory_206_b0 .INIT=32'h30222222;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_232_b0  (
	.I0(\memory_core.rd_addr_to_memory [26]),
	.I1(enable_in),
	.I2(wr_raw),
	.I3(raddr_raw[26]),
	.I4(umr_reset_sync),
	.O(\memory_core.rd_addr_to_memory_qxu [26])
);
defparam \memory_core.rd_addr_to_memory_232_b0 .INIT=32'h0000EA2A;
  LUT6 \haps_system_memory_write_control_inst.m289  (
	.I0(\memory_core.state_rd [0]),
	.I1(\memory_core.state_rd [1]),
	.I2(rd_raw),
	.I3(enable_in),
	.I4(wr_raw),
	.I5(umr_reset_sync),
	.O(N_12_i_0)
);
defparam \haps_system_memory_write_control_inst.m289 .INIT=64'h0000000000E2E2E2;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_212_b0  (
	.I0(\memory_core.rd_addr_to_memory [6]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[6]),
	.I3(enable_in),
	.I4(wr_raw),
	.O(\memory_core.rd_addr_to_memory_qxu [6])
);
defparam \memory_core.rd_addr_to_memory_212_b0 .INIT=32'h30222222;
// @221:473
  LUT5 \haps_system_memory_write_control_inst.N_274_i  (
	.I0(\memory_core.state_rd [1]),
	.I1(umr_reset_sync),
	.I2(rd_raw),
	.I3(enable_in),
	.I4(wr_raw),
	.O(N_274_i)
);
defparam \haps_system_memory_write_control_inst.N_274_i .INIT=32'hFFFDFDFD;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_233_b0  (
	.I0(\memory_core.rd_addr_to_memory [27]),
	.I1(umr_reset_sync),
	.I2(enable_in),
	.I3(raddr_raw[27]),
	.I4(wr_raw),
	.O(\memory_core.rd_addr_to_memory_qxu [27])
);
defparam \memory_core.rd_addr_to_memory_233_b0 .INIT=32'h32022222;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_220_b0  (
	.I0(\memory_core.rd_addr_to_memory [14]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[14]),
	.I3(enable_in),
	.I4(wr_raw),
	.O(\memory_core.rd_addr_to_memory_qxu [14])
);
defparam \memory_core.rd_addr_to_memory_220_b0 .INIT=32'h30222222;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_231_b0  (
	.I0(\memory_core.rd_addr_to_memory [25]),
	.I1(umr_reset_sync),
	.I2(enable_in),
	.I3(raddr_raw[25]),
	.I4(wr_raw),
	.O(\memory_core.rd_addr_to_memory_qxu [25])
);
defparam \memory_core.rd_addr_to_memory_231_b0 .INIT=32'h32022222;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_229_b0  (
	.I0(\memory_core.rd_addr_to_memory [23]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[23]),
	.I3(enable_in),
	.I4(wr_raw),
	.O(\memory_core.rd_addr_to_memory_qxu [23])
);
defparam \memory_core.rd_addr_to_memory_229_b0 .INIT=32'h30222222;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_228_b0  (
	.I0(\memory_core.rd_addr_to_memory [22]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[22]),
	.I3(enable_in),
	.I4(wr_raw),
	.O(\memory_core.rd_addr_to_memory_qxu [22])
);
defparam \memory_core.rd_addr_to_memory_228_b0 .INIT=32'h30222222;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_215_b0  (
	.I0(\memory_core.rd_addr_to_memory [9]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[9]),
	.I3(wr_raw),
	.I4(enable_in),
	.O(\memory_core.rd_addr_to_memory_qxu [9])
);
defparam \memory_core.rd_addr_to_memory_215_b0 .INIT=32'h30222222;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_214_b0  (
	.I0(\memory_core.rd_addr_to_memory [8]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[8]),
	.I3(enable_in),
	.I4(wr_raw),
	.O(\memory_core.rd_addr_to_memory_qxu [8])
);
defparam \memory_core.rd_addr_to_memory_214_b0 .INIT=32'h30222222;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_211_b0  (
	.I0(\memory_core.rd_addr_to_memory [5]),
	.I1(raddr_raw[5]),
	.I2(enable_in),
	.I3(wr_raw),
	.I4(umr_reset_sync),
	.O(\memory_core.rd_addr_to_memory_qxu [5])
);
defparam \memory_core.rd_addr_to_memory_211_b0 .INIT=32'h0000CAAA;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_210_b0  (
	.I0(\memory_core.rd_addr_to_memory [4]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[4]),
	.I3(enable_in),
	.I4(wr_raw),
	.O(\memory_core.rd_addr_to_memory_qxu [4])
);
defparam \memory_core.rd_addr_to_memory_210_b0 .INIT=32'h30222222;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_217_b0  (
	.I0(\memory_core.rd_addr_to_memory [11]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[11]),
	.I3(enable_in),
	.I4(wr_raw),
	.O(\memory_core.rd_addr_to_memory_qxu [11])
);
defparam \memory_core.rd_addr_to_memory_217_b0 .INIT=32'h30222222;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_230_b0  (
	.I0(\memory_core.rd_addr_to_memory [24]),
	.I1(umr_reset_sync),
	.I2(enable_in),
	.I3(raddr_raw[24]),
	.I4(wr_raw),
	.O(\memory_core.rd_addr_to_memory_qxu [24])
);
defparam \memory_core.rd_addr_to_memory_230_b0 .INIT=32'h32022222;
  FDR \haps_system_memory_write_control_inst.first_body_Z  (
	.Q(\haps_system_memory_write_control_inst.first_body ),
	.D(\haps_system_memory_write_control_inst.first_body_0 ),
	.C(umr_clk),
	.R(umr_reset_sync)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[27]  (
	.Q(wr_addr_to_memory_wire[27]),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [27]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[26]  (
	.Q(wr_addr_to_memory_wire[26]),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [26]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[25]  (
	.Q(wr_addr_to_memory_wire[25]),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [25]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[24]  (
	.Q(wr_addr_to_memory_wire[24]),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [24]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[23]  (
	.Q(wr_addr_to_memory_wire[23]),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [23]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[22]  (
	.Q(wr_addr_to_memory_wire[22]),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [22]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[21]  (
	.Q(wr_addr_to_memory_wire[21]),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [21]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[20]  (
	.Q(wr_addr_to_memory_wire[20]),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [20]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[19]  (
	.Q(wr_addr_to_memory_wire[19]),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [19]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[18]  (
	.Q(wr_addr_to_memory_wire[18]),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [18]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[17]  (
	.Q(wr_addr_to_memory_wire[17]),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [17]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[16]  (
	.Q(wr_addr_to_memory_wire[16]),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [16]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[15]  (
	.Q(wr_addr_to_memory_wire[15]),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [15]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[14]  (
	.Q(wr_addr_to_memory_wire[14]),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [14]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[13]  (
	.Q(wr_addr_to_memory_wire[13]),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [13]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[12]  (
	.Q(wr_addr_to_memory_wire[12]),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [12]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[11]  (
	.Q(wr_addr_to_memory_wire[11]),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [11]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[10]  (
	.Q(wr_addr_to_memory_wire[10]),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [10]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[9]  (
	.Q(wr_addr_to_memory_wire[9]),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [9]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[8]  (
	.Q(wr_addr_to_memory_wire[8]),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [8]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[7]  (
	.Q(wr_addr_to_memory_wire[7]),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [7]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[6]  (
	.Q(wr_addr_to_memory_wire[6]),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [6]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[5]  (
	.Q(wr_addr_to_memory_wire[5]),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [5]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[4]  (
	.Q(i11_i),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [4]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[3]  (
	.Q(i12_i),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [3]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[2]  (
	.Q(wr_addr_to_memory_wire[2]),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [2]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[1]  (
	.Q(wr_addr_to_memory_wire[1]),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [1]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:349
  FDE \haps_system_memory_write_control_inst.addr_to_memory_out_Z[0]  (
	.Q(wr_addr_to_memory_wire[0]),
	.D(\haps_system_memory_write_control_inst.addr_to_memory_out_s [0]),
	.C(umr_clk),
	.CE(N_331_mux_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[27]  (
	.Q(\memory_core.rd_addr_to_memory [27]),
	.D(\memory_core.rd_addr_to_memory_s [27]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[26]  (
	.Q(\memory_core.rd_addr_to_memory [26]),
	.D(\memory_core.rd_addr_to_memory_s [26]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[25]  (
	.Q(\memory_core.rd_addr_to_memory [25]),
	.D(\memory_core.rd_addr_to_memory_s [25]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[24]  (
	.Q(\memory_core.rd_addr_to_memory [24]),
	.D(\memory_core.rd_addr_to_memory_s [24]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[23]  (
	.Q(\memory_core.rd_addr_to_memory [23]),
	.D(\memory_core.rd_addr_to_memory_s [23]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[22]  (
	.Q(\memory_core.rd_addr_to_memory [22]),
	.D(\memory_core.rd_addr_to_memory_s [22]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[21]  (
	.Q(\memory_core.rd_addr_to_memory [21]),
	.D(\memory_core.rd_addr_to_memory_s [21]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[20]  (
	.Q(\memory_core.rd_addr_to_memory [20]),
	.D(\memory_core.rd_addr_to_memory_s [20]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[19]  (
	.Q(\memory_core.rd_addr_to_memory [19]),
	.D(\memory_core.rd_addr_to_memory_s [19]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[18]  (
	.Q(\memory_core.rd_addr_to_memory [18]),
	.D(\memory_core.rd_addr_to_memory_s [18]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[17]  (
	.Q(\memory_core.rd_addr_to_memory [17]),
	.D(\memory_core.rd_addr_to_memory_s [17]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[16]  (
	.Q(\memory_core.rd_addr_to_memory [16]),
	.D(\memory_core.rd_addr_to_memory_s [16]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[15]  (
	.Q(\memory_core.rd_addr_to_memory [15]),
	.D(\memory_core.rd_addr_to_memory_s [15]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[14]  (
	.Q(\memory_core.rd_addr_to_memory [14]),
	.D(\memory_core.rd_addr_to_memory_s [14]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[13]  (
	.Q(\memory_core.rd_addr_to_memory [13]),
	.D(\memory_core.rd_addr_to_memory_s [13]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[12]  (
	.Q(\memory_core.rd_addr_to_memory [12]),
	.D(\memory_core.rd_addr_to_memory_s [12]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[11]  (
	.Q(\memory_core.rd_addr_to_memory [11]),
	.D(\memory_core.rd_addr_to_memory_s [11]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[10]  (
	.Q(\memory_core.rd_addr_to_memory [10]),
	.D(\memory_core.rd_addr_to_memory_s [10]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[9]  (
	.Q(\memory_core.rd_addr_to_memory [9]),
	.D(\memory_core.rd_addr_to_memory_s [9]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[8]  (
	.Q(\memory_core.rd_addr_to_memory [8]),
	.D(\memory_core.rd_addr_to_memory_s [8]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[7]  (
	.Q(\memory_core.rd_addr_to_memory [7]),
	.D(\memory_core.rd_addr_to_memory_s [7]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[6]  (
	.Q(\memory_core.rd_addr_to_memory [6]),
	.D(\memory_core.rd_addr_to_memory_s [6]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[5]  (
	.Q(\memory_core.rd_addr_to_memory [5]),
	.D(\memory_core.rd_addr_to_memory_s [5]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[4]  (
	.Q(\memory_core.rd_addr_to_memory [4]),
	.D(\memory_core.rd_addr_to_memory_s [4]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[3]  (
	.Q(\memory_core.rd_addr_to_memory [3]),
	.D(\memory_core.rd_addr_to_memory_s [3]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[2]  (
	.Q(\memory_core.rd_addr_to_memory [2]),
	.D(\memory_core.rd_addr_to_memory_s [2]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[1]  (
	.Q(\memory_core.rd_addr_to_memory [1]),
	.D(\memory_core.rd_addr_to_memory_s [1]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[0]  (
	.Q(\memory_core.rd_addr_to_memory [0]),
	.D(\memory_core.rd_addr_to_memory_s [0]),
	.C(umr_clk),
	.CE(N_274_i)
);
// @221:243
  FD \haps_system_memory_pnr_inst.xilinx_inst.addr_to_memory_out_1_Z[0]  (
	.Q(pnr_addr_to_memory_wire[0]),
	.D(umr_reset_sync_idup),
	.C(umr_clk)
);
// @221:545
  FD umr_reset_sync_Z (
	.Q(umr_reset_sync),
	.D(umr_reset),
	.C(umr_clk)
);
// @221:349
  FDR \haps_system_memory_write_control_inst.wr_to_memory_out_Z  (
	.Q(wr_to_memory_wire),
	.D(\haps_system_memory_write_control_inst.wr_to_memory_out ),
	.C(umr_clk),
	.R(umr_reset_sync)
);
// @221:473
  FDE \memory_core.data_out_Z[31]  (
	.Q(data_out[31]),
	.D(\memory_core.data_out_wire [31]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[30]  (
	.Q(data_out[30]),
	.D(\memory_core.data_out_wire [30]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[29]  (
	.Q(data_out[29]),
	.D(\memory_core.data_out_wire [29]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[28]  (
	.Q(data_out[28]),
	.D(\memory_core.data_out_wire [28]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[27]  (
	.Q(data_out[27]),
	.D(\memory_core.data_out_wire [27]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[26]  (
	.Q(data_out[26]),
	.D(\memory_core.data_out_wire [26]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[25]  (
	.Q(data_out[25]),
	.D(\memory_core.data_out_wire [25]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[24]  (
	.Q(data_out[24]),
	.D(\memory_core.data_out_wire [24]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[23]  (
	.Q(data_out[23]),
	.D(\memory_core.data_out_wire [23]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[22]  (
	.Q(data_out[22]),
	.D(\memory_core.data_out_wire [22]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[21]  (
	.Q(data_out[21]),
	.D(\memory_core.data_out_wire [21]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[20]  (
	.Q(data_out[20]),
	.D(\memory_core.data_out_wire [20]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[19]  (
	.Q(data_out[19]),
	.D(\memory_core.data_out_wire [19]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[18]  (
	.Q(data_out[18]),
	.D(\memory_core.data_out_wire [18]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[17]  (
	.Q(data_out[17]),
	.D(\memory_core.data_out_wire [17]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[16]  (
	.Q(data_out[16]),
	.D(\memory_core.data_out_wire [16]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[15]  (
	.Q(data_out[15]),
	.D(\memory_core.data_out_wire [15]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[14]  (
	.Q(data_out[14]),
	.D(\memory_core.data_out_wire [14]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[13]  (
	.Q(data_out[13]),
	.D(\memory_core.data_out_wire [13]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[12]  (
	.Q(data_out[12]),
	.D(\memory_core.data_out_wire [12]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[11]  (
	.Q(data_out[11]),
	.D(\memory_core.data_out_wire [11]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[10]  (
	.Q(data_out[10]),
	.D(\memory_core.data_out_wire [10]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[9]  (
	.Q(data_out[9]),
	.D(\memory_core.data_out_wire [9]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[8]  (
	.Q(data_out[8]),
	.D(\memory_core.data_out_wire [8]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[7]  (
	.Q(data_out[7]),
	.D(N_4_i),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[6]  (
	.Q(data_out[6]),
	.D(\memory_core.data_out_wire [6]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[5]  (
	.Q(data_out[5]),
	.D(\memory_core.data_out_wire [5]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[4]  (
	.Q(data_out[4]),
	.D(N_6_i),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[3]  (
	.Q(data_out[3]),
	.D(N_8_i),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[2]  (
	.Q(data_out[2]),
	.D(N_167_i),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[1]  (
	.Q(data_out[1]),
	.D(\memory_core.data_out_wire [1]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:473
  FDE \memory_core.data_out_Z[0]  (
	.Q(data_out[0]),
	.D(\memory_core.data_out_wire [0]),
	.C(umr_clk),
	.CE(N_12_i_0)
);
// @221:349
  LUT4 \haps_system_memory_write_control_inst.addr_to_memory_out_249_b0  (
	.I0(wr_addr_to_memory_wire[15]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[15]),
	.I3(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [15])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_249_b0 .INIT=16'h2230;
// @221:349
  LUT4 \haps_system_memory_write_control_inst.addr_to_memory_out_248_b0  (
	.I0(umr_reset_sync),
	.I1(wr_addr_to_memory_wire[14]),
	.I2(raddr_raw[14]),
	.I3(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [14])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_248_b0 .INIT=16'h4450;
// @221:349
  LUT4 \haps_system_memory_write_control_inst.addr_to_memory_out_244_b0  (
	.I0(wr_addr_to_memory_wire[10]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[10]),
	.I3(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [10])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_244_b0 .INIT=16'h2230;
// @221:349
  LUT4 \haps_system_memory_write_control_inst.addr_to_memory_out_242_b0  (
	.I0(wr_addr_to_memory_wire[8]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[8]),
	.I3(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [8])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_242_b0 .INIT=16'h2230;
// @221:349
  LUT4 \haps_system_memory_write_control_inst.addr_to_memory_out_241_b0  (
	.I0(wr_addr_to_memory_wire[7]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[7]),
	.I3(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [7])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_241_b0 .INIT=16'h2230;
// @221:349
  LUT4 \haps_system_memory_write_control_inst.addr_to_memory_out_240_b0  (
	.I0(wr_addr_to_memory_wire[6]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[6]),
	.I3(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [6])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_240_b0 .INIT=16'h2230;
// @221:349
  LUT4 \haps_system_memory_write_control_inst.addr_to_memory_out_239_b0  (
	.I0(umr_reset_sync),
	.I1(wr_addr_to_memory_wire[5]),
	.I2(raddr_raw[5]),
	.I3(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [5])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_239_b0 .INIT=16'h4450;
// @221:349
  LUT4 \haps_system_memory_write_control_inst.addr_to_memory_out_237_b0  (
	.I0(umr_reset_sync),
	.I1(i12_i),
	.I2(raddr_raw[3]),
	.I3(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [3])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_237_b0 .INIT=16'h4450;
// @221:349
  LUT4 \haps_system_memory_write_control_inst.addr_to_memory_out_236_b0  (
	.I0(wr_addr_to_memory_wire[2]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[2]),
	.I3(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [2])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_236_b0 .INIT=16'h2230;
// @221:349
  LUT4 \haps_system_memory_write_control_inst.addr_to_memory_out_235_b0  (
	.I0(wr_addr_to_memory_wire[1]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[1]),
	.I3(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [1])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_235_b0 .INIT=16'h2230;
// @221:349
  LUT4 \haps_system_memory_write_control_inst.addr_to_memory_out_234_b0  (
	.I0(wr_addr_to_memory_wire[0]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[0]),
	.I3(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [0])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_234_b0 .INIT=16'h2230;
  LUT5 \haps_system_memory_write_control_inst.m248_0_e_cZ  (
	.I0(\memory_core.state_rd [0]),
	.I1(\memory_core.state_rd [1]),
	.I2(enable_in),
	.I3(wr_raw),
	.I4(umr_reset_sync),
	.O(\haps_system_memory_write_control_inst.m248_0_e )
);
defparam \haps_system_memory_write_control_inst.m248_0_e_cZ .INIT=32'h00000111;
  LUT5 \haps_system_memory_write_control_inst.m287_0_e_cZ  (
	.I0(enable_in),
	.I1(wr_raw),
	.I2(\memory_core.state_rd [0]),
	.I3(\memory_core.state_rd [1]),
	.I4(umr_reset_sync),
	.O(\haps_system_memory_write_control_inst.m287_0_e )
);
defparam \haps_system_memory_write_control_inst.m287_0_e_cZ .INIT=32'h00007770;
  LUT5 \haps_system_memory_write_control_inst.output_write_e_0_e_cZ  (
	.I0(\haps_system_memory_write_control_inst.output_write ),
	.I1(umr_reset_sync),
	.I2(raddr_raw[27]),
	.I3(raddr_raw[26]),
	.I4(N_301_mux),
	.O(\haps_system_memory_write_control_inst.output_write_e_0_e )
);
defparam \haps_system_memory_write_control_inst.output_write_e_0_e_cZ .INIT=32'h10022222;
// @221:473
  FD \memory_core.state_rd_Z[0]  (
	.Q(\memory_core.state_rd [0]),
	.D(\haps_system_memory_write_control_inst.m248_0_e ),
	.C(umr_clk)
);
// @221:473
  FD \memory_core.state_rd_Z[1]  (
	.Q(\memory_core.state_rd [1]),
	.D(\haps_system_memory_write_control_inst.m287_0_e ),
	.C(umr_clk)
);
// @221:349
  FD \haps_system_memory_write_control_inst.output_write_Z  (
	.Q(\haps_system_memory_write_control_inst.output_write ),
	.D(\haps_system_memory_write_control_inst.output_write_e_0_e ),
	.C(umr_clk)
);
  CARRY8 \memory_core.addr_of_data_out_cry_3_cZ  (
	.CO({\memory_core.addr_of_data_out_cry_7 , \memory_core.addr_of_data_out_cry_6 , \memory_core.addr_of_data_out_cry_5 , \memory_core.addr_of_data_out_cry_4 , \memory_core.addr_of_data_out_cry_3 , \memory_core.addr_of_data_out_cry_2 , \memory_core.addr_of_data_out_cry_1 , \memory_core.addr_of_data_out_cry_0 }),
	.O({\memory_core.addr_of_data_out [7:1], addr_of_data_out_cry_3_O[0]}),
	.CI(GND),
	.CI_TOP(GND),
	.DI({VCC, VCC, VCC, VCC, VCC, VCC, VCC, VCC}),
	.S(\memory_core.rd_addr_to_memory_i [7:0])
);
  CARRY8 \memory_core.addr_of_data_out_cry_11_cZ  (
	.CO({\memory_core.addr_of_data_out_cry_15 , \memory_core.addr_of_data_out_cry_14 , \memory_core.addr_of_data_out_cry_13 , \memory_core.addr_of_data_out_cry_12 , \memory_core.addr_of_data_out_cry_11 , \memory_core.addr_of_data_out_cry_10 , \memory_core.addr_of_data_out_cry_9 , \memory_core.addr_of_data_out_cry_8 }),
	.O(\memory_core.addr_of_data_out [15:8]),
	.CI(\memory_core.addr_of_data_out_cry_7 ),
	.CI_TOP(GND),
	.DI({VCC, VCC, VCC, VCC, VCC, VCC, VCC, VCC}),
	.S(\memory_core.rd_addr_to_memory_i [15:8])
);
  CARRY8 \memory_core.addr_of_data_out_cry_19_cZ  (
	.CO({\memory_core.addr_of_data_out_cry_23 , \memory_core.addr_of_data_out_cry_22 , \memory_core.addr_of_data_out_cry_21 , \memory_core.addr_of_data_out_cry_20 , \memory_core.addr_of_data_out_cry_19 , \memory_core.addr_of_data_out_cry_18 , \memory_core.addr_of_data_out_cry_17 , \memory_core.addr_of_data_out_cry_16 }),
	.O(\memory_core.addr_of_data_out [23:16]),
	.CI(\memory_core.addr_of_data_out_cry_15 ),
	.CI_TOP(GND),
	.DI({VCC, VCC, VCC, VCC, VCC, VCC, VCC, VCC}),
	.S(\memory_core.rd_addr_to_memory_i [23:16])
);
  CARRY8 \memory_core.addr_of_data_out_s_27  (
	.CO({NC19, NC18, NC17, NC16, addr_of_data_out_s_27_CO[3], \memory_core.addr_of_data_out_cry_26 , \memory_core.addr_of_data_out_cry_25 , \memory_core.addr_of_data_out_cry_24 }),
	.O({NC23, NC22, NC21, NC20, \memory_core.addr_of_data_out [27:24]}),
	.CI(\memory_core.addr_of_data_out_cry_23 ),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, VCC, VCC, VCC}),
	.S({GND, GND, GND, GND, \memory_core.rd_addr_to_memory_i [27:24]})
);
  CARRY8 \memory_core.rd_addr_to_memory_cry_cZ[2]  (
	.CO({\memory_core.rd_addr_to_memory_cry [6:0], \memory_core.rd_addr_to_memory_cry_cy }),
	.O({\memory_core.rd_addr_to_memory_s [6:0], rd_addr_to_memory_cry_O[2]}),
	.CI(VCC),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, GND}),
	.S({\memory_core.rd_addr_to_memory_qxu [6:0], \memory_core.rd_addr_to_memory_scalar })
);
  CARRY8 \memory_core.rd_addr_to_memory_cry_cZ[10]  (
	.CO(\memory_core.rd_addr_to_memory_cry [14:7]),
	.O(\memory_core.rd_addr_to_memory_s [14:7]),
	.CI(\memory_core.rd_addr_to_memory_cry [6]),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, GND}),
	.S(\memory_core.rd_addr_to_memory_qxu [14:7])
);
  CARRY8 \memory_core.rd_addr_to_memory_cry_cZ[18]  (
	.CO(\memory_core.rd_addr_to_memory_cry [22:15]),
	.O(\memory_core.rd_addr_to_memory_s [22:15]),
	.CI(\memory_core.rd_addr_to_memory_cry [14]),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, GND}),
	.S(\memory_core.rd_addr_to_memory_qxu [22:15])
);
  CARRY8 \memory_core.rd_addr_to_memory_cry_cZ[26]  (
	.CO({NC11, NC10, NC9, NC8, \memory_core.rd_addr_to_memory_cry [26:23]}),
	.O({NC15, NC14, NC13, NC12, \memory_core.rd_addr_to_memory_s [26:23]}),
	.CI(\memory_core.rd_addr_to_memory_cry [22]),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, GND}),
	.S({GND, GND, GND, GND, \memory_core.rd_addr_to_memory_qxu [26:23]})
);
  CARRY8 \haps_system_memory_write_control_inst.addr_to_memory_out_cry_cZ[2]  (
	.CO({\haps_system_memory_write_control_inst.addr_to_memory_out_cry [6:0], \haps_system_memory_write_control_inst.addr_to_memory_out_cry_cy }),
	.O({\haps_system_memory_write_control_inst.addr_to_memory_out_s [6:0], addr_to_memory_out_cry_O[2]}),
	.CI(VCC),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, GND}),
	.S({\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [6:0], N_25_i_0})
);
  CARRY8 \haps_system_memory_write_control_inst.addr_to_memory_out_cry_cZ[10]  (
	.CO(\haps_system_memory_write_control_inst.addr_to_memory_out_cry [14:7]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_s [14:7]),
	.CI(\haps_system_memory_write_control_inst.addr_to_memory_out_cry [6]),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, GND}),
	.S(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [14:7])
);
  CARRY8 \haps_system_memory_write_control_inst.addr_to_memory_out_cry_cZ[18]  (
	.CO(\haps_system_memory_write_control_inst.addr_to_memory_out_cry [22:15]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_s [22:15]),
	.CI(\haps_system_memory_write_control_inst.addr_to_memory_out_cry [14]),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, GND}),
	.S(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [22:15])
);
  CARRY8 \haps_system_memory_write_control_inst.addr_to_memory_out_cry_cZ[26]  (
	.CO({NC3, NC2, NC1, NC0, \haps_system_memory_write_control_inst.addr_to_memory_out_cry [26:23]}),
	.O({NC7, NC6, NC5, NC4, \haps_system_memory_write_control_inst.addr_to_memory_out_s [26:23]}),
	.CI(\haps_system_memory_write_control_inst.addr_to_memory_out_cry [22]),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, GND}),
	.S({GND, GND, GND, GND, \haps_system_memory_write_control_inst.addr_to_memory_out_qxu [26:23]})
);
// @221:349
  LUT2 \haps_system_memory_write_control_inst.addr_to_memory_out_s_cZ[27]  (
	.I0(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [27]),
	.I1(\haps_system_memory_write_control_inst.addr_to_memory_out_cry [26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_s [27])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_s_cZ[27] .INIT=4'h6;
// @221:473
  LUT2 \memory_core.rd_addr_to_memory_s_cZ[27]  (
	.I0(\memory_core.rd_addr_to_memory_qxu [27]),
	.I1(\memory_core.rd_addr_to_memory_cry [26]),
	.O(\memory_core.rd_addr_to_memory_s [27])
);
defparam \memory_core.rd_addr_to_memory_s_cZ[27] .INIT=4'h6;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i55_mux_i_lut6_2_o6  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [5]),
	.I1(wr_data_to_memory_wire[5]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i55_mux_i)
);
defparam \haps_system_memory_write_control_inst.i55_mux_i_lut6_2_o6 .INIT=8'hCA;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i55_mux_i_lut6_2_o5  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [1]),
	.I1(wr_data_to_memory_wire[1]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i51_mux_i)
);
defparam \haps_system_memory_write_control_inst.i55_mux_i_lut6_2_o5 .INIT=8'hCA;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i58_mux_i_lut6_2_o6  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [8]),
	.I1(wr_data_to_memory_wire[8]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i58_mux_i)
);
defparam \haps_system_memory_write_control_inst.i58_mux_i_lut6_2_o6 .INIT=8'hCA;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i58_mux_i_lut6_2_o5  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [2]),
	.I1(wr_data_to_memory_wire[2]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i52_mux_i)
);
defparam \haps_system_memory_write_control_inst.i58_mux_i_lut6_2_o5 .INIT=8'hCA;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i61_mux_i_lut6_2_o6  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [11]),
	.I1(wr_data_to_memory_wire[11]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i61_mux_i)
);
defparam \haps_system_memory_write_control_inst.i61_mux_i_lut6_2_o6 .INIT=8'hCA;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i61_mux_i_lut6_2_o5  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [3]),
	.I1(wr_data_to_memory_wire[3]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i53_mux_i)
);
defparam \haps_system_memory_write_control_inst.i61_mux_i_lut6_2_o5 .INIT=8'hCA;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i62_mux_i_lut6_2_o6  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [12]),
	.I1(pnr_addr_to_memory_wire[0]),
	.I2(wr_data_to_memory_wire[12]),
	.O(i62_mux_i)
);
defparam \haps_system_memory_write_control_inst.i62_mux_i_lut6_2_o6 .INIT=8'hE2;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i62_mux_i_lut6_2_o5  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [7]),
	.I1(pnr_addr_to_memory_wire[0]),
	.I2(wr_data_to_memory_wire[7]),
	.O(i57_mux_i)
);
defparam \haps_system_memory_write_control_inst.i62_mux_i_lut6_2_o5 .INIT=8'hE2;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i63_mux_i_lut6_2_o6  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [13]),
	.I1(wr_data_to_memory_wire[13]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i63_mux_i)
);
defparam \haps_system_memory_write_control_inst.i63_mux_i_lut6_2_o6 .INIT=8'hCA;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i63_mux_i_lut6_2_o5  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [10]),
	.I1(wr_data_to_memory_wire[10]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i60_mux_i)
);
defparam \haps_system_memory_write_control_inst.i63_mux_i_lut6_2_o5 .INIT=8'hCA;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i16_mux_i_lut6_2_o6  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [19]),
	.I1(wr_data_to_memory_wire[19]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i16_mux_i)
);
defparam \haps_system_memory_write_control_inst.i16_mux_i_lut6_2_o6 .INIT=8'hCA;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i16_mux_i_lut6_2_o5  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [14]),
	.I1(wr_data_to_memory_wire[14]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i64_mux_i)
);
defparam \haps_system_memory_write_control_inst.i16_mux_i_lut6_2_o5 .INIT=8'hCA;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i18_mux_i_lut6_2_o6  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [21]),
	.I1(wr_data_to_memory_wire[21]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i18_mux_i)
);
defparam \haps_system_memory_write_control_inst.i18_mux_i_lut6_2_o6 .INIT=8'hCA;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i18_mux_i_lut6_2_o5  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [0]),
	.I1(wr_data_to_memory_wire[0]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i50_mux_i)
);
defparam \haps_system_memory_write_control_inst.i18_mux_i_lut6_2_o5 .INIT=8'hCA;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i20_mux_i_lut6_2_o6  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [23]),
	.I1(wr_data_to_memory_wire[23]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i20_mux_i)
);
defparam \haps_system_memory_write_control_inst.i20_mux_i_lut6_2_o6 .INIT=8'hCA;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i20_mux_i_lut6_2_o5  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [9]),
	.I1(wr_data_to_memory_wire[9]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i59_mux_i)
);
defparam \haps_system_memory_write_control_inst.i20_mux_i_lut6_2_o5 .INIT=8'hCA;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i21_mux_i_lut6_2_o6  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [24]),
	.I1(wr_data_to_memory_wire[24]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i21_mux_i)
);
defparam \haps_system_memory_write_control_inst.i21_mux_i_lut6_2_o6 .INIT=8'hCA;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i21_mux_i_lut6_2_o5  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [6]),
	.I1(wr_data_to_memory_wire[6]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i56_mux_i)
);
defparam \haps_system_memory_write_control_inst.i21_mux_i_lut6_2_o5 .INIT=8'hCA;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i25_mux_i_lut6_2_o6  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [28]),
	.I1(wr_data_to_memory_wire[28]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i25_mux_i)
);
defparam \haps_system_memory_write_control_inst.i25_mux_i_lut6_2_o6 .INIT=8'hCA;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i25_mux_i_lut6_2_o5  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [16]),
	.I1(wr_data_to_memory_wire[16]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i13_mux_i)
);
defparam \haps_system_memory_write_control_inst.i25_mux_i_lut6_2_o5 .INIT=8'hCA;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i26_mux_i_lut6_2_o6  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [29]),
	.I1(wr_data_to_memory_wire[29]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i26_mux_i)
);
defparam \haps_system_memory_write_control_inst.i26_mux_i_lut6_2_o6 .INIT=8'hCA;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i26_mux_i_lut6_2_o5  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [18]),
	.I1(pnr_addr_to_memory_wire[0]),
	.I2(wr_data_to_memory_wire[18]),
	.O(i15_mux_i)
);
defparam \haps_system_memory_write_control_inst.i26_mux_i_lut6_2_o5 .INIT=8'hE2;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i27_mux_i_lut6_2_o6  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [30]),
	.I1(wr_data_to_memory_wire[30]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i27_mux_i)
);
defparam \haps_system_memory_write_control_inst.i27_mux_i_lut6_2_o6 .INIT=8'hCA;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i27_mux_i_lut6_2_o5  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [20]),
	.I1(pnr_addr_to_memory_wire[0]),
	.I2(wr_data_to_memory_wire[20]),
	.O(i17_mux_i)
);
defparam \haps_system_memory_write_control_inst.i27_mux_i_lut6_2_o5 .INIT=8'hE2;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i28_mux_i_lut6_2_o6  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [31]),
	.I1(wr_data_to_memory_wire[31]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i28_mux_i)
);
defparam \haps_system_memory_write_control_inst.i28_mux_i_lut6_2_o6 .INIT=8'hCA;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.i28_mux_i_lut6_2_o5  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [4]),
	.I1(wr_data_to_memory_wire[4]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i54_mux_i)
);
defparam \haps_system_memory_write_control_inst.i28_mux_i_lut6_2_o5 .INIT=8'hCA;
// @221:427
  LUT2 \haps_system_memory_write_control_inst.N_85_i_lut6_2_o6  (
	.I0(wr_addr_to_memory_wire[1]),
	.I1(pnr_addr_to_memory_wire[0]),
	.O(N_85_i)
);
defparam \haps_system_memory_write_control_inst.N_85_i_lut6_2_o6 .INIT=4'hB;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.N_85_i_lut6_2_o5  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [15]),
	.I1(wr_data_to_memory_wire[15]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i65_mux_i)
);
defparam \haps_system_memory_write_control_inst.N_85_i_lut6_2_o5 .INIT=8'hCA;
// @221:427
  LUT2 \haps_system_memory_write_control_inst.N_84_i_lut6_2_o6  (
	.I0(i12_i),
	.I1(pnr_addr_to_memory_wire[0]),
	.O(N_84_i)
);
defparam \haps_system_memory_write_control_inst.N_84_i_lut6_2_o6 .INIT=4'hB;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.N_84_i_lut6_2_o5  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [26]),
	.I1(wr_data_to_memory_wire[26]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i23_mux_i)
);
defparam \haps_system_memory_write_control_inst.N_84_i_lut6_2_o5 .INIT=8'hCA;
// @221:427
  LUT2 \haps_system_memory_write_control_inst.N_81_i_lut6_2_o6  (
	.I0(wr_addr_to_memory_wire[6]),
	.I1(pnr_addr_to_memory_wire[0]),
	.O(N_81_i)
);
defparam \haps_system_memory_write_control_inst.N_81_i_lut6_2_o6 .INIT=4'hB;
// @221:427
  LUT3 \haps_system_memory_write_control_inst.N_81_i_lut6_2_o5  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [22]),
	.I1(wr_data_to_memory_wire[22]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i19_mux_i)
);
defparam \haps_system_memory_write_control_inst.N_81_i_lut6_2_o5 .INIT=8'hCA;
  LUT2 \haps_system_memory_write_control_inst.m271_lut6_2_o6  (
	.I0(wr_addr_to_memory_wire[7]),
	.I1(pnr_addr_to_memory_wire[0]),
	.O(N_41_i_0)
);
defparam \haps_system_memory_write_control_inst.m271_lut6_2_o6 .INIT=4'h8;
  LUT3 \haps_system_memory_write_control_inst.m271_lut6_2_o5  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [27]),
	.I1(wr_data_to_memory_wire[27]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i24_mux_i)
);
defparam \haps_system_memory_write_control_inst.m271_lut6_2_o5 .INIT=8'hCA;
  LUT2 \haps_system_memory_write_control_inst.m270_lut6_2_o6  (
	.I0(wr_addr_to_memory_wire[2]),
	.I1(pnr_addr_to_memory_wire[0]),
	.O(N_43_i_0)
);
defparam \haps_system_memory_write_control_inst.m270_lut6_2_o6 .INIT=4'h8;
  LUT2 \haps_system_memory_write_control_inst.m270_lut6_2_o5  (
	.I0(wr_addr_to_memory_wire[5]),
	.I1(pnr_addr_to_memory_wire[0]),
	.O(N_82_i)
);
defparam \haps_system_memory_write_control_inst.m270_lut6_2_o5 .INIT=4'hB;
  LUT2 \haps_system_memory_write_control_inst.m269_lut6_2_o6  (
	.I0(wr_addr_to_memory_wire[0]),
	.I1(pnr_addr_to_memory_wire[0]),
	.O(N_45_i_0)
);
defparam \haps_system_memory_write_control_inst.m269_lut6_2_o6 .INIT=4'h8;
  LUT3 \haps_system_memory_write_control_inst.m269_lut6_2_o5  (
	.I0(\haps_system_memory_pnr_inst.xilinx_inst.usr_access_data [17]),
	.I1(wr_data_to_memory_wire[17]),
	.I2(pnr_addr_to_memory_wire[0]),
	.O(i14_mux_i)
);
defparam \haps_system_memory_write_control_inst.m269_lut6_2_o5 .INIT=8'hCA;
  LUT3 \haps_system_memory_write_control_inst.m2dup_lut6_2_o6  (
	.I0(umr_reset_sync),
	.I1(enable_in),
	.I2(wr_raw),
	.O(\memory_core.rd_addr_to_memory_scalar )
);
defparam \haps_system_memory_write_control_inst.m2dup_lut6_2_o6 .INIT=8'h15;
  LUT5 \haps_system_memory_write_control_inst.m2dup_lut6_2_o5  (
	.I0(\memory_core.rd_addr_to_memory [21]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[21]),
	.I3(enable_in),
	.I4(wr_raw),
	.O(\memory_core.rd_addr_to_memory_qxu [21])
);
defparam \haps_system_memory_write_control_inst.m2dup_lut6_2_o5 .INIT=32'h30222222;
// @221:349
  LUT3 \haps_system_memory_write_control_inst.addr_to_memory_out_256_m1_lut6_2_o6  (
	.I0(wr_addr_to_memory_wire[22]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [22])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_256_m1_lut6_2_o6 .INIT=8'h20;
// @221:349
  LUT3 \haps_system_memory_write_control_inst.addr_to_memory_out_256_m1_lut6_2_o5  (
	.I0(wr_addr_to_memory_wire[24]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [24])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_256_m1_lut6_2_o5 .INIT=8'h20;
// @221:349
  LUT3 \haps_system_memory_write_control_inst.addr_to_memory_out_255_m1_lut6_2_o6  (
	.I0(wr_addr_to_memory_wire[21]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [21])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_255_m1_lut6_2_o6 .INIT=8'h20;
// @221:349
  LUT3 \haps_system_memory_write_control_inst.addr_to_memory_out_255_m1_lut6_2_o5  (
	.I0(wr_addr_to_memory_wire[23]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [23])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_255_m1_lut6_2_o5 .INIT=8'h20;
// @221:349
  LUT3 \haps_system_memory_write_control_inst.addr_to_memory_out_252_m1_lut6_2_o6  (
	.I0(wr_addr_to_memory_wire[18]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [18])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_252_m1_lut6_2_o6 .INIT=8'h20;
// @221:349
  LUT3 \haps_system_memory_write_control_inst.addr_to_memory_out_252_m1_lut6_2_o5  (
	.I0(wr_addr_to_memory_wire[20]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [20])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_252_m1_lut6_2_o5 .INIT=8'h20;
// @221:349
  LUT3 \haps_system_memory_write_control_inst.addr_to_memory_out_250_m1_lut6_2_o6  (
	.I0(wr_addr_to_memory_wire[16]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [16])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_250_m1_lut6_2_o6 .INIT=8'h20;
// @221:349
  LUT3 \haps_system_memory_write_control_inst.addr_to_memory_out_250_m1_lut6_2_o5  (
	.I0(wr_addr_to_memory_wire[17]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [17])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_250_m1_lut6_2_o5 .INIT=8'h20;
// @221:349
  LUT4 \haps_system_memory_write_control_inst.addr_to_memory_out_247_b0_lut6_2_o6  (
	.I0(wr_addr_to_memory_wire[13]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[13]),
	.I3(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [13])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_247_b0_lut6_2_o6 .INIT=16'h2230;
// @221:349
  LUT2 \haps_system_memory_write_control_inst.addr_to_memory_out_247_b0_lut6_2_o5  (
	.I0(umr_reset_sync),
	.I1(raddr_raw[26]),
	.O(N_25_i_0)
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_247_b0_lut6_2_o5 .INIT=4'h4;
// @221:349
  LUT4 \haps_system_memory_write_control_inst.addr_to_memory_out_246_b0_lut6_2_o6  (
	.I0(wr_addr_to_memory_wire[12]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[12]),
	.I3(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [12])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_246_b0_lut6_2_o6 .INIT=16'h2230;
// @221:349
  LUT3 \haps_system_memory_write_control_inst.addr_to_memory_out_246_b0_lut6_2_o5  (
	.I0(wr_addr_to_memory_wire[26]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [26])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_246_b0_lut6_2_o5 .INIT=8'h20;
// @221:349
  LUT4 \haps_system_memory_write_control_inst.addr_to_memory_out_245_b0_lut6_2_o6  (
	.I0(wr_addr_to_memory_wire[11]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[11]),
	.I3(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [11])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_245_b0_lut6_2_o6 .INIT=16'h2230;
// @221:349
  LUT3 \haps_system_memory_write_control_inst.addr_to_memory_out_245_b0_lut6_2_o5  (
	.I0(wr_addr_to_memory_wire[25]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [25])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_245_b0_lut6_2_o5 .INIT=8'h20;
// @221:349
  LUT4 \haps_system_memory_write_control_inst.addr_to_memory_out_243_b0_lut6_2_o6  (
	.I0(umr_reset_sync),
	.I1(wr_addr_to_memory_wire[9]),
	.I2(raddr_raw[9]),
	.I3(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [9])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_243_b0_lut6_2_o6 .INIT=16'h4450;
// @221:349
  LUT3 \haps_system_memory_write_control_inst.addr_to_memory_out_243_b0_lut6_2_o5  (
	.I0(wr_addr_to_memory_wire[19]),
	.I1(umr_reset_sync),
	.I2(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [19])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_243_b0_lut6_2_o5 .INIT=8'h20;
// @221:349
  LUT4 \haps_system_memory_write_control_inst.addr_to_memory_out_238_b0_lut6_2_o6  (
	.I0(umr_reset_sync),
	.I1(i11_i),
	.I2(raddr_raw[4]),
	.I3(raddr_raw[26]),
	.O(\haps_system_memory_write_control_inst.addr_to_memory_out_qxu [4])
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_238_b0_lut6_2_o6 .INIT=16'h4450;
// @221:349
  LUT2 \haps_system_memory_write_control_inst.addr_to_memory_out_238_b0_lut6_2_o5  (
	.I0(i11_i),
	.I1(pnr_addr_to_memory_wire[0]),
	.O(N_83_i)
);
defparam \haps_system_memory_write_control_inst.addr_to_memory_out_238_b0_lut6_2_o5 .INIT=4'hB;
endmodule /* haps_system_memory_32s_28s_32s_haps_system_memoryDini_156s_123s_122s_1s_Z2_FB1_uA */

(* DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_controller_0s_1048576s_0s_4s_12s_48s_32s_2s_FB1_uA (
  umr_clk,
  umr_reset,
  infopipe_clk,
  resetn_from_user_in,
  locked_in,
  reset_clock_out,
  reset_hstdm_out,
  training_done_out,
  infopipe_empty_in,
  infopipe_data_out,
  infopipe_empty_out,
  infopipe_data_in,
  req_done_in,
  resetn_to_user_in,
  flags_in,
  flags_out,
  self_test_start_rx_out,
  reset_erd_flag_out,
  reset_tx_out,
  training_ctrl_tx_out,
  reset_rx_out,
  training_ctrl_rx_out,
  system_capim_data_in,
  system_capim_wr_in,
  system_capim_rd_in,
  system_capim_enable_in,
  system_capim_data_out,
  SIMULATION,
  SIMULATION_DISABLE_TRAINING,
  sim_flags_out
)
;
input umr_clk ;
input umr_reset ;
input infopipe_clk ;
input resetn_from_user_in ;
input locked_in ;
output reset_clock_out ;
output reset_hstdm_out ;
output training_done_out ;
input infopipe_empty_in ;
output [3:0] infopipe_data_out ;
output infopipe_empty_out ;
input [3:0] infopipe_data_in ;
input req_done_in ;
input resetn_to_user_in ;
input [7:0] flags_in ;
output [7:0] flags_out ;
output [1:0] self_test_start_rx_out ;
output reset_erd_flag_out ;
output reset_tx_out ;
output [1:0] training_ctrl_tx_out ;
output reset_rx_out ;
output training_ctrl_rx_out ;
input [31:0] system_capim_data_in ;
input system_capim_wr_in ;
input system_capim_rd_in ;
input system_capim_enable_in ;
output [31:0] system_capim_data_out ;
input SIMULATION ;
input SIMULATION_DISABLE_TRAINING ;
output [2:0] sim_flags_out ;
wire umr_clk ;
wire umr_reset ;
wire infopipe_clk ;
wire resetn_from_user_in ;
wire locked_in ;
wire reset_clock_out ;
wire reset_hstdm_out ;
wire training_done_out ;
wire infopipe_empty_in ;
wire infopipe_empty_out ;
wire req_done_in ;
wire resetn_to_user_in ;
wire reset_erd_flag_out ;
wire reset_tx_out ;
wire reset_rx_out ;
wire training_ctrl_rx_out ;
wire system_capim_wr_in ;
wire system_capim_rd_in ;
wire system_capim_enable_in ;
wire SIMULATION ;
wire SIMULATION_DISABLE_TRAINING ;
wire [31:0] hstdm_status;
wire [31:25] hstdm_status_3_0;
wire [17:0] hstdm_cmd_script_data;
wire [1:0] txctrl;
wire [32:0] infopipe_data_arbiter;
wire [0:0] infopipe_send_ack_set;
wire [31:0] traincnt;
wire [7:0] un1_traincnt_3_cry_3_O;
wire [7:0] un1_traincnt_3_cry_11_O;
wire [7:0] un1_traincnt_3_cry_19_O;
wire [7:0] un1_traincnt_3_cry_27_O;
wire [1:0] \infopipe_snd_inst.state ;
wire [3:1] \infopipe_snd_inst.sndcnt ;
wire [0:0] \infopipe_arbiter_inst.data_sent_out_5 ;
wire [17:0] \infopipe_arbiter_inst.data_out_4 ;
wire [1:1] \TXCTRL_OVERLAP.dly ;
wire [128:128] \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay ;
wire [27:0] \hstdm_ctrl_inst.data_in ;
wire [2:0] \hstdm_ctrl_inst.tc_status ;
wire [4:0] \hstdm_ctrl_inst.tc_pause_cnt ;
wire [31:0] \hstdm_ctrl_inst.command_data ;
wire [0:0] \hstdm_ctrl_inst.cmd_state ;
wire [31:30] \hstdm_ctrl_inst.command_status ;
wire [1:1] \reset_gen_inst.longer_pulse_inst.dly ;
wire [1:1] \infopipe_arbiter_inst.current_set ;
wire [1:0] txctrl_8;
wire [31:0] \hstdm_ctrl_inst.data_out_6 ;
wire [3:3] \hstdm_ctrl_inst.data_out_cnst_m_16 ;
wire [3:2] \hstdm_ctrl_inst.addr_of_data_out ;
wire [1:1] txctrl_4;
wire [16:0] command_datace;
wire [7:0] un1_data_in_11_cry_4_O;
wire [7:0] un1_data_in_11_cry_12_O;
wire [7:0] un1_data_in_11_cry_20_O;
wire [3:0] un1_data_in_11_s_27_O;
wire [1:1] \infopipe_arbiter_inst.current_set_i ;
wire [3:3] \hstdm_ctrl_inst.data_out_cnst_m_0 ;
wire [3:3] \hstdm_ctrl_inst.data_out_cnst_m_1 ;
wire [3:3] \hstdm_ctrl_inst.data_out_cnst_m_1_2 ;
wire [0:0] \reset_gen_inst.longer_pulse_inst.DLY.SRL.SYNC.delay_tmp_d_array_0 ;
wire [0:0] \reset_gen_inst.longer_pulse_inst.DLY.SRL.SYNC.delay_tmp_array_1 ;
wire [0:0] \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_0_tmp_d_array_3 ;
wire [0:0] \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_0_tmp_array_4 ;
wire [0:0] \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_0_tmp_array_3 ;
wire [0:0] \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_0_tmp_d_array_0 ;
wire [0:0] \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_0_tmp_array_1 ;
wire [0:0] \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_0_tmp_d_array_2 ;
wire [0:0] \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_0_tmp_array_2 ;
wire [0:0] \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_0_tmp_d_array_1 ;
wire [0:0] \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_tmp_d_array_2 ;
wire [0:0] \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_tmp_array_3 ;
wire [0:0] \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_tmp_array_2 ;
wire [0:0] \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_tmp_d_array_0 ;
wire [0:0] \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_tmp_array_1 ;
wire [0:0] \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_tmp_d_array_1 ;
wire [0:0] \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_tmp_d_array_3 ;
wire [0:0] \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_tmp_array_4 ;
wire [31:0] traincnt_8_0;
wire [3:0] \infopipe_snd_inst.sndcnt_5_0_e ;
wire [0:0] \hstdm_ctrl_inst.cmd_state_r_0_e ;
wire [3:2] un1_data_in_11_s_27_CO;
wire [31:0] traincnt_r;
wire rxrst ;
wire rxctrl ;
wire training_ctrl_tx_start ;
wire reset_to_ctrl ;
wire training_ctrl_rx_start ;
wire training_ctrl_word_start ;
wire training_ctrl_end ;
wire hstdm_cmd_script_ready ;
wire hstdm_cmd_script_ack_pulse ;
wire hstdm_cmd_script_ack_ff2 ;
wire txctrl1_inv_delay ;
wire infopipe_reset ;
wire hstdm_cmd_script_ready_ff2 ;
wire infopipe_send_ack_arbiter ;
wire infopipe_ready_arbiter ;
wire hstdm_cmd_script_ack_ff1 ;
wire hstdm_cmd_script_ready_ff1 ;
wire simulation_no_training ;
wire training_done_4 ;
wire un7_hstdm_resetlto31 ;
wire un8_txrstlto31 ;
wire un8_rxrstlto31 ;
wire \infopipe_snd_inst.infopipe_empty_local  ;
wire \infopipe_snd_inst.infopipe_empty_pulse  ;
wire CO0_0 ;
wire \infopipe_snd_inst.infopipe_data_out_0_sqmuxa  ;
wire un1_sndcnt_c4 ;
wire \infopipe_snd_inst.accept_pulse_gen.IntSigClr  ;
wire \ar_infopipe_reset.R0  ;
wire \TXCTRL_OVERLAP.srl_dly_out  ;
wire un1_dly_0 ;
wire \cmd_script_ack_pulse_gen.IntSigClr  ;
wire i1_i_0 ;
wire i1_i ;
wire \hstdm_ctrl_inst.enable_input_pulse  ;
wire \hstdm_ctrl_inst.TC_start_tx_bit_c  ;
wire \hstdm_ctrl_inst.TC_start_tx_word_c  ;
wire \hstdm_ctrl_inst.TC_reset_c_pulse  ;
wire \hstdm_ctrl_inst.command_issue_pulse  ;
wire \hstdm_ctrl_inst.TC_start_rx_bit_c  ;
wire \hstdm_ctrl_inst.TC_end_c  ;
wire \hstdm_ctrl_inst.command_issue_pulse_0_sqmuxa  ;
wire \hstdm_ctrl_inst.TC_end_c_4  ;
wire \hstdm_ctrl_inst.TC_reset_c_pulse_4  ;
wire \hstdm_ctrl_inst.command_data_out_0_sqmuxa  ;
wire un1_command_data16_2 ;
wire \reset_gen_inst.resetn  ;
wire \reset_gen_inst.reset_pulse_short  ;
wire \reset_gen_inst.reset_pulse_long  ;
wire \reset_gen_inst.reset_out  ;
wire \reset_gen_inst.first_reset_done  ;
wire \reset_gen_inst.ar_hstdm_reset.R0  ;
wire \reset_gen_inst.longer_pulse_inst.srl_dly_out  ;
wire un1_dly ;
wire \reset_gen_inst.reset_release_pulse_gen_inst.IntSigClr  ;
wire N_1 ;
wire N_2 ;
wire N_66 ;
wire N_67 ;
wire N_68 ;
wire N_69 ;
wire N_70 ;
wire N_71 ;
wire N_72 ;
wire N_73 ;
wire N_74 ;
wire N_75 ;
wire N_76 ;
wire N_77 ;
wire N_78 ;
wire N_79 ;
wire N_80 ;
wire N_81 ;
wire N_82 ;
wire N_83 ;
wire N_84 ;
wire N_85 ;
wire N_86 ;
wire N_87 ;
wire N_88 ;
wire N_89 ;
wire N_90 ;
wire N_91 ;
wire N_92 ;
wire N_93 ;
wire N_94 ;
wire N_95 ;
wire N_96 ;
wire N_97 ;
wire N_98 ;
wire N_99 ;
wire N_100 ;
wire N_101 ;
wire N_102 ;
wire N_103 ;
wire N_104 ;
wire N_105 ;
wire N_106 ;
wire N_107 ;
wire N_108 ;
wire N_109 ;
wire N_110 ;
wire N_111 ;
wire N_112 ;
wire N_113 ;
wire N_114 ;
wire N_115 ;
wire N_116 ;
wire N_117 ;
wire N_118 ;
wire N_119 ;
wire N_120 ;
wire N_121 ;
wire N_122 ;
wire N_123 ;
wire N_124 ;
wire N_125 ;
wire N_126 ;
wire N_127 ;
wire N_128 ;
wire N_129 ;
wire N_130 ;
wire N_131 ;
wire N_132 ;
wire N_133 ;
wire N_134 ;
wire N_135 ;
wire N_136 ;
wire N_137 ;
wire N_138 ;
wire N_139 ;
wire N_140 ;
wire N_141 ;
wire N_142 ;
wire N_143 ;
wire N_144 ;
wire N_145 ;
wire N_146 ;
wire N_147 ;
wire N_148 ;
wire N_149 ;
wire N_150 ;
wire N_151 ;
wire N_152 ;
wire N_153 ;
wire N_154 ;
wire N_155 ;
wire N_156 ;
wire N_157 ;
wire N_158 ;
wire N_159 ;
wire N_160 ;
wire N_161 ;
wire N_162 ;
wire N_163 ;
wire N_164 ;
wire N_165 ;
wire N_166 ;
wire N_167 ;
wire N_168 ;
wire N_169 ;
wire N_170 ;
wire N_171 ;
wire N_172 ;
wire N_173 ;
wire N_174 ;
wire N_175 ;
wire N_176 ;
wire N_177 ;
wire N_178 ;
wire N_179 ;
wire N_180 ;
wire N_181 ;
wire N_182 ;
wire N_183 ;
wire N_184 ;
wire N_185 ;
wire N_186 ;
wire N_187 ;
wire N_188 ;
wire N_189 ;
wire N_190 ;
wire N_191 ;
wire N_192 ;
wire N_193 ;
wire N_194 ;
wire N_195 ;
wire N_196 ;
wire N_197 ;
wire N_198 ;
wire N_199 ;
wire N_200 ;
wire N_201 ;
wire N_202 ;
wire N_203 ;
wire N_204 ;
wire N_205 ;
wire N_206 ;
wire N_207 ;
wire N_208 ;
wire N_209 ;
wire N_210 ;
wire N_211 ;
wire N_212 ;
wire N_213 ;
wire N_214 ;
wire N_215 ;
wire N_216 ;
wire N_217 ;
wire N_218 ;
wire N_219 ;
wire N_220 ;
wire N_221 ;
wire N_222 ;
wire N_223 ;
wire N_224 ;
wire N_225 ;
wire N_226 ;
wire N_227 ;
wire N_228 ;
wire N_229 ;
wire N_230 ;
wire N_231 ;
wire N_232 ;
wire N_233 ;
wire N_234 ;
wire N_235 ;
wire N_236 ;
wire N_237 ;
wire N_238 ;
wire N_239 ;
wire N_240 ;
wire N_241 ;
wire N_242 ;
wire N_243 ;
wire N_244 ;
wire N_245 ;
wire N_246 ;
wire N_247 ;
wire N_248 ;
wire N_249 ;
wire N_250 ;
wire N_251 ;
wire N_252 ;
wire N_253 ;
wire N_254 ;
wire N_255 ;
wire N_256 ;
wire N_257 ;
wire N_258 ;
wire N_259 ;
wire N_260 ;
wire N_261 ;
wire N_262 ;
wire N_263 ;
wire N_264 ;
wire N_265 ;
wire N_266 ;
wire N_267 ;
wire N_268 ;
wire N_269 ;
wire N_270 ;
wire N_271 ;
wire N_272 ;
wire N_273 ;
wire N_274 ;
wire N_275 ;
wire N_276 ;
wire N_277 ;
wire N_278 ;
wire N_279 ;
wire N_280 ;
wire N_281 ;
wire N_282 ;
wire N_283 ;
wire N_284 ;
wire N_285 ;
wire N_286 ;
wire N_287 ;
wire N_288 ;
wire N_289 ;
wire N_290 ;
wire N_291 ;
wire N_292 ;
wire N_293 ;
wire N_294 ;
wire N_295 ;
wire N_296 ;
wire N_297 ;
wire N_298 ;
wire N_299 ;
wire N_300 ;
wire N_301 ;
wire N_302 ;
wire N_303 ;
wire N_304 ;
wire N_305 ;
wire N_306 ;
wire N_307 ;
wire N_308 ;
wire N_309 ;
wire N_310 ;
wire N_311 ;
wire N_312 ;
wire N_313 ;
wire N_314 ;
wire N_315 ;
wire N_316 ;
wire N_317 ;
wire N_318 ;
wire N_319 ;
wire N_320 ;
wire N_321 ;
wire N_322 ;
wire N_323 ;
wire N_324 ;
wire N_325 ;
wire training_tx_done_6 ;
wire rxctrl_5 ;
wire N_638 ;
wire N_797_i ;
wire data_in_2_sqmuxa_0_i ;
wire N_549 ;
wire N_550 ;
wire N_551 ;
wire N_552 ;
wire N_555 ;
wire N_556 ;
wire N_557 ;
wire \infopipe_snd_inst.infopipe_data_out_5_sn_N_15_mux  ;
wire \infopipe_snd_inst.infopipe_data_out_5_sn_N_13_mux  ;
wire N_745 ;
wire \hstdm_ctrl_inst.un1_data_out15_1  ;
wire \hstdm_ctrl_inst.un18lt5  ;
wire N_910 ;
wire N_954 ;
wire N_955 ;
wire N_956 ;
wire N_957 ;
wire N_958 ;
wire N_963 ;
wire N_964 ;
wire N_965 ;
wire N_966 ;
wire N_970 ;
wire N_968 ;
wire \hstdm_ctrl_inst.un1_addr_of_data_out_7  ;
wire \hstdm_ctrl_inst.data_out15_16  ;
wire N_953 ;
wire \hstdm_ctrl_inst.un1_command_data16_2_23  ;
wire traincnt23 ;
wire training_not_end ;
wire un9_txctrl ;
wire traincnt23_2 ;
wire un11_txctrl ;
wire \hstdm_ctrl_inst.un1_command_data16_2_24  ;
wire N_36 ;
wire N_935 ;
wire N_341 ;
wire N_330 ;
wire N_574 ;
wire N_342 ;
wire N_950 ;
wire N_951 ;
wire N_952 ;
wire N_971 ;
wire N_972 ;
wire \hstdm_ctrl_inst.data_out17_2  ;
wire \hstdm_ctrl_inst.un19lt27  ;
wire \hstdm_ctrl_inst.un1_addr_of_data_out_11  ;
wire \hstdm_ctrl_inst.un1_addr_of_data_out_10_13  ;
wire N_435 ;
wire N_891 ;
wire N_575 ;
wire N_934 ;
wire N_348 ;
wire N_430 ;
wire \hstdm_ctrl_inst.command_issue_pulse6_14  ;
wire N_896 ;
wire N_960 ;
wire N_959 ;
wire N_961 ;
wire N_962 ;
wire N_967 ;
wire N_969 ;
wire N_909 ;
wire traincnt23lt23 ;
wire un8_rxrst_13 ;
wire un6_rxctrllt20 ;
wire un1_traincnt_1_28 ;
wire un9_txctrl_2 ;
wire un6_rxctrl_2 ;
wire un6_rxctrl ;
wire N_571 ;
wire ANC0_3 ;
wire N_454 ;
wire N_490 ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_1  ;
wire \hstdm_ctrl_inst.un1_data_in_11_cry_1  ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_2  ;
wire \hstdm_ctrl_inst.un1_data_in_11_cry_2  ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_3  ;
wire \hstdm_ctrl_inst.un1_data_in_11_cry_3  ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_4  ;
wire \hstdm_ctrl_inst.un1_data_in_11_cry_4  ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_5  ;
wire \hstdm_ctrl_inst.un1_data_in_11_cry_5  ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_6  ;
wire \hstdm_ctrl_inst.un1_data_in_11_cry_6  ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_7  ;
wire \hstdm_ctrl_inst.un1_data_in_11_cry_7  ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_8  ;
wire \hstdm_ctrl_inst.un1_data_in_11_cry_8  ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_9  ;
wire \hstdm_ctrl_inst.un1_data_in_11_cry_9  ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_10  ;
wire \hstdm_ctrl_inst.un1_data_in_11_cry_10  ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_11  ;
wire \hstdm_ctrl_inst.un1_data_in_11_cry_11  ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_12  ;
wire \hstdm_ctrl_inst.un1_data_in_11_cry_12  ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_13  ;
wire \hstdm_ctrl_inst.un1_data_in_11_cry_13  ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_14  ;
wire \hstdm_ctrl_inst.un1_data_in_11_cry_14  ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_15  ;
wire \hstdm_ctrl_inst.un1_data_in_11_cry_15  ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_16  ;
wire \hstdm_ctrl_inst.un1_data_in_11_cry_16  ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_17  ;
wire \hstdm_ctrl_inst.un1_data_in_11_cry_17  ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_18  ;
wire \hstdm_ctrl_inst.un1_data_in_11_cry_18  ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_19  ;
wire \hstdm_ctrl_inst.un1_data_in_11_cry_19  ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_20  ;
wire \hstdm_ctrl_inst.un1_data_in_11_cry_20  ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_21  ;
wire \hstdm_ctrl_inst.un1_data_in_11_cry_21  ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_22  ;
wire \hstdm_ctrl_inst.un1_data_in_11_cry_22  ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_23  ;
wire \hstdm_ctrl_inst.un1_data_in_11_cry_23  ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_24  ;
wire \hstdm_ctrl_inst.un1_data_in_11_cry_24  ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_25  ;
wire \hstdm_ctrl_inst.un1_data_in_11_cry_25  ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_26  ;
wire \hstdm_ctrl_inst.un1_data_in_11_cry_26  ;
wire \hstdm_ctrl_inst.un1_data_in_11_axb_27  ;
wire un1_traincnt_3_axb_0 ;
wire un1_traincnt_3_cry_0 ;
wire un1_traincnt_3_axb_1 ;
wire un1_traincnt_3_cry_1 ;
wire un1_traincnt_3_axb_2 ;
wire un1_traincnt_3_cry_2 ;
wire un1_traincnt_3_axb_3 ;
wire un1_traincnt_3_cry_3 ;
wire un1_traincnt_3_axb_4 ;
wire un1_traincnt_3_cry_4 ;
wire un1_traincnt_3_axb_5 ;
wire un1_traincnt_3_cry_5 ;
wire un1_traincnt_3_axb_6 ;
wire un1_traincnt_3_cry_6 ;
wire un1_traincnt_3_axb_7 ;
wire un1_traincnt_3_cry_7 ;
wire un1_traincnt_3_axb_8 ;
wire un1_traincnt_3_cry_8 ;
wire un1_traincnt_3_axb_9 ;
wire un1_traincnt_3_cry_9 ;
wire un1_traincnt_3_axb_10 ;
wire un1_traincnt_3_cry_10 ;
wire un1_traincnt_3_axb_11 ;
wire un1_traincnt_3_cry_11 ;
wire un1_traincnt_3_axb_12 ;
wire un1_traincnt_3_cry_12 ;
wire un1_traincnt_3_axb_13 ;
wire un1_traincnt_3_cry_13 ;
wire un1_traincnt_3_14_d ;
wire un1_traincnt_3_axb_14 ;
wire un1_traincnt_3_cry_14 ;
wire un1_traincnt_3_axb_15 ;
wire un1_traincnt_3_cry_15 ;
wire un1_traincnt_3_axb_16 ;
wire un1_traincnt_3_cry_16 ;
wire un1_traincnt_3_axb_17 ;
wire un1_traincnt_3_cry_17 ;
wire un1_traincnt_3_axb_18 ;
wire un1_traincnt_3_cry_18 ;
wire un1_traincnt_3_axb_19 ;
wire un1_traincnt_3_cry_19 ;
wire un1_traincnt_3_axb_20 ;
wire un1_traincnt_3_cry_20 ;
wire un1_traincnt_3_axb_21 ;
wire un1_traincnt_3_cry_21 ;
wire un1_traincnt_3_axb_22 ;
wire un1_traincnt_3_cry_22 ;
wire un1_traincnt_3_axb_23 ;
wire un1_traincnt_3_cry_23 ;
wire un1_traincnt_3_axb_24 ;
wire un1_traincnt_3_cry_24 ;
wire un1_traincnt_3_axb_25 ;
wire un1_traincnt_3_cry_25 ;
wire un1_traincnt_3_axb_26 ;
wire un1_traincnt_3_cry_26 ;
wire un1_traincnt_3_axb_27 ;
wire un1_traincnt_3_cry_27 ;
wire un1_traincnt_3_axb_28 ;
wire un1_traincnt_3_cry_28 ;
wire un1_traincnt_3_axb_29 ;
wire un1_traincnt_3_cry_29 ;
wire un1_traincnt_3_axb_30 ;
wire un1_traincnt_3_cry_30 ;
wire un1_traincnt_3_axb_31 ;
wire \hstdm_ctrl_inst.traincnt23lto31_1  ;
wire \hstdm_ctrl_inst.data_out15_1  ;
wire hstdm_reset_i ;
wire N_18_0_m_i ;
wire N_17_0_m_i ;
wire N_16_0_m_i ;
wire N_15_0_i_i_m_i ;
wire training_ctrl_word_start_i ;
wire hstdm_cmd_script_ready_i ;
wire N_947_i ;
wire N_487_i ;
wire \hstdm_ctrl_inst.un1_tc_status26_9_i  ;
wire N_489_i ;
wire infopipe_data_out_0_sqmuxa_set ;
wire infopipe_data_out_0_sqmuxa_set_0 ;
wire infopipe_data_out_0_sqmuxa_set_1 ;
wire infopipe_data_out_0_sqmuxa_set_2 ;
wire traincnt23_3 ;
wire \hstdm_ctrl_inst.un11_txctrllto24_2  ;
wire \hstdm_ctrl_inst.un1_traincnt_1_28_1  ;
wire \hstdm_ctrl_inst.un1_command_data16_2_23_2  ;
wire \hstdm_ctrl_inst.un9_txctrllto31_0  ;
wire \hstdm_ctrl_inst.un1_command_data16_2_24_1  ;
wire \hstdm_ctrl_inst.N_797_i_0_a2_0  ;
wire \hstdm_ctrl_inst.N_797_i_0_a2_1  ;
wire \hstdm_ctrl_inst.un6_rxctrllto31_0  ;
wire \hstdm_ctrl_inst.un7_hstdm_resetlto31_1  ;
wire \hstdm_ctrl_inst.un8_rxrstlto31_0_1  ;
wire \hstdm_ctrl_inst.un8_txrstlto31_0  ;
wire \hstdm_ctrl_inst.command_issue_pulse6_0  ;
wire \hstdm_ctrl_inst.command_issue_pulse6_1  ;
wire \hstdm_ctrl_inst.command_issue_pulse6_2  ;
wire \hstdm_ctrl_inst.command_issue_pulse6_2_4  ;
wire \hstdm_ctrl_inst.data_out15_1_1  ;
wire \hstdm_ctrl_inst.data_out15_1_2  ;
wire \hstdm_ctrl_inst.un1_traincnt_1_1  ;
wire \hstdm_ctrl_inst.un1_traincnt_1_2  ;
wire \hstdm_ctrl_inst.un1_traincnt_1_0_3  ;
wire \hstdm_ctrl_inst.un1_traincnt_1_1_4  ;
wire N_340 ;
wire \hstdm_ctrl_inst.data_out18_1_0  ;
wire \hstdm_ctrl_inst.data_out18_0_4  ;
wire \hstdm_ctrl_inst.data_out18_1_4  ;
wire \hstdm_ctrl_inst.un1_addr_of_data_out_6_0  ;
wire \hstdm_ctrl_inst.un1_addr_of_data_out_6_1  ;
wire \hstdm_ctrl_inst.data_out15_1_4  ;
wire \hstdm_ctrl_inst.data_out17_0  ;
wire \hstdm_ctrl_inst.data_out17_2_0  ;
wire \hstdm_ctrl_inst.training_ctrl_end_out  ;
wire \hstdm_ctrl_inst.training_ctrl_rx_start_out  ;
wire \hstdm_ctrl_inst.training_ctrl_tx_start_out  ;
wire \hstdm_ctrl_inst.training_ctrl_word_start_out  ;
wire \hstdm_ctrl_inst.self_test_start_rx_out  ;
wire \hstdm_ctrl_inst.self_test_start_rx_out_0  ;
wire \hstdm_ctrl_inst.self_test_start_tx_out  ;
wire \hstdm_ctrl_inst.self_test_start_tx_out_0  ;
wire \hstdm_ctrl_inst.command_issue_pulse_0  ;
wire reset_clock_outz ;
wire \infopipe_arbiter_inst.current_set_3_sqmuxa_0  ;
wire \cmd_script_ack_pulse_gen.fdcr1.IntDceR_0  ;
wire \infopipe_snd_inst.accept_pulse_gen.fdcr1.IntDceR_0  ;
wire \reset_gen_inst.reset_release_pulse_gen_inst.fdcr1.IntDceR_0  ;
wire \infopipe_snd_inst.state_2_sqmuxa_0  ;
wire \reset_gen_inst.longer_pulse_inst.out_0  ;
wire \TXCTRL_OVERLAP.out_0  ;
wire N_28_0 ;
wire \infopipe_arbiter_inst.current_set_0  ;
wire \hstdm_ctrl_inst.N_19_i_m_i  ;
wire \infopipe_snd_inst.N_467_i_0_e  ;
wire \infopipe_snd_inst.N_469_i_0_e  ;
wire \reset_gen_inst.first_reset_done_e_0_e  ;
wire NC0 ;
wire NC1 ;
wire NC2 ;
wire NC3 ;
wire NC4 ;
wire NC5 ;
wire NC6 ;
wire NC7 ;
wire NC8 ;
wire VCC ;
wire GND ;
wire \tx_ctrl_sel_inst.use_bit_out_e_0  ;
wire \tx_ctrl_sel_inst.un1_self_test_start_tx_2_i_e_0  ;
wire \hstdm_ctrl_inst.TC_start_rx_bit_c_4_0_a2_0_a2_e_0  ;
wire \hstdm_ctrl_inst.TC_start_tx_bit_c_4_0_a2_0_a2_e_0  ;
wire \hstdm_ctrl_inst.TC_start_tx_word_c_4_0_a2_0_a2_e_0  ;
wire \hstdm_ctrl_inst.enable_input_pulse_4_e_0  ;
wire \hstdm_ctrl_inst.command_ready_out_e_e_0  ;
  GND GND_cZ (
	.G(GND)
);
  VCC VCC_cZ (
	.P(VCC)
);
  LUT6_2 \infopipe_snd_inst.infopipe_data_out_5_9_lut6_2[0]  (
	.I0(infopipe_data_arbiter[16]),
	.I1(\infopipe_snd_inst.sndcnt [2]),
	.I2(infopipe_data_arbiter[18]),
	.I3(CO0_0),
	.I4(infopipe_data_arbiter[32]),
	.I5(\infopipe_snd_inst.sndcnt [1]),
	.O6(N_555),
	.O5(N_557)
);
defparam \infopipe_snd_inst.infopipe_data_out_5_9_lut6_2[0] .INIT=64'hBBF388C0F3F3C0C0;
// @225:770
  LUT4 \hstdm_ctrl_inst.N_19_i_m_i_cZ  (
	.I0(\hstdm_ctrl_inst.tc_pause_cnt [4]),
	.I1(\hstdm_ctrl_inst.tc_status [0]),
	.I2(\hstdm_ctrl_inst.tc_status [1]),
	.I3(\hstdm_ctrl_inst.tc_status [2]),
	.O(\hstdm_ctrl_inst.N_19_i_m_i )
);
defparam \hstdm_ctrl_inst.N_19_i_m_i_cZ .INIT=16'h0100;
// @225:770
  FDRE \hstdm_ctrl_inst.tc_pause_cnt_Z[4]  (
	.Q(\hstdm_ctrl_inst.tc_pause_cnt [4]),
	.D(\hstdm_ctrl_inst.N_19_i_m_i ),
	.C(umr_clk),
	.R(\hstdm_ctrl_inst.TC_reset_c_pulse ),
	.CE(ANC0_3)
);
// @225:844
  FDR \hstdm_ctrl_inst.command_ready_out_Z  (
	.Q(hstdm_cmd_script_ready),
	.D(\hstdm_ctrl_inst.command_ready_out_e_e_0 ),
	.C(umr_clk),
	.R(umr_reset)
);
// @225:566
  FDR \hstdm_ctrl_inst.enable_input_pulse_Z  (
	.Q(\hstdm_ctrl_inst.enable_input_pulse ),
	.D(\hstdm_ctrl_inst.enable_input_pulse_4_e_0 ),
	.C(umr_clk),
	.R(umr_reset)
);
// @225:679
  FDR \hstdm_ctrl_inst.TC_start_tx_word_c_Z  (
	.Q(\hstdm_ctrl_inst.TC_start_tx_word_c ),
	.D(\hstdm_ctrl_inst.TC_start_tx_word_c_4_0_a2_0_a2_e_0 ),
	.C(umr_clk),
	.R(\hstdm_ctrl_inst.command_issue_pulse_0_sqmuxa )
);
// @225:679
  FDR \hstdm_ctrl_inst.TC_start_tx_bit_c_Z  (
	.Q(\hstdm_ctrl_inst.TC_start_tx_bit_c ),
	.D(\hstdm_ctrl_inst.TC_start_tx_bit_c_4_0_a2_0_a2_e_0 ),
	.C(umr_clk),
	.R(\hstdm_ctrl_inst.command_issue_pulse_0_sqmuxa )
);
// @225:679
  FDR \hstdm_ctrl_inst.TC_start_rx_bit_c_Z  (
	.Q(\hstdm_ctrl_inst.TC_start_rx_bit_c ),
	.D(\hstdm_ctrl_inst.TC_start_rx_bit_c_4_0_a2_0_a2_e_0 ),
	.C(umr_clk),
	.R(\hstdm_ctrl_inst.command_issue_pulse_0_sqmuxa )
);
// @225:1509
  FDR \txctrl_out_Z[1]  (
	.Q(training_ctrl_tx_out[1]),
	.D(\tx_ctrl_sel_inst.un1_self_test_start_tx_2_i_e_0 ),
	.C(umr_clk),
	.R(reset_tx_out)
);
// @225:1509
  FDR \txctrl_out_Z[0]  (
	.Q(training_ctrl_tx_out[0]),
	.D(\tx_ctrl_sel_inst.use_bit_out_e_0 ),
	.C(umr_clk),
	.R(reset_tx_out)
);
  LUT4 \hstdm_ctrl_inst.command_ready_out_e_e_0_cZ  (
	.I0(N_797_i),
	.I1(hstdm_cmd_script_ack_pulse),
	.I2(hstdm_cmd_script_ready),
	.I3(\hstdm_ctrl_inst.cmd_state [0]),
	.O(\hstdm_ctrl_inst.command_ready_out_e_e_0 )
);
defparam \hstdm_ctrl_inst.command_ready_out_e_e_0_cZ .INIT=16'h7250;
  LUT2 \hstdm_ctrl_inst.enable_input_pulse_4_e_0_cZ  (
	.I0(system_capim_enable_in),
	.I1(system_capim_wr_in),
	.O(\hstdm_ctrl_inst.enable_input_pulse_4_e_0 )
);
defparam \hstdm_ctrl_inst.enable_input_pulse_4_e_0_cZ .INIT=4'h8;
  LUT5 \hstdm_ctrl_inst.TC_start_tx_word_c_4_0_a2_0_a2_e_0_cZ  (
	.I0(N_430),
	.I1(\hstdm_ctrl_inst.data_in [0]),
	.I2(\hstdm_ctrl_inst.data_in [1]),
	.I3(\hstdm_ctrl_inst.data_in [2]),
	.I4(\hstdm_ctrl_inst.data_in [3]),
	.O(\hstdm_ctrl_inst.TC_start_tx_word_c_4_0_a2_0_a2_e_0 )
);
defparam \hstdm_ctrl_inst.TC_start_tx_word_c_4_0_a2_0_a2_e_0_cZ .INIT=32'h00020000;
  LUT5 \hstdm_ctrl_inst.TC_start_tx_bit_c_4_0_a2_0_a2_e_0_cZ  (
	.I0(N_430),
	.I1(\hstdm_ctrl_inst.data_in [0]),
	.I2(\hstdm_ctrl_inst.data_in [1]),
	.I3(\hstdm_ctrl_inst.data_in [2]),
	.I4(\hstdm_ctrl_inst.data_in [3]),
	.O(\hstdm_ctrl_inst.TC_start_tx_bit_c_4_0_a2_0_a2_e_0 )
);
defparam \hstdm_ctrl_inst.TC_start_tx_bit_c_4_0_a2_0_a2_e_0_cZ .INIT=32'h00000002;
  LUT5 \hstdm_ctrl_inst.TC_start_rx_bit_c_4_0_a2_0_a2_e_0_cZ  (
	.I0(N_430),
	.I1(\hstdm_ctrl_inst.data_in [0]),
	.I2(\hstdm_ctrl_inst.data_in [1]),
	.I3(\hstdm_ctrl_inst.data_in [2]),
	.I4(\hstdm_ctrl_inst.data_in [3]),
	.O(\hstdm_ctrl_inst.TC_start_rx_bit_c_4_0_a2_0_a2_e_0 )
);
defparam \hstdm_ctrl_inst.TC_start_rx_bit_c_4_0_a2_0_a2_e_0_cZ .INIT=32'h00000200;
  LUT4 \tx_ctrl_sel_inst.un1_self_test_start_tx_2_i_e_0_cZ  (
	.I0(hstdm_status_3_0[29]),
	.I1(hstdm_status_3_0[31]),
	.I2(txctrl[0]),
	.I3(txctrl[1]),
	.O(\tx_ctrl_sel_inst.un1_self_test_start_tx_2_i_e_0 )
);
defparam \tx_ctrl_sel_inst.un1_self_test_start_tx_2_i_e_0_cZ .INIT=16'hFFFE;
  LUT3 \tx_ctrl_sel_inst.use_bit_out_e_0_cZ  (
	.I0(hstdm_status_3_0[29]),
	.I1(hstdm_status_3_0[31]),
	.I2(txctrl[0]),
	.O(\tx_ctrl_sel_inst.use_bit_out_e_0 )
);
defparam \tx_ctrl_sel_inst.use_bit_out_e_0_cZ .INIT=8'hDC;
  FD \reset_gen_inst.reset_pulse_Z  (
	.Q(reset_clock_outz),
	.D(N_28_0),
	.C(umr_clk)
);
defparam \reset_gen_inst.reset_pulse_Z .INIT=1'b1;
  FD \cmd_script_ack_pulse_gen.fdcr2.IntQ_Z  (
	.Q(\cmd_script_ack_pulse_gen.IntSigClr ),
	.D(hstdm_cmd_script_ack_ff2),
	.C(umr_clk)
);
defparam \cmd_script_ack_pulse_gen.fdcr2.IntQ_Z .INIT=1'b0;
  FD \TXCTRL_OVERLAP.out_Z  (
	.Q(txctrl1_inv_delay),
	.D(\TXCTRL_OVERLAP.out_0 ),
	.C(umr_clk)
);
defparam \TXCTRL_OVERLAP.out_Z .INIT=1'b0;
  FD \infopipe_snd_inst.accept_pulse_gen.fdcr1.IntQ_Z  (
	.Q(\infopipe_snd_inst.infopipe_empty_pulse ),
	.D(\infopipe_snd_inst.accept_pulse_gen.fdcr1.IntDceR_0 ),
	.C(infopipe_clk)
);
defparam \infopipe_snd_inst.accept_pulse_gen.fdcr1.IntQ_Z .INIT=1'b0;
  FD \infopipe_snd_inst.accept_pulse_gen.fdcr2.IntQ_Z  (
	.Q(\infopipe_snd_inst.accept_pulse_gen.IntSigClr ),
	.D(\infopipe_snd_inst.infopipe_empty_local ),
	.C(infopipe_clk)
);
defparam \infopipe_snd_inst.accept_pulse_gen.fdcr2.IntQ_Z .INIT=1'b0;
  FD \reset_gen_inst.reset_release_pulse_gen_inst.fdcr1.IntQ_Z  (
	.Q(\reset_gen_inst.reset_pulse_short ),
	.D(\reset_gen_inst.reset_release_pulse_gen_inst.fdcr1.IntDceR_0 ),
	.C(umr_clk)
);
defparam \reset_gen_inst.reset_release_pulse_gen_inst.fdcr1.IntQ_Z .INIT=1'b0;
  FD \reset_gen_inst.reset_release_pulse_gen_inst.fdcr2.IntQ_Z  (
	.Q(\reset_gen_inst.reset_release_pulse_gen_inst.IntSigClr ),
	.D(\reset_gen_inst.resetn ),
	.C(umr_clk)
);
defparam \reset_gen_inst.reset_release_pulse_gen_inst.fdcr2.IntQ_Z .INIT=1'b0;
  FD \reset_gen_inst.longer_pulse_inst.out_Z  (
	.Q(\reset_gen_inst.reset_pulse_long ),
	.D(\reset_gen_inst.longer_pulse_inst.out_0 ),
	.C(umr_clk)
);
defparam \reset_gen_inst.longer_pulse_inst.out_Z .INIT=1'b0;
  FDE \hstdm_ctrl_inst.tc_status_Z[2]  (
	.Q(\hstdm_ctrl_inst.tc_status [2]),
	.D(N_745),
	.C(umr_clk),
	.CE(\hstdm_ctrl_inst.un1_tc_status26_9_i )
);
defparam \hstdm_ctrl_inst.tc_status_Z[2] .INIT=1'b0;
  FDE \hstdm_ctrl_inst.tc_status_Z[1]  (
	.Q(\hstdm_ctrl_inst.tc_status [1]),
	.D(N_489_i),
	.C(umr_clk),
	.CE(\hstdm_ctrl_inst.un1_tc_status26_9_i )
);
defparam \hstdm_ctrl_inst.tc_status_Z[1] .INIT=1'b0;
  FDE \hstdm_ctrl_inst.tc_status_Z[0]  (
	.Q(\hstdm_ctrl_inst.tc_status [0]),
	.D(N_487_i),
	.C(umr_clk),
	.CE(\hstdm_ctrl_inst.un1_tc_status26_9_i )
);
defparam \hstdm_ctrl_inst.tc_status_Z[0] .INIT=1'b0;
  FD \hstdm_ctrl_inst.self_test_start_tx_out_Z[1]  (
	.Q(hstdm_status_3_0[29]),
	.D(\hstdm_ctrl_inst.self_test_start_tx_out_0 ),
	.C(umr_clk)
);
defparam \hstdm_ctrl_inst.self_test_start_tx_out_Z[1] .INIT=1'b0;
  FD \hstdm_ctrl_inst.self_test_start_tx_out_Z[0]  (
	.Q(hstdm_status_3_0[31]),
	.D(\hstdm_ctrl_inst.self_test_start_tx_out ),
	.C(umr_clk)
);
defparam \hstdm_ctrl_inst.self_test_start_tx_out_Z[0] .INIT=1'b0;
  FD \hstdm_ctrl_inst.self_test_start_rx_out_Z[1]  (
	.Q(hstdm_status_3_0[28]),
	.D(\hstdm_ctrl_inst.self_test_start_rx_out_0 ),
	.C(umr_clk)
);
defparam \hstdm_ctrl_inst.self_test_start_rx_out_Z[1] .INIT=1'b0;
  FD \hstdm_ctrl_inst.self_test_start_rx_out_Z[0]  (
	.Q(hstdm_status_3_0[30]),
	.D(\hstdm_ctrl_inst.self_test_start_rx_out ),
	.C(umr_clk)
);
defparam \hstdm_ctrl_inst.self_test_start_rx_out_Z[0] .INIT=1'b0;
  FD \cmd_script_ack_pulse_gen.fdcr1.IntQ_Z  (
	.Q(hstdm_cmd_script_ack_pulse),
	.D(\cmd_script_ack_pulse_gen.fdcr1.IntDceR_0 ),
	.C(umr_clk)
);
defparam \cmd_script_ack_pulse_gen.fdcr1.IntQ_Z .INIT=1'b0;
  FD \traincnt_Z[7]  (
	.Q(traincnt[7]),
	.D(traincnt_r[7]),
	.C(umr_clk)
);
defparam \traincnt_Z[7] .INIT=1'b0;
  FD \traincnt_Z[6]  (
	.Q(traincnt[6]),
	.D(traincnt_r[6]),
	.C(umr_clk)
);
defparam \traincnt_Z[6] .INIT=1'b0;
  FD \traincnt_Z[5]  (
	.Q(traincnt[5]),
	.D(traincnt_r[5]),
	.C(umr_clk)
);
defparam \traincnt_Z[5] .INIT=1'b0;
  FD \traincnt_Z[2]  (
	.Q(traincnt[2]),
	.D(traincnt_r[2]),
	.C(umr_clk)
);
defparam \traincnt_Z[2] .INIT=1'b0;
  FD \traincnt_Z[1]  (
	.Q(traincnt[1]),
	.D(traincnt_r[1]),
	.C(umr_clk)
);
defparam \traincnt_Z[1] .INIT=1'b0;
  FD \traincnt_Z[12]  (
	.Q(traincnt[12]),
	.D(traincnt_r[12]),
	.C(umr_clk)
);
defparam \traincnt_Z[12] .INIT=1'b0;
  FD \traincnt_Z[11]  (
	.Q(traincnt[11]),
	.D(traincnt_r[11]),
	.C(umr_clk)
);
defparam \traincnt_Z[11] .INIT=1'b0;
  FD \traincnt_Z[10]  (
	.Q(traincnt[10]),
	.D(traincnt_r[10]),
	.C(umr_clk)
);
defparam \traincnt_Z[10] .INIT=1'b0;
  FD \traincnt_Z[9]  (
	.Q(traincnt[9]),
	.D(traincnt_r[9]),
	.C(umr_clk)
);
defparam \traincnt_Z[9] .INIT=1'b0;
  FD \traincnt_Z[8]  (
	.Q(traincnt[8]),
	.D(traincnt_r[8]),
	.C(umr_clk)
);
defparam \traincnt_Z[8] .INIT=1'b0;
  FD \traincnt_Z[17]  (
	.Q(traincnt[17]),
	.D(traincnt_r[17]),
	.C(umr_clk)
);
defparam \traincnt_Z[17] .INIT=1'b0;
  FD \traincnt_Z[16]  (
	.Q(traincnt[16]),
	.D(traincnt_r[16]),
	.C(umr_clk)
);
defparam \traincnt_Z[16] .INIT=1'b0;
  FD \traincnt_Z[15]  (
	.Q(traincnt[15]),
	.D(traincnt_r[15]),
	.C(umr_clk)
);
defparam \traincnt_Z[15] .INIT=1'b0;
  FD \traincnt_Z[14]  (
	.Q(traincnt[14]),
	.D(traincnt_r[14]),
	.C(umr_clk)
);
defparam \traincnt_Z[14] .INIT=1'b0;
  FD \traincnt_Z[13]  (
	.Q(traincnt[13]),
	.D(traincnt_r[13]),
	.C(umr_clk)
);
defparam \traincnt_Z[13] .INIT=1'b0;
  FD \traincnt_Z[22]  (
	.Q(traincnt[22]),
	.D(traincnt_r[22]),
	.C(umr_clk)
);
defparam \traincnt_Z[22] .INIT=1'b0;
  FD \traincnt_Z[21]  (
	.Q(traincnt[21]),
	.D(traincnt_r[21]),
	.C(umr_clk)
);
defparam \traincnt_Z[21] .INIT=1'b0;
  FD \traincnt_Z[20]  (
	.Q(traincnt[20]),
	.D(traincnt_r[20]),
	.C(umr_clk)
);
defparam \traincnt_Z[20] .INIT=1'b0;
  FD \traincnt_Z[19]  (
	.Q(traincnt[19]),
	.D(traincnt_r[19]),
	.C(umr_clk)
);
defparam \traincnt_Z[19] .INIT=1'b0;
  FD \traincnt_Z[18]  (
	.Q(traincnt[18]),
	.D(traincnt_r[18]),
	.C(umr_clk)
);
defparam \traincnt_Z[18] .INIT=1'b0;
  FD \traincnt_Z[27]  (
	.Q(traincnt[27]),
	.D(traincnt_r[27]),
	.C(umr_clk)
);
defparam \traincnt_Z[27] .INIT=1'b0;
  FD \traincnt_Z[26]  (
	.Q(traincnt[26]),
	.D(traincnt_r[26]),
	.C(umr_clk)
);
defparam \traincnt_Z[26] .INIT=1'b0;
  FD \traincnt_Z[25]  (
	.Q(traincnt[25]),
	.D(traincnt_r[25]),
	.C(umr_clk)
);
defparam \traincnt_Z[25] .INIT=1'b0;
  FD \traincnt_Z[24]  (
	.Q(traincnt[24]),
	.D(traincnt_r[24]),
	.C(umr_clk)
);
defparam \traincnt_Z[24] .INIT=1'b0;
  FD \traincnt_Z[23]  (
	.Q(traincnt[23]),
	.D(traincnt_r[23]),
	.C(umr_clk)
);
defparam \traincnt_Z[23] .INIT=1'b0;
  FD \traincnt_Z[4]  (
	.Q(traincnt[4]),
	.D(traincnt_r[4]),
	.C(umr_clk)
);
defparam \traincnt_Z[4] .INIT=1'b0;
  FD \traincnt_Z[31]  (
	.Q(traincnt[31]),
	.D(traincnt_r[31]),
	.C(umr_clk)
);
defparam \traincnt_Z[31] .INIT=1'b0;
  FD \traincnt_Z[30]  (
	.Q(traincnt[30]),
	.D(traincnt_r[30]),
	.C(umr_clk)
);
defparam \traincnt_Z[30] .INIT=1'b0;
  FD \traincnt_Z[29]  (
	.Q(traincnt[29]),
	.D(traincnt_r[29]),
	.C(umr_clk)
);
defparam \traincnt_Z[29] .INIT=1'b0;
  FD \traincnt_Z[28]  (
	.Q(traincnt[28]),
	.D(traincnt_r[28]),
	.C(umr_clk)
);
defparam \traincnt_Z[28] .INIT=1'b0;
  FD \reset_gen_inst.first_reset_done_Z  (
	.Q(\reset_gen_inst.first_reset_done ),
	.D(\reset_gen_inst.first_reset_done_e_0_e ),
	.C(umr_clk)
);
defparam \reset_gen_inst.first_reset_done_Z .INIT=1'b0;
  FD \traincnt_Z[0]  (
	.Q(traincnt[0]),
	.D(traincnt_r[0]),
	.C(umr_clk)
);
defparam \traincnt_Z[0] .INIT=1'b0;
  FD \traincnt_Z[3]  (
	.Q(traincnt[3]),
	.D(traincnt_r[3]),
	.C(umr_clk)
);
defparam \traincnt_Z[3] .INIT=1'b0;
// @225:1274
  INV \hstdm_reset_i.O  (
	.I(reset_hstdm_out),
	.O(hstdm_reset_i)
);
// @225:2711
  INV \infopipe_arbiter_inst.current_set_i_1_.O  (
	.I(\infopipe_arbiter_inst.current_set [1]),
	.O(\infopipe_arbiter_inst.current_set_i [1])
);
// @225:273
  INV \hstdm_ctrl_inst.training_ctrl_word_start_i.O  (
	.I(training_ctrl_word_start),
	.O(training_ctrl_word_start_i)
);
// @225:837
  INV \hstdm_ctrl_inst.hstdm_cmd_script_ready_i.O  (
	.I(hstdm_cmd_script_ready),
	.O(hstdm_cmd_script_ready_i)
);
// @225:326
(* ASYNC_REG="TRUE" *)  FDP \ar_infopipe_reset.R1_Z  (
	.Q(infopipe_reset),
	.D(\ar_infopipe_reset.R0 ),
	.C(infopipe_clk),
	.PRE(rxrst)
);
defparam \ar_infopipe_reset.R1_Z .INIT=1'b1;
// @225:326
(* ASYNC_REG="TRUE" *)  FDP \reset_gen_inst.ar_hstdm_reset.R0_Z  (
	.Q(\reset_gen_inst.ar_hstdm_reset.R0 ),
	.D(GND),
	.C(umr_clk),
	.PRE(\reset_gen_inst.reset_out )
);
defparam \reset_gen_inst.ar_hstdm_reset.R0_Z .INIT=1'b1;
// @225:326
(* ASYNC_REG="TRUE" *)  FDP \reset_gen_inst.ar_hstdm_reset.R1_Z  (
	.Q(reset_to_ctrl),
	.D(\reset_gen_inst.ar_hstdm_reset.R0 ),
	.C(umr_clk),
	.PRE(\reset_gen_inst.reset_out )
);
defparam \reset_gen_inst.ar_hstdm_reset.R1_Z .INIT=1'b1;
// @225:326
(* ASYNC_REG="TRUE" *)  FDP \ar_infopipe_reset.R0_Z  (
	.Q(\ar_infopipe_reset.R0 ),
	.D(SIMULATION),
	.C(infopipe_clk),
	.PRE(rxrst)
);
defparam \ar_infopipe_reset.R0_Z .INIT=1'b1;
  LUT2 \traincnt_r_cZ[1]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[1]),
	.O(traincnt_r[1])
);
defparam \traincnt_r_cZ[1] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[2]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[2]),
	.O(traincnt_r[2])
);
defparam \traincnt_r_cZ[2] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[5]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[5]),
	.O(traincnt_r[5])
);
defparam \traincnt_r_cZ[5] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[6]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[6]),
	.O(traincnt_r[6])
);
defparam \traincnt_r_cZ[6] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[7]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[7]),
	.O(traincnt_r[7])
);
defparam \traincnt_r_cZ[7] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[4]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[4]),
	.O(traincnt_r[4])
);
defparam \traincnt_r_cZ[4] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[3]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[3]),
	.O(traincnt_r[3])
);
defparam \traincnt_r_cZ[3] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[0]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[0]),
	.O(traincnt_r[0])
);
defparam \traincnt_r_cZ[0] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[8]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[8]),
	.O(traincnt_r[8])
);
defparam \traincnt_r_cZ[8] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[9]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[9]),
	.O(traincnt_r[9])
);
defparam \traincnt_r_cZ[9] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[10]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[10]),
	.O(traincnt_r[10])
);
defparam \traincnt_r_cZ[10] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[11]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[11]),
	.O(traincnt_r[11])
);
defparam \traincnt_r_cZ[11] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[12]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[12]),
	.O(traincnt_r[12])
);
defparam \traincnt_r_cZ[12] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[13]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[13]),
	.O(traincnt_r[13])
);
defparam \traincnt_r_cZ[13] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[14]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[14]),
	.O(traincnt_r[14])
);
defparam \traincnt_r_cZ[14] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[15]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[15]),
	.O(traincnt_r[15])
);
defparam \traincnt_r_cZ[15] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[16]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[16]),
	.O(traincnt_r[16])
);
defparam \traincnt_r_cZ[16] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[17]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[17]),
	.O(traincnt_r[17])
);
defparam \traincnt_r_cZ[17] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[18]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[18]),
	.O(traincnt_r[18])
);
defparam \traincnt_r_cZ[18] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[19]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[19]),
	.O(traincnt_r[19])
);
defparam \traincnt_r_cZ[19] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[20]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[20]),
	.O(traincnt_r[20])
);
defparam \traincnt_r_cZ[20] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[21]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[21]),
	.O(traincnt_r[21])
);
defparam \traincnt_r_cZ[21] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[22]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[22]),
	.O(traincnt_r[22])
);
defparam \traincnt_r_cZ[22] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[23]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[23]),
	.O(traincnt_r[23])
);
defparam \traincnt_r_cZ[23] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[24]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[24]),
	.O(traincnt_r[24])
);
defparam \traincnt_r_cZ[24] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[25]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[25]),
	.O(traincnt_r[25])
);
defparam \traincnt_r_cZ[25] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[26]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[26]),
	.O(traincnt_r[26])
);
defparam \traincnt_r_cZ[26] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[27]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[27]),
	.O(traincnt_r[27])
);
defparam \traincnt_r_cZ[27] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[28]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[28]),
	.O(traincnt_r[28])
);
defparam \traincnt_r_cZ[28] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[29]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[29]),
	.O(traincnt_r[29])
);
defparam \traincnt_r_cZ[29] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[30]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[30]),
	.O(traincnt_r[30])
);
defparam \traincnt_r_cZ[30] .INIT=4'h4;
  LUT2 \traincnt_r_cZ[31]  (
	.I0(reset_to_ctrl),
	.I1(traincnt_8_0[31]),
	.O(traincnt_r[31])
);
defparam \traincnt_r_cZ[31] .INIT=4'h4;
// @225:1466
  FDR \txctrl_Z[0]  (
	.Q(txctrl[0]),
	.D(txctrl_8[0]),
	.C(umr_clk),
	.R(simulation_no_training)
);
// @225:1466
  FDR \txctrl_Z[1]  (
	.Q(txctrl[1]),
	.D(txctrl_8[1]),
	.C(umr_clk),
	.R(simulation_no_training)
);
// @225:1466
  FDR rxctrl_Z (
	.Q(rxctrl),
	.D(rxctrl_5),
	.C(umr_clk),
	.R(simulation_no_training)
);
// @225:1466
  FDS txrst_Z (
	.Q(reset_tx_out),
	.D(un8_txrstlto31),
	.C(umr_clk),
	.S(simulation_no_training)
);
// @225:1466
  FDS rxrst_Z (
	.Q(rxrst),
	.D(un8_rxrstlto31),
	.C(umr_clk),
	.S(simulation_no_training)
);
// @225:1466
  FDS hstdm_reset_Z (
	.Q(reset_hstdm_out),
	.D(un7_hstdm_resetlto31),
	.C(umr_clk),
	.S(simulation_no_training)
);
// @225:2611
  FDR \infopipe_snd_inst.infopipe_empty_local_Z  (
	.Q(\infopipe_snd_inst.infopipe_empty_local ),
	.D(infopipe_empty_in),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2704
  FDRE \infopipe_arbiter_inst.data_out_Z[0]  (
	.Q(infopipe_data_arbiter[0]),
	.D(\infopipe_arbiter_inst.data_out_4 [0]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_arbiter_inst.current_set_i [1])
);
// @225:2704
  FDRE \infopipe_arbiter_inst.data_out_Z[1]  (
	.Q(infopipe_data_arbiter[1]),
	.D(\infopipe_arbiter_inst.data_out_4 [1]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_arbiter_inst.current_set_i [1])
);
// @225:2704
  FDRE \infopipe_arbiter_inst.data_out_Z[2]  (
	.Q(infopipe_data_arbiter[2]),
	.D(\infopipe_arbiter_inst.data_out_4 [2]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_arbiter_inst.current_set_i [1])
);
// @225:2704
  FDRE \infopipe_arbiter_inst.data_out_Z[3]  (
	.Q(infopipe_data_arbiter[3]),
	.D(\infopipe_arbiter_inst.data_out_4 [3]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_arbiter_inst.current_set_i [1])
);
// @225:2704
  FDRE \infopipe_arbiter_inst.data_out_Z[4]  (
	.Q(infopipe_data_arbiter[4]),
	.D(\infopipe_arbiter_inst.data_out_4 [4]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_arbiter_inst.current_set_i [1])
);
// @225:2704
  FDRE \infopipe_arbiter_inst.data_out_Z[5]  (
	.Q(infopipe_data_arbiter[5]),
	.D(\infopipe_arbiter_inst.data_out_4 [5]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_arbiter_inst.current_set_i [1])
);
// @225:2704
  FDRE \infopipe_arbiter_inst.data_out_Z[6]  (
	.Q(infopipe_data_arbiter[6]),
	.D(\infopipe_arbiter_inst.data_out_4 [6]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_arbiter_inst.current_set_i [1])
);
// @225:2704
  FDRE \infopipe_arbiter_inst.data_out_Z[7]  (
	.Q(infopipe_data_arbiter[7]),
	.D(\infopipe_arbiter_inst.data_out_4 [7]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_arbiter_inst.current_set_i [1])
);
// @225:2704
  FDRE \infopipe_arbiter_inst.data_out_Z[8]  (
	.Q(infopipe_data_arbiter[8]),
	.D(\infopipe_arbiter_inst.data_out_4 [8]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_arbiter_inst.current_set_i [1])
);
// @225:2704
  FDRE \infopipe_arbiter_inst.data_out_Z[9]  (
	.Q(infopipe_data_arbiter[9]),
	.D(\infopipe_arbiter_inst.data_out_4 [9]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_arbiter_inst.current_set_i [1])
);
// @225:2704
  FDRE \infopipe_arbiter_inst.data_out_Z[10]  (
	.Q(infopipe_data_arbiter[10]),
	.D(\infopipe_arbiter_inst.data_out_4 [10]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_arbiter_inst.current_set_i [1])
);
// @225:2704
  FDRE \infopipe_arbiter_inst.data_out_Z[11]  (
	.Q(infopipe_data_arbiter[11]),
	.D(\infopipe_arbiter_inst.data_out_4 [11]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_arbiter_inst.current_set_i [1])
);
// @225:2704
  FDRE \infopipe_arbiter_inst.data_out_Z[12]  (
	.Q(infopipe_data_arbiter[12]),
	.D(\infopipe_arbiter_inst.data_out_4 [12]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_arbiter_inst.current_set_i [1])
);
// @225:2704
  FDRE \infopipe_arbiter_inst.data_out_Z[13]  (
	.Q(infopipe_data_arbiter[13]),
	.D(\infopipe_arbiter_inst.data_out_4 [13]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_arbiter_inst.current_set_i [1])
);
// @225:2704
  FDRE \infopipe_arbiter_inst.data_out_Z[14]  (
	.Q(infopipe_data_arbiter[14]),
	.D(\infopipe_arbiter_inst.data_out_4 [14]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_arbiter_inst.current_set_i [1])
);
// @225:2704
  FDRE \infopipe_arbiter_inst.data_out_Z[15]  (
	.Q(infopipe_data_arbiter[15]),
	.D(\infopipe_arbiter_inst.data_out_4 [15]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_arbiter_inst.current_set_i [1])
);
// @225:2704
  FDRE \infopipe_arbiter_inst.data_out_Z[16]  (
	.Q(infopipe_data_arbiter[16]),
	.D(\infopipe_arbiter_inst.data_out_4 [16]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_arbiter_inst.current_set_i [1])
);
// @225:2704
  FDRE \infopipe_arbiter_inst.data_out_Z[17]  (
	.Q(infopipe_data_arbiter[17]),
	.D(\infopipe_arbiter_inst.data_out_4 [17]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_arbiter_inst.current_set_i [1])
);
// @225:2704
  FDRE \infopipe_arbiter_inst.data_out_Z[18]  (
	.Q(infopipe_data_arbiter[18]),
	.D(\infopipe_arbiter_inst.current_set [1]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_arbiter_inst.current_set_i [1])
);
// @225:2704
  FDRE \infopipe_arbiter_inst.data_out_Z[32]  (
	.Q(infopipe_data_arbiter[32]),
	.D(VCC),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_arbiter_inst.current_set_i [1])
);
// @225:2704
  FDR \infopipe_arbiter_inst.data_sent_out_Z[0]  (
	.Q(infopipe_send_ack_set[0]),
	.D(\infopipe_arbiter_inst.data_sent_out_5 [0]),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:844
  FDRE \hstdm_ctrl_inst.command_data_out_1_Z[0]  (
	.Q(hstdm_cmd_script_data[0]),
	.D(\hstdm_ctrl_inst.command_data [0]),
	.C(umr_clk),
	.R(umr_reset),
	.CE(\hstdm_ctrl_inst.command_data_out_0_sqmuxa )
);
// @225:844
  FDRE \hstdm_ctrl_inst.command_data_out_1_Z[1]  (
	.Q(hstdm_cmd_script_data[1]),
	.D(\hstdm_ctrl_inst.command_data [1]),
	.C(umr_clk),
	.R(umr_reset),
	.CE(\hstdm_ctrl_inst.command_data_out_0_sqmuxa )
);
// @225:844
  FDRE \hstdm_ctrl_inst.command_data_out_1_Z[2]  (
	.Q(hstdm_cmd_script_data[2]),
	.D(\hstdm_ctrl_inst.command_data [2]),
	.C(umr_clk),
	.R(umr_reset),
	.CE(\hstdm_ctrl_inst.command_data_out_0_sqmuxa )
);
// @225:844
  FDRE \hstdm_ctrl_inst.command_data_out_1_Z[3]  (
	.Q(hstdm_cmd_script_data[3]),
	.D(\hstdm_ctrl_inst.command_data [3]),
	.C(umr_clk),
	.R(umr_reset),
	.CE(\hstdm_ctrl_inst.command_data_out_0_sqmuxa )
);
// @225:844
  FDRE \hstdm_ctrl_inst.command_data_out_1_Z[4]  (
	.Q(hstdm_cmd_script_data[4]),
	.D(\hstdm_ctrl_inst.command_data [4]),
	.C(umr_clk),
	.R(umr_reset),
	.CE(\hstdm_ctrl_inst.command_data_out_0_sqmuxa )
);
// @225:844
  FDRE \hstdm_ctrl_inst.command_data_out_1_Z[5]  (
	.Q(hstdm_cmd_script_data[5]),
	.D(\hstdm_ctrl_inst.command_data [5]),
	.C(umr_clk),
	.R(umr_reset),
	.CE(\hstdm_ctrl_inst.command_data_out_0_sqmuxa )
);
// @225:844
  FDRE \hstdm_ctrl_inst.command_data_out_1_Z[6]  (
	.Q(hstdm_cmd_script_data[6]),
	.D(\hstdm_ctrl_inst.command_data [6]),
	.C(umr_clk),
	.R(umr_reset),
	.CE(\hstdm_ctrl_inst.command_data_out_0_sqmuxa )
);
// @225:844
  FDRE \hstdm_ctrl_inst.command_data_out_1_Z[7]  (
	.Q(hstdm_cmd_script_data[7]),
	.D(\hstdm_ctrl_inst.command_data [7]),
	.C(umr_clk),
	.R(umr_reset),
	.CE(\hstdm_ctrl_inst.command_data_out_0_sqmuxa )
);
// @225:844
  FDRE \hstdm_ctrl_inst.command_data_out_1_Z[8]  (
	.Q(hstdm_cmd_script_data[8]),
	.D(\hstdm_ctrl_inst.command_data [8]),
	.C(umr_clk),
	.R(umr_reset),
	.CE(\hstdm_ctrl_inst.command_data_out_0_sqmuxa )
);
// @225:844
  FDRE \hstdm_ctrl_inst.command_data_out_1_Z[9]  (
	.Q(hstdm_cmd_script_data[9]),
	.D(\hstdm_ctrl_inst.command_data [9]),
	.C(umr_clk),
	.R(umr_reset),
	.CE(\hstdm_ctrl_inst.command_data_out_0_sqmuxa )
);
// @225:844
  FDRE \hstdm_ctrl_inst.command_data_out_1_Z[10]  (
	.Q(hstdm_cmd_script_data[10]),
	.D(\hstdm_ctrl_inst.command_data [10]),
	.C(umr_clk),
	.R(umr_reset),
	.CE(\hstdm_ctrl_inst.command_data_out_0_sqmuxa )
);
// @225:844
  FDRE \hstdm_ctrl_inst.command_data_out_1_Z[11]  (
	.Q(hstdm_cmd_script_data[11]),
	.D(\hstdm_ctrl_inst.command_data [11]),
	.C(umr_clk),
	.R(umr_reset),
	.CE(\hstdm_ctrl_inst.command_data_out_0_sqmuxa )
);
// @225:844
  FDRE \hstdm_ctrl_inst.command_data_out_1_Z[12]  (
	.Q(hstdm_cmd_script_data[12]),
	.D(\hstdm_ctrl_inst.command_data [12]),
	.C(umr_clk),
	.R(umr_reset),
	.CE(\hstdm_ctrl_inst.command_data_out_0_sqmuxa )
);
// @225:844
  FDRE \hstdm_ctrl_inst.command_data_out_1_Z[13]  (
	.Q(hstdm_cmd_script_data[13]),
	.D(\hstdm_ctrl_inst.command_data [13]),
	.C(umr_clk),
	.R(umr_reset),
	.CE(\hstdm_ctrl_inst.command_data_out_0_sqmuxa )
);
// @225:844
  FDRE \hstdm_ctrl_inst.command_data_out_1_Z[14]  (
	.Q(hstdm_cmd_script_data[14]),
	.D(\hstdm_ctrl_inst.command_data [14]),
	.C(umr_clk),
	.R(umr_reset),
	.CE(\hstdm_ctrl_inst.command_data_out_0_sqmuxa )
);
// @225:844
  FDRE \hstdm_ctrl_inst.command_data_out_1_Z[15]  (
	.Q(hstdm_cmd_script_data[15]),
	.D(\hstdm_ctrl_inst.command_data [15]),
	.C(umr_clk),
	.R(umr_reset),
	.CE(\hstdm_ctrl_inst.command_data_out_0_sqmuxa )
);
// @225:844
  FDRE \hstdm_ctrl_inst.command_data_out_1_Z[16]  (
	.Q(hstdm_cmd_script_data[16]),
	.D(\hstdm_ctrl_inst.command_data [16]),
	.C(umr_clk),
	.R(umr_reset),
	.CE(\hstdm_ctrl_inst.command_data_out_0_sqmuxa )
);
// @225:844
  FDRE \hstdm_ctrl_inst.command_data_out_1_Z[17]  (
	.Q(hstdm_cmd_script_data[17]),
	.D(\hstdm_ctrl_inst.command_data [17]),
	.C(umr_clk),
	.R(umr_reset),
	.CE(\hstdm_ctrl_inst.command_data_out_0_sqmuxa )
);
// @225:837
  FDR \hstdm_ctrl_inst.command_status_Z[30]  (
	.Q(\hstdm_ctrl_inst.command_status [30]),
	.D(hstdm_cmd_script_ready_i),
	.C(umr_clk),
	.R(umr_reset)
);
// @225:837
  FDR \hstdm_ctrl_inst.command_status_Z[31]  (
	.Q(\hstdm_ctrl_inst.command_status [31]),
	.D(N_797_i),
	.C(umr_clk),
	.R(umr_reset)
);
// @225:679
  FDR \hstdm_ctrl_inst.TC_reset_c_pulse_Z  (
	.Q(\hstdm_ctrl_inst.TC_reset_c_pulse ),
	.D(\hstdm_ctrl_inst.TC_reset_c_pulse_4 ),
	.C(umr_clk),
	.R(\hstdm_ctrl_inst.command_issue_pulse_0_sqmuxa )
);
// @225:679
  FDR \hstdm_ctrl_inst.TC_end_c_Z  (
	.Q(\hstdm_ctrl_inst.TC_end_c ),
	.D(\hstdm_ctrl_inst.TC_end_c_4 ),
	.C(umr_clk),
	.R(\hstdm_ctrl_inst.command_issue_pulse_0_sqmuxa )
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[0]  (
	.Q(\hstdm_ctrl_inst.data_in [0]),
	.D(N_571),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[1]  (
	.Q(\hstdm_ctrl_inst.data_in [1]),
	.D(N_909),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[2]  (
	.Q(\hstdm_ctrl_inst.data_in [2]),
	.D(N_910),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[3]  (
	.Q(\hstdm_ctrl_inst.data_in [3]),
	.D(N_574),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[4]  (
	.Q(\hstdm_ctrl_inst.data_in [4]),
	.D(N_575),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[5]  (
	.Q(i1_i_0),
	.D(N_972),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[6]  (
	.Q(i1_i),
	.D(N_950),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[7]  (
	.Q(\hstdm_ctrl_inst.data_in [7]),
	.D(N_951),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[8]  (
	.Q(\hstdm_ctrl_inst.data_in [8]),
	.D(N_952),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[9]  (
	.Q(\hstdm_ctrl_inst.data_in [9]),
	.D(N_953),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[10]  (
	.Q(\hstdm_ctrl_inst.data_in [10]),
	.D(N_954),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[11]  (
	.Q(\hstdm_ctrl_inst.data_in [11]),
	.D(N_955),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[12]  (
	.Q(\hstdm_ctrl_inst.data_in [12]),
	.D(N_956),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[13]  (
	.Q(\hstdm_ctrl_inst.data_in [13]),
	.D(N_957),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[14]  (
	.Q(\hstdm_ctrl_inst.data_in [14]),
	.D(N_958),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[15]  (
	.Q(\hstdm_ctrl_inst.data_in [15]),
	.D(N_959),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[16]  (
	.Q(\hstdm_ctrl_inst.data_in [16]),
	.D(N_960),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[17]  (
	.Q(\hstdm_ctrl_inst.data_in [17]),
	.D(N_961),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[18]  (
	.Q(\hstdm_ctrl_inst.data_in [18]),
	.D(N_971),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[19]  (
	.Q(\hstdm_ctrl_inst.data_in [19]),
	.D(N_962),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[20]  (
	.Q(\hstdm_ctrl_inst.data_in [20]),
	.D(N_963),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[21]  (
	.Q(\hstdm_ctrl_inst.data_in [21]),
	.D(N_964),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[22]  (
	.Q(\hstdm_ctrl_inst.data_in [22]),
	.D(N_965),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[23]  (
	.Q(\hstdm_ctrl_inst.data_in [23]),
	.D(N_966),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[24]  (
	.Q(\hstdm_ctrl_inst.data_in [24]),
	.D(N_967),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[25]  (
	.Q(\hstdm_ctrl_inst.data_in [25]),
	.D(N_968),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[26]  (
	.Q(\hstdm_ctrl_inst.data_in [26]),
	.D(N_970),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
// @225:566
  FDRE \hstdm_ctrl_inst.data_in_Z[27]  (
	.Q(\hstdm_ctrl_inst.data_in [27]),
	.D(N_969),
	.C(umr_clk),
	.R(umr_reset),
	.CE(data_in_2_sqmuxa_0_i)
);
  FDR \infopipe_snd_inst.infopipe_data_out_Z[3]  (
	.Q(infopipe_data_out[3]),
	.D(infopipe_data_out_0_sqmuxa_set),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
  FDR \infopipe_snd_inst.infopipe_data_out_Z[2]  (
	.Q(infopipe_data_out[2]),
	.D(infopipe_data_out_0_sqmuxa_set_0),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
  FDR \infopipe_snd_inst.infopipe_data_out_Z[1]  (
	.Q(infopipe_data_out[1]),
	.D(infopipe_data_out_0_sqmuxa_set_1),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
  FDR \infopipe_snd_inst.infopipe_data_out_Z[0]  (
	.Q(infopipe_data_out[0]),
	.D(infopipe_data_out_0_sqmuxa_set_2),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:651
  LUT4 \hstdm_ctrl_inst.data_out_6_iv[30]  (
	.I0(hstdm_status[30]),
	.I1(\hstdm_ctrl_inst.data_in [27]),
	.I2(\hstdm_ctrl_inst.command_status [30]),
	.I3(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [30])
);
defparam \hstdm_ctrl_inst.data_out_6_iv[30] .INIT=16'hEAC0;
// @225:651
  LUT4 \hstdm_ctrl_inst.data_out_6_iv[31]  (
	.I0(\hstdm_ctrl_inst.command_status [31]),
	.I1(hstdm_status[31]),
	.I2(\hstdm_ctrl_inst.data_in [27]),
	.I3(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [31])
);
defparam \hstdm_ctrl_inst.data_out_6_iv[31] .INIT=16'hECA0;
// @225:651
  LUT6 \hstdm_ctrl_inst.data_out_6_iv[20]  (
	.I0(hstdm_status[20]),
	.I1(\hstdm_ctrl_inst.un18lt5 ),
	.I2(\hstdm_ctrl_inst.un1_addr_of_data_out_6_0 ),
	.I3(\hstdm_ctrl_inst.un1_addr_of_data_out_7 ),
	.I4(\hstdm_ctrl_inst.un1_addr_of_data_out_6_1 ),
	.I5(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [20])
);
defparam \hstdm_ctrl_inst.data_out_6_iv[20] .INIT=64'hFFBAFFAAFF30FF00;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[29]  (
	.I0(hstdm_status[29]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [29])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[29] .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[28]  (
	.I0(hstdm_status[28]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [28])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[28] .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[27]  (
	.I0(hstdm_status[27]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [27])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[27] .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[26]  (
	.I0(hstdm_status[26]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [26])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[26] .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[25]  (
	.I0(hstdm_status[25]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [25])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[25] .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[24]  (
	.I0(hstdm_status[24]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [24])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[24] .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[23]  (
	.I0(hstdm_status[23]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [23])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[23] .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[22]  (
	.I0(hstdm_status[22]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [22])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[22] .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[21]  (
	.I0(hstdm_status[21]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [21])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[21] .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[19]  (
	.I0(hstdm_status[19]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [19])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[19] .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[18]  (
	.I0(hstdm_status[18]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [18])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[18] .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[17]  (
	.I0(hstdm_status[17]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [17])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[17] .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[16]  (
	.I0(hstdm_status[16]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [16])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[16] .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[15]  (
	.I0(hstdm_status[15]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [15])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[15] .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[14]  (
	.I0(hstdm_status[14]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [14])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[14] .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[13]  (
	.I0(hstdm_status[13]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [13])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[13] .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[12]  (
	.I0(hstdm_status[12]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [12])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[12] .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[11]  (
	.I0(hstdm_status[11]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [11])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[11] .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[10]  (
	.I0(hstdm_status[10]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [10])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[10] .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[9]  (
	.I0(hstdm_status[9]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [9])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[9] .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[7]  (
	.I0(hstdm_status[7]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [7])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[7] .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[6]  (
	.I0(hstdm_status[6]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [6])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[6] .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[5]  (
	.I0(hstdm_status[5]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [5])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[5] .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[4]  (
	.I0(hstdm_status[4]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [4])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[4] .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[2]  (
	.I0(hstdm_status[2]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [2])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[2] .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[1]  (
	.I0(hstdm_status[1]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [1])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[1] .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_6_cZ[0]  (
	.I0(hstdm_status[0]),
	.I1(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [0])
);
defparam \hstdm_ctrl_inst.data_out_6_cZ[0] .INIT=4'h8;
// @225:651
  LUT6 \hstdm_ctrl_inst.un1_data_out15_1_cZ  (
	.I0(\hstdm_ctrl_inst.un1_addr_of_data_out_11 ),
	.I1(\hstdm_ctrl_inst.data_out18_1_4 ),
	.I2(\hstdm_ctrl_inst.data_out17_2_0 ),
	.I3(\hstdm_ctrl_inst.data_out15_1_4 ),
	.I4(\hstdm_ctrl_inst.data_out15_16 ),
	.I5(\hstdm_ctrl_inst.un1_addr_of_data_out_10_13 ),
	.O(\hstdm_ctrl_inst.un1_data_out15_1 )
);
defparam \hstdm_ctrl_inst.un1_data_out15_1_cZ .INIT=64'hFF444444FFF4F4F4;
// @225:658
  LUT6 \hstdm_ctrl_inst.un1_addr_of_data_out_7_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [0]),
	.I1(\hstdm_ctrl_inst.data_out15_1 ),
	.I2(\hstdm_ctrl_inst.addr_of_data_out [3]),
	.I3(N_935),
	.I4(\hstdm_ctrl_inst.un18lt5 ),
	.I5(\hstdm_ctrl_inst.data_out15_16 ),
	.O(\hstdm_ctrl_inst.un1_addr_of_data_out_7 )
);
defparam \hstdm_ctrl_inst.un1_addr_of_data_out_7_cZ .INIT=64'h8040000000000000;
// @225:658
  LUT2 \hstdm_ctrl_inst.un1_addr_of_data_out_6_1_cZ  (
	.I0(\hstdm_ctrl_inst.addr_of_data_out [3]),
	.I1(\hstdm_ctrl_inst.data_out_cnst_m_16 [3]),
	.O(\hstdm_ctrl_inst.un1_addr_of_data_out_6_1 )
);
defparam \hstdm_ctrl_inst.un1_addr_of_data_out_6_1_cZ .INIT=4'h8;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out_cnst_m_1_2_cZ[3]  (
	.I0(\hstdm_ctrl_inst.addr_of_data_out [3]),
	.I1(\hstdm_ctrl_inst.data_out_cnst_m_16 [3]),
	.O(\hstdm_ctrl_inst.data_out_cnst_m_1_2 [3])
);
defparam \hstdm_ctrl_inst.data_out_cnst_m_1_2_cZ[3] .INIT=4'h4;
// @225:651
  LUT6 \hstdm_ctrl_inst.data_out15_16_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [7]),
	.I1(\hstdm_ctrl_inst.data_in [1]),
	.I2(i1_i_0),
	.I3(un1_data_in_11_cry_4_O[0]),
	.I4(N_935),
	.I5(\hstdm_ctrl_inst.addr_of_data_out [2]),
	.O(\hstdm_ctrl_inst.data_out15_16 )
);
defparam \hstdm_ctrl_inst.data_out15_16_cZ .INIT=64'h0000000000050101;
// @225:651
  LUT6 \hstdm_ctrl_inst.data_out_cnst_m_16_cZ[3]  (
	.I0(\hstdm_ctrl_inst.data_in [7]),
	.I1(\hstdm_ctrl_inst.data_in [1]),
	.I2(\hstdm_ctrl_inst.data_in [0]),
	.I3(i1_i_0),
	.I4(un1_data_in_11_cry_4_O[0]),
	.I5(N_935),
	.O(\hstdm_ctrl_inst.data_out_cnst_m_16 [3])
);
defparam \hstdm_ctrl_inst.data_out_cnst_m_16_cZ[3] .INIT=64'h0000005000010001;
// @225:1467
  LUT6 \hstdm_ctrl_inst.rxctrl_5_u  (
	.I0(SIMULATION),
	.I1(SIMULATION_DISABLE_TRAINING),
	.I2(training_ctrl_rx_start),
	.I3(un11_txctrl),
	.I4(un6_rxctrl),
	.I5(training_not_end),
	.O(rxctrl_5)
);
defparam \hstdm_ctrl_inst.rxctrl_5_u .INIT=64'h5050725000002200;
  LUT3 \hstdm_ctrl_inst.addr_of_data_out[4]  (
	.I0(\hstdm_ctrl_inst.data_in [4]),
	.I1(un1_data_in_11_cry_4_O[3]),
	.I2(N_935),
	.O(\hstdm_ctrl_inst.un18lt5 )
);
defparam \hstdm_ctrl_inst.addr_of_data_out[4] .INIT=8'hCA;
  LUT6 \hstdm_ctrl_inst.txctrl_8[0]  (
	.I0(SIMULATION),
	.I1(SIMULATION_DISABLE_TRAINING),
	.I2(txctrl1_inv_delay),
	.I3(un11_txctrl),
	.I4(training_not_end),
	.I5(un9_txctrl),
	.O(txctrl_8[0])
);
defparam \hstdm_ctrl_inst.txctrl_8[0] .INIT=64'h88888888FAD8AA88;
  LUT5 \hstdm_ctrl_inst.txctrl_8[1]  (
	.I0(SIMULATION),
	.I1(SIMULATION_DISABLE_TRAINING),
	.I2(training_ctrl_word_start),
	.I3(txctrl_4[1]),
	.I4(training_not_end),
	.O(txctrl_8[1])
);
defparam \hstdm_ctrl_inst.txctrl_8[1] .INIT=32'hFAD8AA88;
  LUT6 \infopipe_snd_inst.infopipe_data_out_0_sqmuxa_set  (
	.I0(\infopipe_snd_inst.infopipe_data_out_5_sn_N_13_mux ),
	.I1(infopipe_data_arbiter[11]),
	.I2(N_557),
	.I3(\infopipe_snd_inst.infopipe_data_out_0_sqmuxa ),
	.I4(\infopipe_snd_inst.infopipe_data_out_5_sn_N_15_mux ),
	.I5(N_552),
	.O(infopipe_data_out_0_sqmuxa_set)
);
defparam \infopipe_snd_inst.infopipe_data_out_0_sqmuxa_set .INIT=64'hFFE4FFF5FFE4FFA0;
  LUT6 \infopipe_snd_inst.infopipe_data_out_0_sqmuxa_set_0  (
	.I0(infopipe_data_arbiter[10]),
	.I1(\infopipe_snd_inst.infopipe_data_out_5_sn_N_13_mux ),
	.I2(N_557),
	.I3(\infopipe_snd_inst.infopipe_data_out_0_sqmuxa ),
	.I4(\infopipe_snd_inst.infopipe_data_out_5_sn_N_15_mux ),
	.I5(N_551),
	.O(infopipe_data_out_0_sqmuxa_set_0)
);
defparam \infopipe_snd_inst.infopipe_data_out_0_sqmuxa_set_0 .INIT=64'hFFE2FFF3FFE2FFC0;
  LUT6 \infopipe_snd_inst.infopipe_data_out_0_sqmuxa_set_1  (
	.I0(\infopipe_snd_inst.infopipe_data_out_5_sn_N_13_mux ),
	.I1(infopipe_data_arbiter[9]),
	.I2(\infopipe_snd_inst.infopipe_data_out_0_sqmuxa ),
	.I3(N_556),
	.I4(\infopipe_snd_inst.infopipe_data_out_5_sn_N_15_mux ),
	.I5(N_550),
	.O(infopipe_data_out_0_sqmuxa_set_1)
);
defparam \infopipe_snd_inst.infopipe_data_out_0_sqmuxa_set_1 .INIT=64'hFEF4FFF5FEF4FAF0;
  LUT6 \infopipe_snd_inst.infopipe_data_out_0_sqmuxa_set_2  (
	.I0(\infopipe_snd_inst.infopipe_data_out_5_sn_N_13_mux ),
	.I1(infopipe_data_arbiter[8]),
	.I2(N_555),
	.I3(\infopipe_snd_inst.infopipe_data_out_0_sqmuxa ),
	.I4(\infopipe_snd_inst.infopipe_data_out_5_sn_N_15_mux ),
	.I5(N_549),
	.O(infopipe_data_out_0_sqmuxa_set_2)
);
defparam \infopipe_snd_inst.infopipe_data_out_0_sqmuxa_set_2 .INIT=64'hFFE4FFF5FFE4FFA0;
// @225:649
  LUT6 \hstdm_ctrl_inst.N_947_i  (
	.I0(\hstdm_ctrl_inst.data_in [3]),
	.I1(\hstdm_ctrl_inst.data_in [2]),
	.I2(\hstdm_ctrl_inst.enable_input_pulse ),
	.I3(N_891),
	.I4(system_capim_rd_in),
	.I5(N_435),
	.O(N_947_i)
);
defparam \hstdm_ctrl_inst.N_947_i .INIT=64'hFFFFF0F1FFFFFFFF;
// @225:679
  LUT6 \hstdm_ctrl_inst.self_test_start_tx_out_e[1]  (
	.I0(hstdm_status_3_0[29]),
	.I1(\hstdm_ctrl_inst.data_in [4]),
	.I2(\hstdm_ctrl_inst.data_in [3]),
	.I3(N_36),
	.I4(\hstdm_ctrl_inst.un1_command_data16_2_23 ),
	.I5(\hstdm_ctrl_inst.un1_command_data16_2_24 ),
	.O(\hstdm_ctrl_inst.self_test_start_tx_out_0 )
);
defparam \hstdm_ctrl_inst.self_test_start_tx_out_e[1] .INIT=64'hAAAAAAAAAAAA32AA;
// @225:1467
  LUT5 \hstdm_ctrl_inst.training_tx_done_6_u  (
	.I0(SIMULATION),
	.I1(SIMULATION_DISABLE_TRAINING),
	.I2(training_ctrl_end),
	.I3(reset_to_ctrl),
	.I4(traincnt23),
	.O(training_tx_done_6)
);
defparam \hstdm_ctrl_inst.training_tx_done_6_u .INIT=32'h50D872FA;
// @225:572
  LUT5 \hstdm_ctrl_inst.data_in_2_sqmuxa_0_i  (
	.I0(N_896),
	.I1(N_435),
	.I2(system_capim_rd_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(data_in_2_sqmuxa_0_i)
);
defparam \hstdm_ctrl_inst.data_in_2_sqmuxa_0_i .INIT=32'hFFFFFF80;
// @225:679
  LUT4 \hstdm_ctrl_inst.self_test_start_rx_out_e[0]  (
	.I0(i1_i),
	.I1(\hstdm_ctrl_inst.data_in [3]),
	.I2(hstdm_status_3_0[30]),
	.I3(un1_command_data16_2),
	.O(\hstdm_ctrl_inst.self_test_start_rx_out )
);
defparam \hstdm_ctrl_inst.self_test_start_rx_out_e[0] .INIT=16'hF0A2;
// @225:679
  LUT4 \hstdm_ctrl_inst.self_test_start_rx_out_e[1]  (
	.I0(\hstdm_ctrl_inst.data_in [3]),
	.I1(i1_i),
	.I2(hstdm_status_3_0[28]),
	.I3(un1_command_data16_2),
	.O(\hstdm_ctrl_inst.self_test_start_rx_out_0 )
);
defparam \hstdm_ctrl_inst.self_test_start_rx_out_e[1] .INIT=16'hF0C8;
// @225:679
  LUT6 \hstdm_ctrl_inst.self_test_start_tx_out_e[0]  (
	.I0(\hstdm_ctrl_inst.data_in [4]),
	.I1(hstdm_status_3_0[31]),
	.I2(\hstdm_ctrl_inst.data_in [3]),
	.I3(N_36),
	.I4(\hstdm_ctrl_inst.un1_command_data16_2_23 ),
	.I5(\hstdm_ctrl_inst.un1_command_data16_2_24 ),
	.O(\hstdm_ctrl_inst.self_test_start_tx_out )
);
defparam \hstdm_ctrl_inst.self_test_start_tx_out_e[0] .INIT=64'hCCCCCCCCCCCC45CC;
// @225:1462
  LUT6 \hstdm_ctrl_inst.training_not_end  (
	.I0(training_ctrl_end),
	.I1(\hstdm_ctrl_inst.un1_traincnt_1_2 ),
	.I2(un9_txctrl_2),
	.I3(un6_rxctrl_2),
	.I4(un1_traincnt_1_28),
	.I5(\hstdm_ctrl_inst.un1_traincnt_1_1_4 ),
	.O(training_not_end)
);
defparam \hstdm_ctrl_inst.training_not_end .INIT=64'h1555555555555555;
// @225:688
  LUT4 \hstdm_ctrl_inst.TC_start_tx_word_c_4_0_a2_0_a2_0  (
	.I0(i1_i_0),
	.I1(\hstdm_ctrl_inst.enable_input_pulse ),
	.I2(\hstdm_ctrl_inst.data_in [4]),
	.I3(N_348),
	.O(N_430)
);
defparam \hstdm_ctrl_inst.TC_start_tx_word_c_4_0_a2_0_a2_0 .INIT=16'h0800;
// @225:635
  LUT4 \hstdm_ctrl_inst.enable_output_1_i_a2_0  (
	.I0(i1_i_0),
	.I1(\hstdm_ctrl_inst.data_in [27]),
	.I2(\hstdm_ctrl_inst.data_in [4]),
	.I3(N_348),
	.O(N_435)
);
defparam \hstdm_ctrl_inst.enable_output_1_i_a2_0 .INIT=16'h0100;
  LUT6 \infopipe_snd_inst.infopipe_data_out_5_8[0]  (
	.I0(\infopipe_snd_inst.state [0]),
	.I1(infopipe_data_arbiter[4]),
	.I2(infopipe_data_arbiter[0]),
	.I3(infopipe_data_arbiter[12]),
	.I4(\infopipe_snd_inst.sndcnt [1]),
	.I5(un1_sndcnt_c4),
	.O(N_549)
);
defparam \infopipe_snd_inst.infopipe_data_out_5_8[0] .INIT=64'h8888AA00A0A0A0A0;
  LUT6 \infopipe_snd_inst.infopipe_data_out_5_8[1]  (
	.I0(\infopipe_snd_inst.sndcnt [1]),
	.I1(infopipe_data_arbiter[5]),
	.I2(infopipe_data_arbiter[13]),
	.I3(infopipe_data_arbiter[1]),
	.I4(\infopipe_snd_inst.state [0]),
	.I5(un1_sndcnt_c4),
	.O(N_550)
);
defparam \infopipe_snd_inst.infopipe_data_out_5_8[1] .INIT=64'hD8D80000FF000000;
  LUT6 \infopipe_snd_inst.infopipe_data_out_5_8[2]  (
	.I0(infopipe_data_arbiter[14]),
	.I1(\infopipe_snd_inst.state [0]),
	.I2(infopipe_data_arbiter[2]),
	.I3(infopipe_data_arbiter[6]),
	.I4(\infopipe_snd_inst.sndcnt [1]),
	.I5(un1_sndcnt_c4),
	.O(N_551)
);
defparam \infopipe_snd_inst.infopipe_data_out_5_8[2] .INIT=64'hCC008888C0C0C0C0;
  LUT6 \infopipe_snd_inst.infopipe_data_out_5_8[3]  (
	.I0(infopipe_data_arbiter[15]),
	.I1(\infopipe_snd_inst.state [0]),
	.I2(infopipe_data_arbiter[3]),
	.I3(\infopipe_snd_inst.sndcnt [1]),
	.I4(infopipe_data_arbiter[7]),
	.I5(un1_sndcnt_c4),
	.O(N_552)
);
defparam \infopipe_snd_inst.infopipe_data_out_5_8[3] .INIT=64'hCC880088C0C0C0C0;
// @225:770
  LUT6 \hstdm_ctrl_inst.N_487_i  (
	.I0(\hstdm_ctrl_inst.TC_start_tx_bit_c ),
	.I1(\hstdm_ctrl_inst.TC_start_rx_bit_c ),
	.I2(\hstdm_ctrl_inst.TC_start_tx_word_c ),
	.I3(\hstdm_ctrl_inst.tc_status [0]),
	.I4(\hstdm_ctrl_inst.tc_status [1]),
	.I5(N_490),
	.O(N_487_i)
);
defparam \hstdm_ctrl_inst.N_487_i .INIT=64'h00000000FFF033AA;
// @225:770
  LUT4 \hstdm_ctrl_inst.un1_tc_status26_9_i_cZ  (
	.I0(\hstdm_ctrl_inst.TC_reset_c_pulse ),
	.I1(\hstdm_ctrl_inst.tc_pause_cnt [4]),
	.I2(\hstdm_ctrl_inst.tc_status [2]),
	.I3(ANC0_3),
	.O(\hstdm_ctrl_inst.un1_tc_status26_9_i )
);
defparam \hstdm_ctrl_inst.un1_tc_status26_9_i_cZ .INIT=16'hABAA;
// @225:679
  LUT5 \hstdm_ctrl_inst.command_datace[16]  (
	.I0(\hstdm_ctrl_inst.data_in [26]),
	.I1(\hstdm_ctrl_inst.data_in [24]),
	.I2(\hstdm_ctrl_inst.enable_input_pulse ),
	.I3(\hstdm_ctrl_inst.data_in [25]),
	.I4(\hstdm_ctrl_inst.data_in [27]),
	.O(command_datace[16])
);
defparam \hstdm_ctrl_inst.command_datace[16] .INIT=32'h00400000;
// @225:679
  LUT5 \hstdm_ctrl_inst.command_datace[0]  (
	.I0(\hstdm_ctrl_inst.data_in [26]),
	.I1(\hstdm_ctrl_inst.enable_input_pulse ),
	.I2(\hstdm_ctrl_inst.data_in [25]),
	.I3(\hstdm_ctrl_inst.data_in [24]),
	.I4(\hstdm_ctrl_inst.data_in [27]),
	.O(command_datace[0])
);
defparam \hstdm_ctrl_inst.command_datace[0] .INIT=32'h00400000;
// @225:770
  LUT6 \hstdm_ctrl_inst.N_18_0_m_i  (
	.I0(\hstdm_ctrl_inst.tc_pause_cnt [2]),
	.I1(\hstdm_ctrl_inst.tc_pause_cnt [4]),
	.I2(\hstdm_ctrl_inst.tc_pause_cnt [3]),
	.I3(\hstdm_ctrl_inst.tc_pause_cnt [1]),
	.I4(\hstdm_ctrl_inst.tc_pause_cnt [0]),
	.I5(N_454),
	.O(N_18_0_m_i)
);
defparam \hstdm_ctrl_inst.N_18_0_m_i .INIT=64'hFFFFFFFFF0F0F0A4;
// @225:1427
  LUT6 \hstdm_ctrl_inst.traincnt23lto31  (
	.I0(traincnt[25]),
	.I1(traincnt[26]),
	.I2(traincnt[24]),
	.I3(traincnt[23]),
	.I4(\hstdm_ctrl_inst.traincnt23lto31_1 ),
	.I5(traincnt23lt23),
	.O(traincnt23)
);
defparam \hstdm_ctrl_inst.traincnt23lto31 .INIT=64'h7F7F0000777F0000;
// @225:1484
  LUT6 \hstdm_ctrl_inst.un11_txctrllto31  (
	.I0(traincnt[20]),
	.I1(traincnt[21]),
	.I2(traincnt[25]),
	.I3(traincnt[26]),
	.I4(\hstdm_ctrl_inst.traincnt23lto31_1 ),
	.I5(\hstdm_ctrl_inst.un11_txctrllto24_2 ),
	.O(un11_txctrl)
);
defparam \hstdm_ctrl_inst.un11_txctrllto31 .INIT=64'h0FFF000007FF0000;
// @225:651
  LUT5 \hstdm_ctrl_inst.data_out15_1_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [15]),
	.I1(\hstdm_ctrl_inst.data_out15_1_2 ),
	.I2(N_342),
	.I3(N_340),
	.I4(\hstdm_ctrl_inst.un1_command_data16_2_23 ),
	.O(\hstdm_ctrl_inst.data_out15_1 )
);
defparam \hstdm_ctrl_inst.data_out15_1_cZ .INIT=32'h00004000;
// @225:851
  LUT3 \hstdm_ctrl_inst.command_data_out_0_sqmuxa_0_a2_0_a2  (
	.I0(\hstdm_ctrl_inst.command_issue_pulse ),
	.I1(\hstdm_ctrl_inst.cmd_state [0]),
	.I2(N_797_i),
	.O(\hstdm_ctrl_inst.command_data_out_0_sqmuxa )
);
defparam \hstdm_ctrl_inst.command_data_out_0_sqmuxa_0_a2_0_a2 .INIT=8'h20;
// @225:688
  LUT6 \hstdm_ctrl_inst.TC_reset_c_pulse_4_0_a2_4_a2  (
	.I0(i1_i_0),
	.I1(\hstdm_ctrl_inst.enable_input_pulse ),
	.I2(\hstdm_ctrl_inst.data_in [4]),
	.I3(N_891),
	.I4(N_934),
	.I5(N_348),
	.O(\hstdm_ctrl_inst.TC_reset_c_pulse_4 )
);
defparam \hstdm_ctrl_inst.TC_reset_c_pulse_4_0_a2_4_a2 .INIT=64'h0000004000000000;
// @225:688
  LUT6 \hstdm_ctrl_inst.un1_command_data16_2  (
	.I0(\hstdm_ctrl_inst.data_in [4]),
	.I1(\hstdm_ctrl_inst.data_in [2]),
	.I2(i1_i),
	.I3(\hstdm_ctrl_inst.data_in [27]),
	.I4(\hstdm_ctrl_inst.un1_command_data16_2_24 ),
	.I5(\hstdm_ctrl_inst.un1_command_data16_2_23 ),
	.O(un1_command_data16_2)
);
defparam \hstdm_ctrl_inst.un1_command_data16_2 .INIT=64'hFFFFFFFFFFFFFFB7;
// @225:651
  LUT6 \hstdm_ctrl_inst.data_out18_1_4_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [19]),
	.I1(\hstdm_ctrl_inst.data_in [24]),
	.I2(\hstdm_ctrl_inst.data_out18_1_0 ),
	.I3(\hstdm_ctrl_inst.data_in [20]),
	.I4(\hstdm_ctrl_inst.data_out15_1_1 ),
	.I5(\hstdm_ctrl_inst.data_out18_0_4 ),
	.O(\hstdm_ctrl_inst.data_out18_1_4 )
);
defparam \hstdm_ctrl_inst.data_out18_1_4_cZ .INIT=64'h0010000000000000;
// @225:651
  LUT6 \hstdm_ctrl_inst.data_out17_2_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [4]),
	.I1(i1_i_0),
	.I2(N_341),
	.I3(\hstdm_ctrl_inst.data_out17_2 ),
	.I4(\hstdm_ctrl_inst.un1_command_data16_2_23 ),
	.I5(\hstdm_ctrl_inst.data_out17_0 ),
	.O(\hstdm_ctrl_inst.data_out17_2_0 )
);
defparam \hstdm_ctrl_inst.data_out17_2_cZ .INIT=64'h0000700000000000;
// @225:651
  LUT5 \hstdm_ctrl_inst.data_out_cnst_m_1_cZ[3]  (
	.I0(\hstdm_ctrl_inst.data_in [15]),
	.I1(\hstdm_ctrl_inst.data_out18_1_0 ),
	.I2(N_340),
	.I3(N_342),
	.I4(\hstdm_ctrl_inst.data_out_cnst_m_0 [3]),
	.O(\hstdm_ctrl_inst.data_out_cnst_m_1 [3])
);
defparam \hstdm_ctrl_inst.data_out_cnst_m_1_cZ[3] .INIT=32'h40000000;
// @225:770
  LUT6 \hstdm_ctrl_inst.training_ctrl_end_out_e  (
	.I0(\hstdm_ctrl_inst.tc_pause_cnt [4]),
	.I1(training_ctrl_end),
	.I2(\hstdm_ctrl_inst.tc_status [2]),
	.I3(\hstdm_ctrl_inst.tc_status [0]),
	.I4(\hstdm_ctrl_inst.tc_status [1]),
	.I5(ANC0_3),
	.O(\hstdm_ctrl_inst.training_ctrl_end_out )
);
defparam \hstdm_ctrl_inst.training_ctrl_end_out_e .INIT=64'hCCCCCCD8CCCCCCCC;
// @225:770
  LUT6 \hstdm_ctrl_inst.training_ctrl_rx_start_out_e  (
	.I0(training_ctrl_rx_start),
	.I1(\hstdm_ctrl_inst.tc_pause_cnt [4]),
	.I2(\hstdm_ctrl_inst.tc_status [2]),
	.I3(\hstdm_ctrl_inst.tc_status [0]),
	.I4(\hstdm_ctrl_inst.tc_status [1]),
	.I5(ANC0_3),
	.O(\hstdm_ctrl_inst.training_ctrl_rx_start_out )
);
defparam \hstdm_ctrl_inst.training_ctrl_rx_start_out_e .INIT=64'hABABAA88AAAAAAAA;
// @225:770
  LUT6 \hstdm_ctrl_inst.training_ctrl_tx_start_out_e  (
	.I0(\hstdm_ctrl_inst.tc_pause_cnt [4]),
	.I1(training_ctrl_tx_start),
	.I2(\hstdm_ctrl_inst.tc_status [2]),
	.I3(\hstdm_ctrl_inst.tc_status [0]),
	.I4(\hstdm_ctrl_inst.tc_status [1]),
	.I5(ANC0_3),
	.O(\hstdm_ctrl_inst.training_ctrl_tx_start_out )
);
defparam \hstdm_ctrl_inst.training_ctrl_tx_start_out_e .INIT=64'hCCCCCDC8CCCCCCCC;
// @225:770
  LUT6 \hstdm_ctrl_inst.training_ctrl_word_start_out_e  (
	.I0(\hstdm_ctrl_inst.tc_pause_cnt [4]),
	.I1(\hstdm_ctrl_inst.tc_status [2]),
	.I2(\hstdm_ctrl_inst.tc_status [0]),
	.I3(\hstdm_ctrl_inst.tc_status [1]),
	.I4(training_ctrl_word_start),
	.I5(ANC0_3),
	.O(\hstdm_ctrl_inst.training_ctrl_word_start_out )
);
defparam \hstdm_ctrl_inst.training_ctrl_word_start_out_e .INIT=64'hFFFA1000FFFF0000;
// @225:1484
  LUT6 \hstdm_ctrl_inst.un9_txctrllto31  (
	.I0(traincnt[16]),
	.I1(traincnt[17]),
	.I2(traincnt[18]),
	.I3(un6_rxctrl_2),
	.I4(\hstdm_ctrl_inst.un1_traincnt_1_28_1 ),
	.I5(\hstdm_ctrl_inst.un9_txctrllto31_0 ),
	.O(un9_txctrl)
);
defparam \hstdm_ctrl_inst.un9_txctrllto31 .INIT=64'h1F00000000000000;
// @225:851
  LUT6 \hstdm_ctrl_inst.N_797_i_0_a2  (
	.I0(\hstdm_ctrl_inst.command_data [24]),
	.I1(\hstdm_ctrl_inst.command_data [16]),
	.I2(\hstdm_ctrl_inst.command_data [17]),
	.I3(\hstdm_ctrl_inst.command_data [25]),
	.I4(\hstdm_ctrl_inst.N_797_i_0_a2_1 ),
	.I5(\hstdm_ctrl_inst.N_797_i_0_a2_0 ),
	.O(N_797_i)
);
defparam \hstdm_ctrl_inst.N_797_i_0_a2 .INIT=64'h0014000000000000;
// @225:688
  LUT6 \hstdm_ctrl_inst.un1_command_data16_2_24_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [7]),
	.I1(\hstdm_ctrl_inst.enable_input_pulse ),
	.I2(\hstdm_ctrl_inst.data_in [1]),
	.I3(N_341),
	.I4(\hstdm_ctrl_inst.un1_command_data16_2_24_1 ),
	.I5(N_340),
	.O(\hstdm_ctrl_inst.un1_command_data16_2_24 )
);
defparam \hstdm_ctrl_inst.un1_command_data16_2_24_cZ .INIT=64'hFFFFFBFFFFFFFFFF;
// @225:702
  LUT6 \hstdm_ctrl_inst.command_issue_pulse6_2_4_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [4]),
	.I1(i1_i),
	.I2(\hstdm_ctrl_inst.data_in [7]),
	.I3(\hstdm_ctrl_inst.data_in [24]),
	.I4(i1_i_0),
	.I5(\hstdm_ctrl_inst.command_issue_pulse6_0 ),
	.O(\hstdm_ctrl_inst.command_issue_pulse6_2_4 )
);
defparam \hstdm_ctrl_inst.command_issue_pulse6_2_4_cZ .INIT=64'h8000000000000000;
// @225:1462
  LUT6 \hstdm_ctrl_inst.un1_traincnt_1_1_4_cZ  (
	.I0(traincnt[12]),
	.I1(traincnt[13]),
	.I2(traincnt[16]),
	.I3(traincnt[17]),
	.I4(\hstdm_ctrl_inst.un1_traincnt_1_0_3 ),
	.I5(\hstdm_ctrl_inst.un1_traincnt_1_1 ),
	.O(\hstdm_ctrl_inst.un1_traincnt_1_1_4 )
);
defparam \hstdm_ctrl_inst.un1_traincnt_1_1_4_cZ .INIT=64'h0001000000000000;
// @225:651
  LUT6 \hstdm_ctrl_inst.data_out18_0_4_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [7]),
	.I1(\hstdm_ctrl_inst.data_in [15]),
	.I2(\hstdm_ctrl_inst.data_in [16]),
	.I3(\hstdm_ctrl_inst.un19lt27 ),
	.I4(N_340),
	.I5(N_342),
	.O(\hstdm_ctrl_inst.data_out18_0_4 )
);
defparam \hstdm_ctrl_inst.data_out18_0_4_cZ .INIT=64'h0001000000000000;
// @225:651
  LUT6 \hstdm_ctrl_inst.data_out17_0_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [12]),
	.I1(\hstdm_ctrl_inst.data_in [11]),
	.I2(\hstdm_ctrl_inst.data_in [19]),
	.I3(\hstdm_ctrl_inst.data_in [27]),
	.I4(N_330),
	.I5(N_342),
	.O(\hstdm_ctrl_inst.data_out17_0 )
);
defparam \hstdm_ctrl_inst.data_out17_0_cZ .INIT=64'h0001000000000000;
// @225:688
  LUT5 \hstdm_ctrl_inst.un1_command_data16_4_13_i_0  (
	.I0(i1_i),
	.I1(\hstdm_ctrl_inst.data_in [2]),
	.I2(\hstdm_ctrl_inst.data_in [4]),
	.I3(\hstdm_ctrl_inst.data_in [3]),
	.I4(\hstdm_ctrl_inst.data_in [27]),
	.O(N_36)
);
defparam \hstdm_ctrl_inst.un1_command_data16_4_13_i_0 .INIT=32'h00004212;
  LUT6 \infopipe_snd_inst.infopipe_data_out_5_9[1]  (
	.I0(CO0_0),
	.I1(\infopipe_snd_inst.sndcnt [2]),
	.I2(infopipe_data_arbiter[17]),
	.I3(infopipe_data_arbiter[18]),
	.I4(\infopipe_snd_inst.sndcnt [1]),
	.I5(infopipe_data_arbiter[32]),
	.O(N_556)
);
defparam \infopipe_snd_inst.infopipe_data_out_5_9[1] .INIT=64'hF7B3FF33C480CC00;
// @225:2645
  LUT4 \infopipe_snd_inst.un1_sndcnt_c4  (
	.I0(\infopipe_snd_inst.sndcnt [1]),
	.I1(\infopipe_snd_inst.sndcnt [3]),
	.I2(CO0_0),
	.I3(\infopipe_snd_inst.sndcnt [2]),
	.O(un1_sndcnt_c4)
);
defparam \infopipe_snd_inst.un1_sndcnt_c4 .INIT=16'h337F;
  LUT5 \hstdm_ctrl_inst.N_444_a2  (
	.I0(\hstdm_ctrl_inst.tc_status [2]),
	.I1(\hstdm_ctrl_inst.tc_status [0]),
	.I2(\hstdm_ctrl_inst.tc_status [1]),
	.I3(\hstdm_ctrl_inst.tc_pause_cnt [4]),
	.I4(ANC0_3),
	.O(N_454)
);
defparam \hstdm_ctrl_inst.N_444_a2 .INIT=32'h00020000;
// @225:688
  LUT6 \hstdm_ctrl_inst.un1_command_data16_2_23_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [21]),
	.I1(\hstdm_ctrl_inst.data_in [26]),
	.I2(\hstdm_ctrl_inst.data_in [25]),
	.I3(\hstdm_ctrl_inst.data_in [22]),
	.I4(\hstdm_ctrl_inst.data_in [23]),
	.I5(\hstdm_ctrl_inst.un1_command_data16_2_23_2 ),
	.O(\hstdm_ctrl_inst.un1_command_data16_2_23 )
);
defparam \hstdm_ctrl_inst.un1_command_data16_2_23_cZ .INIT=64'hFFFFFFFFFFFFFFFE;
// @225:651
  LUT6 \hstdm_ctrl_inst.data_out_cnst_m_0_cZ[3]  (
	.I0(i1_i),
	.I1(\hstdm_ctrl_inst.data_in [19]),
	.I2(\hstdm_ctrl_inst.data_in [16]),
	.I3(\hstdm_ctrl_inst.data_in [24]),
	.I4(\hstdm_ctrl_inst.data_in [20]),
	.I5(\hstdm_ctrl_inst.data_out15_1_1 ),
	.O(\hstdm_ctrl_inst.data_out_cnst_m_0 [3])
);
defparam \hstdm_ctrl_inst.data_out_cnst_m_0_cZ[3] .INIT=64'h0000000100000000;
// @225:665
  LUT3 \hstdm_ctrl_inst.un19lto6  (
	.I0(i1_i_0),
	.I1(i1_i),
	.I2(\hstdm_ctrl_inst.data_in [4]),
	.O(\hstdm_ctrl_inst.un19lt27 )
);
defparam \hstdm_ctrl_inst.un19lto6 .INIT=8'hC8;
// @225:771
  LUT4 \hstdm_ctrl_inst.tc_status_7_i_o3[0]  (
	.I0(\hstdm_ctrl_inst.TC_end_c ),
	.I1(\hstdm_ctrl_inst.TC_reset_c_pulse ),
	.I2(\hstdm_ctrl_inst.tc_status [0]),
	.I3(\hstdm_ctrl_inst.tc_status [1]),
	.O(N_490)
);
defparam \hstdm_ctrl_inst.tc_status_7_i_o3[0] .INIT=16'hECCC;
// @225:1482
  LUT6 \hstdm_ctrl_inst.un8_rxrstlto31_13  (
	.I0(traincnt[27]),
	.I1(traincnt[28]),
	.I2(traincnt[29]),
	.I3(traincnt[25]),
	.I4(traincnt[26]),
	.I5(traincnt23_3),
	.O(un8_rxrst_13)
);
defparam \hstdm_ctrl_inst.un8_rxrstlto31_13 .INIT=64'h0000000100000000;
// @225:2632
  LUT4 \infopipe_snd_inst.infopipe_data_out_0_sqmuxa_cZ  (
	.I0(\infopipe_snd_inst.infopipe_empty_local ),
	.I1(\infopipe_snd_inst.state [0]),
	.I2(\infopipe_snd_inst.state [1]),
	.I3(infopipe_ready_arbiter),
	.O(\infopipe_snd_inst.infopipe_data_out_0_sqmuxa )
);
defparam \infopipe_snd_inst.infopipe_data_out_0_sqmuxa_cZ .INIT=16'h0200;
// @225:851
  LUT6 \hstdm_ctrl_inst.N_797_i_0_a2_0_cZ  (
	.I0(\hstdm_ctrl_inst.command_data [30]),
	.I1(\hstdm_ctrl_inst.command_data [29]),
	.I2(\hstdm_ctrl_inst.command_data [27]),
	.I3(\hstdm_ctrl_inst.command_data [28]),
	.I4(\hstdm_ctrl_inst.command_data [23]),
	.I5(\hstdm_ctrl_inst.command_data [31]),
	.O(\hstdm_ctrl_inst.N_797_i_0_a2_0 )
);
defparam \hstdm_ctrl_inst.N_797_i_0_a2_0_cZ .INIT=64'h0000000000000001;
// @225:851
  LUT6 \hstdm_ctrl_inst.N_797_i_0_a2_1_cZ  (
	.I0(\hstdm_ctrl_inst.command_data [18]),
	.I1(\hstdm_ctrl_inst.command_data [20]),
	.I2(\hstdm_ctrl_inst.command_data [22]),
	.I3(\hstdm_ctrl_inst.command_data [26]),
	.I4(\hstdm_ctrl_inst.command_data [19]),
	.I5(\hstdm_ctrl_inst.command_data [21]),
	.O(\hstdm_ctrl_inst.N_797_i_0_a2_1 )
);
defparam \hstdm_ctrl_inst.N_797_i_0_a2_1_cZ .INIT=64'h0000000000000001;
// @225:1482
  LUT6 \hstdm_ctrl_inst.un8_rxrstlto31_0_1_cZ  (
	.I0(traincnt[14]),
	.I1(traincnt[15]),
	.I2(traincnt[16]),
	.I3(traincnt[17]),
	.I4(traincnt[20]),
	.I5(un6_rxctrllt20),
	.O(\hstdm_ctrl_inst.un8_rxrstlto31_0_1 )
);
defparam \hstdm_ctrl_inst.un8_rxrstlto31_0_1_cZ .INIT=64'h00007FFF00000000;
// @225:702
  LUT6 \hstdm_ctrl_inst.command_issue_pulse6_0_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [26]),
	.I1(\hstdm_ctrl_inst.data_in [17]),
	.I2(\hstdm_ctrl_inst.data_in [18]),
	.I3(\hstdm_ctrl_inst.data_in [8]),
	.I4(\hstdm_ctrl_inst.data_in [16]),
	.I5(\hstdm_ctrl_inst.data_in [20]),
	.O(\hstdm_ctrl_inst.command_issue_pulse6_0 )
);
defparam \hstdm_ctrl_inst.command_issue_pulse6_0_cZ .INIT=64'h8000000000000000;
// @225:702
  LUT6 \hstdm_ctrl_inst.command_issue_pulse6_1_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [12]),
	.I1(\hstdm_ctrl_inst.data_in [13]),
	.I2(\hstdm_ctrl_inst.data_in [10]),
	.I3(\hstdm_ctrl_inst.data_in [15]),
	.I4(\hstdm_ctrl_inst.data_in [11]),
	.I5(\hstdm_ctrl_inst.data_in [9]),
	.O(\hstdm_ctrl_inst.command_issue_pulse6_1 )
);
defparam \hstdm_ctrl_inst.command_issue_pulse6_1_cZ .INIT=64'h8000000000000000;
// @225:702
  LUT6 \hstdm_ctrl_inst.command_issue_pulse6_2_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [14]),
	.I1(\hstdm_ctrl_inst.data_in [21]),
	.I2(\hstdm_ctrl_inst.data_in [19]),
	.I3(\hstdm_ctrl_inst.data_in [25]),
	.I4(\hstdm_ctrl_inst.data_in [23]),
	.I5(\hstdm_ctrl_inst.data_in [22]),
	.O(\hstdm_ctrl_inst.command_issue_pulse6_2 )
);
defparam \hstdm_ctrl_inst.command_issue_pulse6_2_cZ .INIT=64'h8000000000000000;
// @225:1462
  LUT6 \hstdm_ctrl_inst.un1_traincnt_1_1_cZ  (
	.I0(traincnt[1]),
	.I1(traincnt[2]),
	.I2(traincnt[3]),
	.I3(traincnt[4]),
	.I4(traincnt[6]),
	.I5(traincnt[7]),
	.O(\hstdm_ctrl_inst.un1_traincnt_1_1 )
);
defparam \hstdm_ctrl_inst.un1_traincnt_1_1_cZ .INIT=64'h0000000000000001;
// @225:651
  LUT5 \hstdm_ctrl_inst.data_out18_1_0_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [21]),
	.I1(\hstdm_ctrl_inst.data_in [25]),
	.I2(\hstdm_ctrl_inst.data_in [26]),
	.I3(\hstdm_ctrl_inst.data_in [22]),
	.I4(\hstdm_ctrl_inst.data_in [23]),
	.O(\hstdm_ctrl_inst.data_out18_1_0 )
);
defparam \hstdm_ctrl_inst.data_out18_1_0_cZ .INIT=32'h00000001;
// @225:2643
  LUT3 \infopipe_snd_inst.infopipe_data_out_5_sn_m10  (
	.I0(\infopipe_snd_inst.state [0]),
	.I1(\infopipe_snd_inst.sndcnt [2]),
	.I2(\infopipe_snd_inst.sndcnt [3]),
	.O(\infopipe_snd_inst.infopipe_data_out_5_sn_N_13_mux )
);
defparam \infopipe_snd_inst.infopipe_data_out_5_sn_m10 .INIT=8'h8A;
// @225:688
  LUT4 \hstdm_ctrl_inst.un1_command_data16_2_17_i_a2  (
	.I0(\hstdm_ctrl_inst.data_in [17]),
	.I1(\hstdm_ctrl_inst.data_in [15]),
	.I2(\hstdm_ctrl_inst.data_in [18]),
	.I3(\hstdm_ctrl_inst.data_in [16]),
	.O(N_341)
);
defparam \hstdm_ctrl_inst.un1_command_data16_2_17_i_a2 .INIT=16'h0001;
// @225:651
  LUT3 \hstdm_ctrl_inst.N_833_i_0_a2_0  (
	.I0(\hstdm_ctrl_inst.data_in [10]),
	.I1(\hstdm_ctrl_inst.data_in [8]),
	.I2(\hstdm_ctrl_inst.data_in [9]),
	.O(N_342)
);
defparam \hstdm_ctrl_inst.N_833_i_0_a2_0 .INIT=8'h01;
  LUT4 \hstdm_ctrl_inst.tc_status_6_sqmuxa_0_100_a2  (
	.I0(\hstdm_ctrl_inst.TC_reset_c_pulse ),
	.I1(\hstdm_ctrl_inst.TC_end_c ),
	.I2(\hstdm_ctrl_inst.tc_status [0]),
	.I3(\hstdm_ctrl_inst.tc_status [1]),
	.O(N_745)
);
defparam \hstdm_ctrl_inst.tc_status_6_sqmuxa_0_100_a2 .INIT=16'h4000;
  LUT4 \hstdm_ctrl_inst.N_444_a2_5  (
	.I0(\hstdm_ctrl_inst.tc_pause_cnt [2]),
	.I1(\hstdm_ctrl_inst.tc_pause_cnt [3]),
	.I2(\hstdm_ctrl_inst.tc_pause_cnt [1]),
	.I3(\hstdm_ctrl_inst.tc_pause_cnt [0]),
	.O(ANC0_3)
);
defparam \hstdm_ctrl_inst.N_444_a2_5 .INIT=16'h0001;
// @225:2643
  LUT3 \infopipe_snd_inst.infopipe_data_out_5_sn_m8  (
	.I0(\infopipe_snd_inst.sndcnt [1]),
	.I1(\infopipe_snd_inst.state [0]),
	.I2(CO0_0),
	.O(\infopipe_snd_inst.infopipe_data_out_5_sn_N_15_mux )
);
defparam \infopipe_snd_inst.infopipe_data_out_5_sn_m8 .INIT=8'h40;
// @225:1484
  LUT3 \hstdm_ctrl_inst.un11_txctrllto24_2_cZ  (
	.I0(traincnt[24]),
	.I1(traincnt[22]),
	.I2(traincnt[23]),
	.O(\hstdm_ctrl_inst.un11_txctrllto24_2 )
);
defparam \hstdm_ctrl_inst.un11_txctrllto24_2_cZ .INIT=8'h7F;
// @225:1462
  LUT4 \hstdm_ctrl_inst.un1_traincnt_1_28_1_cZ  (
	.I0(traincnt[27]),
	.I1(traincnt[25]),
	.I2(traincnt[26]),
	.I3(traincnt[24]),
	.O(\hstdm_ctrl_inst.un1_traincnt_1_28_1 )
);
defparam \hstdm_ctrl_inst.un1_traincnt_1_28_1_cZ .INIT=16'h0001;
// @225:688
  LUT3 \hstdm_ctrl_inst.un1_command_data16_2_23_2_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [24]),
	.I1(\hstdm_ctrl_inst.data_in [19]),
	.I2(\hstdm_ctrl_inst.data_in [20]),
	.O(\hstdm_ctrl_inst.un1_command_data16_2_23_2 )
);
defparam \hstdm_ctrl_inst.un1_command_data16_2_23_2_cZ .INIT=8'hFE;
// @225:651
  LUT3 \hstdm_ctrl_inst.data_out15_1_1_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [17]),
	.I1(\hstdm_ctrl_inst.data_in [18]),
	.I2(\hstdm_ctrl_inst.data_in [27]),
	.O(\hstdm_ctrl_inst.data_out15_1_1 )
);
defparam \hstdm_ctrl_inst.data_out15_1_1_cZ .INIT=8'h01;
// @225:1462
  LUT4 \hstdm_ctrl_inst.un1_traincnt_1_0_3_cZ  (
	.I0(traincnt[5]),
	.I1(traincnt[8]),
	.I2(traincnt[9]),
	.I3(traincnt[10]),
	.O(\hstdm_ctrl_inst.un1_traincnt_1_0_3 )
);
defparam \hstdm_ctrl_inst.un1_traincnt_1_0_3_cZ .INIT=16'h0001;
// @225:971
  LUT3 \reset_gen_inst.resetn_cZ  (
	.I0(SIMULATION),
	.I1(training_ctrl_tx_start),
	.I2(umr_reset),
	.O(\reset_gen_inst.resetn )
);
defparam \reset_gen_inst.resetn_cZ .INIT=8'h4E;
  LUT3 \hstdm_ctrl_inst.data_in_6_0[0]  (
	.I0(\hstdm_ctrl_inst.data_in [0]),
	.I1(system_capim_data_in[0]),
	.I2(system_capim_wr_in),
	.O(N_571)
);
defparam \hstdm_ctrl_inst.data_in_6_0[0] .INIT=8'hC5;
  LUT3 \hstdm_ctrl_inst.data_in_6_0[1]  (
	.I0(un1_data_in_11_cry_4_O[2]),
	.I1(system_capim_data_in[3]),
	.I2(system_capim_wr_in),
	.O(N_574)
);
defparam \hstdm_ctrl_inst.data_in_6_0[1] .INIT=8'hCA;
  LUT3 \hstdm_ctrl_inst.data_in_6_0[2]  (
	.I0(system_capim_data_in[4]),
	.I1(system_capim_wr_in),
	.I2(un1_data_in_11_cry_4_O[3]),
	.O(N_575)
);
defparam \hstdm_ctrl_inst.data_in_6_0[2] .INIT=8'hB8;
  LUT3 \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[0]  (
	.I0(un1_data_in_11_cry_4_O[0]),
	.I1(system_capim_data_in[1]),
	.I2(system_capim_wr_in),
	.O(N_909)
);
defparam \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[0] .INIT=8'hCA;
  LUT3 \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[1]  (
	.I0(system_capim_data_in[2]),
	.I1(system_capim_wr_in),
	.I2(un1_data_in_11_cry_4_O[1]),
	.O(N_910)
);
defparam \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[1] .INIT=8'hB8;
  LUT3 \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[2]  (
	.I0(un1_data_in_11_cry_4_O[5]),
	.I1(system_capim_data_in[6]),
	.I2(system_capim_wr_in),
	.O(N_950)
);
defparam \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[2] .INIT=8'hCA;
  LUT3 \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[3]  (
	.I0(un1_data_in_11_cry_4_O[6]),
	.I1(system_capim_data_in[7]),
	.I2(system_capim_wr_in),
	.O(N_951)
);
defparam \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[3] .INIT=8'hCA;
  LUT3 \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[4]  (
	.I0(un1_data_in_11_cry_4_O[7]),
	.I1(system_capim_data_in[8]),
	.I2(system_capim_wr_in),
	.O(N_952)
);
defparam \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[4] .INIT=8'hCA;
  LUT3 \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[5]  (
	.I0(system_capim_data_in[9]),
	.I1(system_capim_wr_in),
	.I2(un1_data_in_11_cry_12_O[0]),
	.O(N_953)
);
defparam \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[5] .INIT=8'hB8;
  LUT3 \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[6]  (
	.I0(un1_data_in_11_cry_12_O[1]),
	.I1(system_capim_data_in[10]),
	.I2(system_capim_wr_in),
	.O(N_954)
);
defparam \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[6] .INIT=8'hCA;
  LUT3 \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[7]  (
	.I0(system_capim_data_in[11]),
	.I1(system_capim_wr_in),
	.I2(un1_data_in_11_cry_12_O[2]),
	.O(N_955)
);
defparam \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[7] .INIT=8'hB8;
  LUT3 \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[8]  (
	.I0(system_capim_data_in[12]),
	.I1(system_capim_wr_in),
	.I2(un1_data_in_11_cry_12_O[3]),
	.O(N_956)
);
defparam \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[8] .INIT=8'hB8;
  LUT3 \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[9]  (
	.I0(un1_data_in_11_cry_12_O[4]),
	.I1(system_capim_data_in[13]),
	.I2(system_capim_wr_in),
	.O(N_957)
);
defparam \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[9] .INIT=8'hCA;
  LUT3 \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[10]  (
	.I0(system_capim_data_in[14]),
	.I1(system_capim_wr_in),
	.I2(un1_data_in_11_cry_12_O[5]),
	.O(N_958)
);
defparam \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[10] .INIT=8'hB8;
  LUT3 \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[11]  (
	.I0(un1_data_in_11_cry_12_O[6]),
	.I1(system_capim_data_in[15]),
	.I2(system_capim_wr_in),
	.O(N_959)
);
defparam \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[11] .INIT=8'hCA;
  LUT3 \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[12]  (
	.I0(system_capim_data_in[16]),
	.I1(system_capim_wr_in),
	.I2(un1_data_in_11_cry_12_O[7]),
	.O(N_960)
);
defparam \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[12] .INIT=8'hB8;
  LUT3 \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[13]  (
	.I0(system_capim_data_in[17]),
	.I1(system_capim_wr_in),
	.I2(un1_data_in_11_cry_20_O[0]),
	.O(N_961)
);
defparam \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[13] .INIT=8'hB8;
  LUT3 \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[14]  (
	.I0(system_capim_data_in[19]),
	.I1(system_capim_wr_in),
	.I2(un1_data_in_11_cry_20_O[2]),
	.O(N_962)
);
defparam \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[14] .INIT=8'hB8;
  LUT3 \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[15]  (
	.I0(system_capim_data_in[20]),
	.I1(system_capim_wr_in),
	.I2(un1_data_in_11_cry_20_O[3]),
	.O(N_963)
);
defparam \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[15] .INIT=8'hB8;
  LUT3 \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[16]  (
	.I0(un1_data_in_11_cry_20_O[4]),
	.I1(system_capim_data_in[21]),
	.I2(system_capim_wr_in),
	.O(N_964)
);
defparam \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[16] .INIT=8'hCA;
  LUT3 \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[17]  (
	.I0(system_capim_data_in[22]),
	.I1(system_capim_wr_in),
	.I2(un1_data_in_11_cry_20_O[5]),
	.O(N_965)
);
defparam \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[17] .INIT=8'hB8;
  LUT3 \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[18]  (
	.I0(system_capim_data_in[23]),
	.I1(system_capim_wr_in),
	.I2(un1_data_in_11_cry_20_O[6]),
	.O(N_966)
);
defparam \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[18] .INIT=8'hB8;
  LUT3 \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[19]  (
	.I0(system_capim_data_in[24]),
	.I1(system_capim_wr_in),
	.I2(un1_data_in_11_cry_20_O[7]),
	.O(N_967)
);
defparam \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[19] .INIT=8'hB8;
  LUT3 \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[20]  (
	.I0(system_capim_data_in[25]),
	.I1(system_capim_wr_in),
	.I2(un1_data_in_11_s_27_O[0]),
	.O(N_968)
);
defparam \hstdm_ctrl_inst.data_in_6_0_i_m2_i_m2[20] .INIT=8'hB8;
  LUT3 \hstdm_ctrl_inst.data_in_6_0_i_m2[0]  (
	.I0(un1_data_in_11_cry_4_O[4]),
	.I1(system_capim_data_in[5]),
	.I2(system_capim_wr_in),
	.O(N_972)
);
defparam \hstdm_ctrl_inst.data_in_6_0_i_m2[0] .INIT=8'hCA;
  LUT3 \hstdm_ctrl_inst.data_in_6_0_i_m2[1]  (
	.I0(un1_data_in_11_cry_20_O[1]),
	.I1(system_capim_data_in[18]),
	.I2(system_capim_wr_in),
	.O(N_971)
);
defparam \hstdm_ctrl_inst.data_in_6_0_i_m2[1] .INIT=8'hCA;
  LUT3 \hstdm_ctrl_inst.data_in_6_0_i_m2[2]  (
	.I0(un1_data_in_11_s_27_O[1]),
	.I1(system_capim_data_in[26]),
	.I2(system_capim_wr_in),
	.O(N_970)
);
defparam \hstdm_ctrl_inst.data_in_6_0_i_m2[2] .INIT=8'hCA;
  LUT3 \hstdm_ctrl_inst.data_in_6_0_i_m2[3]  (
	.I0(system_capim_data_in[27]),
	.I1(system_capim_wr_in),
	.I2(un1_data_in_11_s_27_O[2]),
	.O(N_969)
);
defparam \hstdm_ctrl_inst.data_in_6_0_i_m2[3] .INIT=8'hB8;
// @225:309
  LUT2 \reset_gen_inst.longer_pulse_inst.un1_dly  (
	.I0(\reset_gen_inst.longer_pulse_inst.srl_dly_out ),
	.I1(\reset_gen_inst.longer_pulse_inst.dly [1]),
	.O(un1_dly)
);
defparam \reset_gen_inst.longer_pulse_inst.un1_dly .INIT=4'h4;
// @225:309
  LUT2 \TXCTRL_OVERLAP.un1_dly  (
	.I0(\TXCTRL_OVERLAP.srl_dly_out ),
	.I1(\TXCTRL_OVERLAP.dly [1]),
	.O(un1_dly_0)
);
defparam \TXCTRL_OVERLAP.un1_dly .INIT=4'h4;
// @225:2711
  LUT2 \infopipe_arbiter_inst.data_sent_out_0_sqmuxa  (
	.I0(infopipe_send_ack_arbiter),
	.I1(\infopipe_arbiter_inst.current_set [1]),
	.O(\infopipe_arbiter_inst.data_sent_out_5 [0])
);
defparam \infopipe_arbiter_inst.data_sent_out_0_sqmuxa .INIT=4'h2;
// @225:2705
  LUT2 \infopipe_arbiter_inst.data_out_4_cZ[17]  (
	.I0(\infopipe_arbiter_inst.current_set [1]),
	.I1(hstdm_cmd_script_data[17]),
	.O(\infopipe_arbiter_inst.data_out_4 [17])
);
defparam \infopipe_arbiter_inst.data_out_4_cZ[17] .INIT=4'hE;
// @225:2705
  LUT2 \infopipe_arbiter_inst.data_out_4_cZ[16]  (
	.I0(\infopipe_arbiter_inst.current_set [1]),
	.I1(hstdm_cmd_script_data[16]),
	.O(\infopipe_arbiter_inst.data_out_4 [16])
);
defparam \infopipe_arbiter_inst.data_out_4_cZ[16] .INIT=4'hE;
// @225:2705
  LUT2 \infopipe_arbiter_inst.data_out_4_cZ[15]  (
	.I0(\infopipe_arbiter_inst.current_set [1]),
	.I1(hstdm_cmd_script_data[15]),
	.O(\infopipe_arbiter_inst.data_out_4 [15])
);
defparam \infopipe_arbiter_inst.data_out_4_cZ[15] .INIT=4'hE;
// @225:2705
  LUT2 \infopipe_arbiter_inst.data_out_4_cZ[14]  (
	.I0(\infopipe_arbiter_inst.current_set [1]),
	.I1(hstdm_cmd_script_data[14]),
	.O(\infopipe_arbiter_inst.data_out_4 [14])
);
defparam \infopipe_arbiter_inst.data_out_4_cZ[14] .INIT=4'hE;
// @225:2705
  LUT2 \infopipe_arbiter_inst.data_out_4_cZ[13]  (
	.I0(\infopipe_arbiter_inst.current_set [1]),
	.I1(hstdm_cmd_script_data[13]),
	.O(\infopipe_arbiter_inst.data_out_4 [13])
);
defparam \infopipe_arbiter_inst.data_out_4_cZ[13] .INIT=4'hE;
// @225:2705
  LUT2 \infopipe_arbiter_inst.data_out_4_cZ[12]  (
	.I0(\infopipe_arbiter_inst.current_set [1]),
	.I1(hstdm_cmd_script_data[12]),
	.O(\infopipe_arbiter_inst.data_out_4 [12])
);
defparam \infopipe_arbiter_inst.data_out_4_cZ[12] .INIT=4'hE;
// @225:2705
  LUT2 \infopipe_arbiter_inst.data_out_4_cZ[11]  (
	.I0(\infopipe_arbiter_inst.current_set [1]),
	.I1(hstdm_cmd_script_data[11]),
	.O(\infopipe_arbiter_inst.data_out_4 [11])
);
defparam \infopipe_arbiter_inst.data_out_4_cZ[11] .INIT=4'hE;
// @225:2705
  LUT2 \infopipe_arbiter_inst.data_out_4_cZ[10]  (
	.I0(\infopipe_arbiter_inst.current_set [1]),
	.I1(hstdm_cmd_script_data[10]),
	.O(\infopipe_arbiter_inst.data_out_4 [10])
);
defparam \infopipe_arbiter_inst.data_out_4_cZ[10] .INIT=4'hE;
// @225:2705
  LUT2 \infopipe_arbiter_inst.data_out_4_cZ[9]  (
	.I0(\infopipe_arbiter_inst.current_set [1]),
	.I1(hstdm_cmd_script_data[9]),
	.O(\infopipe_arbiter_inst.data_out_4 [9])
);
defparam \infopipe_arbiter_inst.data_out_4_cZ[9] .INIT=4'hE;
// @225:2705
  LUT2 \infopipe_arbiter_inst.data_out_4_cZ[8]  (
	.I0(\infopipe_arbiter_inst.current_set [1]),
	.I1(hstdm_cmd_script_data[8]),
	.O(\infopipe_arbiter_inst.data_out_4 [8])
);
defparam \infopipe_arbiter_inst.data_out_4_cZ[8] .INIT=4'hE;
// @225:2705
  LUT2 \infopipe_arbiter_inst.data_out_4_cZ[7]  (
	.I0(\infopipe_arbiter_inst.current_set [1]),
	.I1(hstdm_cmd_script_data[7]),
	.O(\infopipe_arbiter_inst.data_out_4 [7])
);
defparam \infopipe_arbiter_inst.data_out_4_cZ[7] .INIT=4'hE;
// @225:2705
  LUT2 \infopipe_arbiter_inst.data_out_4_cZ[6]  (
	.I0(\infopipe_arbiter_inst.current_set [1]),
	.I1(hstdm_cmd_script_data[6]),
	.O(\infopipe_arbiter_inst.data_out_4 [6])
);
defparam \infopipe_arbiter_inst.data_out_4_cZ[6] .INIT=4'hE;
// @225:2705
  LUT2 \infopipe_arbiter_inst.data_out_4_cZ[5]  (
	.I0(\infopipe_arbiter_inst.current_set [1]),
	.I1(hstdm_cmd_script_data[5]),
	.O(\infopipe_arbiter_inst.data_out_4 [5])
);
defparam \infopipe_arbiter_inst.data_out_4_cZ[5] .INIT=4'hE;
// @225:2705
  LUT2 \infopipe_arbiter_inst.data_out_4_cZ[4]  (
	.I0(\infopipe_arbiter_inst.current_set [1]),
	.I1(hstdm_cmd_script_data[4]),
	.O(\infopipe_arbiter_inst.data_out_4 [4])
);
defparam \infopipe_arbiter_inst.data_out_4_cZ[4] .INIT=4'hE;
// @225:2705
  LUT2 \infopipe_arbiter_inst.data_out_4_cZ[3]  (
	.I0(\infopipe_arbiter_inst.current_set [1]),
	.I1(hstdm_cmd_script_data[3]),
	.O(\infopipe_arbiter_inst.data_out_4 [3])
);
defparam \infopipe_arbiter_inst.data_out_4_cZ[3] .INIT=4'hE;
// @225:2705
  LUT2 \infopipe_arbiter_inst.data_out_4_cZ[2]  (
	.I0(\infopipe_arbiter_inst.current_set [1]),
	.I1(hstdm_cmd_script_data[2]),
	.O(\infopipe_arbiter_inst.data_out_4 [2])
);
defparam \infopipe_arbiter_inst.data_out_4_cZ[2] .INIT=4'hE;
// @225:2705
  LUT2 \infopipe_arbiter_inst.data_out_4_cZ[1]  (
	.I0(\infopipe_arbiter_inst.current_set [1]),
	.I1(hstdm_cmd_script_data[1]),
	.O(\infopipe_arbiter_inst.data_out_4 [1])
);
defparam \infopipe_arbiter_inst.data_out_4_cZ[1] .INIT=4'hE;
// @225:2705
  LUT2 \infopipe_arbiter_inst.data_out_4_cZ[0]  (
	.I0(\infopipe_arbiter_inst.current_set [1]),
	.I1(hstdm_cmd_script_data[0]),
	.O(\infopipe_arbiter_inst.data_out_4 [0])
);
defparam \infopipe_arbiter_inst.data_out_4_cZ[0] .INIT=4'hE;
// @225:688
  LUT2 \hstdm_ctrl_inst.un1_command_data16_2_6_i_a2  (
	.I0(\hstdm_ctrl_inst.data_in [14]),
	.I1(\hstdm_ctrl_inst.data_in [13]),
	.O(N_330)
);
defparam \hstdm_ctrl_inst.un1_command_data16_2_6_i_a2 .INIT=4'h1;
// @225:651
  LUT2 \hstdm_ctrl_inst.data_out17_2_0_a2_0_a2  (
	.I0(\hstdm_ctrl_inst.data_in [7]),
	.I1(i1_i),
	.O(\hstdm_ctrl_inst.data_out17_2 )
);
defparam \hstdm_ctrl_inst.data_out17_2_0_a2_0_a2 .INIT=4'h1;
// @225:688
  LUT2 \hstdm_ctrl_inst.N_845_i_i_o2  (
	.I0(\hstdm_ctrl_inst.data_in [2]),
	.I1(\hstdm_ctrl_inst.data_in [3]),
	.O(N_934)
);
defparam \hstdm_ctrl_inst.N_845_i_i_o2 .INIT=4'h7;
// @225:688
  LUT2 \hstdm_ctrl_inst.TC_reset_c_pulse_4_0_a2_4_o2  (
	.I0(\hstdm_ctrl_inst.data_in [0]),
	.I1(\hstdm_ctrl_inst.data_in [1]),
	.O(N_891)
);
defparam \hstdm_ctrl_inst.TC_reset_c_pulse_4_0_a2_4_o2 .INIT=4'hE;
// @225:689
  LUT2 \hstdm_ctrl_inst.command_issue_pulse_0_sqmuxa_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [27]),
	.I1(\hstdm_ctrl_inst.enable_input_pulse ),
	.O(\hstdm_ctrl_inst.command_issue_pulse_0_sqmuxa )
);
defparam \hstdm_ctrl_inst.command_issue_pulse_0_sqmuxa_cZ .INIT=4'h8;
// @225:1427
  LUT2 \hstdm_ctrl_inst.traincnt23lto22_1  (
	.I0(traincnt[20]),
	.I1(traincnt[21]),
	.O(un9_txctrl_2)
);
defparam \hstdm_ctrl_inst.traincnt23lto22_1 .INIT=4'h1;
// @225:1427
  LUT2 \hstdm_ctrl_inst.traincnt23lto31_2  (
	.I0(traincnt[28]),
	.I1(traincnt[29]),
	.O(traincnt23_2)
);
defparam \hstdm_ctrl_inst.traincnt23lto31_2 .INIT=4'h1;
// @225:1462
  LUT2 \hstdm_ctrl_inst.un1_traincnt_1_12  (
	.I0(traincnt[22]),
	.I1(traincnt[23]),
	.O(un6_rxctrl_2)
);
defparam \hstdm_ctrl_inst.un1_traincnt_1_12 .INIT=4'h1;
// @225:1462
  LUT2 \hstdm_ctrl_inst.un1_traincnt_1_10  (
	.I0(traincnt[18]),
	.I1(traincnt[19]),
	.O(un6_rxctrllt20)
);
defparam \hstdm_ctrl_inst.un1_traincnt_1_10 .INIT=4'h1;
// @225:1226
  LUT2 \hstdm_ctrl_inst.simulation_no_training  (
	.I0(SIMULATION),
	.I1(SIMULATION_DISABLE_TRAINING),
	.O(simulation_no_training)
);
defparam \hstdm_ctrl_inst.simulation_no_training .INIT=4'h8;
// @225:1008
  LUT2 \reset_gen_inst.reset_out_cZ  (
	.I0(reset_clock_outz),
	.I1(umr_reset),
	.O(\reset_gen_inst.reset_out )
);
defparam \reset_gen_inst.reset_out_cZ .INIT=4'hE;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_27_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [27]),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_27 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_27_cZ .INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_31_cZ (
	.I0(traincnt[31]),
	.O(un1_traincnt_3_axb_31)
);
defparam un1_traincnt_3_axb_31_cZ.INIT=2'h2;
// @225:1487
  LUT2 \hstdm_ctrl_inst.txctrl_4_5_0[1]  (
	.I0(traincnt[30]),
	.I1(traincnt[31]),
	.O(traincnt23_3)
);
defparam \hstdm_ctrl_inst.txctrl_4_5_0[1] .INIT=4'h1;
// @225:679
  FD \hstdm_ctrl_inst.command_issue_pulse_Z  (
	.Q(\hstdm_ctrl_inst.command_issue_pulse ),
	.D(\hstdm_ctrl_inst.command_issue_pulse_0 ),
	.C(umr_clk)
);
// @225:273
  SRLC32E \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_SRL.SYNC.delay_1  (
	.Q(\TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_tmp_d_array_2 [0]),
	.Q31(\TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_tmp_array_3 [0]),
	.A({VCC, VCC, VCC, VCC, VCC}),
	.D(\TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_tmp_array_2 [0]),
	.CLK(umr_clk),
	.CE(VCC)
);
// @225:273
  SRLC32E \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_SRL.SYNC.delay_2  (
	.Q(\TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_tmp_d_array_0 [0]),
	.Q31(\TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_tmp_array_1 [0]),
	.A({VCC, VCC, VCC, VCC, VCC}),
	.D(\TXCTRL_OVERLAP.DLY.SRL.SYNC.delay [128]),
	.CLK(umr_clk),
	.CE(VCC)
);
// @225:273
  SRLC32E \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_SRL.SYNC.delay_3  (
	.Q(\TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_tmp_d_array_1 [0]),
	.Q31(\TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_tmp_array_2 [0]),
	.A({VCC, VCC, VCC, VCC, VCC}),
	.D(\TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_tmp_array_1 [0]),
	.CLK(umr_clk),
	.CE(VCC)
);
// @225:273
  SRLC32E \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_SRL.SYNC.delay_4  (
	.Q(\TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_tmp_d_array_3 [0]),
	.Q31(\TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_tmp_array_4 [0]),
	.A({VCC, VCC, VCC, GND, VCC}),
	.D(\TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_tmp_array_3 [0]),
	.CLK(umr_clk),
	.CE(VCC)
);
// @225:273
  SRLC32E \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_0_SRL.SYNC.delay_1  (
	.Q(\TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_0_tmp_d_array_3 [0]),
	.Q31(\TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_0_tmp_array_4 [0]),
	.A({VCC, VCC, VCC, VCC, VCC}),
	.D(\TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_0_tmp_array_3 [0]),
	.CLK(umr_clk),
	.CE(VCC)
);
// @225:273
  SRLC32E \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_0_SRL.SYNC.delay_2  (
	.Q(\TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_0_tmp_d_array_0 [0]),
	.Q31(\TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_0_tmp_array_1 [0]),
	.A({VCC, VCC, VCC, VCC, VCC}),
	.D(training_ctrl_word_start_i),
	.CLK(umr_clk),
	.CE(VCC)
);
// @225:273
  SRLC32E \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_0_SRL.SYNC.delay_3  (
	.Q(\TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_0_tmp_d_array_2 [0]),
	.Q31(\TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_0_tmp_array_3 [0]),
	.A({VCC, VCC, VCC, VCC, VCC}),
	.D(\TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_0_tmp_array_2 [0]),
	.CLK(umr_clk),
	.CE(VCC)
);
// @225:273
  SRLC32E \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_0_SRL.SYNC.delay_4  (
	.Q(\TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_0_tmp_d_array_1 [0]),
	.Q31(\TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_0_tmp_array_2 [0]),
	.A({VCC, VCC, VCC, VCC, VCC}),
	.D(\TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_0_tmp_array_1 [0]),
	.CLK(umr_clk),
	.CE(VCC)
);
// @225:273
  SRLC32E \reset_gen_inst.longer_pulse_inst.DLY.SRL.SYNC.delay_SRL.SYNC.delay_1  (
	.Q(\reset_gen_inst.longer_pulse_inst.DLY.SRL.SYNC.delay_tmp_d_array_0 [0]),
	.Q31(\reset_gen_inst.longer_pulse_inst.DLY.SRL.SYNC.delay_tmp_array_1 [0]),
	.A({VCC, GND, GND, VCC, GND}),
	.D(\reset_gen_inst.reset_pulse_short ),
	.CLK(umr_clk),
	.CE(VCC)
);
// @225:651
  LUT6 \hstdm_ctrl_inst.data_out_6_iv[3]  (
	.I0(hstdm_status[3]),
	.I1(\hstdm_ctrl_inst.data_out_cnst_m_1 [3]),
	.I2(\hstdm_ctrl_inst.un18lt5 ),
	.I3(\hstdm_ctrl_inst.addr_of_data_out [2]),
	.I4(\hstdm_ctrl_inst.data_out_cnst_m_1_2 [3]),
	.I5(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [3])
);
defparam \hstdm_ctrl_inst.data_out_6_iv[3] .INIT=64'hAAAAAAAA0C000000;
// @225:651
  LUT6 \hstdm_ctrl_inst.data_out_6_iv[8]  (
	.I0(hstdm_status[8]),
	.I1(\hstdm_ctrl_inst.data_out_cnst_m_1 [3]),
	.I2(\hstdm_ctrl_inst.addr_of_data_out [2]),
	.I3(\hstdm_ctrl_inst.un18lt5 ),
	.I4(\hstdm_ctrl_inst.data_out_cnst_m_1_2 [3]),
	.I5(\hstdm_ctrl_inst.un1_data_out15_1 ),
	.O(\hstdm_ctrl_inst.data_out_6 [8])
);
defparam \hstdm_ctrl_inst.data_out_6_iv[8] .INIT=64'hAAAAAAAA00C00000;
  LUT6 \hstdm_ctrl_inst.addr_of_data_out_cZ[3]  (
	.I0(\hstdm_ctrl_inst.enable_input_pulse ),
	.I1(\hstdm_ctrl_inst.data_in [2]),
	.I2(\hstdm_ctrl_inst.data_in [3]),
	.I3(N_891),
	.I4(N_435),
	.I5(un1_data_in_11_cry_4_O[2]),
	.O(\hstdm_ctrl_inst.addr_of_data_out [3])
);
defparam \hstdm_ctrl_inst.addr_of_data_out_cZ[3] .INIT=64'hF5F4F0F0A0A0F0F0;
  LUT6 \hstdm_ctrl_inst.addr_of_data_out_cZ[2]  (
	.I0(\hstdm_ctrl_inst.data_in [2]),
	.I1(\hstdm_ctrl_inst.data_in [3]),
	.I2(\hstdm_ctrl_inst.enable_input_pulse ),
	.I3(N_891),
	.I4(un1_data_in_11_cry_4_O[1]),
	.I5(N_435),
	.O(\hstdm_ctrl_inst.addr_of_data_out [2])
);
defparam \hstdm_ctrl_inst.addr_of_data_out_cZ[2] .INIT=64'hAFAEA0A0AAAAAAAA;
// @225:651
  LUT6 \hstdm_ctrl_inst.data_out15_1_4_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [0]),
	.I1(\hstdm_ctrl_inst.data_in [4]),
	.I2(\hstdm_ctrl_inst.data_out15_1 ),
	.I3(un1_data_in_11_cry_4_O[3]),
	.I4(\hstdm_ctrl_inst.addr_of_data_out [3]),
	.I5(N_935),
	.O(\hstdm_ctrl_inst.data_out15_1_4 )
);
defparam \hstdm_ctrl_inst.data_out15_1_4_cZ .INIT=64'h00A0000010100000;
// @225:665
  LUT6 \hstdm_ctrl_inst.un1_addr_of_data_out_11lto27_0_a2  (
	.I0(\hstdm_ctrl_inst.data_in [27]),
	.I1(N_341),
	.I2(N_342),
	.I3(N_340),
	.I4(\hstdm_ctrl_inst.data_out17_2 ),
	.I5(\hstdm_ctrl_inst.un1_command_data16_2_23 ),
	.O(\hstdm_ctrl_inst.un1_addr_of_data_out_11 )
);
defparam \hstdm_ctrl_inst.un1_addr_of_data_out_11lto27_0_a2 .INIT=64'h0000000040000000;
// @225:688
  LUT6 \hstdm_ctrl_inst.TC_end_c_4_0_a2_2_a2  (
	.I0(i1_i_0),
	.I1(\hstdm_ctrl_inst.enable_input_pulse ),
	.I2(\hstdm_ctrl_inst.data_in [4]),
	.I3(N_891),
	.I4(N_934),
	.I5(N_348),
	.O(\hstdm_ctrl_inst.TC_end_c_4 )
);
defparam \hstdm_ctrl_inst.TC_end_c_4_0_a2_2_a2 .INIT=64'h0000000800000000;
// @225:658
  LUT6 \hstdm_ctrl_inst.un1_addr_of_data_out_6_0_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [15]),
	.I1(N_342),
	.I2(\hstdm_ctrl_inst.data_out15_1_2 ),
	.I3(N_340),
	.I4(\hstdm_ctrl_inst.un1_command_data16_2_23 ),
	.I5(\hstdm_ctrl_inst.addr_of_data_out [2]),
	.O(\hstdm_ctrl_inst.un1_addr_of_data_out_6_0 )
);
defparam \hstdm_ctrl_inst.un1_addr_of_data_out_6_0_cZ .INIT=64'h0000400000000000;
// @225:1427
  LUT3 \hstdm_ctrl_inst.traincnt23lto22  (
	.I0(traincnt[20]),
	.I1(traincnt[21]),
	.I2(traincnt[22]),
	.O(traincnt23lt23)
);
defparam \hstdm_ctrl_inst.traincnt23lto22 .INIT=8'h01;
// @225:1486
  LUT4 \hstdm_ctrl_inst.un6_rxctrllto31_0_cZ  (
	.I0(traincnt[18]),
	.I1(traincnt[19]),
	.I2(traincnt[20]),
	.I3(traincnt[21]),
	.O(\hstdm_ctrl_inst.un6_rxctrllto31_0 )
);
defparam \hstdm_ctrl_inst.un6_rxctrllto31_0_cZ .INIT=16'h001F;
// @225:1480
  LUT6 \hstdm_ctrl_inst.un7_hstdm_resetlto31_1_cZ  (
	.I0(traincnt[14]),
	.I1(traincnt[15]),
	.I2(traincnt[16]),
	.I3(traincnt[17]),
	.I4(traincnt[18]),
	.I5(traincnt[19]),
	.O(\hstdm_ctrl_inst.un7_hstdm_resetlto31_1 )
);
defparam \hstdm_ctrl_inst.un7_hstdm_resetlto31_1_cZ .INIT=64'h000000000000001F;
// @225:1481
  LUT6 \hstdm_ctrl_inst.un8_txrstlto31_0_cZ  (
	.I0(traincnt[15]),
	.I1(traincnt[16]),
	.I2(traincnt[17]),
	.I3(traincnt[18]),
	.I4(traincnt[19]),
	.I5(traincnt[20]),
	.O(\hstdm_ctrl_inst.un8_txrstlto31_0 )
);
defparam \hstdm_ctrl_inst.un8_txrstlto31_0_cZ .INIT=64'h000000000000001F;
// @225:651
  LUT5 \hstdm_ctrl_inst.data_out15_1_2_cZ  (
	.I0(i1_i),
	.I1(\hstdm_ctrl_inst.data_in [18]),
	.I2(\hstdm_ctrl_inst.data_in [17]),
	.I3(\hstdm_ctrl_inst.data_in [16]),
	.I4(\hstdm_ctrl_inst.data_in [27]),
	.O(\hstdm_ctrl_inst.data_out15_1_2 )
);
defparam \hstdm_ctrl_inst.data_out15_1_2_cZ .INIT=32'h00000001;
// @225:1467
  LUT4 \hstdm_ctrl_inst.training_done_4  (
	.I0(SIMULATION),
	.I1(SIMULATION_DISABLE_TRAINING),
	.I2(sim_flags_out[2]),
	.I3(reset_to_ctrl),
	.O(training_done_4)
);
defparam \hstdm_ctrl_inst.training_done_4 .INIT=16'h70F8;
// @225:1480
  LUT6 \hstdm_ctrl_inst.un7_hstdm_resetlto31  (
	.I0(traincnt23_2),
	.I1(traincnt23_3),
	.I2(\hstdm_ctrl_inst.un1_traincnt_1_28_1 ),
	.I3(\hstdm_ctrl_inst.un7_hstdm_resetlto31_1 ),
	.I4(un6_rxctrl_2),
	.I5(un9_txctrl_2),
	.O(un7_hstdm_resetlto31)
);
defparam \hstdm_ctrl_inst.un7_hstdm_resetlto31 .INIT=64'h8000000000000000;
  LUT6 un1_traincnt_3_14_d_cZ (
	.I0(SIMULATION),
	.I1(\hstdm_ctrl_inst.un6_rxctrllto31_0 ),
	.I2(traincnt23_2),
	.I3(un6_rxctrl_2),
	.I4(traincnt23_3),
	.I5(\hstdm_ctrl_inst.un1_traincnt_1_28_1 ),
	.O(un1_traincnt_3_14_d)
);
defparam un1_traincnt_3_14_d_cZ.INIT=64'h2AAAAAAAAAAAAAAA;
// @225:688
  LUT5 \hstdm_ctrl_inst.un1_command_data16_2_24_1_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [0]),
	.I1(i1_i_0),
	.I2(\hstdm_ctrl_inst.data_in [8]),
	.I3(\hstdm_ctrl_inst.data_in [10]),
	.I4(\hstdm_ctrl_inst.data_in [9]),
	.O(\hstdm_ctrl_inst.un1_command_data16_2_24_1 )
);
defparam \hstdm_ctrl_inst.un1_command_data16_2_24_1_cZ .INIT=32'hFFFFFFFE;
// @225:1427
  LUT5 \hstdm_ctrl_inst.traincnt23lto31_1_cZ  (
	.I0(traincnt[27]),
	.I1(traincnt[28]),
	.I2(traincnt[29]),
	.I3(traincnt[30]),
	.I4(traincnt[31]),
	.O(\hstdm_ctrl_inst.traincnt23lto31_1 )
);
defparam \hstdm_ctrl_inst.traincnt23lto31_1_cZ .INIT=32'h00000001;
// @225:1462
  LUT6 \hstdm_ctrl_inst.un1_traincnt_1_2_cZ  (
	.I0(traincnt[11]),
	.I1(traincnt[0]),
	.I2(traincnt[14]),
	.I3(traincnt[15]),
	.I4(traincnt[18]),
	.I5(traincnt[19]),
	.O(\hstdm_ctrl_inst.un1_traincnt_1_2 )
);
defparam \hstdm_ctrl_inst.un1_traincnt_1_2_cZ .INIT=64'h0000000000000001;
// @225:770
  LUT5 \hstdm_ctrl_inst.N_489_i  (
	.I0(\hstdm_ctrl_inst.TC_end_c ),
	.I1(\hstdm_ctrl_inst.TC_start_rx_bit_c ),
	.I2(\hstdm_ctrl_inst.tc_status [0]),
	.I3(\hstdm_ctrl_inst.tc_status [1]),
	.I4(\hstdm_ctrl_inst.TC_reset_c_pulse ),
	.O(N_489_i)
);
defparam \hstdm_ctrl_inst.N_489_i .INIT=32'h00005FC0;
// @225:651
  LUT4 \hstdm_ctrl_inst.data_out18_0_1  (
	.I0(\hstdm_ctrl_inst.data_in [12]),
	.I1(\hstdm_ctrl_inst.data_in [13]),
	.I2(\hstdm_ctrl_inst.data_in [14]),
	.I3(\hstdm_ctrl_inst.data_in [11]),
	.O(N_340)
);
defparam \hstdm_ctrl_inst.data_out18_0_1 .INIT=16'h0001;
// @225:702
  LUT4 \hstdm_ctrl_inst.command_issue_pulse6_14_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [0]),
	.I1(\hstdm_ctrl_inst.data_in [2]),
	.I2(\hstdm_ctrl_inst.data_in [1]),
	.I3(\hstdm_ctrl_inst.data_in [3]),
	.O(\hstdm_ctrl_inst.command_issue_pulse6_14 )
);
defparam \hstdm_ctrl_inst.command_issue_pulse6_14_cZ .INIT=16'h8000;
// @225:770
  LUT6 \hstdm_ctrl_inst.N_15_0_i_i_m_i  (
	.I0(\hstdm_ctrl_inst.tc_pause_cnt [4]),
	.I1(\hstdm_ctrl_inst.tc_pause_cnt [0]),
	.I2(\hstdm_ctrl_inst.tc_status [2]),
	.I3(\hstdm_ctrl_inst.tc_status [0]),
	.I4(\hstdm_ctrl_inst.tc_status [1]),
	.I5(ANC0_3),
	.O(N_15_0_i_i_m_i)
);
defparam \hstdm_ctrl_inst.N_15_0_i_i_m_i .INIT=64'h6666667633333333;
// @225:1462
  LUT6 \hstdm_ctrl_inst.un1_traincnt_1_28  (
	.I0(traincnt[27]),
	.I1(traincnt[25]),
	.I2(traincnt[26]),
	.I3(traincnt[24]),
	.I4(traincnt23_2),
	.I5(traincnt23_3),
	.O(un1_traincnt_1_28)
);
defparam \hstdm_ctrl_inst.un1_traincnt_1_28 .INIT=64'h0001000000000000;
// @225:770
  LUT6 \hstdm_ctrl_inst.N_16_0_m_i  (
	.I0(\hstdm_ctrl_inst.tc_pause_cnt [1]),
	.I1(\hstdm_ctrl_inst.tc_pause_cnt [3]),
	.I2(\hstdm_ctrl_inst.tc_pause_cnt [2]),
	.I3(\hstdm_ctrl_inst.tc_pause_cnt [0]),
	.I4(\hstdm_ctrl_inst.tc_pause_cnt [4]),
	.I5(N_454),
	.O(N_16_0_m_i)
);
defparam \hstdm_ctrl_inst.N_16_0_m_i .INIT=64'hFFFFFFFFAA55AA54;
// @225:770
  LUT6 \hstdm_ctrl_inst.N_17_0_m_i  (
	.I0(\hstdm_ctrl_inst.tc_pause_cnt [3]),
	.I1(\hstdm_ctrl_inst.tc_pause_cnt [2]),
	.I2(\hstdm_ctrl_inst.tc_pause_cnt [1]),
	.I3(\hstdm_ctrl_inst.tc_pause_cnt [0]),
	.I4(\hstdm_ctrl_inst.tc_pause_cnt [4]),
	.I5(N_454),
	.O(N_17_0_m_i)
);
defparam \hstdm_ctrl_inst.N_17_0_m_i .INIT=64'hFFFFFFFFCCC3CCC2;
// @225:1486
  LUT6 \hstdm_ctrl_inst.un6_rxctrllto31  (
	.I0(traincnt[30]),
	.I1(traincnt[31]),
	.I2(traincnt23_2),
	.I3(un6_rxctrl_2),
	.I4(\hstdm_ctrl_inst.un1_traincnt_1_28_1 ),
	.I5(\hstdm_ctrl_inst.un6_rxctrllto31_0 ),
	.O(un6_rxctrl)
);
defparam \hstdm_ctrl_inst.un6_rxctrllto31 .INIT=64'h1000000000000000;
// @225:1487
  LUT6 \hstdm_ctrl_inst.txctrl_4[1]  (
	.I0(traincnt[25]),
	.I1(traincnt[26]),
	.I2(traincnt[24]),
	.I3(traincnt[22]),
	.I4(traincnt[23]),
	.I5(\hstdm_ctrl_inst.traincnt23lto31_1 ),
	.O(txctrl_4[1])
);
defparam \hstdm_ctrl_inst.txctrl_4[1] .INIT=64'h4040404800000000;
// @225:1481
  LUT6 \hstdm_ctrl_inst.un8_txrstlto31  (
	.I0(traincnt[21]),
	.I1(traincnt[24]),
	.I2(traincnt[22]),
	.I3(traincnt[23]),
	.I4(\hstdm_ctrl_inst.un8_txrstlto31_0 ),
	.I5(un8_rxrst_13),
	.O(un8_txrstlto31)
);
defparam \hstdm_ctrl_inst.un8_txrstlto31 .INIT=64'h0001000000000000;
// @225:1482
  LUT6 \hstdm_ctrl_inst.un8_rxrstlto31  (
	.I0(traincnt[21]),
	.I1(traincnt[24]),
	.I2(traincnt[22]),
	.I3(traincnt[23]),
	.I4(un8_rxrst_13),
	.I5(\hstdm_ctrl_inst.un8_rxrstlto31_0_1 ),
	.O(un8_rxrstlto31)
);
defparam \hstdm_ctrl_inst.un8_rxrstlto31 .INIT=64'h0001000000000000;
  LUT6 un1_traincnt_3_axb_14_cZ (
	.I0(SIMULATION),
	.I1(traincnt[14]),
	.I2(traincnt[22]),
	.I3(traincnt[23]),
	.I4(un1_traincnt_1_28),
	.I5(\hstdm_ctrl_inst.un6_rxctrllto31_0 ),
	.O(un1_traincnt_3_axb_14)
);
defparam un1_traincnt_3_axb_14_cZ.INIT=64'h666C666666666666;
// @225:1424
  LUT6 un1_traincnt_3_axb_11_cZ (
	.I0(SIMULATION),
	.I1(traincnt[11]),
	.I2(traincnt[22]),
	.I3(traincnt[23]),
	.I4(\hstdm_ctrl_inst.un6_rxctrllto31_0 ),
	.I5(un1_traincnt_1_28),
	.O(un1_traincnt_3_axb_11)
);
defparam un1_traincnt_3_axb_11_cZ.INIT=64'hCCC6CCCCCCCCCCCC;
// @225:1484
  LUT6 \hstdm_ctrl_inst.un9_txctrllto31_0_cZ  (
	.I0(traincnt[28]),
	.I1(traincnt[29]),
	.I2(traincnt[30]),
	.I3(traincnt[31]),
	.I4(traincnt[19]),
	.I5(un9_txctrl_2),
	.O(\hstdm_ctrl_inst.un9_txctrllto31_0 )
);
defparam \hstdm_ctrl_inst.un9_txctrllto31_0_cZ .INIT=64'h0000000100000000;
// @225:679
  LUT6 \hstdm_ctrl_inst.command_issue_pulse_r  (
	.I0(\hstdm_ctrl_inst.enable_input_pulse ),
	.I1(\hstdm_ctrl_inst.data_in [27]),
	.I2(\hstdm_ctrl_inst.command_issue_pulse6_2 ),
	.I3(\hstdm_ctrl_inst.command_issue_pulse6_1 ),
	.I4(\hstdm_ctrl_inst.command_issue_pulse6_2_4 ),
	.I5(\hstdm_ctrl_inst.command_issue_pulse6_14 ),
	.O(\hstdm_ctrl_inst.command_issue_pulse_0 )
);
defparam \hstdm_ctrl_inst.command_issue_pulse_r .INIT=64'h8000000000000000;
// @225:635
  LUT6 \hstdm_ctrl_inst.enable_output_1_i_a2  (
	.I0(\hstdm_ctrl_inst.enable_input_pulse ),
	.I1(\hstdm_ctrl_inst.data_in [0]),
	.I2(\hstdm_ctrl_inst.data_in [2]),
	.I3(\hstdm_ctrl_inst.data_in [1]),
	.I4(\hstdm_ctrl_inst.data_in [3]),
	.I5(N_435),
	.O(N_935)
);
defparam \hstdm_ctrl_inst.enable_output_1_i_a2 .INIT=64'h5555555400000000;
// @225:572
  LUT4 \hstdm_ctrl_inst.data_in_2_sqmuxa_0_i_m2  (
	.I0(\hstdm_ctrl_inst.data_in [2]),
	.I1(\hstdm_ctrl_inst.data_in [1]),
	.I2(\hstdm_ctrl_inst.data_in [3]),
	.I3(\hstdm_ctrl_inst.data_in [0]),
	.O(N_896)
);
defparam \hstdm_ctrl_inst.data_in_2_sqmuxa_0_i_m2 .INIT=16'h7FFE;
// @225:688
  LUT6 \hstdm_ctrl_inst.TC_reset_c_pulse_4_0_a2_4_a2_0  (
	.I0(i1_i),
	.I1(\hstdm_ctrl_inst.data_in [7]),
	.I2(N_341),
	.I3(N_342),
	.I4(N_340),
	.I5(\hstdm_ctrl_inst.un1_command_data16_2_23 ),
	.O(N_348)
);
defparam \hstdm_ctrl_inst.TC_reset_c_pulse_4_0_a2_4_a2_0 .INIT=64'h0000000010000000;
// @225:662
  LUT6 \hstdm_ctrl_inst.un1_addr_of_data_out_10lto27_13_0_a2_0_a2  (
	.I0(i1_i),
	.I1(i1_i_0),
	.I2(\hstdm_ctrl_inst.data_in [7]),
	.I3(\hstdm_ctrl_inst.addr_of_data_out [3]),
	.I4(\hstdm_ctrl_inst.addr_of_data_out [2]),
	.I5(\hstdm_ctrl_inst.un18lt5 ),
	.O(\hstdm_ctrl_inst.un1_addr_of_data_out_10_13 )
);
defparam \hstdm_ctrl_inst.un1_addr_of_data_out_10lto27_13_0_a2_0_a2 .INIT=64'h0001010101010101;
// @225:273
  FD \reset_gen_inst.longer_pulse_inst.DLY.SRL.SYNC.delay_DOUT_Z[0]  (
	.Q(\reset_gen_inst.longer_pulse_inst.srl_dly_out ),
	.D(\reset_gen_inst.longer_pulse_inst.DLY.SRL.SYNC.delay_tmp_d_array_0 [0]),
	.C(umr_clk)
);
// @225:273
  FD \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_0_DOUT_Z[0]  (
	.Q(\TXCTRL_OVERLAP.DLY.SRL.SYNC.delay [128]),
	.D(\TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_0_tmp_d_array_3 [0]),
	.C(umr_clk)
);
// @225:273
  FD \TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_DOUT_Z[0]  (
	.Q(\TXCTRL_OVERLAP.srl_dly_out ),
	.D(\TXCTRL_OVERLAP.DLY.SRL.SYNC.delay_tmp_d_array_3 [0]),
	.C(umr_clk)
);
// @225:770
  FDR \hstdm_ctrl_inst.tc_pause_cnt_Z[3]  (
	.Q(\hstdm_ctrl_inst.tc_pause_cnt [3]),
	.D(N_18_0_m_i),
	.C(umr_clk),
	.R(\hstdm_ctrl_inst.TC_reset_c_pulse )
);
// @225:770
  FDR \hstdm_ctrl_inst.tc_pause_cnt_Z[2]  (
	.Q(\hstdm_ctrl_inst.tc_pause_cnt [2]),
	.D(N_17_0_m_i),
	.C(umr_clk),
	.R(\hstdm_ctrl_inst.TC_reset_c_pulse )
);
// @225:770
  FDR \hstdm_ctrl_inst.tc_pause_cnt_Z[1]  (
	.Q(\hstdm_ctrl_inst.tc_pause_cnt [1]),
	.D(N_16_0_m_i),
	.C(umr_clk),
	.R(\hstdm_ctrl_inst.TC_reset_c_pulse )
);
// @225:770
  FDR \hstdm_ctrl_inst.tc_pause_cnt_Z[0]  (
	.Q(\hstdm_ctrl_inst.tc_pause_cnt [0]),
	.D(N_15_0_i_i_m_i),
	.C(umr_clk),
	.R(\hstdm_ctrl_inst.TC_reset_c_pulse )
);
// @225:303
  FD \reset_gen_inst.longer_pulse_inst.dly_Z[1]  (
	.Q(\reset_gen_inst.longer_pulse_inst.dly [1]),
	.D(\reset_gen_inst.longer_pulse_inst.srl_dly_out ),
	.C(umr_clk)
);
// @225:303
  FD \TXCTRL_OVERLAP.dly_Z[1]  (
	.Q(\TXCTRL_OVERLAP.dly [1]),
	.D(\TXCTRL_OVERLAP.srl_dly_out ),
	.C(umr_clk)
);
// @225:1316
(* ASYNC_REG="TRUE" *)  FD hstdm_cmd_script_ready_ff2_Z (
	.Q(hstdm_cmd_script_ready_ff2),
	.D(hstdm_cmd_script_ready_ff1),
	.C(infopipe_clk)
);
// @225:1308
(* ASYNC_REG="TRUE" *)  FD hstdm_cmd_script_ack_ff1_Z (
	.Q(hstdm_cmd_script_ack_ff1),
	.D(infopipe_send_ack_set[0]),
	.C(umr_clk)
);
// @225:1316
(* ASYNC_REG="TRUE" *)  FD hstdm_cmd_script_ready_ff1_Z (
	.Q(hstdm_cmd_script_ready_ff1),
	.D(hstdm_cmd_script_ready),
	.C(infopipe_clk)
);
// @225:1308
(* ASYNC_REG="TRUE" *)  FD hstdm_cmd_script_ack_ff2_Z (
	.Q(hstdm_cmd_script_ack_ff2),
	.D(hstdm_cmd_script_ack_ff1),
	.C(umr_clk)
);
// @225:1466
  FD training_tx_done_Z (
	.Q(sim_flags_out[2]),
	.D(training_tx_done_6),
	.C(umr_clk)
);
// @225:1466
  FD training_done_Z (
	.Q(sim_flags_out[0]),
	.D(training_done_4),
	.C(umr_clk)
);
// @225:1273
  FD \hstdm_status_Z[12]  (
	.Q(hstdm_status[12]),
	.D(GND),
	.C(umr_clk)
);
// @225:1273
  FD \hstdm_status_Z[11]  (
	.Q(hstdm_status[11]),
	.D(GND),
	.C(umr_clk)
);
// @225:1273
  FD \hstdm_status_Z[10]  (
	.Q(hstdm_status[10]),
	.D(GND),
	.C(umr_clk)
);
// @225:1273
  FD \hstdm_status_Z[9]  (
	.Q(hstdm_status[9]),
	.D(GND),
	.C(umr_clk)
);
// @225:1273
  FD \hstdm_status_Z[8]  (
	.Q(hstdm_status[8]),
	.D(GND),
	.C(umr_clk)
);
// @225:1273
  FD \hstdm_status_Z[7]  (
	.Q(hstdm_status[7]),
	.D(GND),
	.C(umr_clk)
);
// @225:1273
  FD \hstdm_status_Z[6]  (
	.Q(hstdm_status[6]),
	.D(GND),
	.C(umr_clk)
);
// @225:1273
  FD \hstdm_status_Z[5]  (
	.Q(hstdm_status[5]),
	.D(GND),
	.C(umr_clk)
);
// @225:1273
  FD \hstdm_status_Z[4]  (
	.Q(hstdm_status[4]),
	.D(GND),
	.C(umr_clk)
);
// @225:1273
  FD \hstdm_status_Z[3]  (
	.Q(hstdm_status[3]),
	.D(GND),
	.C(umr_clk)
);
// @225:1273
  FD \hstdm_status_Z[2]  (
	.Q(hstdm_status[2]),
	.D(GND),
	.C(umr_clk)
);
// @225:1273
  FD \hstdm_status_Z[1]  (
	.Q(hstdm_status[1]),
	.D(hstdm_reset_i),
	.C(umr_clk)
);
// @225:1273
  FD \hstdm_status_Z[0]  (
	.Q(hstdm_status[0]),
	.D(GND),
	.C(umr_clk)
);
// @225:1273
  FD \hstdm_status_Z[23]  (
	.Q(hstdm_status[23]),
	.D(hstdm_reset_i),
	.C(umr_clk)
);
// @225:1273
  FD \hstdm_status_Z[22]  (
	.Q(hstdm_status[22]),
	.D(GND),
	.C(umr_clk)
);
// @225:1273
  FD \hstdm_status_Z[21]  (
	.Q(hstdm_status[21]),
	.D(GND),
	.C(umr_clk)
);
// @225:1273
  FD \hstdm_status_Z[20]  (
	.Q(hstdm_status[20]),
	.D(GND),
	.C(umr_clk)
);
// @225:1273
  FD \hstdm_status_Z[19]  (
	.Q(hstdm_status[19]),
	.D(GND),
	.C(umr_clk)
);
// @225:1273
  FD \hstdm_status_Z[18]  (
	.Q(hstdm_status[18]),
	.D(GND),
	.C(umr_clk)
);
// @225:1273
  FD \hstdm_status_Z[17]  (
	.Q(hstdm_status[17]),
	.D(GND),
	.C(umr_clk)
);
// @225:1273
  FD \hstdm_status_Z[16]  (
	.Q(hstdm_status[16]),
	.D(GND),
	.C(umr_clk)
);
// @225:1273
  FD \hstdm_status_Z[15]  (
	.Q(hstdm_status[15]),
	.D(GND),
	.C(umr_clk)
);
// @225:1273
  FD \hstdm_status_Z[14]  (
	.Q(hstdm_status[14]),
	.D(GND),
	.C(umr_clk)
);
// @225:1273
  FD \hstdm_status_Z[13]  (
	.Q(hstdm_status[13]),
	.D(GND),
	.C(umr_clk)
);
// @225:2704
  FD \infopipe_arbiter_inst.current_set_Z[1]  (
	.Q(\infopipe_arbiter_inst.current_set [1]),
	.D(\infopipe_arbiter_inst.current_set_0 ),
	.C(infopipe_clk)
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[31]  (
	.Q(\hstdm_ctrl_inst.command_data [31]),
	.D(\hstdm_ctrl_inst.data_in [15]),
	.C(umr_clk),
	.CE(command_datace[16])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[30]  (
	.Q(\hstdm_ctrl_inst.command_data [30]),
	.D(\hstdm_ctrl_inst.data_in [14]),
	.C(umr_clk),
	.CE(command_datace[16])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[29]  (
	.Q(\hstdm_ctrl_inst.command_data [29]),
	.D(\hstdm_ctrl_inst.data_in [13]),
	.C(umr_clk),
	.CE(command_datace[16])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[28]  (
	.Q(\hstdm_ctrl_inst.command_data [28]),
	.D(\hstdm_ctrl_inst.data_in [12]),
	.C(umr_clk),
	.CE(command_datace[16])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[27]  (
	.Q(\hstdm_ctrl_inst.command_data [27]),
	.D(\hstdm_ctrl_inst.data_in [11]),
	.C(umr_clk),
	.CE(command_datace[16])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[26]  (
	.Q(\hstdm_ctrl_inst.command_data [26]),
	.D(\hstdm_ctrl_inst.data_in [10]),
	.C(umr_clk),
	.CE(command_datace[16])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[25]  (
	.Q(\hstdm_ctrl_inst.command_data [25]),
	.D(\hstdm_ctrl_inst.data_in [9]),
	.C(umr_clk),
	.CE(command_datace[16])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[24]  (
	.Q(\hstdm_ctrl_inst.command_data [24]),
	.D(\hstdm_ctrl_inst.data_in [8]),
	.C(umr_clk),
	.CE(command_datace[16])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[23]  (
	.Q(\hstdm_ctrl_inst.command_data [23]),
	.D(\hstdm_ctrl_inst.data_in [7]),
	.C(umr_clk),
	.CE(command_datace[16])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[22]  (
	.Q(\hstdm_ctrl_inst.command_data [22]),
	.D(i1_i),
	.C(umr_clk),
	.CE(command_datace[16])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[21]  (
	.Q(\hstdm_ctrl_inst.command_data [21]),
	.D(i1_i_0),
	.C(umr_clk),
	.CE(command_datace[16])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[20]  (
	.Q(\hstdm_ctrl_inst.command_data [20]),
	.D(\hstdm_ctrl_inst.data_in [4]),
	.C(umr_clk),
	.CE(command_datace[16])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[19]  (
	.Q(\hstdm_ctrl_inst.command_data [19]),
	.D(\hstdm_ctrl_inst.data_in [3]),
	.C(umr_clk),
	.CE(command_datace[16])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[18]  (
	.Q(\hstdm_ctrl_inst.command_data [18]),
	.D(\hstdm_ctrl_inst.data_in [2]),
	.C(umr_clk),
	.CE(command_datace[16])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[17]  (
	.Q(\hstdm_ctrl_inst.command_data [17]),
	.D(\hstdm_ctrl_inst.data_in [1]),
	.C(umr_clk),
	.CE(command_datace[16])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[16]  (
	.Q(\hstdm_ctrl_inst.command_data [16]),
	.D(\hstdm_ctrl_inst.data_in [0]),
	.C(umr_clk),
	.CE(command_datace[16])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[15]  (
	.Q(\hstdm_ctrl_inst.command_data [15]),
	.D(\hstdm_ctrl_inst.data_in [15]),
	.C(umr_clk),
	.CE(command_datace[0])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[14]  (
	.Q(\hstdm_ctrl_inst.command_data [14]),
	.D(\hstdm_ctrl_inst.data_in [14]),
	.C(umr_clk),
	.CE(command_datace[0])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[13]  (
	.Q(\hstdm_ctrl_inst.command_data [13]),
	.D(\hstdm_ctrl_inst.data_in [13]),
	.C(umr_clk),
	.CE(command_datace[0])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[12]  (
	.Q(\hstdm_ctrl_inst.command_data [12]),
	.D(\hstdm_ctrl_inst.data_in [12]),
	.C(umr_clk),
	.CE(command_datace[0])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[11]  (
	.Q(\hstdm_ctrl_inst.command_data [11]),
	.D(\hstdm_ctrl_inst.data_in [11]),
	.C(umr_clk),
	.CE(command_datace[0])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[10]  (
	.Q(\hstdm_ctrl_inst.command_data [10]),
	.D(\hstdm_ctrl_inst.data_in [10]),
	.C(umr_clk),
	.CE(command_datace[0])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[9]  (
	.Q(\hstdm_ctrl_inst.command_data [9]),
	.D(\hstdm_ctrl_inst.data_in [9]),
	.C(umr_clk),
	.CE(command_datace[0])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[8]  (
	.Q(\hstdm_ctrl_inst.command_data [8]),
	.D(\hstdm_ctrl_inst.data_in [8]),
	.C(umr_clk),
	.CE(command_datace[0])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[7]  (
	.Q(\hstdm_ctrl_inst.command_data [7]),
	.D(\hstdm_ctrl_inst.data_in [7]),
	.C(umr_clk),
	.CE(command_datace[0])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[6]  (
	.Q(\hstdm_ctrl_inst.command_data [6]),
	.D(i1_i),
	.C(umr_clk),
	.CE(command_datace[0])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[5]  (
	.Q(\hstdm_ctrl_inst.command_data [5]),
	.D(i1_i_0),
	.C(umr_clk),
	.CE(command_datace[0])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[4]  (
	.Q(\hstdm_ctrl_inst.command_data [4]),
	.D(\hstdm_ctrl_inst.data_in [4]),
	.C(umr_clk),
	.CE(command_datace[0])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[3]  (
	.Q(\hstdm_ctrl_inst.command_data [3]),
	.D(\hstdm_ctrl_inst.data_in [3]),
	.C(umr_clk),
	.CE(command_datace[0])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[2]  (
	.Q(\hstdm_ctrl_inst.command_data [2]),
	.D(\hstdm_ctrl_inst.data_in [2]),
	.C(umr_clk),
	.CE(command_datace[0])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[1]  (
	.Q(\hstdm_ctrl_inst.command_data [1]),
	.D(\hstdm_ctrl_inst.data_in [1]),
	.C(umr_clk),
	.CE(command_datace[0])
);
// @225:679
  FDE \hstdm_ctrl_inst.command_data_Z[0]  (
	.Q(\hstdm_ctrl_inst.command_data [0]),
	.D(\hstdm_ctrl_inst.data_in [0]),
	.C(umr_clk),
	.CE(command_datace[0])
);
// @225:770
  FDR \hstdm_ctrl_inst.training_ctrl_end_out_Z  (
	.Q(training_ctrl_end),
	.D(\hstdm_ctrl_inst.training_ctrl_end_out ),
	.C(umr_clk),
	.R(\hstdm_ctrl_inst.TC_reset_c_pulse )
);
// @225:770
  FDR \hstdm_ctrl_inst.training_ctrl_rx_start_out_Z  (
	.Q(training_ctrl_rx_start),
	.D(\hstdm_ctrl_inst.training_ctrl_rx_start_out ),
	.C(umr_clk),
	.R(\hstdm_ctrl_inst.TC_reset_c_pulse )
);
// @225:770
  FDR \hstdm_ctrl_inst.training_ctrl_tx_start_out_Z  (
	.Q(training_ctrl_tx_start),
	.D(\hstdm_ctrl_inst.training_ctrl_tx_start_out ),
	.C(umr_clk),
	.R(\hstdm_ctrl_inst.TC_reset_c_pulse )
);
// @225:770
  FDR \hstdm_ctrl_inst.training_ctrl_word_start_out_Z  (
	.Q(training_ctrl_word_start),
	.D(\hstdm_ctrl_inst.training_ctrl_word_start_out ),
	.C(umr_clk),
	.R(\hstdm_ctrl_inst.TC_reset_c_pulse )
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[31]  (
	.Q(system_capim_data_out[31]),
	.D(\hstdm_ctrl_inst.data_out_6 [31]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[30]  (
	.Q(system_capim_data_out[30]),
	.D(\hstdm_ctrl_inst.data_out_6 [30]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[29]  (
	.Q(system_capim_data_out[29]),
	.D(\hstdm_ctrl_inst.data_out_6 [29]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[28]  (
	.Q(system_capim_data_out[28]),
	.D(\hstdm_ctrl_inst.data_out_6 [28]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[27]  (
	.Q(system_capim_data_out[27]),
	.D(\hstdm_ctrl_inst.data_out_6 [27]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[26]  (
	.Q(system_capim_data_out[26]),
	.D(\hstdm_ctrl_inst.data_out_6 [26]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[25]  (
	.Q(system_capim_data_out[25]),
	.D(\hstdm_ctrl_inst.data_out_6 [25]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[24]  (
	.Q(system_capim_data_out[24]),
	.D(\hstdm_ctrl_inst.data_out_6 [24]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[23]  (
	.Q(system_capim_data_out[23]),
	.D(\hstdm_ctrl_inst.data_out_6 [23]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[22]  (
	.Q(system_capim_data_out[22]),
	.D(\hstdm_ctrl_inst.data_out_6 [22]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[21]  (
	.Q(system_capim_data_out[21]),
	.D(\hstdm_ctrl_inst.data_out_6 [21]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[20]  (
	.Q(system_capim_data_out[20]),
	.D(\hstdm_ctrl_inst.data_out_6 [20]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[19]  (
	.Q(system_capim_data_out[19]),
	.D(\hstdm_ctrl_inst.data_out_6 [19]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[18]  (
	.Q(system_capim_data_out[18]),
	.D(\hstdm_ctrl_inst.data_out_6 [18]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[17]  (
	.Q(system_capim_data_out[17]),
	.D(\hstdm_ctrl_inst.data_out_6 [17]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[16]  (
	.Q(system_capim_data_out[16]),
	.D(\hstdm_ctrl_inst.data_out_6 [16]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[15]  (
	.Q(system_capim_data_out[15]),
	.D(\hstdm_ctrl_inst.data_out_6 [15]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[14]  (
	.Q(system_capim_data_out[14]),
	.D(\hstdm_ctrl_inst.data_out_6 [14]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[13]  (
	.Q(system_capim_data_out[13]),
	.D(\hstdm_ctrl_inst.data_out_6 [13]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[12]  (
	.Q(system_capim_data_out[12]),
	.D(\hstdm_ctrl_inst.data_out_6 [12]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[11]  (
	.Q(system_capim_data_out[11]),
	.D(\hstdm_ctrl_inst.data_out_6 [11]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[10]  (
	.Q(system_capim_data_out[10]),
	.D(\hstdm_ctrl_inst.data_out_6 [10]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[9]  (
	.Q(system_capim_data_out[9]),
	.D(\hstdm_ctrl_inst.data_out_6 [9]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[8]  (
	.Q(system_capim_data_out[8]),
	.D(\hstdm_ctrl_inst.data_out_6 [8]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[7]  (
	.Q(system_capim_data_out[7]),
	.D(\hstdm_ctrl_inst.data_out_6 [7]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[6]  (
	.Q(system_capim_data_out[6]),
	.D(\hstdm_ctrl_inst.data_out_6 [6]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[5]  (
	.Q(system_capim_data_out[5]),
	.D(\hstdm_ctrl_inst.data_out_6 [5]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[4]  (
	.Q(system_capim_data_out[4]),
	.D(\hstdm_ctrl_inst.data_out_6 [4]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[3]  (
	.Q(system_capim_data_out[3]),
	.D(\hstdm_ctrl_inst.data_out_6 [3]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[2]  (
	.Q(system_capim_data_out[2]),
	.D(\hstdm_ctrl_inst.data_out_6 [2]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[1]  (
	.Q(system_capim_data_out[1]),
	.D(\hstdm_ctrl_inst.data_out_6 [1]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:649
  FDE \hstdm_ctrl_inst.data_out_Z[0]  (
	.Q(system_capim_data_out[0]),
	.D(\hstdm_ctrl_inst.data_out_6 [0]),
	.C(umr_clk),
	.CE(N_947_i)
);
// @225:1424
  LUT1 un1_traincnt_3_axb_30_cZ (
	.I0(traincnt[30]),
	.O(un1_traincnt_3_axb_30)
);
defparam un1_traincnt_3_axb_30_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_29_cZ (
	.I0(traincnt[29]),
	.O(un1_traincnt_3_axb_29)
);
defparam un1_traincnt_3_axb_29_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_28_cZ (
	.I0(traincnt[28]),
	.O(un1_traincnt_3_axb_28)
);
defparam un1_traincnt_3_axb_28_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_27_cZ (
	.I0(traincnt[27]),
	.O(un1_traincnt_3_axb_27)
);
defparam un1_traincnt_3_axb_27_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_26_cZ (
	.I0(traincnt[26]),
	.O(un1_traincnt_3_axb_26)
);
defparam un1_traincnt_3_axb_26_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_25_cZ (
	.I0(traincnt[25]),
	.O(un1_traincnt_3_axb_25)
);
defparam un1_traincnt_3_axb_25_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_24_cZ (
	.I0(traincnt[24]),
	.O(un1_traincnt_3_axb_24)
);
defparam un1_traincnt_3_axb_24_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_23_cZ (
	.I0(traincnt[23]),
	.O(un1_traincnt_3_axb_23)
);
defparam un1_traincnt_3_axb_23_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_22_cZ (
	.I0(traincnt[22]),
	.O(un1_traincnt_3_axb_22)
);
defparam un1_traincnt_3_axb_22_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_21_cZ (
	.I0(traincnt[21]),
	.O(un1_traincnt_3_axb_21)
);
defparam un1_traincnt_3_axb_21_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_20_cZ (
	.I0(traincnt[20]),
	.O(un1_traincnt_3_axb_20)
);
defparam un1_traincnt_3_axb_20_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_19_cZ (
	.I0(traincnt[19]),
	.O(un1_traincnt_3_axb_19)
);
defparam un1_traincnt_3_axb_19_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_18_cZ (
	.I0(traincnt[18]),
	.O(un1_traincnt_3_axb_18)
);
defparam un1_traincnt_3_axb_18_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_17_cZ (
	.I0(traincnt[17]),
	.O(un1_traincnt_3_axb_17)
);
defparam un1_traincnt_3_axb_17_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_16_cZ (
	.I0(traincnt[16]),
	.O(un1_traincnt_3_axb_16)
);
defparam un1_traincnt_3_axb_16_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_15_cZ (
	.I0(traincnt[15]),
	.O(un1_traincnt_3_axb_15)
);
defparam un1_traincnt_3_axb_15_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_13_cZ (
	.I0(traincnt[13]),
	.O(un1_traincnt_3_axb_13)
);
defparam un1_traincnt_3_axb_13_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_12_cZ (
	.I0(traincnt[12]),
	.O(un1_traincnt_3_axb_12)
);
defparam un1_traincnt_3_axb_12_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_10_cZ (
	.I0(traincnt[10]),
	.O(un1_traincnt_3_axb_10)
);
defparam un1_traincnt_3_axb_10_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_9_cZ (
	.I0(traincnt[9]),
	.O(un1_traincnt_3_axb_9)
);
defparam un1_traincnt_3_axb_9_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_8_cZ (
	.I0(traincnt[8]),
	.O(un1_traincnt_3_axb_8)
);
defparam un1_traincnt_3_axb_8_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_7_cZ (
	.I0(traincnt[7]),
	.O(un1_traincnt_3_axb_7)
);
defparam un1_traincnt_3_axb_7_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_6_cZ (
	.I0(traincnt[6]),
	.O(un1_traincnt_3_axb_6)
);
defparam un1_traincnt_3_axb_6_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_5_cZ (
	.I0(traincnt[5]),
	.O(un1_traincnt_3_axb_5)
);
defparam un1_traincnt_3_axb_5_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_4_cZ (
	.I0(traincnt[4]),
	.O(un1_traincnt_3_axb_4)
);
defparam un1_traincnt_3_axb_4_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_3_cZ (
	.I0(traincnt[3]),
	.O(un1_traincnt_3_axb_3)
);
defparam un1_traincnt_3_axb_3_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_2_cZ (
	.I0(traincnt[2]),
	.O(un1_traincnt_3_axb_2)
);
defparam un1_traincnt_3_axb_2_cZ.INIT=2'h2;
// @225:1424
  LUT1 un1_traincnt_3_axb_1_cZ (
	.I0(traincnt[1]),
	.O(un1_traincnt_3_axb_1)
);
defparam un1_traincnt_3_axb_1_cZ.INIT=2'h2;
// @225:1424
  LUT2 un1_traincnt_3_axb_0_cZ (
	.I0(SIMULATION),
	.I1(traincnt[0]),
	.O(un1_traincnt_3_axb_0)
);
defparam un1_traincnt_3_axb_0_cZ.INIT=4'h9;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_26_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [26]),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_26 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_26_cZ .INIT=2'h2;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_25_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [25]),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_25 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_25_cZ .INIT=2'h2;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_24_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [24]),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_24 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_24_cZ .INIT=2'h2;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_23_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [23]),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_23 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_23_cZ .INIT=2'h2;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_22_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [22]),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_22 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_22_cZ .INIT=2'h2;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_21_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [21]),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_21 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_21_cZ .INIT=2'h2;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_20_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [20]),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_20 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_20_cZ .INIT=2'h2;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_19_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [19]),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_19 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_19_cZ .INIT=2'h2;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_18_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [18]),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_18 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_18_cZ .INIT=2'h2;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_17_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [17]),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_17 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_17_cZ .INIT=2'h2;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_16_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [16]),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_16 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_16_cZ .INIT=2'h2;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_15_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [15]),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_15 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_15_cZ .INIT=2'h2;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_14_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [14]),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_14 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_14_cZ .INIT=2'h2;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_13_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [13]),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_13 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_13_cZ .INIT=2'h2;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_12_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [12]),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_12 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_12_cZ .INIT=2'h2;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_11_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [11]),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_11 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_11_cZ .INIT=2'h2;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_10_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [10]),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_10 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_10_cZ .INIT=2'h2;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_9_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [9]),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_9 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_9_cZ .INIT=2'h2;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_8_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [8]),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_8 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_8_cZ .INIT=2'h2;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_7_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [7]),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_7 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_7_cZ .INIT=2'h2;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_6_cZ  (
	.I0(i1_i),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_6 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_6_cZ .INIT=2'h2;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_5_cZ  (
	.I0(i1_i_0),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_5 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_5_cZ .INIT=2'h2;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_4_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [4]),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_4 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_4_cZ .INIT=2'h2;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_3_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [3]),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_3 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_3_cZ .INIT=2'h2;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_2_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [2]),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_2 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_2_cZ .INIT=2'h2;
// @225:563
  LUT1 \hstdm_ctrl_inst.un1_data_in_11_axb_1_cZ  (
	.I0(\hstdm_ctrl_inst.data_in [1]),
	.O(\hstdm_ctrl_inst.un1_data_in_11_axb_1 )
);
defparam \hstdm_ctrl_inst.un1_data_in_11_axb_1_cZ .INIT=2'h2;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0[2]  (
	.I0(un1_traincnt_3_cry_3_O[2]),
	.I1(traincnt23),
	.O(traincnt_8_0[2])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0[2] .INIT=4'h8;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0[5]  (
	.I0(un1_traincnt_3_cry_3_O[5]),
	.I1(traincnt23),
	.O(traincnt_8_0[5])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0[5] .INIT=4'h8;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0[6]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_3_O[6]),
	.O(traincnt_8_0[6])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0[6] .INIT=4'h8;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0[7]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_3_O[7]),
	.O(traincnt_8_0[7])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0[7] .INIT=4'h8;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0[8]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_11_O[0]),
	.O(traincnt_8_0[8])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0[8] .INIT=4'h8;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0[9]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_11_O[1]),
	.O(traincnt_8_0[9])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0[9] .INIT=4'h8;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0[11]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_11_O[3]),
	.O(traincnt_8_0[11])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0[11] .INIT=4'h8;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0[13]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_11_O[5]),
	.O(traincnt_8_0[13])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0[13] .INIT=4'h8;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0[14]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_11_O[6]),
	.O(traincnt_8_0[14])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0[14] .INIT=4'h8;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0[15]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_11_O[7]),
	.O(traincnt_8_0[15])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0[15] .INIT=4'h8;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0[16]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_19_O[0]),
	.O(traincnt_8_0[16])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0[16] .INIT=4'h8;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0[18]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_19_O[2]),
	.O(traincnt_8_0[18])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0[18] .INIT=4'h8;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0[19]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_19_O[3]),
	.O(traincnt_8_0[19])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0[19] .INIT=4'h8;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0[21]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_19_O[5]),
	.O(traincnt_8_0[21])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0[21] .INIT=4'h8;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0[22]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_19_O[6]),
	.O(traincnt_8_0[22])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0[22] .INIT=4'h8;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0[25]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_27_O[1]),
	.O(traincnt_8_0[25])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0[25] .INIT=4'hD;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0[27]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_27_O[3]),
	.O(traincnt_8_0[27])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0[27] .INIT=4'h8;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0[30]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_27_O[6]),
	.O(traincnt_8_0[30])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0[30] .INIT=4'h8;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0[31]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_27_O[7]),
	.O(traincnt_8_0[31])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0[31] .INIT=4'h8;
  LUT3 \hstdm_ctrl_inst.hstdm_status_3_0[25]  (
	.I0(sim_flags_out[2]),
	.I1(txctrl[0]),
	.I2(txctrl[1]),
	.O(hstdm_status_3_0[25])
);
defparam \hstdm_ctrl_inst.hstdm_status_3_0[25] .INIT=8'hBA;
  LUT2 \infopipe_arbiter_inst.current_set_3_sqmuxa_0_cZ  (
	.I0(\infopipe_arbiter_inst.current_set [1]),
	.I1(infopipe_send_ack_arbiter),
	.O(\infopipe_arbiter_inst.current_set_3_sqmuxa_0 )
);
defparam \infopipe_arbiter_inst.current_set_3_sqmuxa_0_cZ .INIT=4'h1;
  LUT2 \cmd_script_ack_pulse_gen.fdcr1.IntDceR15_0  (
	.I0(\cmd_script_ack_pulse_gen.IntSigClr ),
	.I1(hstdm_cmd_script_ack_ff2),
	.O(\cmd_script_ack_pulse_gen.fdcr1.IntDceR_0 )
);
defparam \cmd_script_ack_pulse_gen.fdcr1.IntDceR15_0 .INIT=4'h4;
  LUT2 \infopipe_snd_inst.accept_pulse_gen.fdcr1.IntDceR15_0  (
	.I0(\infopipe_snd_inst.accept_pulse_gen.IntSigClr ),
	.I1(\infopipe_snd_inst.infopipe_empty_local ),
	.O(\infopipe_snd_inst.accept_pulse_gen.fdcr1.IntDceR_0 )
);
defparam \infopipe_snd_inst.accept_pulse_gen.fdcr1.IntDceR15_0 .INIT=4'h4;
  LUT4 \reset_gen_inst.reset_release_pulse_gen_inst.fdcr1.IntDceR15_0  (
	.I0(SIMULATION),
	.I1(training_ctrl_tx_start),
	.I2(\reset_gen_inst.reset_release_pulse_gen_inst.IntSigClr ),
	.I3(umr_reset),
	.O(\reset_gen_inst.reset_release_pulse_gen_inst.fdcr1.IntDceR_0 )
);
defparam \reset_gen_inst.reset_release_pulse_gen_inst.fdcr1.IntDceR15_0 .INIT=16'h040E;
  LUT5 \infopipe_snd_inst.state_2_sqmuxa_0_cZ  (
	.I0(\infopipe_snd_inst.state [0]),
	.I1(CO0_0),
	.I2(\infopipe_snd_inst.sndcnt [2]),
	.I3(\infopipe_snd_inst.sndcnt [3]),
	.I4(\infopipe_snd_inst.sndcnt [1]),
	.O(\infopipe_snd_inst.state_2_sqmuxa_0 )
);
defparam \infopipe_snd_inst.state_2_sqmuxa_0_cZ .INIT=32'hA800A000;
  LUT2 \hstdm_ctrl_inst.hstdm_status_3_0[26]  (
	.I0(rxctrl),
	.I1(txctrl[0]),
	.O(hstdm_status_3_0[26])
);
defparam \hstdm_ctrl_inst.hstdm_status_3_0[26] .INIT=4'h8;
  LUT3 \hstdm_ctrl_inst.traincnt_8_r_0[0]  (
	.I0(SIMULATION),
	.I1(traincnt[0]),
	.I2(traincnt23),
	.O(traincnt_8_0[0])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0[0] .INIT=8'h90;
// @225:1273
  FDR \hstdm_status_Z[25]  (
	.Q(hstdm_status[25]),
	.D(hstdm_status_3_0[25]),
	.C(umr_clk),
	.R(reset_hstdm_out)
);
// @225:2704
  FDR \infopipe_arbiter_inst.data_ready_out_Z  (
	.Q(infopipe_ready_arbiter),
	.D(\infopipe_arbiter_inst.current_set_3_sqmuxa_0 ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:1273
  FDR \hstdm_status_Z[28]  (
	.Q(hstdm_status[28]),
	.D(hstdm_status_3_0[28]),
	.C(umr_clk),
	.R(reset_hstdm_out)
);
// @225:1273
  FDR \hstdm_status_Z[30]  (
	.Q(hstdm_status[30]),
	.D(hstdm_status_3_0[30]),
	.C(umr_clk),
	.R(reset_hstdm_out)
);
// @225:1273
  FDR \hstdm_status_Z[24]  (
	.Q(hstdm_status[24]),
	.D(sim_flags_out[2]),
	.C(umr_clk),
	.R(reset_hstdm_out)
);
// @225:1273
  FDR \hstdm_status_Z[27]  (
	.Q(hstdm_status[27]),
	.D(txctrl[0]),
	.C(umr_clk),
	.R(reset_hstdm_out)
);
// @225:1273
  FDR \hstdm_status_Z[29]  (
	.Q(hstdm_status[29]),
	.D(hstdm_status_3_0[29]),
	.C(umr_clk),
	.R(reset_hstdm_out)
);
// @225:1273
  FDR \hstdm_status_Z[31]  (
	.Q(hstdm_status[31]),
	.D(hstdm_status_3_0[31]),
	.C(umr_clk),
	.R(reset_hstdm_out)
);
// @225:2625
  FDR \infopipe_snd_inst.data_sent_out_Z  (
	.Q(infopipe_send_ack_arbiter),
	.D(\infopipe_snd_inst.state_2_sqmuxa_0 ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:1273
  FDR \hstdm_status_Z[26]  (
	.Q(hstdm_status[26]),
	.D(hstdm_status_3_0[26]),
	.C(umr_clk),
	.R(reset_hstdm_out)
);
  LUT3 \reset_gen_inst.longer_pulse_inst.out_e_0  (
	.I0(\reset_gen_inst.reset_pulse_short ),
	.I1(\reset_gen_inst.reset_pulse_long ),
	.I2(un1_dly),
	.O(\reset_gen_inst.longer_pulse_inst.out_0 )
);
defparam \reset_gen_inst.longer_pulse_inst.out_e_0 .INIT=8'hAE;
  LUT3 \TXCTRL_OVERLAP.out_e_0  (
	.I0(txctrl1_inv_delay),
	.I1(un1_dly_0),
	.I2(training_ctrl_word_start_i),
	.O(\TXCTRL_OVERLAP.out_0 )
);
defparam \TXCTRL_OVERLAP.out_e_0 .INIT=8'hF2;
  LUT3 \reset_gen_inst.reset_pulse_s_0  (
	.I0(\reset_gen_inst.first_reset_done ),
	.I1(\reset_gen_inst.reset_pulse_long ),
	.I2(umr_reset),
	.O(N_28_0)
);
defparam \reset_gen_inst.reset_pulse_s_0 .INIT=8'hFD;
  LUT5 \infopipe_arbiter_inst.current_set_e_0[1]  (
	.I0(infopipe_send_ack_arbiter),
	.I1(\infopipe_arbiter_inst.current_set [1]),
	.I2(infopipe_send_ack_set[0]),
	.I3(hstdm_cmd_script_ready_ff2),
	.I4(infopipe_reset),
	.O(\infopipe_arbiter_inst.current_set_0 )
);
defparam \infopipe_arbiter_inst.current_set_e_0[1] .INIT=32'hFFFFF2FE;
  LUT6 \infopipe_snd_inst.sndcnt_5_0_e_cZ[1]  (
	.I0(\infopipe_snd_inst.sndcnt [2]),
	.I1(\infopipe_snd_inst.state [0]),
	.I2(CO0_0),
	.I3(\infopipe_snd_inst.sndcnt [3]),
	.I4(\infopipe_snd_inst.sndcnt [1]),
	.I5(infopipe_reset),
	.O(\infopipe_snd_inst.sndcnt_5_0_e [1])
);
defparam \infopipe_snd_inst.sndcnt_5_0_e_cZ[1] .INIT=64'h00000000040C40C0;
  LUT6 \infopipe_snd_inst.sndcnt_5_0_e_cZ[2]  (
	.I0(\infopipe_snd_inst.sndcnt [1]),
	.I1(\infopipe_snd_inst.sndcnt [3]),
	.I2(\infopipe_snd_inst.sndcnt [2]),
	.I3(\infopipe_snd_inst.state [0]),
	.I4(CO0_0),
	.I5(infopipe_reset),
	.O(\infopipe_snd_inst.sndcnt_5_0_e [2])
);
defparam \infopipe_snd_inst.sndcnt_5_0_e_cZ[2] .INIT=64'h0000000012003000;
  LUT5 \infopipe_snd_inst.sndcnt_5_0_e_cZ[0]  (
	.I0(\infopipe_snd_inst.sndcnt [3]),
	.I1(\infopipe_snd_inst.state [0]),
	.I2(\infopipe_snd_inst.sndcnt [2]),
	.I3(CO0_0),
	.I4(infopipe_reset),
	.O(\infopipe_snd_inst.sndcnt_5_0_e [0])
);
defparam \infopipe_snd_inst.sndcnt_5_0_e_cZ[0] .INIT=32'h0000004C;
  LUT6 \infopipe_snd_inst.sndcnt_5_0_e_cZ[3]  (
	.I0(\infopipe_snd_inst.sndcnt [1]),
	.I1(\infopipe_snd_inst.sndcnt [3]),
	.I2(\infopipe_snd_inst.sndcnt [2]),
	.I3(\infopipe_snd_inst.state [0]),
	.I4(CO0_0),
	.I5(infopipe_reset),
	.O(\infopipe_snd_inst.sndcnt_5_0_e [3])
);
defparam \infopipe_snd_inst.sndcnt_5_0_e_cZ[3] .INIT=64'h0000000024000C00;
  LUT6 \infopipe_snd_inst.N_467_i_0_e_cZ  (
	.I0(\infopipe_snd_inst.state [1]),
	.I1(\infopipe_snd_inst.state [0]),
	.I2(\infopipe_snd_inst.infopipe_empty_local ),
	.I3(infopipe_ready_arbiter),
	.I4(infopipe_reset),
	.I5(un1_sndcnt_c4),
	.O(\infopipe_snd_inst.N_467_i_0_e )
);
defparam \infopipe_snd_inst.N_467_i_0_e_cZ .INIT=64'h0000544400001000;
  LUT5 \infopipe_snd_inst.N_469_i_0_e_cZ  (
	.I0(\infopipe_snd_inst.state [0]),
	.I1(\infopipe_snd_inst.state [1]),
	.I2(\infopipe_snd_inst.infopipe_empty_pulse ),
	.I3(infopipe_reset),
	.I4(un1_sndcnt_c4),
	.O(\infopipe_snd_inst.N_469_i_0_e )
);
defparam \infopipe_snd_inst.N_469_i_0_e_cZ .INIT=32'h008C00AE;
  LUT3 \reset_gen_inst.first_reset_done_e_0_e_cZ  (
	.I0(\reset_gen_inst.first_reset_done ),
	.I1(\reset_gen_inst.reset_pulse_long ),
	.I2(umr_reset),
	.O(\reset_gen_inst.first_reset_done_e_0_e )
);
defparam \reset_gen_inst.first_reset_done_e_0_e_cZ .INIT=8'h0E;
  LUT5 \hstdm_ctrl_inst.cmd_state_r_0_e_cZ[0]  (
	.I0(\hstdm_ctrl_inst.cmd_state [0]),
	.I1(\hstdm_ctrl_inst.command_issue_pulse ),
	.I2(hstdm_cmd_script_ack_pulse),
	.I3(N_797_i),
	.I4(umr_reset),
	.O(\hstdm_ctrl_inst.cmd_state_r_0_e [0])
);
defparam \hstdm_ctrl_inst.cmd_state_r_0_e_cZ[0] .INIT=32'h00004EAA;
// @225:2625
  FD \infopipe_snd_inst.sndcnt_Z[1]  (
	.Q(\infopipe_snd_inst.sndcnt [1]),
	.D(\infopipe_snd_inst.sndcnt_5_0_e [1]),
	.C(infopipe_clk)
);
// @225:2625
  FD \infopipe_snd_inst.sndcnt_Z[2]  (
	.Q(\infopipe_snd_inst.sndcnt [2]),
	.D(\infopipe_snd_inst.sndcnt_5_0_e [2]),
	.C(infopipe_clk)
);
// @225:2625
  FD \infopipe_snd_inst.sndcnt_Z[0]  (
	.Q(CO0_0),
	.D(\infopipe_snd_inst.sndcnt_5_0_e [0]),
	.C(infopipe_clk)
);
// @225:2625
  FD \infopipe_snd_inst.sndcnt_Z[3]  (
	.Q(\infopipe_snd_inst.sndcnt [3]),
	.D(\infopipe_snd_inst.sndcnt_5_0_e [3]),
	.C(infopipe_clk)
);
// @225:2625
  FD \infopipe_snd_inst.state_Z[0]  (
	.Q(\infopipe_snd_inst.state [0]),
	.D(\infopipe_snd_inst.N_467_i_0_e ),
	.C(infopipe_clk)
);
// @225:844
  FD \hstdm_ctrl_inst.cmd_state_Z[0]  (
	.Q(\hstdm_ctrl_inst.cmd_state [0]),
	.D(\hstdm_ctrl_inst.cmd_state_r_0_e [0]),
	.C(umr_clk)
);
// @225:2625
  FD \infopipe_snd_inst.state_Z[1]  (
	.Q(\infopipe_snd_inst.state [1]),
	.D(\infopipe_snd_inst.N_469_i_0_e ),
	.C(infopipe_clk)
);
  CARRY8 \hstdm_ctrl_inst.un1_data_in_11_cry_4_cZ  (
	.CO({\hstdm_ctrl_inst.un1_data_in_11_cry_8 , \hstdm_ctrl_inst.un1_data_in_11_cry_7 , \hstdm_ctrl_inst.un1_data_in_11_cry_6 , \hstdm_ctrl_inst.un1_data_in_11_cry_5 , \hstdm_ctrl_inst.un1_data_in_11_cry_4 , \hstdm_ctrl_inst.un1_data_in_11_cry_3 , \hstdm_ctrl_inst.un1_data_in_11_cry_2 , \hstdm_ctrl_inst.un1_data_in_11_cry_1 }),
	.O(un1_data_in_11_cry_4_O[7:0]),
	.CI(\hstdm_ctrl_inst.data_in [0]),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, GND}),
	.S({\hstdm_ctrl_inst.un1_data_in_11_axb_8 , \hstdm_ctrl_inst.un1_data_in_11_axb_7 , \hstdm_ctrl_inst.un1_data_in_11_axb_6 , \hstdm_ctrl_inst.un1_data_in_11_axb_5 , \hstdm_ctrl_inst.un1_data_in_11_axb_4 , \hstdm_ctrl_inst.un1_data_in_11_axb_3 , \hstdm_ctrl_inst.un1_data_in_11_axb_2 , \hstdm_ctrl_inst.un1_data_in_11_axb_1 })
);
  CARRY8 \hstdm_ctrl_inst.un1_data_in_11_cry_12_cZ  (
	.CO({\hstdm_ctrl_inst.un1_data_in_11_cry_16 , \hstdm_ctrl_inst.un1_data_in_11_cry_15 , \hstdm_ctrl_inst.un1_data_in_11_cry_14 , \hstdm_ctrl_inst.un1_data_in_11_cry_13 , \hstdm_ctrl_inst.un1_data_in_11_cry_12 , \hstdm_ctrl_inst.un1_data_in_11_cry_11 , \hstdm_ctrl_inst.un1_data_in_11_cry_10 , \hstdm_ctrl_inst.un1_data_in_11_cry_9 }),
	.O(un1_data_in_11_cry_12_O[7:0]),
	.CI(\hstdm_ctrl_inst.un1_data_in_11_cry_8 ),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, GND}),
	.S({\hstdm_ctrl_inst.un1_data_in_11_axb_16 , \hstdm_ctrl_inst.un1_data_in_11_axb_15 , \hstdm_ctrl_inst.un1_data_in_11_axb_14 , \hstdm_ctrl_inst.un1_data_in_11_axb_13 , \hstdm_ctrl_inst.un1_data_in_11_axb_12 , \hstdm_ctrl_inst.un1_data_in_11_axb_11 , \hstdm_ctrl_inst.un1_data_in_11_axb_10 , \hstdm_ctrl_inst.un1_data_in_11_axb_9 })
);
  CARRY8 \hstdm_ctrl_inst.un1_data_in_11_cry_20_cZ  (
	.CO({\hstdm_ctrl_inst.un1_data_in_11_cry_24 , \hstdm_ctrl_inst.un1_data_in_11_cry_23 , \hstdm_ctrl_inst.un1_data_in_11_cry_22 , \hstdm_ctrl_inst.un1_data_in_11_cry_21 , \hstdm_ctrl_inst.un1_data_in_11_cry_20 , \hstdm_ctrl_inst.un1_data_in_11_cry_19 , \hstdm_ctrl_inst.un1_data_in_11_cry_18 , \hstdm_ctrl_inst.un1_data_in_11_cry_17 }),
	.O(un1_data_in_11_cry_20_O[7:0]),
	.CI(\hstdm_ctrl_inst.un1_data_in_11_cry_16 ),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, GND}),
	.S({\hstdm_ctrl_inst.un1_data_in_11_axb_24 , \hstdm_ctrl_inst.un1_data_in_11_axb_23 , \hstdm_ctrl_inst.un1_data_in_11_axb_22 , \hstdm_ctrl_inst.un1_data_in_11_axb_21 , \hstdm_ctrl_inst.un1_data_in_11_axb_20 , \hstdm_ctrl_inst.un1_data_in_11_axb_19 , \hstdm_ctrl_inst.un1_data_in_11_axb_18 , \hstdm_ctrl_inst.un1_data_in_11_axb_17 })
);
  CARRY8 \hstdm_ctrl_inst.un1_data_in_11_s_27  (
	.CO({NC4, NC3, NC2, NC1, un1_data_in_11_s_27_CO[3:2], \hstdm_ctrl_inst.un1_data_in_11_cry_26 , \hstdm_ctrl_inst.un1_data_in_11_cry_25 }),
	.O({NC8, NC7, NC6, NC5, un1_data_in_11_s_27_O[3:0]}),
	.CI(\hstdm_ctrl_inst.un1_data_in_11_cry_24 ),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, GND}),
	.S({GND, GND, GND, GND, GND, \hstdm_ctrl_inst.un1_data_in_11_axb_27 , \hstdm_ctrl_inst.un1_data_in_11_axb_26 , \hstdm_ctrl_inst.un1_data_in_11_axb_25 })
);
  CARRY8 un1_traincnt_3_cry_3_cZ (
	.CO({un1_traincnt_3_cry_7, un1_traincnt_3_cry_6, un1_traincnt_3_cry_5, un1_traincnt_3_cry_4, un1_traincnt_3_cry_3, un1_traincnt_3_cry_2, un1_traincnt_3_cry_1, un1_traincnt_3_cry_0}),
	.O(un1_traincnt_3_cry_3_O[7:0]),
	.CI(GND),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, traincnt[0]}),
	.S({un1_traincnt_3_axb_7, un1_traincnt_3_axb_6, un1_traincnt_3_axb_5, un1_traincnt_3_axb_4, un1_traincnt_3_axb_3, un1_traincnt_3_axb_2, un1_traincnt_3_axb_1, un1_traincnt_3_axb_0})
);
  CARRY8 un1_traincnt_3_cry_11_cZ (
	.CO({un1_traincnt_3_cry_15, un1_traincnt_3_cry_14, un1_traincnt_3_cry_13, un1_traincnt_3_cry_12, un1_traincnt_3_cry_11, un1_traincnt_3_cry_10, un1_traincnt_3_cry_9, un1_traincnt_3_cry_8}),
	.O(un1_traincnt_3_cry_11_O[7:0]),
	.CI(un1_traincnt_3_cry_7),
	.CI_TOP(GND),
	.DI({GND, un1_traincnt_3_14_d, GND, GND, traincnt[11], GND, GND, GND}),
	.S({un1_traincnt_3_axb_15, un1_traincnt_3_axb_14, un1_traincnt_3_axb_13, un1_traincnt_3_axb_12, un1_traincnt_3_axb_11, un1_traincnt_3_axb_10, un1_traincnt_3_axb_9, un1_traincnt_3_axb_8})
);
  CARRY8 un1_traincnt_3_cry_19_cZ (
	.CO({un1_traincnt_3_cry_23, un1_traincnt_3_cry_22, un1_traincnt_3_cry_21, un1_traincnt_3_cry_20, un1_traincnt_3_cry_19, un1_traincnt_3_cry_18, un1_traincnt_3_cry_17, un1_traincnt_3_cry_16}),
	.O(un1_traincnt_3_cry_19_O[7:0]),
	.CI(un1_traincnt_3_cry_15),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, GND}),
	.S({un1_traincnt_3_axb_23, un1_traincnt_3_axb_22, un1_traincnt_3_axb_21, un1_traincnt_3_axb_20, un1_traincnt_3_axb_19, un1_traincnt_3_axb_18, un1_traincnt_3_axb_17, un1_traincnt_3_axb_16})
);
  CARRY8 un1_traincnt_3_cry_27_cZ (
	.CO({NC0, un1_traincnt_3_cry_30, un1_traincnt_3_cry_29, un1_traincnt_3_cry_28, un1_traincnt_3_cry_27, un1_traincnt_3_cry_26, un1_traincnt_3_cry_25, un1_traincnt_3_cry_24}),
	.O(un1_traincnt_3_cry_27_O[7:0]),
	.CI(un1_traincnt_3_cry_23),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, GND}),
	.S({un1_traincnt_3_axb_31, un1_traincnt_3_axb_30, un1_traincnt_3_axb_29, un1_traincnt_3_axb_28, un1_traincnt_3_axb_27, un1_traincnt_3_axb_26, un1_traincnt_3_axb_25, un1_traincnt_3_axb_24})
);
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0_lut6_2_o6[20]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_19_O[4]),
	.O(traincnt_8_0[20])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0_lut6_2_o6[20] .INIT=4'hD;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0_lut6_2_o5[20]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_3_O[1]),
	.O(traincnt_8_0[1])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0_lut6_2_o5[20] .INIT=4'h8;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0_lut6_2_o6[23]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_19_O[7]),
	.O(traincnt_8_0[23])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0_lut6_2_o6[23] .INIT=4'hD;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0_lut6_2_o5[23]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_11_O[4]),
	.O(traincnt_8_0[12])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0_lut6_2_o5[23] .INIT=4'h8;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0_lut6_2_o6[24]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_27_O[0]),
	.O(traincnt_8_0[24])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0_lut6_2_o6[24] .INIT=4'h8;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0_lut6_2_o5[24]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_19_O[1]),
	.O(traincnt_8_0[17])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0_lut6_2_o5[24] .INIT=4'h8;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0_lut6_2_o6[29]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_27_O[5]),
	.O(traincnt_8_0[29])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0_lut6_2_o6[29] .INIT=4'h8;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0_lut6_2_o5[29]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_11_O[2]),
	.O(traincnt_8_0[10])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0_lut6_2_o5[29] .INIT=4'h8;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0_lut6_2_o6[4]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_3_O[4]),
	.O(traincnt_8_0[4])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0_lut6_2_o6[4] .INIT=4'h8;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0_lut6_2_o5[4]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_27_O[4]),
	.O(traincnt_8_0[28])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0_lut6_2_o5[4] .INIT=4'h8;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0_lut6_2_o6[3]  (
	.I0(un1_traincnt_3_cry_3_O[3]),
	.I1(traincnt23),
	.O(traincnt_8_0[3])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0_lut6_2_o6[3] .INIT=4'h8;
  LUT2 \hstdm_ctrl_inst.traincnt_8_r_0_lut6_2_o5[3]  (
	.I0(traincnt23),
	.I1(un1_traincnt_3_cry_27_O[2]),
	.O(traincnt_8_0[26])
);
defparam \hstdm_ctrl_inst.traincnt_8_r_0_lut6_2_o5[3] .INIT=4'hD;
assign reset_clock_out = GND;
assign training_done_out = GND;
assign infopipe_empty_out = GND;
assign flags_out[0] = GND;
assign flags_out[1] = GND;
assign flags_out[2] = GND;
assign flags_out[3] = GND;
assign flags_out[4] = VCC;
assign flags_out[5] = VCC;
assign flags_out[6] = GND;
assign flags_out[7] = VCC;
assign self_test_start_rx_out[0] = GND;
assign self_test_start_rx_out[1] = GND;
assign reset_erd_flag_out = GND;
assign reset_rx_out = GND;
assign training_ctrl_rx_out = GND;
assign sim_flags_out[1] = GND;
endmodule /* hstdm_controller_0s_1048576s_0s_4s_12s_48s_32s_2s_FB1_uA */

(* DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_simulation_FB1_uA (
  umr_clk,
  umr_reset,
  sim_flags_in,
  SIMULATION,
  SIMULATION_DISABLE_TRAINING
)
;
input umr_clk ;
input umr_reset ;
input [2:0] sim_flags_in ;
(* DONT_TOUCH="TRUE" *)output SIMULATION ;
(* DONT_TOUCH="TRUE" *)output SIMULATION_DISABLE_TRAINING ;
wire umr_clk ;
wire umr_reset ;
wire SIMULATION ;
wire SIMULATION_DISABLE_TRAINING ;
wire GND ;
wire SIM_TRAINING_DONE ;
wire SIM_TRAINING_ERROR ;
wire SIM_TRAINING_TIMEOUT ;
wire SIM_TRAINING_TIMEOUT_r ;
wire SIM_TRAINING_DONE_r ;
wire VCC ;
  GND GND_cZ (
	.G(GND)
);
(* DONT_TOUCH="TRUE" *)  FD SIM_TRAINING_TIMEOUT_Z (
	.Q(SIM_TRAINING_TIMEOUT),
	.D(SIM_TRAINING_TIMEOUT_r),
	.C(umr_clk)
);
defparam SIM_TRAINING_TIMEOUT_Z.INIT=1'b0;
(* DONT_TOUCH="TRUE" *)  FD SIM_TRAINING_DONE_Z (
	.Q(SIM_TRAINING_DONE),
	.D(SIM_TRAINING_DONE_r),
	.C(umr_clk)
);
defparam SIM_TRAINING_DONE_Z.INIT=1'b0;
(* DONT_TOUCH="TRUE" *)  FD SIM_TRAINING_ERROR_Z (
	.Q(SIM_TRAINING_ERROR),
	.D(GND),
	.C(umr_clk)
);
defparam SIM_TRAINING_ERROR_Z.INIT=1'b0;
(* DONT_TOUCH="TRUE" *)  FD SIMULATION_Z (
	.Q(SIMULATION),
	.D(GND),
	.C(umr_clk)
);
defparam SIMULATION_Z.INIT=1'b0;
(* DONT_TOUCH="TRUE" *)  FD SIMULATION_DISABLE_TRAINING_Z (
	.Q(SIMULATION_DISABLE_TRAINING),
	.D(GND),
	.C(umr_clk)
);
defparam SIMULATION_DISABLE_TRAINING_Z.INIT=1'b0;
  LUT2 SIM_TRAINING_DONE_r_cZ (
	.I0(sim_flags_in[0]),
	.I1(umr_reset),
	.O(SIM_TRAINING_DONE_r)
);
defparam SIM_TRAINING_DONE_r_cZ.INIT=4'h2;
  LUT2 SIM_TRAINING_TIMEOUT_r_cZ (
	.I0(sim_flags_in[2]),
	.I1(umr_reset),
	.O(SIM_TRAINING_TIMEOUT_r)
);
defparam SIM_TRAINING_TIMEOUT_r_cZ.INIT=4'h2;
  assign VCC = 1'b1;
endmodule /* hstdm_simulation_FB1_uA */

(* DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_ultrascale_plle3_Z1_FB1_uA (
  clk_in,
  reset_in,
  txclk,
  txclkdiv2,
  txclkdiv4,
  idlyctrlclk,
  clkoutphy,
  locked,
  RST_DLY,
  BS_RST,
  BSC_RST,
  DLY_RDY,
  VTC_RDY,
  BSC_EN_VTC,
  BSC_RDY,
  RIU_CLK,
  RIU_NIBBLE_SEL_UPPER,
  RIU_NIBBLE_SEL_LOWER,
  RIU_WR_EN,
  RIU_ADDR,
  RIU_WR_DATA
)
;
input clk_in ;
input reset_in ;
output txclk ;
output txclkdiv2 ;
output txclkdiv4 ;
output idlyctrlclk ;
output clkoutphy ;
output locked ;
output RST_DLY ;
output BS_RST ;
output BSC_RST ;
input [7:0] DLY_RDY ;
input [7:0] VTC_RDY ;
output BSC_EN_VTC ;
output BSC_RDY ;
output RIU_CLK ;
output RIU_NIBBLE_SEL_UPPER ;
output RIU_NIBBLE_SEL_LOWER ;
output RIU_WR_EN ;
output [5:0] RIU_ADDR ;
output [15:0] RIU_WR_DATA ;
wire clk_in ;
wire reset_in ;
wire txclk ;
wire txclkdiv2 ;
wire txclkdiv4 ;
wire idlyctrlclk ;
wire clkoutphy ;
wire locked ;
wire RST_DLY ;
wire BS_RST ;
wire BSC_RST ;
wire BSC_EN_VTC ;
wire BSC_RDY ;
wire RIU_CLK ;
wire RIU_NIBBLE_SEL_UPPER ;
wire RIU_NIBBLE_SEL_LOWER ;
wire RIU_WR_EN ;
wire [15:0] DO;
wire [1:1] \phy_en_delay.dly ;
wire [1:1] \rst_delay.dly ;
wire [0:0] \phy_en_delay.DLY.SRL.SYNC.delay_tmp_d_array_0 ;
wire [0:0] \phy_en_delay.DLY.SRL.SYNC.delay_tmp_array_1 ;
wire [0:0] \phy_en_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 ;
wire [0:0] \phy_en_delay.DLY.SRL.SYNC.delay_tmp_array_2 ;
wire [0:0] \rst_delay.DLY.SRL.SYNC.delay_tmp_d_array_0 ;
wire [0:0] \rst_delay.DLY.SRL.SYNC.delay_tmp_array_1 ;
wire [0:0] \rst_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 ;
wire [0:0] \rst_delay.DLY.SRL.SYNC.delay_tmp_array_2 ;
wire CLKFBOUT ;
wire hstdm_txclkdiv4_local ;
wire CLKOUT0B ;
wire hstdm_txclkdiv2_local ;
wire CLKOUT1B ;
wire DRDY ;
wire clkoutphyen ;
wire locked_inv_sync ;
wire rst_wire ;
wire bs_rst_2 ;
wire clkoutphyen_inv ;
wire bs_rst ;
wire \phy_en_delay.srl_dly_out  ;
wire un1_dly_0 ;
wire \rst_delay.srl_dly_out  ;
wire un1_dly ;
wire \ar_locked.R0  ;
wire N_31 ;
wire N_32 ;
wire locked_i ;
wire un3_clkoutphyen_i ;
wire N_4_mux_i ;
wire N_4_mux_0_i ;
wire lockedz ;
wire VCC ;
wire GND ;
  GND GND_cZ (
	.G(GND)
);
  VCC VCC_cZ (
	.P(VCC)
);
  FDE \rst_delay.out_Z  (
	.Q(rst_wire),
	.D(locked_inv_sync),
	.C(RIU_CLK),
	.CE(N_4_mux_0_i)
);
defparam \rst_delay.out_Z .INIT=1'b0;
  FDE \phy_en_delay.out_Z  (
	.Q(clkoutphyen_inv),
	.D(bs_rst_2),
	.C(RIU_CLK),
	.CE(N_4_mux_i)
);
defparam \phy_en_delay.out_Z .INIT=1'b0;
// @225:7286
  INV \locked_i.O  (
	.I(lockedz),
	.O(locked_i)
);
// @225:326
(* ASYNC_REG="TRUE" *)  FDP \ar_locked.R0_Z  (
	.Q(\ar_locked.R0 ),
	.D(GND),
	.C(RIU_CLK),
	.PRE(locked_i)
);
defparam \ar_locked.R0_Z .INIT=1'b1;
// @225:326
(* ASYNC_REG="TRUE" *)  FDP \ar_locked.R1_Z  (
	.Q(locked_inv_sync),
	.D(\ar_locked.R0 ),
	.C(RIU_CLK),
	.PRE(locked_i)
);
defparam \ar_locked.R1_Z .INIT=1'b1;
// @225:7182
  PLLE3_ADV hstdm_plle3 (
	.CLKFBOUT(CLKFBOUT),
	.CLKOUT0(hstdm_txclkdiv4_local),
	.CLKOUT0B(CLKOUT0B),
	.CLKOUT1(hstdm_txclkdiv2_local),
	.CLKOUT1B(CLKOUT1B),
	.CLKOUTPHY(clkoutphy),
	.DO(DO[15:0]),
	.DRDY(DRDY),
	.LOCKED(lockedz),
	.CLKFBIN(GND),
	.CLKIN(RIU_CLK),
	.CLKOUTPHYEN(clkoutphyen),
	.PWRDWN(GND),
	.RST(reset_in)
);
defparam hstdm_plle3.CLKFBOUT_MULT=12;
defparam hstdm_plle3.CLKIN_PERIOD=10.0;
defparam hstdm_plle3.CLKOUT0_DIVIDE=8;
defparam hstdm_plle3.CLKOUT0_PHASE=0.0;
defparam hstdm_plle3.CLKOUT1_DIVIDE=4;
defparam hstdm_plle3.CLKOUT1_PHASE=-90.0;
defparam hstdm_plle3.CLKOUTPHY_MODE="VCO";
defparam hstdm_plle3.COMPENSATION="INTERNAL";
defparam hstdm_plle3.DIVCLK_DIVIDE=1;
// @225:7196
(* CLOCK_REGION="X7Y1" *)  BUFGCE \TXCLKDIV2.txclkdiv2_bufg  (
	.CE(lockedz),
	.I(hstdm_txclkdiv2_local),
	.O(txclkdiv2)
);
// @225:306
  LUT2 N_4_mux_0_i_cZ (
	.I0(locked_inv_sync),
	.I1(un1_dly),
	.O(N_4_mux_0_i)
);
defparam N_4_mux_0_i_cZ.INIT=4'hE;
// @225:306
  LUT2 N_4_mux_i_cZ (
	.I0(un1_dly_0),
	.I1(bs_rst_2),
	.O(N_4_mux_i)
);
defparam N_4_mux_i_cZ.INIT=4'hE;
// @225:7286
  LUT2 un3_clkoutphyen_i_cZ (
	.I0(clkoutphyen_inv),
	.I1(locked_inv_sync),
	.O(un3_clkoutphyen_i)
);
defparam un3_clkoutphyen_i_cZ.INIT=4'h1;
// @225:309
  LUT2 \rst_delay.un1_dly  (
	.I0(\rst_delay.srl_dly_out ),
	.I1(\rst_delay.dly [1]),
	.O(un1_dly)
);
defparam \rst_delay.un1_dly .INIT=4'h4;
// @225:309
  LUT2 \phy_en_delay.un1_dly  (
	.I0(\phy_en_delay.srl_dly_out ),
	.I1(\phy_en_delay.dly [1]),
	.O(un1_dly_0)
);
defparam \phy_en_delay.un1_dly .INIT=4'h4;
// @225:7297
  LUT2 bs_rst_2_cZ (
	.I0(rst_wire),
	.I1(locked_inv_sync),
	.O(bs_rst_2)
);
defparam bs_rst_2_cZ.INIT=4'hE;
// @225:273
  SRLC32E \rst_delay.DLY.SRL.SYNC.delay_SRL.SYNC.delay_1  (
	.Q(\rst_delay.DLY.SRL.SYNC.delay_tmp_d_array_0 [0]),
	.Q31(\rst_delay.DLY.SRL.SYNC.delay_tmp_array_1 [0]),
	.A({VCC, VCC, VCC, VCC, VCC}),
	.D(locked_inv_sync),
	.CLK(RIU_CLK),
	.CE(VCC)
);
// @225:273
  SRLC32E \rst_delay.DLY.SRL.SYNC.delay_SRL.SYNC.delay_2  (
	.Q(\rst_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 [0]),
	.Q31(\rst_delay.DLY.SRL.SYNC.delay_tmp_array_2 [0]),
	.A({VCC, VCC, VCC, VCC, GND}),
	.D(\rst_delay.DLY.SRL.SYNC.delay_tmp_array_1 [0]),
	.CLK(RIU_CLK),
	.CE(VCC)
);
// @225:273
  SRLC32E \phy_en_delay.DLY.SRL.SYNC.delay_SRL.SYNC.delay_1  (
	.Q(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_d_array_0 [0]),
	.Q31(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_array_1 [0]),
	.A({VCC, VCC, VCC, VCC, VCC}),
	.D(bs_rst_2),
	.CLK(RIU_CLK),
	.CE(VCC)
);
// @225:273
  SRLC32E \phy_en_delay.DLY.SRL.SYNC.delay_SRL.SYNC.delay_2  (
	.Q(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 [0]),
	.Q31(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_array_2 [0]),
	.A({VCC, VCC, VCC, VCC, GND}),
	.D(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_array_1 [0]),
	.CLK(RIU_CLK),
	.CE(VCC)
);
// @225:273
  FD \phy_en_delay.DLY.SRL.SYNC.delay_DOUT_Z[0]  (
	.Q(\phy_en_delay.srl_dly_out ),
	.D(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 [0]),
	.C(RIU_CLK)
);
// @225:273
  FD \rst_delay.DLY.SRL.SYNC.delay_DOUT_Z[0]  (
	.Q(\rst_delay.srl_dly_out ),
	.D(\rst_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 [0]),
	.C(RIU_CLK)
);
// @225:7286
  FDP BSC_RST_Z (
	.Q(BSC_RST),
	.D(bs_rst_2),
	.C(RIU_CLK),
	.PRE(locked_i)
);
// @225:303
  FD \phy_en_delay.dly_Z[1]  (
	.Q(\phy_en_delay.dly [1]),
	.D(\phy_en_delay.srl_dly_out ),
	.C(RIU_CLK)
);
// @225:303
  FD \rst_delay.dly_Z[1]  (
	.Q(\rst_delay.dly [1]),
	.D(\rst_delay.srl_dly_out ),
	.C(RIU_CLK)
);
// @225:7286
  FDP RST_DLY_Z (
	.Q(RST_DLY),
	.D(bs_rst),
	.C(RIU_CLK),
	.PRE(locked_i)
);
// @225:7286
  FDP BS_RST_Z (
	.Q(BS_RST),
	.D(bs_rst),
	.C(RIU_CLK),
	.PRE(locked_i)
);
// @225:7286
  FDC clkoutphyen_Z (
	.Q(clkoutphyen),
	.D(un3_clkoutphyen_i),
	.C(RIU_CLK),
	.CLR(locked_i)
);
// @225:7286
  FDP bs_rst_Z (
	.Q(bs_rst),
	.D(bs_rst_2),
	.C(RIU_CLK),
	.PRE(locked_i)
);
assign RIU_CLK = clk_in;
assign txclk = GND;
assign txclkdiv4 = GND;
assign idlyctrlclk = GND;
assign locked = GND;
assign BSC_EN_VTC = GND;
assign BSC_RDY = VCC;
assign RIU_NIBBLE_SEL_UPPER = GND;
assign RIU_NIBBLE_SEL_LOWER = GND;
assign RIU_WR_EN = GND;
assign RIU_ADDR[0] = GND;
assign RIU_ADDR[1] = GND;
assign RIU_ADDR[2] = GND;
assign RIU_ADDR[3] = GND;
assign RIU_ADDR[4] = GND;
assign RIU_ADDR[5] = GND;
assign RIU_WR_DATA[0] = GND;
assign RIU_WR_DATA[1] = GND;
assign RIU_WR_DATA[2] = GND;
assign RIU_WR_DATA[3] = GND;
assign RIU_WR_DATA[4] = GND;
assign RIU_WR_DATA[5] = GND;
assign RIU_WR_DATA[6] = GND;
assign RIU_WR_DATA[7] = GND;
assign RIU_WR_DATA[8] = GND;
assign RIU_WR_DATA[9] = GND;
assign RIU_WR_DATA[10] = GND;
assign RIU_WR_DATA[11] = GND;
assign RIU_WR_DATA[12] = GND;
assign RIU_WR_DATA[13] = GND;
assign RIU_WR_DATA[14] = GND;
assign RIU_WR_DATA[15] = GND;
endmodule /* hstdm_ultrascale_plle3_Z1_FB1_uA */

(* DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_ultrascale_plle3_Z1_0_FB1_uA (
  clk_in,
  reset_in,
  txclk,
  txclkdiv2,
  txclkdiv4,
  idlyctrlclk,
  clkoutphy,
  locked,
  RST_DLY,
  BS_RST,
  BSC_RST,
  DLY_RDY,
  VTC_RDY,
  BSC_EN_VTC,
  BSC_RDY,
  RIU_CLK,
  RIU_NIBBLE_SEL_UPPER,
  RIU_NIBBLE_SEL_LOWER,
  RIU_WR_EN,
  RIU_ADDR,
  RIU_WR_DATA
)
;
input clk_in ;
input reset_in ;
output txclk ;
output txclkdiv2 ;
output txclkdiv4 ;
output idlyctrlclk ;
output clkoutphy ;
output locked ;
output RST_DLY ;
output BS_RST ;
output BSC_RST ;
input [7:0] DLY_RDY ;
input [7:0] VTC_RDY ;
output BSC_EN_VTC ;
output BSC_RDY ;
output RIU_CLK ;
output RIU_NIBBLE_SEL_UPPER ;
output RIU_NIBBLE_SEL_LOWER ;
output RIU_WR_EN ;
output [5:0] RIU_ADDR ;
output [15:0] RIU_WR_DATA ;
wire clk_in ;
wire reset_in ;
wire txclk ;
wire txclkdiv2 ;
wire txclkdiv4 ;
wire idlyctrlclk ;
wire clkoutphy ;
wire locked ;
wire RST_DLY ;
wire BS_RST ;
wire BSC_RST ;
wire BSC_EN_VTC ;
wire BSC_RDY ;
wire RIU_CLK ;
wire RIU_NIBBLE_SEL_UPPER ;
wire RIU_NIBBLE_SEL_LOWER ;
wire RIU_WR_EN ;
wire [15:0] DO;
wire [1:1] \phy_en_delay.dly ;
wire [1:1] \rst_delay.dly ;
wire [0:0] \phy_en_delay.DLY.SRL.SYNC.delay_tmp_d_array_0 ;
wire [0:0] \phy_en_delay.DLY.SRL.SYNC.delay_tmp_array_1 ;
wire [0:0] \phy_en_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 ;
wire [0:0] \phy_en_delay.DLY.SRL.SYNC.delay_tmp_array_2 ;
wire [0:0] \rst_delay.DLY.SRL.SYNC.delay_tmp_d_array_0 ;
wire [0:0] \rst_delay.DLY.SRL.SYNC.delay_tmp_array_1 ;
wire [0:0] \rst_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 ;
wire [0:0] \rst_delay.DLY.SRL.SYNC.delay_tmp_array_2 ;
wire CLKFBOUT ;
wire hstdm_txclkdiv4_local ;
wire CLKOUT0B ;
wire hstdm_txclkdiv2_local ;
wire CLKOUT1B ;
wire DRDY ;
wire clkoutphyen ;
wire locked_inv_sync ;
wire rst_wire ;
wire bs_rst_2 ;
wire clkoutphyen_inv ;
wire bs_rst ;
wire \phy_en_delay.srl_dly_out  ;
wire un1_dly_0 ;
wire \rst_delay.srl_dly_out  ;
wire un1_dly ;
wire \ar_locked.R0  ;
wire N_31 ;
wire N_32 ;
wire locked_i ;
wire un3_clkoutphyen_i ;
wire N_4_mux_i ;
wire N_4_mux_0_i ;
wire lockedz ;
wire VCC ;
wire GND ;
  GND GND_cZ (
	.G(GND)
);
  VCC VCC_cZ (
	.P(VCC)
);
  FDE \rst_delay.out_Z  (
	.Q(rst_wire),
	.D(locked_inv_sync),
	.C(RIU_CLK),
	.CE(N_4_mux_0_i)
);
defparam \rst_delay.out_Z .INIT=1'b0;
  FDE \phy_en_delay.out_Z  (
	.Q(clkoutphyen_inv),
	.D(bs_rst_2),
	.C(RIU_CLK),
	.CE(N_4_mux_i)
);
defparam \phy_en_delay.out_Z .INIT=1'b0;
// @225:7286
  INV \locked_i.O  (
	.I(lockedz),
	.O(locked_i)
);
// @225:326
(* ASYNC_REG="TRUE" *)  FDP \ar_locked.R0_Z  (
	.Q(\ar_locked.R0 ),
	.D(GND),
	.C(RIU_CLK),
	.PRE(locked_i)
);
defparam \ar_locked.R0_Z .INIT=1'b1;
// @225:326
(* ASYNC_REG="TRUE" *)  FDP \ar_locked.R1_Z  (
	.Q(locked_inv_sync),
	.D(\ar_locked.R0 ),
	.C(RIU_CLK),
	.PRE(locked_i)
);
defparam \ar_locked.R1_Z .INIT=1'b1;
// @225:7182
  PLLE3_ADV hstdm_plle3 (
	.CLKFBOUT(CLKFBOUT),
	.CLKOUT0(hstdm_txclkdiv4_local),
	.CLKOUT0B(CLKOUT0B),
	.CLKOUT1(hstdm_txclkdiv2_local),
	.CLKOUT1B(CLKOUT1B),
	.CLKOUTPHY(clkoutphy),
	.DO(DO[15:0]),
	.DRDY(DRDY),
	.LOCKED(lockedz),
	.CLKFBIN(GND),
	.CLKIN(RIU_CLK),
	.CLKOUTPHYEN(clkoutphyen),
	.PWRDWN(GND),
	.RST(reset_in)
);
defparam hstdm_plle3.CLKFBOUT_MULT=12;
defparam hstdm_plle3.CLKIN_PERIOD=10.0;
defparam hstdm_plle3.CLKOUT0_DIVIDE=8;
defparam hstdm_plle3.CLKOUT0_PHASE=0.0;
defparam hstdm_plle3.CLKOUT1_DIVIDE=4;
defparam hstdm_plle3.CLKOUT1_PHASE=-90.0;
defparam hstdm_plle3.CLKOUTPHY_MODE="VCO";
defparam hstdm_plle3.COMPENSATION="INTERNAL";
defparam hstdm_plle3.DIVCLK_DIVIDE=1;
// @225:7196
(* CLOCK_REGION="X7Y2" *)  BUFGCE \TXCLKDIV2.txclkdiv2_bufg  (
	.CE(lockedz),
	.I(hstdm_txclkdiv2_local),
	.O(txclkdiv2)
);
// @225:306
  LUT2 N_4_mux_0_i_cZ (
	.I0(locked_inv_sync),
	.I1(un1_dly),
	.O(N_4_mux_0_i)
);
defparam N_4_mux_0_i_cZ.INIT=4'hE;
// @225:306
  LUT2 N_4_mux_i_cZ (
	.I0(un1_dly_0),
	.I1(bs_rst_2),
	.O(N_4_mux_i)
);
defparam N_4_mux_i_cZ.INIT=4'hE;
// @225:7286
  LUT2 un3_clkoutphyen_i_cZ (
	.I0(clkoutphyen_inv),
	.I1(locked_inv_sync),
	.O(un3_clkoutphyen_i)
);
defparam un3_clkoutphyen_i_cZ.INIT=4'h1;
// @225:309
  LUT2 \rst_delay.un1_dly  (
	.I0(\rst_delay.srl_dly_out ),
	.I1(\rst_delay.dly [1]),
	.O(un1_dly)
);
defparam \rst_delay.un1_dly .INIT=4'h4;
// @225:309
  LUT2 \phy_en_delay.un1_dly  (
	.I0(\phy_en_delay.dly [1]),
	.I1(\phy_en_delay.srl_dly_out ),
	.O(un1_dly_0)
);
defparam \phy_en_delay.un1_dly .INIT=4'h2;
// @225:7297
  LUT2 bs_rst_2_cZ (
	.I0(rst_wire),
	.I1(locked_inv_sync),
	.O(bs_rst_2)
);
defparam bs_rst_2_cZ.INIT=4'hE;
// @225:273
  SRLC32E \rst_delay.DLY.SRL.SYNC.delay_SRL.SYNC.delay_1  (
	.Q(\rst_delay.DLY.SRL.SYNC.delay_tmp_d_array_0 [0]),
	.Q31(\rst_delay.DLY.SRL.SYNC.delay_tmp_array_1 [0]),
	.A({VCC, VCC, VCC, VCC, VCC}),
	.D(locked_inv_sync),
	.CLK(RIU_CLK),
	.CE(VCC)
);
// @225:273
  SRLC32E \rst_delay.DLY.SRL.SYNC.delay_SRL.SYNC.delay_2  (
	.Q(\rst_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 [0]),
	.Q31(\rst_delay.DLY.SRL.SYNC.delay_tmp_array_2 [0]),
	.A({VCC, VCC, VCC, VCC, GND}),
	.D(\rst_delay.DLY.SRL.SYNC.delay_tmp_array_1 [0]),
	.CLK(RIU_CLK),
	.CE(VCC)
);
// @225:273
  SRLC32E \phy_en_delay.DLY.SRL.SYNC.delay_SRL.SYNC.delay_1  (
	.Q(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_d_array_0 [0]),
	.Q31(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_array_1 [0]),
	.A({VCC, VCC, VCC, VCC, VCC}),
	.D(bs_rst_2),
	.CLK(RIU_CLK),
	.CE(VCC)
);
// @225:273
  SRLC32E \phy_en_delay.DLY.SRL.SYNC.delay_SRL.SYNC.delay_2  (
	.Q(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 [0]),
	.Q31(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_array_2 [0]),
	.A({VCC, VCC, VCC, VCC, GND}),
	.D(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_array_1 [0]),
	.CLK(RIU_CLK),
	.CE(VCC)
);
// @225:273
  FD \phy_en_delay.DLY.SRL.SYNC.delay_DOUT_Z[0]  (
	.Q(\phy_en_delay.srl_dly_out ),
	.D(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 [0]),
	.C(RIU_CLK)
);
// @225:273
  FD \rst_delay.DLY.SRL.SYNC.delay_DOUT_Z[0]  (
	.Q(\rst_delay.srl_dly_out ),
	.D(\rst_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 [0]),
	.C(RIU_CLK)
);
// @225:7286
  FDP BSC_RST_Z (
	.Q(BSC_RST),
	.D(bs_rst_2),
	.C(RIU_CLK),
	.PRE(locked_i)
);
// @225:303
  FD \phy_en_delay.dly_Z[1]  (
	.Q(\phy_en_delay.dly [1]),
	.D(\phy_en_delay.srl_dly_out ),
	.C(RIU_CLK)
);
// @225:303
  FD \rst_delay.dly_Z[1]  (
	.Q(\rst_delay.dly [1]),
	.D(\rst_delay.srl_dly_out ),
	.C(RIU_CLK)
);
// @225:7286
  FDP RST_DLY_Z (
	.Q(RST_DLY),
	.D(bs_rst),
	.C(RIU_CLK),
	.PRE(locked_i)
);
// @225:7286
  FDP BS_RST_Z (
	.Q(BS_RST),
	.D(bs_rst),
	.C(RIU_CLK),
	.PRE(locked_i)
);
// @225:7286
  FDC clkoutphyen_Z (
	.Q(clkoutphyen),
	.D(un3_clkoutphyen_i),
	.C(RIU_CLK),
	.CLR(locked_i)
);
// @225:7286
  FDP bs_rst_Z (
	.Q(bs_rst),
	.D(bs_rst_2),
	.C(RIU_CLK),
	.PRE(locked_i)
);
assign RIU_CLK = clk_in;
assign txclk = GND;
assign txclkdiv4 = GND;
assign idlyctrlclk = GND;
assign locked = GND;
assign BSC_EN_VTC = GND;
assign BSC_RDY = VCC;
assign RIU_NIBBLE_SEL_UPPER = GND;
assign RIU_NIBBLE_SEL_LOWER = GND;
assign RIU_WR_EN = GND;
assign RIU_ADDR[0] = GND;
assign RIU_ADDR[1] = GND;
assign RIU_ADDR[2] = GND;
assign RIU_ADDR[3] = GND;
assign RIU_ADDR[4] = GND;
assign RIU_ADDR[5] = GND;
assign RIU_WR_DATA[0] = GND;
assign RIU_WR_DATA[1] = GND;
assign RIU_WR_DATA[2] = GND;
assign RIU_WR_DATA[3] = GND;
assign RIU_WR_DATA[4] = GND;
assign RIU_WR_DATA[5] = GND;
assign RIU_WR_DATA[6] = GND;
assign RIU_WR_DATA[7] = GND;
assign RIU_WR_DATA[8] = GND;
assign RIU_WR_DATA[9] = GND;
assign RIU_WR_DATA[10] = GND;
assign RIU_WR_DATA[11] = GND;
assign RIU_WR_DATA[12] = GND;
assign RIU_WR_DATA[13] = GND;
assign RIU_WR_DATA[14] = GND;
assign RIU_WR_DATA[15] = GND;
endmodule /* hstdm_ultrascale_plle3_Z1_0_FB1_uA */

(* DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_ultrascale_plle3_Z1_1_FB1_uA (
  clk_in,
  reset_in,
  txclk,
  txclkdiv2,
  txclkdiv4,
  idlyctrlclk,
  clkoutphy,
  locked,
  RST_DLY,
  BS_RST,
  BSC_RST,
  DLY_RDY,
  VTC_RDY,
  BSC_EN_VTC,
  BSC_RDY,
  RIU_CLK,
  RIU_NIBBLE_SEL_UPPER,
  RIU_NIBBLE_SEL_LOWER,
  RIU_WR_EN,
  RIU_ADDR,
  RIU_WR_DATA
)
;
input clk_in ;
input reset_in ;
output txclk ;
output txclkdiv2 ;
output txclkdiv4 ;
output idlyctrlclk ;
output clkoutphy ;
output locked ;
output RST_DLY ;
output BS_RST ;
output BSC_RST ;
input [7:0] DLY_RDY ;
input [7:0] VTC_RDY ;
output BSC_EN_VTC ;
output BSC_RDY ;
output RIU_CLK ;
output RIU_NIBBLE_SEL_UPPER ;
output RIU_NIBBLE_SEL_LOWER ;
output RIU_WR_EN ;
output [5:0] RIU_ADDR ;
output [15:0] RIU_WR_DATA ;
wire clk_in ;
wire reset_in ;
wire txclk ;
wire txclkdiv2 ;
wire txclkdiv4 ;
wire idlyctrlclk ;
wire clkoutphy ;
wire locked ;
wire RST_DLY ;
wire BS_RST ;
wire BSC_RST ;
wire BSC_EN_VTC ;
wire BSC_RDY ;
wire RIU_CLK ;
wire RIU_NIBBLE_SEL_UPPER ;
wire RIU_NIBBLE_SEL_LOWER ;
wire RIU_WR_EN ;
wire [15:0] DO;
wire [1:1] \phy_en_delay.dly ;
wire [1:1] \rst_delay.dly ;
wire [0:0] \phy_en_delay.DLY.SRL.SYNC.delay_tmp_d_array_0 ;
wire [0:0] \phy_en_delay.DLY.SRL.SYNC.delay_tmp_array_1 ;
wire [0:0] \phy_en_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 ;
wire [0:0] \phy_en_delay.DLY.SRL.SYNC.delay_tmp_array_2 ;
wire [0:0] \rst_delay.DLY.SRL.SYNC.delay_tmp_d_array_0 ;
wire [0:0] \rst_delay.DLY.SRL.SYNC.delay_tmp_array_1 ;
wire [0:0] \rst_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 ;
wire [0:0] \rst_delay.DLY.SRL.SYNC.delay_tmp_array_2 ;
wire CLKFBOUT ;
wire hstdm_txclkdiv4_local ;
wire CLKOUT0B ;
wire hstdm_txclkdiv2_local ;
wire CLKOUT1B ;
wire DRDY ;
wire clkoutphyen ;
wire locked_inv_sync ;
wire rst_wire ;
wire bs_rst_2 ;
wire clkoutphyen_inv ;
wire bs_rst ;
wire \phy_en_delay.srl_dly_out  ;
wire un1_dly_0 ;
wire \rst_delay.srl_dly_out  ;
wire un1_dly ;
wire \ar_locked.R0  ;
wire N_31 ;
wire N_32 ;
wire locked_i ;
wire un3_clkoutphyen_i ;
wire N_4_mux_i ;
wire N_4_mux_0_i ;
wire lockedz ;
wire VCC ;
wire GND ;
  GND GND_cZ (
	.G(GND)
);
  VCC VCC_cZ (
	.P(VCC)
);
  FDE \rst_delay.out_Z  (
	.Q(rst_wire),
	.D(locked_inv_sync),
	.C(RIU_CLK),
	.CE(N_4_mux_0_i)
);
defparam \rst_delay.out_Z .INIT=1'b0;
  FDE \phy_en_delay.out_Z  (
	.Q(clkoutphyen_inv),
	.D(bs_rst_2),
	.C(RIU_CLK),
	.CE(N_4_mux_i)
);
defparam \phy_en_delay.out_Z .INIT=1'b0;
// @225:7286
  INV \locked_i.O  (
	.I(lockedz),
	.O(locked_i)
);
// @225:326
(* ASYNC_REG="TRUE" *)  FDP \ar_locked.R0_Z  (
	.Q(\ar_locked.R0 ),
	.D(GND),
	.C(RIU_CLK),
	.PRE(locked_i)
);
defparam \ar_locked.R0_Z .INIT=1'b1;
// @225:326
(* ASYNC_REG="TRUE" *)  FDP \ar_locked.R1_Z  (
	.Q(locked_inv_sync),
	.D(\ar_locked.R0 ),
	.C(RIU_CLK),
	.PRE(locked_i)
);
defparam \ar_locked.R1_Z .INIT=1'b1;
// @225:7182
  PLLE3_ADV hstdm_plle3 (
	.CLKFBOUT(CLKFBOUT),
	.CLKOUT0(hstdm_txclkdiv4_local),
	.CLKOUT0B(CLKOUT0B),
	.CLKOUT1(hstdm_txclkdiv2_local),
	.CLKOUT1B(CLKOUT1B),
	.CLKOUTPHY(clkoutphy),
	.DO(DO[15:0]),
	.DRDY(DRDY),
	.LOCKED(lockedz),
	.CLKFBIN(GND),
	.CLKIN(RIU_CLK),
	.CLKOUTPHYEN(clkoutphyen),
	.PWRDWN(GND),
	.RST(reset_in)
);
defparam hstdm_plle3.CLKFBOUT_MULT=12;
defparam hstdm_plle3.CLKIN_PERIOD=10.0;
defparam hstdm_plle3.CLKOUT0_DIVIDE=8;
defparam hstdm_plle3.CLKOUT0_PHASE=0.0;
defparam hstdm_plle3.CLKOUT1_DIVIDE=4;
defparam hstdm_plle3.CLKOUT1_PHASE=-90.0;
defparam hstdm_plle3.CLKOUTPHY_MODE="VCO";
defparam hstdm_plle3.COMPENSATION="INTERNAL";
defparam hstdm_plle3.DIVCLK_DIVIDE=1;
// @225:7196
(* CLOCK_REGION="X7Y3" *)  BUFGCE \TXCLKDIV2.txclkdiv2_bufg  (
	.CE(lockedz),
	.I(hstdm_txclkdiv2_local),
	.O(txclkdiv2)
);
// @225:306
  LUT2 N_4_mux_0_i_cZ (
	.I0(locked_inv_sync),
	.I1(un1_dly),
	.O(N_4_mux_0_i)
);
defparam N_4_mux_0_i_cZ.INIT=4'hE;
// @225:306
  LUT2 N_4_mux_i_cZ (
	.I0(bs_rst_2),
	.I1(un1_dly_0),
	.O(N_4_mux_i)
);
defparam N_4_mux_i_cZ.INIT=4'hE;
// @225:7286
  LUT2 un3_clkoutphyen_i_cZ (
	.I0(clkoutphyen_inv),
	.I1(locked_inv_sync),
	.O(un3_clkoutphyen_i)
);
defparam un3_clkoutphyen_i_cZ.INIT=4'h1;
// @225:309
  LUT2 \rst_delay.un1_dly  (
	.I0(\rst_delay.srl_dly_out ),
	.I1(\rst_delay.dly [1]),
	.O(un1_dly)
);
defparam \rst_delay.un1_dly .INIT=4'h4;
// @225:309
  LUT2 \phy_en_delay.un1_dly  (
	.I0(\phy_en_delay.srl_dly_out ),
	.I1(\phy_en_delay.dly [1]),
	.O(un1_dly_0)
);
defparam \phy_en_delay.un1_dly .INIT=4'h4;
// @225:7297
  LUT2 bs_rst_2_cZ (
	.I0(rst_wire),
	.I1(locked_inv_sync),
	.O(bs_rst_2)
);
defparam bs_rst_2_cZ.INIT=4'hE;
// @225:273
  SRLC32E \rst_delay.DLY.SRL.SYNC.delay_SRL.SYNC.delay_1  (
	.Q(\rst_delay.DLY.SRL.SYNC.delay_tmp_d_array_0 [0]),
	.Q31(\rst_delay.DLY.SRL.SYNC.delay_tmp_array_1 [0]),
	.A({VCC, VCC, VCC, VCC, VCC}),
	.D(locked_inv_sync),
	.CLK(RIU_CLK),
	.CE(VCC)
);
// @225:273
  SRLC32E \rst_delay.DLY.SRL.SYNC.delay_SRL.SYNC.delay_2  (
	.Q(\rst_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 [0]),
	.Q31(\rst_delay.DLY.SRL.SYNC.delay_tmp_array_2 [0]),
	.A({VCC, VCC, VCC, VCC, GND}),
	.D(\rst_delay.DLY.SRL.SYNC.delay_tmp_array_1 [0]),
	.CLK(RIU_CLK),
	.CE(VCC)
);
// @225:273
  SRLC32E \phy_en_delay.DLY.SRL.SYNC.delay_SRL.SYNC.delay_1  (
	.Q(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_d_array_0 [0]),
	.Q31(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_array_1 [0]),
	.A({VCC, VCC, VCC, VCC, VCC}),
	.D(bs_rst_2),
	.CLK(RIU_CLK),
	.CE(VCC)
);
// @225:273
  SRLC32E \phy_en_delay.DLY.SRL.SYNC.delay_SRL.SYNC.delay_2  (
	.Q(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 [0]),
	.Q31(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_array_2 [0]),
	.A({VCC, VCC, VCC, VCC, GND}),
	.D(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_array_1 [0]),
	.CLK(RIU_CLK),
	.CE(VCC)
);
// @225:273
  FD \phy_en_delay.DLY.SRL.SYNC.delay_DOUT_Z[0]  (
	.Q(\phy_en_delay.srl_dly_out ),
	.D(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 [0]),
	.C(RIU_CLK)
);
// @225:273
  FD \rst_delay.DLY.SRL.SYNC.delay_DOUT_Z[0]  (
	.Q(\rst_delay.srl_dly_out ),
	.D(\rst_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 [0]),
	.C(RIU_CLK)
);
// @225:7286
  FDP BSC_RST_Z (
	.Q(BSC_RST),
	.D(bs_rst_2),
	.C(RIU_CLK),
	.PRE(locked_i)
);
// @225:303
  FD \phy_en_delay.dly_Z[1]  (
	.Q(\phy_en_delay.dly [1]),
	.D(\phy_en_delay.srl_dly_out ),
	.C(RIU_CLK)
);
// @225:303
  FD \rst_delay.dly_Z[1]  (
	.Q(\rst_delay.dly [1]),
	.D(\rst_delay.srl_dly_out ),
	.C(RIU_CLK)
);
// @225:7286
  FDP RST_DLY_Z (
	.Q(RST_DLY),
	.D(bs_rst),
	.C(RIU_CLK),
	.PRE(locked_i)
);
// @225:7286
  FDP BS_RST_Z (
	.Q(BS_RST),
	.D(bs_rst),
	.C(RIU_CLK),
	.PRE(locked_i)
);
// @225:7286
  FDC clkoutphyen_Z (
	.Q(clkoutphyen),
	.D(un3_clkoutphyen_i),
	.C(RIU_CLK),
	.CLR(locked_i)
);
// @225:7286
  FDP bs_rst_Z (
	.Q(bs_rst),
	.D(bs_rst_2),
	.C(RIU_CLK),
	.PRE(locked_i)
);
assign RIU_CLK = clk_in;
assign txclk = GND;
assign txclkdiv4 = GND;
assign idlyctrlclk = GND;
assign locked = GND;
assign BSC_EN_VTC = GND;
assign BSC_RDY = VCC;
assign RIU_NIBBLE_SEL_UPPER = GND;
assign RIU_NIBBLE_SEL_LOWER = GND;
assign RIU_WR_EN = GND;
assign RIU_ADDR[0] = GND;
assign RIU_ADDR[1] = GND;
assign RIU_ADDR[2] = GND;
assign RIU_ADDR[3] = GND;
assign RIU_ADDR[4] = GND;
assign RIU_ADDR[5] = GND;
assign RIU_WR_DATA[0] = GND;
assign RIU_WR_DATA[1] = GND;
assign RIU_WR_DATA[2] = GND;
assign RIU_WR_DATA[3] = GND;
assign RIU_WR_DATA[4] = GND;
assign RIU_WR_DATA[5] = GND;
assign RIU_WR_DATA[6] = GND;
assign RIU_WR_DATA[7] = GND;
assign RIU_WR_DATA[8] = GND;
assign RIU_WR_DATA[9] = GND;
assign RIU_WR_DATA[10] = GND;
assign RIU_WR_DATA[11] = GND;
assign RIU_WR_DATA[12] = GND;
assign RIU_WR_DATA[13] = GND;
assign RIU_WR_DATA[14] = GND;
assign RIU_WR_DATA[15] = GND;
endmodule /* hstdm_ultrascale_plle3_Z1_1_FB1_uA */

(* DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_ultrascale_plle3_Z1_2_FB1_uA (
  clk_in,
  reset_in,
  txclk,
  txclkdiv2,
  txclkdiv4,
  idlyctrlclk,
  clkoutphy,
  locked,
  RST_DLY,
  BS_RST,
  BSC_RST,
  DLY_RDY,
  VTC_RDY,
  BSC_EN_VTC,
  BSC_RDY,
  RIU_CLK,
  RIU_NIBBLE_SEL_UPPER,
  RIU_NIBBLE_SEL_LOWER,
  RIU_WR_EN,
  RIU_ADDR,
  RIU_WR_DATA
)
;
input clk_in ;
input reset_in ;
output txclk ;
output txclkdiv2 ;
output txclkdiv4 ;
output idlyctrlclk ;
output clkoutphy ;
output locked ;
output RST_DLY ;
output BS_RST ;
output BSC_RST ;
input [7:0] DLY_RDY ;
input [7:0] VTC_RDY ;
output BSC_EN_VTC ;
output BSC_RDY ;
output RIU_CLK ;
output RIU_NIBBLE_SEL_UPPER ;
output RIU_NIBBLE_SEL_LOWER ;
output RIU_WR_EN ;
output [5:0] RIU_ADDR ;
output [15:0] RIU_WR_DATA ;
wire clk_in ;
wire reset_in ;
wire txclk ;
wire txclkdiv2 ;
wire txclkdiv4 ;
wire idlyctrlclk ;
wire clkoutphy ;
wire locked ;
wire RST_DLY ;
wire BS_RST ;
wire BSC_RST ;
wire BSC_EN_VTC ;
wire BSC_RDY ;
wire RIU_CLK ;
wire RIU_NIBBLE_SEL_UPPER ;
wire RIU_NIBBLE_SEL_LOWER ;
wire RIU_WR_EN ;
wire [15:0] DO;
wire [1:1] \phy_en_delay.dly ;
wire [1:1] \rst_delay.dly ;
wire [0:0] \phy_en_delay.DLY.SRL.SYNC.delay_tmp_d_array_0 ;
wire [0:0] \phy_en_delay.DLY.SRL.SYNC.delay_tmp_array_1 ;
wire [0:0] \phy_en_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 ;
wire [0:0] \phy_en_delay.DLY.SRL.SYNC.delay_tmp_array_2 ;
wire [0:0] \rst_delay.DLY.SRL.SYNC.delay_tmp_d_array_0 ;
wire [0:0] \rst_delay.DLY.SRL.SYNC.delay_tmp_array_1 ;
wire [0:0] \rst_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 ;
wire [0:0] \rst_delay.DLY.SRL.SYNC.delay_tmp_array_2 ;
wire CLKFBOUT ;
wire hstdm_txclkdiv4_local ;
wire CLKOUT0B ;
wire hstdm_txclkdiv2_local ;
wire CLKOUT1B ;
wire DRDY ;
wire clkoutphyen ;
wire locked_inv_sync ;
wire rst_wire ;
wire bs_rst_2 ;
wire clkoutphyen_inv ;
wire bs_rst ;
wire \phy_en_delay.srl_dly_out  ;
wire un1_dly_0 ;
wire \rst_delay.srl_dly_out  ;
wire un1_dly ;
wire \ar_locked.R0  ;
wire N_31 ;
wire N_32 ;
wire locked_i ;
wire un3_clkoutphyen_i ;
wire N_4_mux_i ;
wire N_4_mux_0_i ;
wire lockedz ;
wire VCC ;
wire GND ;
  GND GND_cZ (
	.G(GND)
);
  VCC VCC_cZ (
	.P(VCC)
);
  FDE \rst_delay.out_Z  (
	.Q(rst_wire),
	.D(locked_inv_sync),
	.C(RIU_CLK),
	.CE(N_4_mux_0_i)
);
defparam \rst_delay.out_Z .INIT=1'b0;
  FDE \phy_en_delay.out_Z  (
	.Q(clkoutphyen_inv),
	.D(bs_rst_2),
	.C(RIU_CLK),
	.CE(N_4_mux_i)
);
defparam \phy_en_delay.out_Z .INIT=1'b0;
// @225:7286
  INV \locked_i.O  (
	.I(lockedz),
	.O(locked_i)
);
// @225:326
(* ASYNC_REG="TRUE" *)  FDP \ar_locked.R0_Z  (
	.Q(\ar_locked.R0 ),
	.D(GND),
	.C(RIU_CLK),
	.PRE(locked_i)
);
defparam \ar_locked.R0_Z .INIT=1'b1;
// @225:326
(* ASYNC_REG="TRUE" *)  FDP \ar_locked.R1_Z  (
	.Q(locked_inv_sync),
	.D(\ar_locked.R0 ),
	.C(RIU_CLK),
	.PRE(locked_i)
);
defparam \ar_locked.R1_Z .INIT=1'b1;
// @225:7182
  PLLE3_ADV hstdm_plle3 (
	.CLKFBOUT(CLKFBOUT),
	.CLKOUT0(hstdm_txclkdiv4_local),
	.CLKOUT0B(CLKOUT0B),
	.CLKOUT1(hstdm_txclkdiv2_local),
	.CLKOUT1B(CLKOUT1B),
	.CLKOUTPHY(clkoutphy),
	.DO(DO[15:0]),
	.DRDY(DRDY),
	.LOCKED(lockedz),
	.CLKFBIN(GND),
	.CLKIN(RIU_CLK),
	.CLKOUTPHYEN(clkoutphyen),
	.PWRDWN(GND),
	.RST(reset_in)
);
defparam hstdm_plle3.CLKFBOUT_MULT=12;
defparam hstdm_plle3.CLKIN_PERIOD=10.0;
defparam hstdm_plle3.CLKOUT0_DIVIDE=8;
defparam hstdm_plle3.CLKOUT0_PHASE=0.0;
defparam hstdm_plle3.CLKOUT1_DIVIDE=4;
defparam hstdm_plle3.CLKOUT1_PHASE=-90.0;
defparam hstdm_plle3.CLKOUTPHY_MODE="VCO";
defparam hstdm_plle3.COMPENSATION="INTERNAL";
defparam hstdm_plle3.DIVCLK_DIVIDE=1;
// @225:7196
(* CLOCK_REGION="X7Y10" *)  BUFGCE \TXCLKDIV2.txclkdiv2_bufg  (
	.CE(lockedz),
	.I(hstdm_txclkdiv2_local),
	.O(txclkdiv2)
);
// @225:306
  LUT2 N_4_mux_0_i_cZ (
	.I0(locked_inv_sync),
	.I1(un1_dly),
	.O(N_4_mux_0_i)
);
defparam N_4_mux_0_i_cZ.INIT=4'hE;
// @225:306
  LUT2 N_4_mux_i_cZ (
	.I0(bs_rst_2),
	.I1(un1_dly_0),
	.O(N_4_mux_i)
);
defparam N_4_mux_i_cZ.INIT=4'hE;
// @225:7286
  LUT2 un3_clkoutphyen_i_cZ (
	.I0(clkoutphyen_inv),
	.I1(locked_inv_sync),
	.O(un3_clkoutphyen_i)
);
defparam un3_clkoutphyen_i_cZ.INIT=4'h1;
// @225:309
  LUT2 \rst_delay.un1_dly  (
	.I0(\rst_delay.srl_dly_out ),
	.I1(\rst_delay.dly [1]),
	.O(un1_dly)
);
defparam \rst_delay.un1_dly .INIT=4'h4;
// @225:309
  LUT2 \phy_en_delay.un1_dly  (
	.I0(\phy_en_delay.dly [1]),
	.I1(\phy_en_delay.srl_dly_out ),
	.O(un1_dly_0)
);
defparam \phy_en_delay.un1_dly .INIT=4'h2;
// @225:7297
  LUT2 bs_rst_2_cZ (
	.I0(rst_wire),
	.I1(locked_inv_sync),
	.O(bs_rst_2)
);
defparam bs_rst_2_cZ.INIT=4'hE;
// @225:273
  SRLC32E \rst_delay.DLY.SRL.SYNC.delay_SRL.SYNC.delay_1  (
	.Q(\rst_delay.DLY.SRL.SYNC.delay_tmp_d_array_0 [0]),
	.Q31(\rst_delay.DLY.SRL.SYNC.delay_tmp_array_1 [0]),
	.A({VCC, VCC, VCC, VCC, VCC}),
	.D(locked_inv_sync),
	.CLK(RIU_CLK),
	.CE(VCC)
);
// @225:273
  SRLC32E \rst_delay.DLY.SRL.SYNC.delay_SRL.SYNC.delay_2  (
	.Q(\rst_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 [0]),
	.Q31(\rst_delay.DLY.SRL.SYNC.delay_tmp_array_2 [0]),
	.A({VCC, VCC, VCC, VCC, GND}),
	.D(\rst_delay.DLY.SRL.SYNC.delay_tmp_array_1 [0]),
	.CLK(RIU_CLK),
	.CE(VCC)
);
// @225:273
  SRLC32E \phy_en_delay.DLY.SRL.SYNC.delay_SRL.SYNC.delay_1  (
	.Q(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_d_array_0 [0]),
	.Q31(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_array_1 [0]),
	.A({VCC, VCC, VCC, VCC, VCC}),
	.D(bs_rst_2),
	.CLK(RIU_CLK),
	.CE(VCC)
);
// @225:273
  SRLC32E \phy_en_delay.DLY.SRL.SYNC.delay_SRL.SYNC.delay_2  (
	.Q(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 [0]),
	.Q31(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_array_2 [0]),
	.A({VCC, VCC, VCC, VCC, GND}),
	.D(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_array_1 [0]),
	.CLK(RIU_CLK),
	.CE(VCC)
);
// @225:273
  FD \phy_en_delay.DLY.SRL.SYNC.delay_DOUT_Z[0]  (
	.Q(\phy_en_delay.srl_dly_out ),
	.D(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 [0]),
	.C(RIU_CLK)
);
// @225:273
  FD \rst_delay.DLY.SRL.SYNC.delay_DOUT_Z[0]  (
	.Q(\rst_delay.srl_dly_out ),
	.D(\rst_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 [0]),
	.C(RIU_CLK)
);
// @225:7286
  FDP BSC_RST_Z (
	.Q(BSC_RST),
	.D(bs_rst_2),
	.C(RIU_CLK),
	.PRE(locked_i)
);
// @225:303
  FD \phy_en_delay.dly_Z[1]  (
	.Q(\phy_en_delay.dly [1]),
	.D(\phy_en_delay.srl_dly_out ),
	.C(RIU_CLK)
);
// @225:303
  FD \rst_delay.dly_Z[1]  (
	.Q(\rst_delay.dly [1]),
	.D(\rst_delay.srl_dly_out ),
	.C(RIU_CLK)
);
// @225:7286
  FDP RST_DLY_Z (
	.Q(RST_DLY),
	.D(bs_rst),
	.C(RIU_CLK),
	.PRE(locked_i)
);
// @225:7286
  FDP BS_RST_Z (
	.Q(BS_RST),
	.D(bs_rst),
	.C(RIU_CLK),
	.PRE(locked_i)
);
// @225:7286
  FDC clkoutphyen_Z (
	.Q(clkoutphyen),
	.D(un3_clkoutphyen_i),
	.C(RIU_CLK),
	.CLR(locked_i)
);
// @225:7286
  FDP bs_rst_Z (
	.Q(bs_rst),
	.D(bs_rst_2),
	.C(RIU_CLK),
	.PRE(locked_i)
);
assign RIU_CLK = clk_in;
assign txclk = GND;
assign txclkdiv4 = GND;
assign idlyctrlclk = GND;
assign locked = GND;
assign BSC_EN_VTC = GND;
assign BSC_RDY = VCC;
assign RIU_NIBBLE_SEL_UPPER = GND;
assign RIU_NIBBLE_SEL_LOWER = GND;
assign RIU_WR_EN = GND;
assign RIU_ADDR[0] = GND;
assign RIU_ADDR[1] = GND;
assign RIU_ADDR[2] = GND;
assign RIU_ADDR[3] = GND;
assign RIU_ADDR[4] = GND;
assign RIU_ADDR[5] = GND;
assign RIU_WR_DATA[0] = GND;
assign RIU_WR_DATA[1] = GND;
assign RIU_WR_DATA[2] = GND;
assign RIU_WR_DATA[3] = GND;
assign RIU_WR_DATA[4] = GND;
assign RIU_WR_DATA[5] = GND;
assign RIU_WR_DATA[6] = GND;
assign RIU_WR_DATA[7] = GND;
assign RIU_WR_DATA[8] = GND;
assign RIU_WR_DATA[9] = GND;
assign RIU_WR_DATA[10] = GND;
assign RIU_WR_DATA[11] = GND;
assign RIU_WR_DATA[12] = GND;
assign RIU_WR_DATA[13] = GND;
assign RIU_WR_DATA[14] = GND;
assign RIU_WR_DATA[15] = GND;
endmodule /* hstdm_ultrascale_plle3_Z1_2_FB1_uA */

(* DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_ultrascale_plle3_Z1_3_FB1_uA (
  clk_in,
  reset_in,
  txclk,
  txclkdiv2,
  txclkdiv4,
  idlyctrlclk,
  clkoutphy,
  locked,
  RST_DLY,
  BS_RST,
  BSC_RST,
  DLY_RDY,
  VTC_RDY,
  BSC_EN_VTC,
  BSC_RDY,
  RIU_CLK,
  RIU_NIBBLE_SEL_UPPER,
  RIU_NIBBLE_SEL_LOWER,
  RIU_WR_EN,
  RIU_ADDR,
  RIU_WR_DATA
)
;
input clk_in ;
input reset_in ;
output txclk ;
output txclkdiv2 ;
output txclkdiv4 ;
output idlyctrlclk ;
output clkoutphy ;
output locked ;
output RST_DLY ;
output BS_RST ;
output BSC_RST ;
input [7:0] DLY_RDY ;
input [7:0] VTC_RDY ;
output BSC_EN_VTC ;
output BSC_RDY ;
output RIU_CLK ;
output RIU_NIBBLE_SEL_UPPER ;
output RIU_NIBBLE_SEL_LOWER ;
output RIU_WR_EN ;
output [5:0] RIU_ADDR ;
output [15:0] RIU_WR_DATA ;
wire clk_in ;
wire reset_in ;
wire txclk ;
wire txclkdiv2 ;
wire txclkdiv4 ;
wire idlyctrlclk ;
wire clkoutphy ;
wire locked ;
wire RST_DLY ;
wire BS_RST ;
wire BSC_RST ;
wire BSC_EN_VTC ;
wire BSC_RDY ;
wire RIU_CLK ;
wire RIU_NIBBLE_SEL_UPPER ;
wire RIU_NIBBLE_SEL_LOWER ;
wire RIU_WR_EN ;
wire [15:0] DO;
wire [1:1] \phy_en_delay.dly ;
wire [1:1] \rst_delay.dly ;
wire [0:0] \phy_en_delay.DLY.SRL.SYNC.delay_tmp_d_array_0 ;
wire [0:0] \phy_en_delay.DLY.SRL.SYNC.delay_tmp_array_1 ;
wire [0:0] \phy_en_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 ;
wire [0:0] \phy_en_delay.DLY.SRL.SYNC.delay_tmp_array_2 ;
wire [0:0] \rst_delay.DLY.SRL.SYNC.delay_tmp_d_array_0 ;
wire [0:0] \rst_delay.DLY.SRL.SYNC.delay_tmp_array_1 ;
wire [0:0] \rst_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 ;
wire [0:0] \rst_delay.DLY.SRL.SYNC.delay_tmp_array_2 ;
wire CLKFBOUT ;
wire hstdm_txclkdiv4_local ;
wire CLKOUT0B ;
wire hstdm_txclkdiv2_local ;
wire CLKOUT1B ;
wire DRDY ;
wire clkoutphyen ;
wire locked_inv_sync ;
wire rst_wire ;
wire bs_rst_2 ;
wire clkoutphyen_inv ;
wire bs_rst ;
wire \phy_en_delay.srl_dly_out  ;
wire un1_dly_0 ;
wire \rst_delay.srl_dly_out  ;
wire un1_dly ;
wire \ar_locked.R0  ;
wire N_31 ;
wire N_32 ;
wire locked_i ;
wire un3_clkoutphyen_i ;
wire N_4_mux_i ;
wire N_4_mux_0_i ;
wire lockedz ;
wire VCC ;
wire GND ;
  GND GND_cZ (
	.G(GND)
);
  VCC VCC_cZ (
	.P(VCC)
);
  FDE \rst_delay.out_Z  (
	.Q(rst_wire),
	.D(locked_inv_sync),
	.C(RIU_CLK),
	.CE(N_4_mux_0_i)
);
defparam \rst_delay.out_Z .INIT=1'b0;
  FDE \phy_en_delay.out_Z  (
	.Q(clkoutphyen_inv),
	.D(bs_rst_2),
	.C(RIU_CLK),
	.CE(N_4_mux_i)
);
defparam \phy_en_delay.out_Z .INIT=1'b0;
// @225:7286
  INV \locked_i.O  (
	.I(lockedz),
	.O(locked_i)
);
// @225:326
(* ASYNC_REG="TRUE" *)  FDP \ar_locked.R0_Z  (
	.Q(\ar_locked.R0 ),
	.D(GND),
	.C(RIU_CLK),
	.PRE(locked_i)
);
defparam \ar_locked.R0_Z .INIT=1'b1;
// @225:326
(* ASYNC_REG="TRUE" *)  FDP \ar_locked.R1_Z  (
	.Q(locked_inv_sync),
	.D(\ar_locked.R0 ),
	.C(RIU_CLK),
	.PRE(locked_i)
);
defparam \ar_locked.R1_Z .INIT=1'b1;
// @225:7182
  PLLE3_ADV hstdm_plle3 (
	.CLKFBOUT(CLKFBOUT),
	.CLKOUT0(hstdm_txclkdiv4_local),
	.CLKOUT0B(CLKOUT0B),
	.CLKOUT1(hstdm_txclkdiv2_local),
	.CLKOUT1B(CLKOUT1B),
	.CLKOUTPHY(clkoutphy),
	.DO(DO[15:0]),
	.DRDY(DRDY),
	.LOCKED(lockedz),
	.CLKFBIN(GND),
	.CLKIN(RIU_CLK),
	.CLKOUTPHYEN(clkoutphyen),
	.PWRDWN(GND),
	.RST(reset_in)
);
defparam hstdm_plle3.CLKFBOUT_MULT=12;
defparam hstdm_plle3.CLKIN_PERIOD=10.0;
defparam hstdm_plle3.CLKOUT0_DIVIDE=8;
defparam hstdm_plle3.CLKOUT0_PHASE=0.0;
defparam hstdm_plle3.CLKOUT1_DIVIDE=4;
defparam hstdm_plle3.CLKOUT1_PHASE=-90.0;
defparam hstdm_plle3.CLKOUTPHY_MODE="VCO";
defparam hstdm_plle3.COMPENSATION="INTERNAL";
defparam hstdm_plle3.DIVCLK_DIVIDE=1;
// @225:7196
(* CLOCK_REGION="X7Y12" *)  BUFGCE \TXCLKDIV2.txclkdiv2_bufg  (
	.CE(lockedz),
	.I(hstdm_txclkdiv2_local),
	.O(txclkdiv2)
);
// @225:306
  LUT2 N_4_mux_0_i_cZ (
	.I0(locked_inv_sync),
	.I1(un1_dly),
	.O(N_4_mux_0_i)
);
defparam N_4_mux_0_i_cZ.INIT=4'hE;
// @225:306
  LUT2 N_4_mux_i_cZ (
	.I0(bs_rst_2),
	.I1(un1_dly_0),
	.O(N_4_mux_i)
);
defparam N_4_mux_i_cZ.INIT=4'hE;
// @225:7286
  LUT2 un3_clkoutphyen_i_cZ (
	.I0(clkoutphyen_inv),
	.I1(locked_inv_sync),
	.O(un3_clkoutphyen_i)
);
defparam un3_clkoutphyen_i_cZ.INIT=4'h1;
// @225:309
  LUT2 \rst_delay.un1_dly  (
	.I0(\rst_delay.srl_dly_out ),
	.I1(\rst_delay.dly [1]),
	.O(un1_dly)
);
defparam \rst_delay.un1_dly .INIT=4'h4;
// @225:309
  LUT2 \phy_en_delay.un1_dly  (
	.I0(\phy_en_delay.srl_dly_out ),
	.I1(\phy_en_delay.dly [1]),
	.O(un1_dly_0)
);
defparam \phy_en_delay.un1_dly .INIT=4'h4;
// @225:7297
  LUT2 bs_rst_2_cZ (
	.I0(rst_wire),
	.I1(locked_inv_sync),
	.O(bs_rst_2)
);
defparam bs_rst_2_cZ.INIT=4'hE;
// @225:273
  SRLC32E \rst_delay.DLY.SRL.SYNC.delay_SRL.SYNC.delay_1  (
	.Q(\rst_delay.DLY.SRL.SYNC.delay_tmp_d_array_0 [0]),
	.Q31(\rst_delay.DLY.SRL.SYNC.delay_tmp_array_1 [0]),
	.A({VCC, VCC, VCC, VCC, VCC}),
	.D(locked_inv_sync),
	.CLK(RIU_CLK),
	.CE(VCC)
);
// @225:273
  SRLC32E \rst_delay.DLY.SRL.SYNC.delay_SRL.SYNC.delay_2  (
	.Q(\rst_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 [0]),
	.Q31(\rst_delay.DLY.SRL.SYNC.delay_tmp_array_2 [0]),
	.A({VCC, VCC, VCC, VCC, GND}),
	.D(\rst_delay.DLY.SRL.SYNC.delay_tmp_array_1 [0]),
	.CLK(RIU_CLK),
	.CE(VCC)
);
// @225:273
  SRLC32E \phy_en_delay.DLY.SRL.SYNC.delay_SRL.SYNC.delay_1  (
	.Q(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_d_array_0 [0]),
	.Q31(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_array_1 [0]),
	.A({VCC, VCC, VCC, VCC, VCC}),
	.D(bs_rst_2),
	.CLK(RIU_CLK),
	.CE(VCC)
);
// @225:273
  SRLC32E \phy_en_delay.DLY.SRL.SYNC.delay_SRL.SYNC.delay_2  (
	.Q(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 [0]),
	.Q31(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_array_2 [0]),
	.A({VCC, VCC, VCC, VCC, GND}),
	.D(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_array_1 [0]),
	.CLK(RIU_CLK),
	.CE(VCC)
);
// @225:273
  FD \phy_en_delay.DLY.SRL.SYNC.delay_DOUT_Z[0]  (
	.Q(\phy_en_delay.srl_dly_out ),
	.D(\phy_en_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 [0]),
	.C(RIU_CLK)
);
// @225:273
  FD \rst_delay.DLY.SRL.SYNC.delay_DOUT_Z[0]  (
	.Q(\rst_delay.srl_dly_out ),
	.D(\rst_delay.DLY.SRL.SYNC.delay_tmp_d_array_1 [0]),
	.C(RIU_CLK)
);
// @225:7286
  FDP BSC_RST_Z (
	.Q(BSC_RST),
	.D(bs_rst_2),
	.C(RIU_CLK),
	.PRE(locked_i)
);
// @225:303
  FD \phy_en_delay.dly_Z[1]  (
	.Q(\phy_en_delay.dly [1]),
	.D(\phy_en_delay.srl_dly_out ),
	.C(RIU_CLK)
);
// @225:303
  FD \rst_delay.dly_Z[1]  (
	.Q(\rst_delay.dly [1]),
	.D(\rst_delay.srl_dly_out ),
	.C(RIU_CLK)
);
// @225:7286
  FDP RST_DLY_Z (
	.Q(RST_DLY),
	.D(bs_rst),
	.C(RIU_CLK),
	.PRE(locked_i)
);
// @225:7286
  FDP BS_RST_Z (
	.Q(BS_RST),
	.D(bs_rst),
	.C(RIU_CLK),
	.PRE(locked_i)
);
// @225:7286
  FDC clkoutphyen_Z (
	.Q(clkoutphyen),
	.D(un3_clkoutphyen_i),
	.C(RIU_CLK),
	.CLR(locked_i)
);
// @225:7286
  FDP bs_rst_Z (
	.Q(bs_rst),
	.D(bs_rst_2),
	.C(RIU_CLK),
	.PRE(locked_i)
);
assign RIU_CLK = clk_in;
assign txclk = GND;
assign txclkdiv4 = GND;
assign idlyctrlclk = GND;
assign locked = GND;
assign BSC_EN_VTC = GND;
assign BSC_RDY = VCC;
assign RIU_NIBBLE_SEL_UPPER = GND;
assign RIU_NIBBLE_SEL_LOWER = GND;
assign RIU_WR_EN = GND;
assign RIU_ADDR[0] = GND;
assign RIU_ADDR[1] = GND;
assign RIU_ADDR[2] = GND;
assign RIU_ADDR[3] = GND;
assign RIU_ADDR[4] = GND;
assign RIU_ADDR[5] = GND;
assign RIU_WR_DATA[0] = GND;
assign RIU_WR_DATA[1] = GND;
assign RIU_WR_DATA[2] = GND;
assign RIU_WR_DATA[3] = GND;
assign RIU_WR_DATA[4] = GND;
assign RIU_WR_DATA[5] = GND;
assign RIU_WR_DATA[6] = GND;
assign RIU_WR_DATA[7] = GND;
assign RIU_WR_DATA[8] = GND;
assign RIU_WR_DATA[9] = GND;
assign RIU_WR_DATA[10] = GND;
assign RIU_WR_DATA[11] = GND;
assign RIU_WR_DATA[12] = GND;
assign RIU_WR_DATA[13] = GND;
assign RIU_WR_DATA[14] = GND;
assign RIU_WR_DATA[15] = GND;
endmodule /* hstdm_ultrascale_plle3_Z1_3_FB1_uA */

(* haps_ip_type="hstdm" *)module hstdm_ultrascale_bitslice_control_8s_40s_DIV2_10s_10s_0s_0s_0s_0s_ULTRASCALE_PLUS_Z1_FB1_uA (
  RX_BIT_CTRL_OUT0,
  RX_BIT_CTRL_OUT1,
  RX_BIT_CTRL_OUT2,
  RX_BIT_CTRL_OUT3,
  RX_BIT_CTRL_OUT4,
  RX_BIT_CTRL_OUT5,
  RX_BIT_CTRL_OUT6,
  TX_BIT_CTRL_OUT0,
  TX_BIT_CTRL_OUT1,
  TX_BIT_CTRL_OUT2,
  TX_BIT_CTRL_OUT3,
  TX_BIT_CTRL_OUT4,
  TX_BIT_CTRL_OUT5,
  TX_BIT_CTRL_OUT6,
  RX_BIT_CTRL_IN0,
  RX_BIT_CTRL_IN1,
  RX_BIT_CTRL_IN2,
  RX_BIT_CTRL_IN3,
  RX_BIT_CTRL_IN4,
  RX_BIT_CTRL_IN5,
  RX_BIT_CTRL_IN6,
  TX_BIT_CTRL_IN0,
  TX_BIT_CTRL_IN1,
  TX_BIT_CTRL_IN2,
  TX_BIT_CTRL_IN3,
  TX_BIT_CTRL_IN4,
  TX_BIT_CTRL_IN5,
  TX_BIT_CTRL_IN6,
  DLY_RDY,
  VTC_RDY,
  PLL_CLK,
  RST,
  EN_VTC,
  RIU_ADDR,
  RIU_CLK,
  RIU_NIBBLE_SEL_LOWER,
  RIU_NIBBLE_SEL_UPPER,
  RIU_WR_DATA,
  RIU_WR_EN
)
;
output [319:0] RX_BIT_CTRL_OUT0 ;
output [319:0] RX_BIT_CTRL_OUT1 ;
output [319:0] RX_BIT_CTRL_OUT2 ;
output [319:0] RX_BIT_CTRL_OUT3 ;
output [319:0] RX_BIT_CTRL_OUT4 ;
output [319:0] RX_BIT_CTRL_OUT5 ;
output [319:0] RX_BIT_CTRL_OUT6 ;
output [319:0] TX_BIT_CTRL_OUT0 ;
output [319:0] TX_BIT_CTRL_OUT1 ;
output [319:0] TX_BIT_CTRL_OUT2 ;
output [319:0] TX_BIT_CTRL_OUT3 ;
output [319:0] TX_BIT_CTRL_OUT4 ;
output [319:0] TX_BIT_CTRL_OUT5 ;
output [319:0] TX_BIT_CTRL_OUT6 ;
input [319:0] RX_BIT_CTRL_IN0 ;
input [319:0] RX_BIT_CTRL_IN1 ;
input [319:0] RX_BIT_CTRL_IN2 ;
input [319:0] RX_BIT_CTRL_IN3 ;
input [319:0] RX_BIT_CTRL_IN4 ;
input [319:0] RX_BIT_CTRL_IN5 ;
input [319:0] RX_BIT_CTRL_IN6 ;
input [319:0] TX_BIT_CTRL_IN0 ;
input [319:0] TX_BIT_CTRL_IN1 ;
input [319:0] TX_BIT_CTRL_IN2 ;
input [319:0] TX_BIT_CTRL_IN3 ;
input [319:0] TX_BIT_CTRL_IN4 ;
input [319:0] TX_BIT_CTRL_IN5 ;
input [319:0] TX_BIT_CTRL_IN6 ;
output [7:0] DLY_RDY ;
output [7:0] VTC_RDY ;
input PLL_CLK ;
input RST ;
input EN_VTC ;
input [5:0] RIU_ADDR ;
input RIU_CLK ;
input RIU_NIBBLE_SEL_LOWER ;
input RIU_NIBBLE_SEL_UPPER ;
input [15:0] RIU_WR_DATA ;
input RIU_WR_EN ;
wire PLL_CLK ;
wire RST ;
wire EN_VTC ;
wire RIU_CLK ;
wire RIU_NIBBLE_SEL_LOWER ;
wire RIU_NIBBLE_SEL_UPPER ;
wire RIU_WR_EN ;
wire [79:40] RX_BIT_CTRL_OUT0_1;
wire [159:40] RX_BIT_CTRL_OUT1_1;
wire [159:120] RX_BIT_CTRL_OUT2_1;
wire [159:120] RX_BIT_CTRL_OUT3_1;
wire [79:40] RX_BIT_CTRL_OUT4_1;
wire [79:40] RX_BIT_CTRL_OUT5_1;
wire [159:40] RX_BIT_CTRL_OUT6_1;
wire [79:40] TX_BIT_CTRL_OUT0_1;
wire [159:40] TX_BIT_CTRL_OUT1_1;
wire [159:120] TX_BIT_CTRL_OUT2_1;
wire [159:120] TX_BIT_CTRL_OUT3_1;
wire [79:40] TX_BIT_CTRL_OUT4_1;
wire [79:40] TX_BIT_CTRL_OUT5_1;
wire [159:40] TX_BIT_CTRL_OUT6_1;
wire [3:1] DLY_RDY_1;
wire [3:1] VTC_RDY_1;
wire [6:0] \NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_2 ;
wire [15:0] \NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_3 ;
wire [39:0] \NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_7 ;
wire [6:0] \NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_1 ;
wire [15:0] \NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_2 ;
wire [39:0] \NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_7 ;
wire \NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_1  ;
wire \NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control  ;
wire \NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_5  ;
wire \NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_4  ;
wire \NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_6  ;
wire \NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control  ;
wire \NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_5  ;
wire \NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_4  ;
wire \NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_3  ;
wire \NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_6  ;
wire GND ;
wire VCC ;
  GND GND_cZ (
	.G(GND)
);
  VCC VCC_cZ (
	.P(VCC)
);
// @225:8066
(* haps_ip_type="hstdm_native_bitslice_ctrl" *)  BITSLICE_CONTROL \NIBBLE[3].BITSLICE_CTRL.bitslice_control  (
	.CLK_TO_EXT_NORTH(\NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_1 ),
	.CLK_TO_EXT_SOUTH(\NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control ),
	.DLY_RDY(DLY_RDY_1[3]),
	.DYN_DCI(\NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_2 [6:0]),
	.NCLK_NIBBLE_OUT(\NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_5 ),
	.PCLK_NIBBLE_OUT(\NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_4 ),
	.RIU_RD_DATA(\NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_3 [15:0]),
	.RIU_VALID(\NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_6 ),
	.RX_BIT_CTRL_OUT0(RX_BIT_CTRL_OUT0[159:120]),
	.RX_BIT_CTRL_OUT1(RX_BIT_CTRL_OUT1_1[159:120]),
	.RX_BIT_CTRL_OUT2(RX_BIT_CTRL_OUT2_1[159:120]),
	.RX_BIT_CTRL_OUT3(RX_BIT_CTRL_OUT3_1[159:120]),
	.RX_BIT_CTRL_OUT4(RX_BIT_CTRL_OUT4[159:120]),
	.RX_BIT_CTRL_OUT5(RX_BIT_CTRL_OUT5[159:120]),
	.RX_BIT_CTRL_OUT6(RX_BIT_CTRL_OUT6_1[159:120]),
	.TX_BIT_CTRL_OUT0(TX_BIT_CTRL_OUT0[159:120]),
	.TX_BIT_CTRL_OUT1(TX_BIT_CTRL_OUT1_1[159:120]),
	.TX_BIT_CTRL_OUT2(TX_BIT_CTRL_OUT2_1[159:120]),
	.TX_BIT_CTRL_OUT3(TX_BIT_CTRL_OUT3_1[159:120]),
	.TX_BIT_CTRL_OUT4(TX_BIT_CTRL_OUT4[159:120]),
	.TX_BIT_CTRL_OUT5(TX_BIT_CTRL_OUT5[159:120]),
	.TX_BIT_CTRL_OUT6(TX_BIT_CTRL_OUT6_1[159:120]),
	.TX_BIT_CTRL_OUT_TRI(\NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_7 [39:0]),
	.VTC_RDY(VTC_RDY_1[3]),
	.CLK_FROM_EXT(VCC),
	.EN_VTC(GND),
	.NCLK_NIBBLE_IN(GND),
	.PCLK_NIBBLE_IN(GND),
	.PHY_RDEN({GND, GND, GND, GND}),
	.PLL_CLK(PLL_CLK),
	.REFCLK(GND),
	.RIU_ADDR({GND, GND, GND, GND, GND, GND}),
	.RIU_CLK(RIU_CLK),
	.RIU_NIBBLE_SEL(GND),
	.RIU_WR_DATA({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RIU_WR_EN(GND),
	.RST(RST),
	.RX_BIT_CTRL_IN0(RX_BIT_CTRL_IN0[159:120]),
	.RX_BIT_CTRL_IN1({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN2({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN3({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN4(RX_BIT_CTRL_IN4[159:120]),
	.RX_BIT_CTRL_IN5(RX_BIT_CTRL_IN5[159:120]),
	.RX_BIT_CTRL_IN6({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TBYTE_IN({GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN0(TX_BIT_CTRL_IN0[159:120]),
	.TX_BIT_CTRL_IN1({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN2({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN3({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN4(TX_BIT_CTRL_IN4[159:120]),
	.TX_BIT_CTRL_IN5(TX_BIT_CTRL_IN5[159:120]),
	.TX_BIT_CTRL_IN6({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN_TRI({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND})
);
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .CTRL_CLK="EXTERNAL";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .DIV_MODE="DIV2";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .EN_CLK_TO_EXT_NORTH="DISABLE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .EN_CLK_TO_EXT_SOUTH="DISABLE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .EN_OTHER_NCLK="FALSE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .EN_OTHER_PCLK="FALSE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .IDLY_VT_TRACK="FALSE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .ODLY_VT_TRACK="FALSE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .QDLY_VT_TRACK="FALSE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .REFCLK_SRC="PLLCLK";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .RX_GATING="DISABLE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .SELF_CALIBRATE="DISABLE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .SERIAL_MODE="FALSE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .SIM_VERSION=2.0;
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .TX_GATING="DISABLE";
// @225:8066
(* haps_ip_type="hstdm_native_bitslice_ctrl" *)  BITSLICE_CONTROL \NIBBLE[1].BITSLICE_CTRL.bitslice_control  (
	.CLK_TO_EXT_NORTH(\NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control ),
	.CLK_TO_EXT_SOUTH(\NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_5 ),
	.DLY_RDY(DLY_RDY_1[1]),
	.DYN_DCI(\NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_1 [6:0]),
	.NCLK_NIBBLE_OUT(\NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_4 ),
	.PCLK_NIBBLE_OUT(\NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_3 ),
	.RIU_RD_DATA(\NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_2 [15:0]),
	.RIU_VALID(\NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_6 ),
	.RX_BIT_CTRL_OUT0(RX_BIT_CTRL_OUT0_1[79:40]),
	.RX_BIT_CTRL_OUT1(RX_BIT_CTRL_OUT1_1[79:40]),
	.RX_BIT_CTRL_OUT2(RX_BIT_CTRL_OUT2[79:40]),
	.RX_BIT_CTRL_OUT3(RX_BIT_CTRL_OUT3[79:40]),
	.RX_BIT_CTRL_OUT4(RX_BIT_CTRL_OUT4_1[79:40]),
	.RX_BIT_CTRL_OUT5(RX_BIT_CTRL_OUT5_1[79:40]),
	.RX_BIT_CTRL_OUT6(RX_BIT_CTRL_OUT6_1[79:40]),
	.TX_BIT_CTRL_OUT0(TX_BIT_CTRL_OUT0_1[79:40]),
	.TX_BIT_CTRL_OUT1(TX_BIT_CTRL_OUT1_1[79:40]),
	.TX_BIT_CTRL_OUT2(TX_BIT_CTRL_OUT2[79:40]),
	.TX_BIT_CTRL_OUT3(TX_BIT_CTRL_OUT3[79:40]),
	.TX_BIT_CTRL_OUT4(TX_BIT_CTRL_OUT4_1[79:40]),
	.TX_BIT_CTRL_OUT5(TX_BIT_CTRL_OUT5_1[79:40]),
	.TX_BIT_CTRL_OUT6(TX_BIT_CTRL_OUT6_1[79:40]),
	.TX_BIT_CTRL_OUT_TRI(\NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_7 [39:0]),
	.VTC_RDY(VTC_RDY_1[1]),
	.CLK_FROM_EXT(VCC),
	.EN_VTC(GND),
	.NCLK_NIBBLE_IN(GND),
	.PCLK_NIBBLE_IN(GND),
	.PHY_RDEN({GND, GND, GND, GND}),
	.PLL_CLK(PLL_CLK),
	.REFCLK(GND),
	.RIU_ADDR({GND, GND, GND, GND, GND, GND}),
	.RIU_CLK(RIU_CLK),
	.RIU_NIBBLE_SEL(GND),
	.RIU_WR_DATA({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RIU_WR_EN(GND),
	.RST(RST),
	.RX_BIT_CTRL_IN0({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN1({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN2(RX_BIT_CTRL_IN2[79:40]),
	.RX_BIT_CTRL_IN3(RX_BIT_CTRL_IN3[79:40]),
	.RX_BIT_CTRL_IN4({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN5({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN6({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TBYTE_IN({GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN0({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN1({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN2(TX_BIT_CTRL_IN2[79:40]),
	.TX_BIT_CTRL_IN3(TX_BIT_CTRL_IN3[79:40]),
	.TX_BIT_CTRL_IN4({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN5({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN6({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN_TRI({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND})
);
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .CTRL_CLK="EXTERNAL";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .DIV_MODE="DIV2";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .EN_CLK_TO_EXT_NORTH="DISABLE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .EN_CLK_TO_EXT_SOUTH="DISABLE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .EN_OTHER_NCLK="FALSE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .EN_OTHER_PCLK="FALSE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .IDLY_VT_TRACK="FALSE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .ODLY_VT_TRACK="FALSE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .QDLY_VT_TRACK="FALSE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .REFCLK_SRC="PLLCLK";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .RX_GATING="DISABLE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .SELF_CALIBRATE="DISABLE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .SERIAL_MODE="FALSE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .TX_GATING="DISABLE";
assign RX_BIT_CTRL_OUT0[0] = GND;
assign RX_BIT_CTRL_OUT0[1] = GND;
assign RX_BIT_CTRL_OUT0[2] = GND;
assign RX_BIT_CTRL_OUT0[3] = GND;
assign RX_BIT_CTRL_OUT0[4] = GND;
assign RX_BIT_CTRL_OUT0[5] = GND;
assign RX_BIT_CTRL_OUT0[6] = GND;
assign RX_BIT_CTRL_OUT0[7] = GND;
assign RX_BIT_CTRL_OUT0[8] = GND;
assign RX_BIT_CTRL_OUT0[9] = GND;
assign RX_BIT_CTRL_OUT0[10] = GND;
assign RX_BIT_CTRL_OUT0[11] = GND;
assign RX_BIT_CTRL_OUT0[12] = GND;
assign RX_BIT_CTRL_OUT0[13] = GND;
assign RX_BIT_CTRL_OUT0[14] = GND;
assign RX_BIT_CTRL_OUT0[15] = GND;
assign RX_BIT_CTRL_OUT0[16] = GND;
assign RX_BIT_CTRL_OUT0[17] = GND;
assign RX_BIT_CTRL_OUT0[18] = GND;
assign RX_BIT_CTRL_OUT0[19] = GND;
assign RX_BIT_CTRL_OUT0[20] = GND;
assign RX_BIT_CTRL_OUT0[21] = GND;
assign RX_BIT_CTRL_OUT0[22] = GND;
assign RX_BIT_CTRL_OUT0[23] = GND;
assign RX_BIT_CTRL_OUT0[24] = GND;
assign RX_BIT_CTRL_OUT0[25] = GND;
assign RX_BIT_CTRL_OUT0[26] = GND;
assign RX_BIT_CTRL_OUT0[27] = GND;
assign RX_BIT_CTRL_OUT0[28] = GND;
assign RX_BIT_CTRL_OUT0[29] = GND;
assign RX_BIT_CTRL_OUT0[30] = GND;
assign RX_BIT_CTRL_OUT0[31] = GND;
assign RX_BIT_CTRL_OUT0[32] = GND;
assign RX_BIT_CTRL_OUT0[33] = GND;
assign RX_BIT_CTRL_OUT0[34] = GND;
assign RX_BIT_CTRL_OUT0[35] = GND;
assign RX_BIT_CTRL_OUT0[36] = GND;
assign RX_BIT_CTRL_OUT0[37] = GND;
assign RX_BIT_CTRL_OUT0[38] = GND;
assign RX_BIT_CTRL_OUT0[39] = GND;
assign RX_BIT_CTRL_OUT0[40] = GND;
assign RX_BIT_CTRL_OUT0[41] = GND;
assign RX_BIT_CTRL_OUT0[42] = GND;
assign RX_BIT_CTRL_OUT0[43] = GND;
assign RX_BIT_CTRL_OUT0[44] = GND;
assign RX_BIT_CTRL_OUT0[45] = GND;
assign RX_BIT_CTRL_OUT0[46] = GND;
assign RX_BIT_CTRL_OUT0[47] = GND;
assign RX_BIT_CTRL_OUT0[48] = GND;
assign RX_BIT_CTRL_OUT0[49] = GND;
assign RX_BIT_CTRL_OUT0[50] = GND;
assign RX_BIT_CTRL_OUT0[51] = GND;
assign RX_BIT_CTRL_OUT0[52] = GND;
assign RX_BIT_CTRL_OUT0[53] = GND;
assign RX_BIT_CTRL_OUT0[54] = GND;
assign RX_BIT_CTRL_OUT0[55] = GND;
assign RX_BIT_CTRL_OUT0[56] = GND;
assign RX_BIT_CTRL_OUT0[57] = GND;
assign RX_BIT_CTRL_OUT0[58] = GND;
assign RX_BIT_CTRL_OUT0[59] = GND;
assign RX_BIT_CTRL_OUT0[60] = GND;
assign RX_BIT_CTRL_OUT0[61] = GND;
assign RX_BIT_CTRL_OUT0[62] = GND;
assign RX_BIT_CTRL_OUT0[63] = GND;
assign RX_BIT_CTRL_OUT0[64] = GND;
assign RX_BIT_CTRL_OUT0[65] = GND;
assign RX_BIT_CTRL_OUT0[66] = GND;
assign RX_BIT_CTRL_OUT0[67] = GND;
assign RX_BIT_CTRL_OUT0[68] = GND;
assign RX_BIT_CTRL_OUT0[69] = GND;
assign RX_BIT_CTRL_OUT0[70] = GND;
assign RX_BIT_CTRL_OUT0[71] = GND;
assign RX_BIT_CTRL_OUT0[72] = GND;
assign RX_BIT_CTRL_OUT0[73] = GND;
assign RX_BIT_CTRL_OUT0[74] = GND;
assign RX_BIT_CTRL_OUT0[75] = GND;
assign RX_BIT_CTRL_OUT0[76] = GND;
assign RX_BIT_CTRL_OUT0[77] = GND;
assign RX_BIT_CTRL_OUT0[78] = GND;
assign RX_BIT_CTRL_OUT0[79] = GND;
assign RX_BIT_CTRL_OUT0[80] = GND;
assign RX_BIT_CTRL_OUT0[81] = GND;
assign RX_BIT_CTRL_OUT0[82] = GND;
assign RX_BIT_CTRL_OUT0[83] = GND;
assign RX_BIT_CTRL_OUT0[84] = GND;
assign RX_BIT_CTRL_OUT0[85] = GND;
assign RX_BIT_CTRL_OUT0[86] = GND;
assign RX_BIT_CTRL_OUT0[87] = GND;
assign RX_BIT_CTRL_OUT0[88] = GND;
assign RX_BIT_CTRL_OUT0[89] = GND;
assign RX_BIT_CTRL_OUT0[90] = GND;
assign RX_BIT_CTRL_OUT0[91] = GND;
assign RX_BIT_CTRL_OUT0[92] = GND;
assign RX_BIT_CTRL_OUT0[93] = GND;
assign RX_BIT_CTRL_OUT0[94] = GND;
assign RX_BIT_CTRL_OUT0[95] = GND;
assign RX_BIT_CTRL_OUT0[96] = GND;
assign RX_BIT_CTRL_OUT0[97] = GND;
assign RX_BIT_CTRL_OUT0[98] = GND;
assign RX_BIT_CTRL_OUT0[99] = GND;
assign RX_BIT_CTRL_OUT0[100] = GND;
assign RX_BIT_CTRL_OUT0[101] = GND;
assign RX_BIT_CTRL_OUT0[102] = GND;
assign RX_BIT_CTRL_OUT0[103] = GND;
assign RX_BIT_CTRL_OUT0[104] = GND;
assign RX_BIT_CTRL_OUT0[105] = GND;
assign RX_BIT_CTRL_OUT0[106] = GND;
assign RX_BIT_CTRL_OUT0[107] = GND;
assign RX_BIT_CTRL_OUT0[108] = GND;
assign RX_BIT_CTRL_OUT0[109] = GND;
assign RX_BIT_CTRL_OUT0[110] = GND;
assign RX_BIT_CTRL_OUT0[111] = GND;
assign RX_BIT_CTRL_OUT0[112] = GND;
assign RX_BIT_CTRL_OUT0[113] = GND;
assign RX_BIT_CTRL_OUT0[114] = GND;
assign RX_BIT_CTRL_OUT0[115] = GND;
assign RX_BIT_CTRL_OUT0[116] = GND;
assign RX_BIT_CTRL_OUT0[117] = GND;
assign RX_BIT_CTRL_OUT0[118] = GND;
assign RX_BIT_CTRL_OUT0[119] = GND;
assign RX_BIT_CTRL_OUT0[160] = GND;
assign RX_BIT_CTRL_OUT0[161] = GND;
assign RX_BIT_CTRL_OUT0[162] = GND;
assign RX_BIT_CTRL_OUT0[163] = GND;
assign RX_BIT_CTRL_OUT0[164] = GND;
assign RX_BIT_CTRL_OUT0[165] = GND;
assign RX_BIT_CTRL_OUT0[166] = GND;
assign RX_BIT_CTRL_OUT0[167] = GND;
assign RX_BIT_CTRL_OUT0[168] = GND;
assign RX_BIT_CTRL_OUT0[169] = GND;
assign RX_BIT_CTRL_OUT0[170] = GND;
assign RX_BIT_CTRL_OUT0[171] = GND;
assign RX_BIT_CTRL_OUT0[172] = GND;
assign RX_BIT_CTRL_OUT0[173] = GND;
assign RX_BIT_CTRL_OUT0[174] = GND;
assign RX_BIT_CTRL_OUT0[175] = GND;
assign RX_BIT_CTRL_OUT0[176] = GND;
assign RX_BIT_CTRL_OUT0[177] = GND;
assign RX_BIT_CTRL_OUT0[178] = GND;
assign RX_BIT_CTRL_OUT0[179] = GND;
assign RX_BIT_CTRL_OUT0[180] = GND;
assign RX_BIT_CTRL_OUT0[181] = GND;
assign RX_BIT_CTRL_OUT0[182] = GND;
assign RX_BIT_CTRL_OUT0[183] = GND;
assign RX_BIT_CTRL_OUT0[184] = GND;
assign RX_BIT_CTRL_OUT0[185] = GND;
assign RX_BIT_CTRL_OUT0[186] = GND;
assign RX_BIT_CTRL_OUT0[187] = GND;
assign RX_BIT_CTRL_OUT0[188] = GND;
assign RX_BIT_CTRL_OUT0[189] = GND;
assign RX_BIT_CTRL_OUT0[190] = GND;
assign RX_BIT_CTRL_OUT0[191] = GND;
assign RX_BIT_CTRL_OUT0[192] = GND;
assign RX_BIT_CTRL_OUT0[193] = GND;
assign RX_BIT_CTRL_OUT0[194] = GND;
assign RX_BIT_CTRL_OUT0[195] = GND;
assign RX_BIT_CTRL_OUT0[196] = GND;
assign RX_BIT_CTRL_OUT0[197] = GND;
assign RX_BIT_CTRL_OUT0[198] = GND;
assign RX_BIT_CTRL_OUT0[199] = GND;
assign RX_BIT_CTRL_OUT0[200] = GND;
assign RX_BIT_CTRL_OUT0[201] = GND;
assign RX_BIT_CTRL_OUT0[202] = GND;
assign RX_BIT_CTRL_OUT0[203] = GND;
assign RX_BIT_CTRL_OUT0[204] = GND;
assign RX_BIT_CTRL_OUT0[205] = GND;
assign RX_BIT_CTRL_OUT0[206] = GND;
assign RX_BIT_CTRL_OUT0[207] = GND;
assign RX_BIT_CTRL_OUT0[208] = GND;
assign RX_BIT_CTRL_OUT0[209] = GND;
assign RX_BIT_CTRL_OUT0[210] = GND;
assign RX_BIT_CTRL_OUT0[211] = GND;
assign RX_BIT_CTRL_OUT0[212] = GND;
assign RX_BIT_CTRL_OUT0[213] = GND;
assign RX_BIT_CTRL_OUT0[214] = GND;
assign RX_BIT_CTRL_OUT0[215] = GND;
assign RX_BIT_CTRL_OUT0[216] = GND;
assign RX_BIT_CTRL_OUT0[217] = GND;
assign RX_BIT_CTRL_OUT0[218] = GND;
assign RX_BIT_CTRL_OUT0[219] = GND;
assign RX_BIT_CTRL_OUT0[220] = GND;
assign RX_BIT_CTRL_OUT0[221] = GND;
assign RX_BIT_CTRL_OUT0[222] = GND;
assign RX_BIT_CTRL_OUT0[223] = GND;
assign RX_BIT_CTRL_OUT0[224] = GND;
assign RX_BIT_CTRL_OUT0[225] = GND;
assign RX_BIT_CTRL_OUT0[226] = GND;
assign RX_BIT_CTRL_OUT0[227] = GND;
assign RX_BIT_CTRL_OUT0[228] = GND;
assign RX_BIT_CTRL_OUT0[229] = GND;
assign RX_BIT_CTRL_OUT0[230] = GND;
assign RX_BIT_CTRL_OUT0[231] = GND;
assign RX_BIT_CTRL_OUT0[232] = GND;
assign RX_BIT_CTRL_OUT0[233] = GND;
assign RX_BIT_CTRL_OUT0[234] = GND;
assign RX_BIT_CTRL_OUT0[235] = GND;
assign RX_BIT_CTRL_OUT0[236] = GND;
assign RX_BIT_CTRL_OUT0[237] = GND;
assign RX_BIT_CTRL_OUT0[238] = GND;
assign RX_BIT_CTRL_OUT0[239] = GND;
assign RX_BIT_CTRL_OUT0[240] = GND;
assign RX_BIT_CTRL_OUT0[241] = GND;
assign RX_BIT_CTRL_OUT0[242] = GND;
assign RX_BIT_CTRL_OUT0[243] = GND;
assign RX_BIT_CTRL_OUT0[244] = GND;
assign RX_BIT_CTRL_OUT0[245] = GND;
assign RX_BIT_CTRL_OUT0[246] = GND;
assign RX_BIT_CTRL_OUT0[247] = GND;
assign RX_BIT_CTRL_OUT0[248] = GND;
assign RX_BIT_CTRL_OUT0[249] = GND;
assign RX_BIT_CTRL_OUT0[250] = GND;
assign RX_BIT_CTRL_OUT0[251] = GND;
assign RX_BIT_CTRL_OUT0[252] = GND;
assign RX_BIT_CTRL_OUT0[253] = GND;
assign RX_BIT_CTRL_OUT0[254] = GND;
assign RX_BIT_CTRL_OUT0[255] = GND;
assign RX_BIT_CTRL_OUT0[256] = GND;
assign RX_BIT_CTRL_OUT0[257] = GND;
assign RX_BIT_CTRL_OUT0[258] = GND;
assign RX_BIT_CTRL_OUT0[259] = GND;
assign RX_BIT_CTRL_OUT0[260] = GND;
assign RX_BIT_CTRL_OUT0[261] = GND;
assign RX_BIT_CTRL_OUT0[262] = GND;
assign RX_BIT_CTRL_OUT0[263] = GND;
assign RX_BIT_CTRL_OUT0[264] = GND;
assign RX_BIT_CTRL_OUT0[265] = GND;
assign RX_BIT_CTRL_OUT0[266] = GND;
assign RX_BIT_CTRL_OUT0[267] = GND;
assign RX_BIT_CTRL_OUT0[268] = GND;
assign RX_BIT_CTRL_OUT0[269] = GND;
assign RX_BIT_CTRL_OUT0[270] = GND;
assign RX_BIT_CTRL_OUT0[271] = GND;
assign RX_BIT_CTRL_OUT0[272] = GND;
assign RX_BIT_CTRL_OUT0[273] = GND;
assign RX_BIT_CTRL_OUT0[274] = GND;
assign RX_BIT_CTRL_OUT0[275] = GND;
assign RX_BIT_CTRL_OUT0[276] = GND;
assign RX_BIT_CTRL_OUT0[277] = GND;
assign RX_BIT_CTRL_OUT0[278] = GND;
assign RX_BIT_CTRL_OUT0[279] = GND;
assign RX_BIT_CTRL_OUT0[280] = GND;
assign RX_BIT_CTRL_OUT0[281] = GND;
assign RX_BIT_CTRL_OUT0[282] = GND;
assign RX_BIT_CTRL_OUT0[283] = GND;
assign RX_BIT_CTRL_OUT0[284] = GND;
assign RX_BIT_CTRL_OUT0[285] = GND;
assign RX_BIT_CTRL_OUT0[286] = GND;
assign RX_BIT_CTRL_OUT0[287] = GND;
assign RX_BIT_CTRL_OUT0[288] = GND;
assign RX_BIT_CTRL_OUT0[289] = GND;
assign RX_BIT_CTRL_OUT0[290] = GND;
assign RX_BIT_CTRL_OUT0[291] = GND;
assign RX_BIT_CTRL_OUT0[292] = GND;
assign RX_BIT_CTRL_OUT0[293] = GND;
assign RX_BIT_CTRL_OUT0[294] = GND;
assign RX_BIT_CTRL_OUT0[295] = GND;
assign RX_BIT_CTRL_OUT0[296] = GND;
assign RX_BIT_CTRL_OUT0[297] = GND;
assign RX_BIT_CTRL_OUT0[298] = GND;
assign RX_BIT_CTRL_OUT0[299] = GND;
assign RX_BIT_CTRL_OUT0[300] = GND;
assign RX_BIT_CTRL_OUT0[301] = GND;
assign RX_BIT_CTRL_OUT0[302] = GND;
assign RX_BIT_CTRL_OUT0[303] = GND;
assign RX_BIT_CTRL_OUT0[304] = GND;
assign RX_BIT_CTRL_OUT0[305] = GND;
assign RX_BIT_CTRL_OUT0[306] = GND;
assign RX_BIT_CTRL_OUT0[307] = GND;
assign RX_BIT_CTRL_OUT0[308] = GND;
assign RX_BIT_CTRL_OUT0[309] = GND;
assign RX_BIT_CTRL_OUT0[310] = GND;
assign RX_BIT_CTRL_OUT0[311] = GND;
assign RX_BIT_CTRL_OUT0[312] = GND;
assign RX_BIT_CTRL_OUT0[313] = GND;
assign RX_BIT_CTRL_OUT0[314] = GND;
assign RX_BIT_CTRL_OUT0[315] = GND;
assign RX_BIT_CTRL_OUT0[316] = GND;
assign RX_BIT_CTRL_OUT0[317] = GND;
assign RX_BIT_CTRL_OUT0[318] = GND;
assign RX_BIT_CTRL_OUT0[319] = GND;
assign RX_BIT_CTRL_OUT1[0] = GND;
assign RX_BIT_CTRL_OUT1[1] = GND;
assign RX_BIT_CTRL_OUT1[2] = GND;
assign RX_BIT_CTRL_OUT1[3] = GND;
assign RX_BIT_CTRL_OUT1[4] = GND;
assign RX_BIT_CTRL_OUT1[5] = GND;
assign RX_BIT_CTRL_OUT1[6] = GND;
assign RX_BIT_CTRL_OUT1[7] = GND;
assign RX_BIT_CTRL_OUT1[8] = GND;
assign RX_BIT_CTRL_OUT1[9] = GND;
assign RX_BIT_CTRL_OUT1[10] = GND;
assign RX_BIT_CTRL_OUT1[11] = GND;
assign RX_BIT_CTRL_OUT1[12] = GND;
assign RX_BIT_CTRL_OUT1[13] = GND;
assign RX_BIT_CTRL_OUT1[14] = GND;
assign RX_BIT_CTRL_OUT1[15] = GND;
assign RX_BIT_CTRL_OUT1[16] = GND;
assign RX_BIT_CTRL_OUT1[17] = GND;
assign RX_BIT_CTRL_OUT1[18] = GND;
assign RX_BIT_CTRL_OUT1[19] = GND;
assign RX_BIT_CTRL_OUT1[20] = GND;
assign RX_BIT_CTRL_OUT1[21] = GND;
assign RX_BIT_CTRL_OUT1[22] = GND;
assign RX_BIT_CTRL_OUT1[23] = GND;
assign RX_BIT_CTRL_OUT1[24] = GND;
assign RX_BIT_CTRL_OUT1[25] = GND;
assign RX_BIT_CTRL_OUT1[26] = GND;
assign RX_BIT_CTRL_OUT1[27] = GND;
assign RX_BIT_CTRL_OUT1[28] = GND;
assign RX_BIT_CTRL_OUT1[29] = GND;
assign RX_BIT_CTRL_OUT1[30] = GND;
assign RX_BIT_CTRL_OUT1[31] = GND;
assign RX_BIT_CTRL_OUT1[32] = GND;
assign RX_BIT_CTRL_OUT1[33] = GND;
assign RX_BIT_CTRL_OUT1[34] = GND;
assign RX_BIT_CTRL_OUT1[35] = GND;
assign RX_BIT_CTRL_OUT1[36] = GND;
assign RX_BIT_CTRL_OUT1[37] = GND;
assign RX_BIT_CTRL_OUT1[38] = GND;
assign RX_BIT_CTRL_OUT1[39] = GND;
assign RX_BIT_CTRL_OUT1[40] = GND;
assign RX_BIT_CTRL_OUT1[41] = GND;
assign RX_BIT_CTRL_OUT1[42] = GND;
assign RX_BIT_CTRL_OUT1[43] = GND;
assign RX_BIT_CTRL_OUT1[44] = GND;
assign RX_BIT_CTRL_OUT1[45] = GND;
assign RX_BIT_CTRL_OUT1[46] = GND;
assign RX_BIT_CTRL_OUT1[47] = GND;
assign RX_BIT_CTRL_OUT1[48] = GND;
assign RX_BIT_CTRL_OUT1[49] = GND;
assign RX_BIT_CTRL_OUT1[50] = GND;
assign RX_BIT_CTRL_OUT1[51] = GND;
assign RX_BIT_CTRL_OUT1[52] = GND;
assign RX_BIT_CTRL_OUT1[53] = GND;
assign RX_BIT_CTRL_OUT1[54] = GND;
assign RX_BIT_CTRL_OUT1[55] = GND;
assign RX_BIT_CTRL_OUT1[56] = GND;
assign RX_BIT_CTRL_OUT1[57] = GND;
assign RX_BIT_CTRL_OUT1[58] = GND;
assign RX_BIT_CTRL_OUT1[59] = GND;
assign RX_BIT_CTRL_OUT1[60] = GND;
assign RX_BIT_CTRL_OUT1[61] = GND;
assign RX_BIT_CTRL_OUT1[62] = GND;
assign RX_BIT_CTRL_OUT1[63] = GND;
assign RX_BIT_CTRL_OUT1[64] = GND;
assign RX_BIT_CTRL_OUT1[65] = GND;
assign RX_BIT_CTRL_OUT1[66] = GND;
assign RX_BIT_CTRL_OUT1[67] = GND;
assign RX_BIT_CTRL_OUT1[68] = GND;
assign RX_BIT_CTRL_OUT1[69] = GND;
assign RX_BIT_CTRL_OUT1[70] = GND;
assign RX_BIT_CTRL_OUT1[71] = GND;
assign RX_BIT_CTRL_OUT1[72] = GND;
assign RX_BIT_CTRL_OUT1[73] = GND;
assign RX_BIT_CTRL_OUT1[74] = GND;
assign RX_BIT_CTRL_OUT1[75] = GND;
assign RX_BIT_CTRL_OUT1[76] = GND;
assign RX_BIT_CTRL_OUT1[77] = GND;
assign RX_BIT_CTRL_OUT1[78] = GND;
assign RX_BIT_CTRL_OUT1[79] = GND;
assign RX_BIT_CTRL_OUT1[80] = GND;
assign RX_BIT_CTRL_OUT1[81] = GND;
assign RX_BIT_CTRL_OUT1[82] = GND;
assign RX_BIT_CTRL_OUT1[83] = GND;
assign RX_BIT_CTRL_OUT1[84] = GND;
assign RX_BIT_CTRL_OUT1[85] = GND;
assign RX_BIT_CTRL_OUT1[86] = GND;
assign RX_BIT_CTRL_OUT1[87] = GND;
assign RX_BIT_CTRL_OUT1[88] = GND;
assign RX_BIT_CTRL_OUT1[89] = GND;
assign RX_BIT_CTRL_OUT1[90] = GND;
assign RX_BIT_CTRL_OUT1[91] = GND;
assign RX_BIT_CTRL_OUT1[92] = GND;
assign RX_BIT_CTRL_OUT1[93] = GND;
assign RX_BIT_CTRL_OUT1[94] = GND;
assign RX_BIT_CTRL_OUT1[95] = GND;
assign RX_BIT_CTRL_OUT1[96] = GND;
assign RX_BIT_CTRL_OUT1[97] = GND;
assign RX_BIT_CTRL_OUT1[98] = GND;
assign RX_BIT_CTRL_OUT1[99] = GND;
assign RX_BIT_CTRL_OUT1[100] = GND;
assign RX_BIT_CTRL_OUT1[101] = GND;
assign RX_BIT_CTRL_OUT1[102] = GND;
assign RX_BIT_CTRL_OUT1[103] = GND;
assign RX_BIT_CTRL_OUT1[104] = GND;
assign RX_BIT_CTRL_OUT1[105] = GND;
assign RX_BIT_CTRL_OUT1[106] = GND;
assign RX_BIT_CTRL_OUT1[107] = GND;
assign RX_BIT_CTRL_OUT1[108] = GND;
assign RX_BIT_CTRL_OUT1[109] = GND;
assign RX_BIT_CTRL_OUT1[110] = GND;
assign RX_BIT_CTRL_OUT1[111] = GND;
assign RX_BIT_CTRL_OUT1[112] = GND;
assign RX_BIT_CTRL_OUT1[113] = GND;
assign RX_BIT_CTRL_OUT1[114] = GND;
assign RX_BIT_CTRL_OUT1[115] = GND;
assign RX_BIT_CTRL_OUT1[116] = GND;
assign RX_BIT_CTRL_OUT1[117] = GND;
assign RX_BIT_CTRL_OUT1[118] = GND;
assign RX_BIT_CTRL_OUT1[119] = GND;
assign RX_BIT_CTRL_OUT1[120] = GND;
assign RX_BIT_CTRL_OUT1[121] = GND;
assign RX_BIT_CTRL_OUT1[122] = GND;
assign RX_BIT_CTRL_OUT1[123] = GND;
assign RX_BIT_CTRL_OUT1[124] = GND;
assign RX_BIT_CTRL_OUT1[125] = GND;
assign RX_BIT_CTRL_OUT1[126] = GND;
assign RX_BIT_CTRL_OUT1[127] = GND;
assign RX_BIT_CTRL_OUT1[128] = GND;
assign RX_BIT_CTRL_OUT1[129] = GND;
assign RX_BIT_CTRL_OUT1[130] = GND;
assign RX_BIT_CTRL_OUT1[131] = GND;
assign RX_BIT_CTRL_OUT1[132] = GND;
assign RX_BIT_CTRL_OUT1[133] = GND;
assign RX_BIT_CTRL_OUT1[134] = GND;
assign RX_BIT_CTRL_OUT1[135] = GND;
assign RX_BIT_CTRL_OUT1[136] = GND;
assign RX_BIT_CTRL_OUT1[137] = GND;
assign RX_BIT_CTRL_OUT1[138] = GND;
assign RX_BIT_CTRL_OUT1[139] = GND;
assign RX_BIT_CTRL_OUT1[140] = GND;
assign RX_BIT_CTRL_OUT1[141] = GND;
assign RX_BIT_CTRL_OUT1[142] = GND;
assign RX_BIT_CTRL_OUT1[143] = GND;
assign RX_BIT_CTRL_OUT1[144] = GND;
assign RX_BIT_CTRL_OUT1[145] = GND;
assign RX_BIT_CTRL_OUT1[146] = GND;
assign RX_BIT_CTRL_OUT1[147] = GND;
assign RX_BIT_CTRL_OUT1[148] = GND;
assign RX_BIT_CTRL_OUT1[149] = GND;
assign RX_BIT_CTRL_OUT1[150] = GND;
assign RX_BIT_CTRL_OUT1[151] = GND;
assign RX_BIT_CTRL_OUT1[152] = GND;
assign RX_BIT_CTRL_OUT1[153] = GND;
assign RX_BIT_CTRL_OUT1[154] = GND;
assign RX_BIT_CTRL_OUT1[155] = GND;
assign RX_BIT_CTRL_OUT1[156] = GND;
assign RX_BIT_CTRL_OUT1[157] = GND;
assign RX_BIT_CTRL_OUT1[158] = GND;
assign RX_BIT_CTRL_OUT1[159] = GND;
assign RX_BIT_CTRL_OUT1[160] = GND;
assign RX_BIT_CTRL_OUT1[161] = GND;
assign RX_BIT_CTRL_OUT1[162] = GND;
assign RX_BIT_CTRL_OUT1[163] = GND;
assign RX_BIT_CTRL_OUT1[164] = GND;
assign RX_BIT_CTRL_OUT1[165] = GND;
assign RX_BIT_CTRL_OUT1[166] = GND;
assign RX_BIT_CTRL_OUT1[167] = GND;
assign RX_BIT_CTRL_OUT1[168] = GND;
assign RX_BIT_CTRL_OUT1[169] = GND;
assign RX_BIT_CTRL_OUT1[170] = GND;
assign RX_BIT_CTRL_OUT1[171] = GND;
assign RX_BIT_CTRL_OUT1[172] = GND;
assign RX_BIT_CTRL_OUT1[173] = GND;
assign RX_BIT_CTRL_OUT1[174] = GND;
assign RX_BIT_CTRL_OUT1[175] = GND;
assign RX_BIT_CTRL_OUT1[176] = GND;
assign RX_BIT_CTRL_OUT1[177] = GND;
assign RX_BIT_CTRL_OUT1[178] = GND;
assign RX_BIT_CTRL_OUT1[179] = GND;
assign RX_BIT_CTRL_OUT1[180] = GND;
assign RX_BIT_CTRL_OUT1[181] = GND;
assign RX_BIT_CTRL_OUT1[182] = GND;
assign RX_BIT_CTRL_OUT1[183] = GND;
assign RX_BIT_CTRL_OUT1[184] = GND;
assign RX_BIT_CTRL_OUT1[185] = GND;
assign RX_BIT_CTRL_OUT1[186] = GND;
assign RX_BIT_CTRL_OUT1[187] = GND;
assign RX_BIT_CTRL_OUT1[188] = GND;
assign RX_BIT_CTRL_OUT1[189] = GND;
assign RX_BIT_CTRL_OUT1[190] = GND;
assign RX_BIT_CTRL_OUT1[191] = GND;
assign RX_BIT_CTRL_OUT1[192] = GND;
assign RX_BIT_CTRL_OUT1[193] = GND;
assign RX_BIT_CTRL_OUT1[194] = GND;
assign RX_BIT_CTRL_OUT1[195] = GND;
assign RX_BIT_CTRL_OUT1[196] = GND;
assign RX_BIT_CTRL_OUT1[197] = GND;
assign RX_BIT_CTRL_OUT1[198] = GND;
assign RX_BIT_CTRL_OUT1[199] = GND;
assign RX_BIT_CTRL_OUT1[200] = GND;
assign RX_BIT_CTRL_OUT1[201] = GND;
assign RX_BIT_CTRL_OUT1[202] = GND;
assign RX_BIT_CTRL_OUT1[203] = GND;
assign RX_BIT_CTRL_OUT1[204] = GND;
assign RX_BIT_CTRL_OUT1[205] = GND;
assign RX_BIT_CTRL_OUT1[206] = GND;
assign RX_BIT_CTRL_OUT1[207] = GND;
assign RX_BIT_CTRL_OUT1[208] = GND;
assign RX_BIT_CTRL_OUT1[209] = GND;
assign RX_BIT_CTRL_OUT1[210] = GND;
assign RX_BIT_CTRL_OUT1[211] = GND;
assign RX_BIT_CTRL_OUT1[212] = GND;
assign RX_BIT_CTRL_OUT1[213] = GND;
assign RX_BIT_CTRL_OUT1[214] = GND;
assign RX_BIT_CTRL_OUT1[215] = GND;
assign RX_BIT_CTRL_OUT1[216] = GND;
assign RX_BIT_CTRL_OUT1[217] = GND;
assign RX_BIT_CTRL_OUT1[218] = GND;
assign RX_BIT_CTRL_OUT1[219] = GND;
assign RX_BIT_CTRL_OUT1[220] = GND;
assign RX_BIT_CTRL_OUT1[221] = GND;
assign RX_BIT_CTRL_OUT1[222] = GND;
assign RX_BIT_CTRL_OUT1[223] = GND;
assign RX_BIT_CTRL_OUT1[224] = GND;
assign RX_BIT_CTRL_OUT1[225] = GND;
assign RX_BIT_CTRL_OUT1[226] = GND;
assign RX_BIT_CTRL_OUT1[227] = GND;
assign RX_BIT_CTRL_OUT1[228] = GND;
assign RX_BIT_CTRL_OUT1[229] = GND;
assign RX_BIT_CTRL_OUT1[230] = GND;
assign RX_BIT_CTRL_OUT1[231] = GND;
assign RX_BIT_CTRL_OUT1[232] = GND;
assign RX_BIT_CTRL_OUT1[233] = GND;
assign RX_BIT_CTRL_OUT1[234] = GND;
assign RX_BIT_CTRL_OUT1[235] = GND;
assign RX_BIT_CTRL_OUT1[236] = GND;
assign RX_BIT_CTRL_OUT1[237] = GND;
assign RX_BIT_CTRL_OUT1[238] = GND;
assign RX_BIT_CTRL_OUT1[239] = GND;
assign RX_BIT_CTRL_OUT1[240] = GND;
assign RX_BIT_CTRL_OUT1[241] = GND;
assign RX_BIT_CTRL_OUT1[242] = GND;
assign RX_BIT_CTRL_OUT1[243] = GND;
assign RX_BIT_CTRL_OUT1[244] = GND;
assign RX_BIT_CTRL_OUT1[245] = GND;
assign RX_BIT_CTRL_OUT1[246] = GND;
assign RX_BIT_CTRL_OUT1[247] = GND;
assign RX_BIT_CTRL_OUT1[248] = GND;
assign RX_BIT_CTRL_OUT1[249] = GND;
assign RX_BIT_CTRL_OUT1[250] = GND;
assign RX_BIT_CTRL_OUT1[251] = GND;
assign RX_BIT_CTRL_OUT1[252] = GND;
assign RX_BIT_CTRL_OUT1[253] = GND;
assign RX_BIT_CTRL_OUT1[254] = GND;
assign RX_BIT_CTRL_OUT1[255] = GND;
assign RX_BIT_CTRL_OUT1[256] = GND;
assign RX_BIT_CTRL_OUT1[257] = GND;
assign RX_BIT_CTRL_OUT1[258] = GND;
assign RX_BIT_CTRL_OUT1[259] = GND;
assign RX_BIT_CTRL_OUT1[260] = GND;
assign RX_BIT_CTRL_OUT1[261] = GND;
assign RX_BIT_CTRL_OUT1[262] = GND;
assign RX_BIT_CTRL_OUT1[263] = GND;
assign RX_BIT_CTRL_OUT1[264] = GND;
assign RX_BIT_CTRL_OUT1[265] = GND;
assign RX_BIT_CTRL_OUT1[266] = GND;
assign RX_BIT_CTRL_OUT1[267] = GND;
assign RX_BIT_CTRL_OUT1[268] = GND;
assign RX_BIT_CTRL_OUT1[269] = GND;
assign RX_BIT_CTRL_OUT1[270] = GND;
assign RX_BIT_CTRL_OUT1[271] = GND;
assign RX_BIT_CTRL_OUT1[272] = GND;
assign RX_BIT_CTRL_OUT1[273] = GND;
assign RX_BIT_CTRL_OUT1[274] = GND;
assign RX_BIT_CTRL_OUT1[275] = GND;
assign RX_BIT_CTRL_OUT1[276] = GND;
assign RX_BIT_CTRL_OUT1[277] = GND;
assign RX_BIT_CTRL_OUT1[278] = GND;
assign RX_BIT_CTRL_OUT1[279] = GND;
assign RX_BIT_CTRL_OUT1[280] = GND;
assign RX_BIT_CTRL_OUT1[281] = GND;
assign RX_BIT_CTRL_OUT1[282] = GND;
assign RX_BIT_CTRL_OUT1[283] = GND;
assign RX_BIT_CTRL_OUT1[284] = GND;
assign RX_BIT_CTRL_OUT1[285] = GND;
assign RX_BIT_CTRL_OUT1[286] = GND;
assign RX_BIT_CTRL_OUT1[287] = GND;
assign RX_BIT_CTRL_OUT1[288] = GND;
assign RX_BIT_CTRL_OUT1[289] = GND;
assign RX_BIT_CTRL_OUT1[290] = GND;
assign RX_BIT_CTRL_OUT1[291] = GND;
assign RX_BIT_CTRL_OUT1[292] = GND;
assign RX_BIT_CTRL_OUT1[293] = GND;
assign RX_BIT_CTRL_OUT1[294] = GND;
assign RX_BIT_CTRL_OUT1[295] = GND;
assign RX_BIT_CTRL_OUT1[296] = GND;
assign RX_BIT_CTRL_OUT1[297] = GND;
assign RX_BIT_CTRL_OUT1[298] = GND;
assign RX_BIT_CTRL_OUT1[299] = GND;
assign RX_BIT_CTRL_OUT1[300] = GND;
assign RX_BIT_CTRL_OUT1[301] = GND;
assign RX_BIT_CTRL_OUT1[302] = GND;
assign RX_BIT_CTRL_OUT1[303] = GND;
assign RX_BIT_CTRL_OUT1[304] = GND;
assign RX_BIT_CTRL_OUT1[305] = GND;
assign RX_BIT_CTRL_OUT1[306] = GND;
assign RX_BIT_CTRL_OUT1[307] = GND;
assign RX_BIT_CTRL_OUT1[308] = GND;
assign RX_BIT_CTRL_OUT1[309] = GND;
assign RX_BIT_CTRL_OUT1[310] = GND;
assign RX_BIT_CTRL_OUT1[311] = GND;
assign RX_BIT_CTRL_OUT1[312] = GND;
assign RX_BIT_CTRL_OUT1[313] = GND;
assign RX_BIT_CTRL_OUT1[314] = GND;
assign RX_BIT_CTRL_OUT1[315] = GND;
assign RX_BIT_CTRL_OUT1[316] = GND;
assign RX_BIT_CTRL_OUT1[317] = GND;
assign RX_BIT_CTRL_OUT1[318] = GND;
assign RX_BIT_CTRL_OUT1[319] = GND;
assign RX_BIT_CTRL_OUT2[0] = GND;
assign RX_BIT_CTRL_OUT2[1] = GND;
assign RX_BIT_CTRL_OUT2[2] = GND;
assign RX_BIT_CTRL_OUT2[3] = GND;
assign RX_BIT_CTRL_OUT2[4] = GND;
assign RX_BIT_CTRL_OUT2[5] = GND;
assign RX_BIT_CTRL_OUT2[6] = GND;
assign RX_BIT_CTRL_OUT2[7] = GND;
assign RX_BIT_CTRL_OUT2[8] = GND;
assign RX_BIT_CTRL_OUT2[9] = GND;
assign RX_BIT_CTRL_OUT2[10] = GND;
assign RX_BIT_CTRL_OUT2[11] = GND;
assign RX_BIT_CTRL_OUT2[12] = GND;
assign RX_BIT_CTRL_OUT2[13] = GND;
assign RX_BIT_CTRL_OUT2[14] = GND;
assign RX_BIT_CTRL_OUT2[15] = GND;
assign RX_BIT_CTRL_OUT2[16] = GND;
assign RX_BIT_CTRL_OUT2[17] = GND;
assign RX_BIT_CTRL_OUT2[18] = GND;
assign RX_BIT_CTRL_OUT2[19] = GND;
assign RX_BIT_CTRL_OUT2[20] = GND;
assign RX_BIT_CTRL_OUT2[21] = GND;
assign RX_BIT_CTRL_OUT2[22] = GND;
assign RX_BIT_CTRL_OUT2[23] = GND;
assign RX_BIT_CTRL_OUT2[24] = GND;
assign RX_BIT_CTRL_OUT2[25] = GND;
assign RX_BIT_CTRL_OUT2[26] = GND;
assign RX_BIT_CTRL_OUT2[27] = GND;
assign RX_BIT_CTRL_OUT2[28] = GND;
assign RX_BIT_CTRL_OUT2[29] = GND;
assign RX_BIT_CTRL_OUT2[30] = GND;
assign RX_BIT_CTRL_OUT2[31] = GND;
assign RX_BIT_CTRL_OUT2[32] = GND;
assign RX_BIT_CTRL_OUT2[33] = GND;
assign RX_BIT_CTRL_OUT2[34] = GND;
assign RX_BIT_CTRL_OUT2[35] = GND;
assign RX_BIT_CTRL_OUT2[36] = GND;
assign RX_BIT_CTRL_OUT2[37] = GND;
assign RX_BIT_CTRL_OUT2[38] = GND;
assign RX_BIT_CTRL_OUT2[39] = GND;
assign RX_BIT_CTRL_OUT2[80] = GND;
assign RX_BIT_CTRL_OUT2[81] = GND;
assign RX_BIT_CTRL_OUT2[82] = GND;
assign RX_BIT_CTRL_OUT2[83] = GND;
assign RX_BIT_CTRL_OUT2[84] = GND;
assign RX_BIT_CTRL_OUT2[85] = GND;
assign RX_BIT_CTRL_OUT2[86] = GND;
assign RX_BIT_CTRL_OUT2[87] = GND;
assign RX_BIT_CTRL_OUT2[88] = GND;
assign RX_BIT_CTRL_OUT2[89] = GND;
assign RX_BIT_CTRL_OUT2[90] = GND;
assign RX_BIT_CTRL_OUT2[91] = GND;
assign RX_BIT_CTRL_OUT2[92] = GND;
assign RX_BIT_CTRL_OUT2[93] = GND;
assign RX_BIT_CTRL_OUT2[94] = GND;
assign RX_BIT_CTRL_OUT2[95] = GND;
assign RX_BIT_CTRL_OUT2[96] = GND;
assign RX_BIT_CTRL_OUT2[97] = GND;
assign RX_BIT_CTRL_OUT2[98] = GND;
assign RX_BIT_CTRL_OUT2[99] = GND;
assign RX_BIT_CTRL_OUT2[100] = GND;
assign RX_BIT_CTRL_OUT2[101] = GND;
assign RX_BIT_CTRL_OUT2[102] = GND;
assign RX_BIT_CTRL_OUT2[103] = GND;
assign RX_BIT_CTRL_OUT2[104] = GND;
assign RX_BIT_CTRL_OUT2[105] = GND;
assign RX_BIT_CTRL_OUT2[106] = GND;
assign RX_BIT_CTRL_OUT2[107] = GND;
assign RX_BIT_CTRL_OUT2[108] = GND;
assign RX_BIT_CTRL_OUT2[109] = GND;
assign RX_BIT_CTRL_OUT2[110] = GND;
assign RX_BIT_CTRL_OUT2[111] = GND;
assign RX_BIT_CTRL_OUT2[112] = GND;
assign RX_BIT_CTRL_OUT2[113] = GND;
assign RX_BIT_CTRL_OUT2[114] = GND;
assign RX_BIT_CTRL_OUT2[115] = GND;
assign RX_BIT_CTRL_OUT2[116] = GND;
assign RX_BIT_CTRL_OUT2[117] = GND;
assign RX_BIT_CTRL_OUT2[118] = GND;
assign RX_BIT_CTRL_OUT2[119] = GND;
assign RX_BIT_CTRL_OUT2[120] = GND;
assign RX_BIT_CTRL_OUT2[121] = GND;
assign RX_BIT_CTRL_OUT2[122] = GND;
assign RX_BIT_CTRL_OUT2[123] = GND;
assign RX_BIT_CTRL_OUT2[124] = GND;
assign RX_BIT_CTRL_OUT2[125] = GND;
assign RX_BIT_CTRL_OUT2[126] = GND;
assign RX_BIT_CTRL_OUT2[127] = GND;
assign RX_BIT_CTRL_OUT2[128] = GND;
assign RX_BIT_CTRL_OUT2[129] = GND;
assign RX_BIT_CTRL_OUT2[130] = GND;
assign RX_BIT_CTRL_OUT2[131] = GND;
assign RX_BIT_CTRL_OUT2[132] = GND;
assign RX_BIT_CTRL_OUT2[133] = GND;
assign RX_BIT_CTRL_OUT2[134] = GND;
assign RX_BIT_CTRL_OUT2[135] = GND;
assign RX_BIT_CTRL_OUT2[136] = GND;
assign RX_BIT_CTRL_OUT2[137] = GND;
assign RX_BIT_CTRL_OUT2[138] = GND;
assign RX_BIT_CTRL_OUT2[139] = GND;
assign RX_BIT_CTRL_OUT2[140] = GND;
assign RX_BIT_CTRL_OUT2[141] = GND;
assign RX_BIT_CTRL_OUT2[142] = GND;
assign RX_BIT_CTRL_OUT2[143] = GND;
assign RX_BIT_CTRL_OUT2[144] = GND;
assign RX_BIT_CTRL_OUT2[145] = GND;
assign RX_BIT_CTRL_OUT2[146] = GND;
assign RX_BIT_CTRL_OUT2[147] = GND;
assign RX_BIT_CTRL_OUT2[148] = GND;
assign RX_BIT_CTRL_OUT2[149] = GND;
assign RX_BIT_CTRL_OUT2[150] = GND;
assign RX_BIT_CTRL_OUT2[151] = GND;
assign RX_BIT_CTRL_OUT2[152] = GND;
assign RX_BIT_CTRL_OUT2[153] = GND;
assign RX_BIT_CTRL_OUT2[154] = GND;
assign RX_BIT_CTRL_OUT2[155] = GND;
assign RX_BIT_CTRL_OUT2[156] = GND;
assign RX_BIT_CTRL_OUT2[157] = GND;
assign RX_BIT_CTRL_OUT2[158] = GND;
assign RX_BIT_CTRL_OUT2[159] = GND;
assign RX_BIT_CTRL_OUT2[160] = GND;
assign RX_BIT_CTRL_OUT2[161] = GND;
assign RX_BIT_CTRL_OUT2[162] = GND;
assign RX_BIT_CTRL_OUT2[163] = GND;
assign RX_BIT_CTRL_OUT2[164] = GND;
assign RX_BIT_CTRL_OUT2[165] = GND;
assign RX_BIT_CTRL_OUT2[166] = GND;
assign RX_BIT_CTRL_OUT2[167] = GND;
assign RX_BIT_CTRL_OUT2[168] = GND;
assign RX_BIT_CTRL_OUT2[169] = GND;
assign RX_BIT_CTRL_OUT2[170] = GND;
assign RX_BIT_CTRL_OUT2[171] = GND;
assign RX_BIT_CTRL_OUT2[172] = GND;
assign RX_BIT_CTRL_OUT2[173] = GND;
assign RX_BIT_CTRL_OUT2[174] = GND;
assign RX_BIT_CTRL_OUT2[175] = GND;
assign RX_BIT_CTRL_OUT2[176] = GND;
assign RX_BIT_CTRL_OUT2[177] = GND;
assign RX_BIT_CTRL_OUT2[178] = GND;
assign RX_BIT_CTRL_OUT2[179] = GND;
assign RX_BIT_CTRL_OUT2[180] = GND;
assign RX_BIT_CTRL_OUT2[181] = GND;
assign RX_BIT_CTRL_OUT2[182] = GND;
assign RX_BIT_CTRL_OUT2[183] = GND;
assign RX_BIT_CTRL_OUT2[184] = GND;
assign RX_BIT_CTRL_OUT2[185] = GND;
assign RX_BIT_CTRL_OUT2[186] = GND;
assign RX_BIT_CTRL_OUT2[187] = GND;
assign RX_BIT_CTRL_OUT2[188] = GND;
assign RX_BIT_CTRL_OUT2[189] = GND;
assign RX_BIT_CTRL_OUT2[190] = GND;
assign RX_BIT_CTRL_OUT2[191] = GND;
assign RX_BIT_CTRL_OUT2[192] = GND;
assign RX_BIT_CTRL_OUT2[193] = GND;
assign RX_BIT_CTRL_OUT2[194] = GND;
assign RX_BIT_CTRL_OUT2[195] = GND;
assign RX_BIT_CTRL_OUT2[196] = GND;
assign RX_BIT_CTRL_OUT2[197] = GND;
assign RX_BIT_CTRL_OUT2[198] = GND;
assign RX_BIT_CTRL_OUT2[199] = GND;
assign RX_BIT_CTRL_OUT2[200] = GND;
assign RX_BIT_CTRL_OUT2[201] = GND;
assign RX_BIT_CTRL_OUT2[202] = GND;
assign RX_BIT_CTRL_OUT2[203] = GND;
assign RX_BIT_CTRL_OUT2[204] = GND;
assign RX_BIT_CTRL_OUT2[205] = GND;
assign RX_BIT_CTRL_OUT2[206] = GND;
assign RX_BIT_CTRL_OUT2[207] = GND;
assign RX_BIT_CTRL_OUT2[208] = GND;
assign RX_BIT_CTRL_OUT2[209] = GND;
assign RX_BIT_CTRL_OUT2[210] = GND;
assign RX_BIT_CTRL_OUT2[211] = GND;
assign RX_BIT_CTRL_OUT2[212] = GND;
assign RX_BIT_CTRL_OUT2[213] = GND;
assign RX_BIT_CTRL_OUT2[214] = GND;
assign RX_BIT_CTRL_OUT2[215] = GND;
assign RX_BIT_CTRL_OUT2[216] = GND;
assign RX_BIT_CTRL_OUT2[217] = GND;
assign RX_BIT_CTRL_OUT2[218] = GND;
assign RX_BIT_CTRL_OUT2[219] = GND;
assign RX_BIT_CTRL_OUT2[220] = GND;
assign RX_BIT_CTRL_OUT2[221] = GND;
assign RX_BIT_CTRL_OUT2[222] = GND;
assign RX_BIT_CTRL_OUT2[223] = GND;
assign RX_BIT_CTRL_OUT2[224] = GND;
assign RX_BIT_CTRL_OUT2[225] = GND;
assign RX_BIT_CTRL_OUT2[226] = GND;
assign RX_BIT_CTRL_OUT2[227] = GND;
assign RX_BIT_CTRL_OUT2[228] = GND;
assign RX_BIT_CTRL_OUT2[229] = GND;
assign RX_BIT_CTRL_OUT2[230] = GND;
assign RX_BIT_CTRL_OUT2[231] = GND;
assign RX_BIT_CTRL_OUT2[232] = GND;
assign RX_BIT_CTRL_OUT2[233] = GND;
assign RX_BIT_CTRL_OUT2[234] = GND;
assign RX_BIT_CTRL_OUT2[235] = GND;
assign RX_BIT_CTRL_OUT2[236] = GND;
assign RX_BIT_CTRL_OUT2[237] = GND;
assign RX_BIT_CTRL_OUT2[238] = GND;
assign RX_BIT_CTRL_OUT2[239] = GND;
assign RX_BIT_CTRL_OUT2[240] = GND;
assign RX_BIT_CTRL_OUT2[241] = GND;
assign RX_BIT_CTRL_OUT2[242] = GND;
assign RX_BIT_CTRL_OUT2[243] = GND;
assign RX_BIT_CTRL_OUT2[244] = GND;
assign RX_BIT_CTRL_OUT2[245] = GND;
assign RX_BIT_CTRL_OUT2[246] = GND;
assign RX_BIT_CTRL_OUT2[247] = GND;
assign RX_BIT_CTRL_OUT2[248] = GND;
assign RX_BIT_CTRL_OUT2[249] = GND;
assign RX_BIT_CTRL_OUT2[250] = GND;
assign RX_BIT_CTRL_OUT2[251] = GND;
assign RX_BIT_CTRL_OUT2[252] = GND;
assign RX_BIT_CTRL_OUT2[253] = GND;
assign RX_BIT_CTRL_OUT2[254] = GND;
assign RX_BIT_CTRL_OUT2[255] = GND;
assign RX_BIT_CTRL_OUT2[256] = GND;
assign RX_BIT_CTRL_OUT2[257] = GND;
assign RX_BIT_CTRL_OUT2[258] = GND;
assign RX_BIT_CTRL_OUT2[259] = GND;
assign RX_BIT_CTRL_OUT2[260] = GND;
assign RX_BIT_CTRL_OUT2[261] = GND;
assign RX_BIT_CTRL_OUT2[262] = GND;
assign RX_BIT_CTRL_OUT2[263] = GND;
assign RX_BIT_CTRL_OUT2[264] = GND;
assign RX_BIT_CTRL_OUT2[265] = GND;
assign RX_BIT_CTRL_OUT2[266] = GND;
assign RX_BIT_CTRL_OUT2[267] = GND;
assign RX_BIT_CTRL_OUT2[268] = GND;
assign RX_BIT_CTRL_OUT2[269] = GND;
assign RX_BIT_CTRL_OUT2[270] = GND;
assign RX_BIT_CTRL_OUT2[271] = GND;
assign RX_BIT_CTRL_OUT2[272] = GND;
assign RX_BIT_CTRL_OUT2[273] = GND;
assign RX_BIT_CTRL_OUT2[274] = GND;
assign RX_BIT_CTRL_OUT2[275] = GND;
assign RX_BIT_CTRL_OUT2[276] = GND;
assign RX_BIT_CTRL_OUT2[277] = GND;
assign RX_BIT_CTRL_OUT2[278] = GND;
assign RX_BIT_CTRL_OUT2[279] = GND;
assign RX_BIT_CTRL_OUT2[280] = GND;
assign RX_BIT_CTRL_OUT2[281] = GND;
assign RX_BIT_CTRL_OUT2[282] = GND;
assign RX_BIT_CTRL_OUT2[283] = GND;
assign RX_BIT_CTRL_OUT2[284] = GND;
assign RX_BIT_CTRL_OUT2[285] = GND;
assign RX_BIT_CTRL_OUT2[286] = GND;
assign RX_BIT_CTRL_OUT2[287] = GND;
assign RX_BIT_CTRL_OUT2[288] = GND;
assign RX_BIT_CTRL_OUT2[289] = GND;
assign RX_BIT_CTRL_OUT2[290] = GND;
assign RX_BIT_CTRL_OUT2[291] = GND;
assign RX_BIT_CTRL_OUT2[292] = GND;
assign RX_BIT_CTRL_OUT2[293] = GND;
assign RX_BIT_CTRL_OUT2[294] = GND;
assign RX_BIT_CTRL_OUT2[295] = GND;
assign RX_BIT_CTRL_OUT2[296] = GND;
assign RX_BIT_CTRL_OUT2[297] = GND;
assign RX_BIT_CTRL_OUT2[298] = GND;
assign RX_BIT_CTRL_OUT2[299] = GND;
assign RX_BIT_CTRL_OUT2[300] = GND;
assign RX_BIT_CTRL_OUT2[301] = GND;
assign RX_BIT_CTRL_OUT2[302] = GND;
assign RX_BIT_CTRL_OUT2[303] = GND;
assign RX_BIT_CTRL_OUT2[304] = GND;
assign RX_BIT_CTRL_OUT2[305] = GND;
assign RX_BIT_CTRL_OUT2[306] = GND;
assign RX_BIT_CTRL_OUT2[307] = GND;
assign RX_BIT_CTRL_OUT2[308] = GND;
assign RX_BIT_CTRL_OUT2[309] = GND;
assign RX_BIT_CTRL_OUT2[310] = GND;
assign RX_BIT_CTRL_OUT2[311] = GND;
assign RX_BIT_CTRL_OUT2[312] = GND;
assign RX_BIT_CTRL_OUT2[313] = GND;
assign RX_BIT_CTRL_OUT2[314] = GND;
assign RX_BIT_CTRL_OUT2[315] = GND;
assign RX_BIT_CTRL_OUT2[316] = GND;
assign RX_BIT_CTRL_OUT2[317] = GND;
assign RX_BIT_CTRL_OUT2[318] = GND;
assign RX_BIT_CTRL_OUT2[319] = GND;
assign RX_BIT_CTRL_OUT3[0] = GND;
assign RX_BIT_CTRL_OUT3[1] = GND;
assign RX_BIT_CTRL_OUT3[2] = GND;
assign RX_BIT_CTRL_OUT3[3] = GND;
assign RX_BIT_CTRL_OUT3[4] = GND;
assign RX_BIT_CTRL_OUT3[5] = GND;
assign RX_BIT_CTRL_OUT3[6] = GND;
assign RX_BIT_CTRL_OUT3[7] = GND;
assign RX_BIT_CTRL_OUT3[8] = GND;
assign RX_BIT_CTRL_OUT3[9] = GND;
assign RX_BIT_CTRL_OUT3[10] = GND;
assign RX_BIT_CTRL_OUT3[11] = GND;
assign RX_BIT_CTRL_OUT3[12] = GND;
assign RX_BIT_CTRL_OUT3[13] = GND;
assign RX_BIT_CTRL_OUT3[14] = GND;
assign RX_BIT_CTRL_OUT3[15] = GND;
assign RX_BIT_CTRL_OUT3[16] = GND;
assign RX_BIT_CTRL_OUT3[17] = GND;
assign RX_BIT_CTRL_OUT3[18] = GND;
assign RX_BIT_CTRL_OUT3[19] = GND;
assign RX_BIT_CTRL_OUT3[20] = GND;
assign RX_BIT_CTRL_OUT3[21] = GND;
assign RX_BIT_CTRL_OUT3[22] = GND;
assign RX_BIT_CTRL_OUT3[23] = GND;
assign RX_BIT_CTRL_OUT3[24] = GND;
assign RX_BIT_CTRL_OUT3[25] = GND;
assign RX_BIT_CTRL_OUT3[26] = GND;
assign RX_BIT_CTRL_OUT3[27] = GND;
assign RX_BIT_CTRL_OUT3[28] = GND;
assign RX_BIT_CTRL_OUT3[29] = GND;
assign RX_BIT_CTRL_OUT3[30] = GND;
assign RX_BIT_CTRL_OUT3[31] = GND;
assign RX_BIT_CTRL_OUT3[32] = GND;
assign RX_BIT_CTRL_OUT3[33] = GND;
assign RX_BIT_CTRL_OUT3[34] = GND;
assign RX_BIT_CTRL_OUT3[35] = GND;
assign RX_BIT_CTRL_OUT3[36] = GND;
assign RX_BIT_CTRL_OUT3[37] = GND;
assign RX_BIT_CTRL_OUT3[38] = GND;
assign RX_BIT_CTRL_OUT3[39] = GND;
assign RX_BIT_CTRL_OUT3[80] = GND;
assign RX_BIT_CTRL_OUT3[81] = GND;
assign RX_BIT_CTRL_OUT3[82] = GND;
assign RX_BIT_CTRL_OUT3[83] = GND;
assign RX_BIT_CTRL_OUT3[84] = GND;
assign RX_BIT_CTRL_OUT3[85] = GND;
assign RX_BIT_CTRL_OUT3[86] = GND;
assign RX_BIT_CTRL_OUT3[87] = GND;
assign RX_BIT_CTRL_OUT3[88] = GND;
assign RX_BIT_CTRL_OUT3[89] = GND;
assign RX_BIT_CTRL_OUT3[90] = GND;
assign RX_BIT_CTRL_OUT3[91] = GND;
assign RX_BIT_CTRL_OUT3[92] = GND;
assign RX_BIT_CTRL_OUT3[93] = GND;
assign RX_BIT_CTRL_OUT3[94] = GND;
assign RX_BIT_CTRL_OUT3[95] = GND;
assign RX_BIT_CTRL_OUT3[96] = GND;
assign RX_BIT_CTRL_OUT3[97] = GND;
assign RX_BIT_CTRL_OUT3[98] = GND;
assign RX_BIT_CTRL_OUT3[99] = GND;
assign RX_BIT_CTRL_OUT3[100] = GND;
assign RX_BIT_CTRL_OUT3[101] = GND;
assign RX_BIT_CTRL_OUT3[102] = GND;
assign RX_BIT_CTRL_OUT3[103] = GND;
assign RX_BIT_CTRL_OUT3[104] = GND;
assign RX_BIT_CTRL_OUT3[105] = GND;
assign RX_BIT_CTRL_OUT3[106] = GND;
assign RX_BIT_CTRL_OUT3[107] = GND;
assign RX_BIT_CTRL_OUT3[108] = GND;
assign RX_BIT_CTRL_OUT3[109] = GND;
assign RX_BIT_CTRL_OUT3[110] = GND;
assign RX_BIT_CTRL_OUT3[111] = GND;
assign RX_BIT_CTRL_OUT3[112] = GND;
assign RX_BIT_CTRL_OUT3[113] = GND;
assign RX_BIT_CTRL_OUT3[114] = GND;
assign RX_BIT_CTRL_OUT3[115] = GND;
assign RX_BIT_CTRL_OUT3[116] = GND;
assign RX_BIT_CTRL_OUT3[117] = GND;
assign RX_BIT_CTRL_OUT3[118] = GND;
assign RX_BIT_CTRL_OUT3[119] = GND;
assign RX_BIT_CTRL_OUT3[120] = GND;
assign RX_BIT_CTRL_OUT3[121] = GND;
assign RX_BIT_CTRL_OUT3[122] = GND;
assign RX_BIT_CTRL_OUT3[123] = GND;
assign RX_BIT_CTRL_OUT3[124] = GND;
assign RX_BIT_CTRL_OUT3[125] = GND;
assign RX_BIT_CTRL_OUT3[126] = GND;
assign RX_BIT_CTRL_OUT3[127] = GND;
assign RX_BIT_CTRL_OUT3[128] = GND;
assign RX_BIT_CTRL_OUT3[129] = GND;
assign RX_BIT_CTRL_OUT3[130] = GND;
assign RX_BIT_CTRL_OUT3[131] = GND;
assign RX_BIT_CTRL_OUT3[132] = GND;
assign RX_BIT_CTRL_OUT3[133] = GND;
assign RX_BIT_CTRL_OUT3[134] = GND;
assign RX_BIT_CTRL_OUT3[135] = GND;
assign RX_BIT_CTRL_OUT3[136] = GND;
assign RX_BIT_CTRL_OUT3[137] = GND;
assign RX_BIT_CTRL_OUT3[138] = GND;
assign RX_BIT_CTRL_OUT3[139] = GND;
assign RX_BIT_CTRL_OUT3[140] = GND;
assign RX_BIT_CTRL_OUT3[141] = GND;
assign RX_BIT_CTRL_OUT3[142] = GND;
assign RX_BIT_CTRL_OUT3[143] = GND;
assign RX_BIT_CTRL_OUT3[144] = GND;
assign RX_BIT_CTRL_OUT3[145] = GND;
assign RX_BIT_CTRL_OUT3[146] = GND;
assign RX_BIT_CTRL_OUT3[147] = GND;
assign RX_BIT_CTRL_OUT3[148] = GND;
assign RX_BIT_CTRL_OUT3[149] = GND;
assign RX_BIT_CTRL_OUT3[150] = GND;
assign RX_BIT_CTRL_OUT3[151] = GND;
assign RX_BIT_CTRL_OUT3[152] = GND;
assign RX_BIT_CTRL_OUT3[153] = GND;
assign RX_BIT_CTRL_OUT3[154] = GND;
assign RX_BIT_CTRL_OUT3[155] = GND;
assign RX_BIT_CTRL_OUT3[156] = GND;
assign RX_BIT_CTRL_OUT3[157] = GND;
assign RX_BIT_CTRL_OUT3[158] = GND;
assign RX_BIT_CTRL_OUT3[159] = GND;
assign RX_BIT_CTRL_OUT3[160] = GND;
assign RX_BIT_CTRL_OUT3[161] = GND;
assign RX_BIT_CTRL_OUT3[162] = GND;
assign RX_BIT_CTRL_OUT3[163] = GND;
assign RX_BIT_CTRL_OUT3[164] = GND;
assign RX_BIT_CTRL_OUT3[165] = GND;
assign RX_BIT_CTRL_OUT3[166] = GND;
assign RX_BIT_CTRL_OUT3[167] = GND;
assign RX_BIT_CTRL_OUT3[168] = GND;
assign RX_BIT_CTRL_OUT3[169] = GND;
assign RX_BIT_CTRL_OUT3[170] = GND;
assign RX_BIT_CTRL_OUT3[171] = GND;
assign RX_BIT_CTRL_OUT3[172] = GND;
assign RX_BIT_CTRL_OUT3[173] = GND;
assign RX_BIT_CTRL_OUT3[174] = GND;
assign RX_BIT_CTRL_OUT3[175] = GND;
assign RX_BIT_CTRL_OUT3[176] = GND;
assign RX_BIT_CTRL_OUT3[177] = GND;
assign RX_BIT_CTRL_OUT3[178] = GND;
assign RX_BIT_CTRL_OUT3[179] = GND;
assign RX_BIT_CTRL_OUT3[180] = GND;
assign RX_BIT_CTRL_OUT3[181] = GND;
assign RX_BIT_CTRL_OUT3[182] = GND;
assign RX_BIT_CTRL_OUT3[183] = GND;
assign RX_BIT_CTRL_OUT3[184] = GND;
assign RX_BIT_CTRL_OUT3[185] = GND;
assign RX_BIT_CTRL_OUT3[186] = GND;
assign RX_BIT_CTRL_OUT3[187] = GND;
assign RX_BIT_CTRL_OUT3[188] = GND;
assign RX_BIT_CTRL_OUT3[189] = GND;
assign RX_BIT_CTRL_OUT3[190] = GND;
assign RX_BIT_CTRL_OUT3[191] = GND;
assign RX_BIT_CTRL_OUT3[192] = GND;
assign RX_BIT_CTRL_OUT3[193] = GND;
assign RX_BIT_CTRL_OUT3[194] = GND;
assign RX_BIT_CTRL_OUT3[195] = GND;
assign RX_BIT_CTRL_OUT3[196] = GND;
assign RX_BIT_CTRL_OUT3[197] = GND;
assign RX_BIT_CTRL_OUT3[198] = GND;
assign RX_BIT_CTRL_OUT3[199] = GND;
assign RX_BIT_CTRL_OUT3[200] = GND;
assign RX_BIT_CTRL_OUT3[201] = GND;
assign RX_BIT_CTRL_OUT3[202] = GND;
assign RX_BIT_CTRL_OUT3[203] = GND;
assign RX_BIT_CTRL_OUT3[204] = GND;
assign RX_BIT_CTRL_OUT3[205] = GND;
assign RX_BIT_CTRL_OUT3[206] = GND;
assign RX_BIT_CTRL_OUT3[207] = GND;
assign RX_BIT_CTRL_OUT3[208] = GND;
assign RX_BIT_CTRL_OUT3[209] = GND;
assign RX_BIT_CTRL_OUT3[210] = GND;
assign RX_BIT_CTRL_OUT3[211] = GND;
assign RX_BIT_CTRL_OUT3[212] = GND;
assign RX_BIT_CTRL_OUT3[213] = GND;
assign RX_BIT_CTRL_OUT3[214] = GND;
assign RX_BIT_CTRL_OUT3[215] = GND;
assign RX_BIT_CTRL_OUT3[216] = GND;
assign RX_BIT_CTRL_OUT3[217] = GND;
assign RX_BIT_CTRL_OUT3[218] = GND;
assign RX_BIT_CTRL_OUT3[219] = GND;
assign RX_BIT_CTRL_OUT3[220] = GND;
assign RX_BIT_CTRL_OUT3[221] = GND;
assign RX_BIT_CTRL_OUT3[222] = GND;
assign RX_BIT_CTRL_OUT3[223] = GND;
assign RX_BIT_CTRL_OUT3[224] = GND;
assign RX_BIT_CTRL_OUT3[225] = GND;
assign RX_BIT_CTRL_OUT3[226] = GND;
assign RX_BIT_CTRL_OUT3[227] = GND;
assign RX_BIT_CTRL_OUT3[228] = GND;
assign RX_BIT_CTRL_OUT3[229] = GND;
assign RX_BIT_CTRL_OUT3[230] = GND;
assign RX_BIT_CTRL_OUT3[231] = GND;
assign RX_BIT_CTRL_OUT3[232] = GND;
assign RX_BIT_CTRL_OUT3[233] = GND;
assign RX_BIT_CTRL_OUT3[234] = GND;
assign RX_BIT_CTRL_OUT3[235] = GND;
assign RX_BIT_CTRL_OUT3[236] = GND;
assign RX_BIT_CTRL_OUT3[237] = GND;
assign RX_BIT_CTRL_OUT3[238] = GND;
assign RX_BIT_CTRL_OUT3[239] = GND;
assign RX_BIT_CTRL_OUT3[240] = GND;
assign RX_BIT_CTRL_OUT3[241] = GND;
assign RX_BIT_CTRL_OUT3[242] = GND;
assign RX_BIT_CTRL_OUT3[243] = GND;
assign RX_BIT_CTRL_OUT3[244] = GND;
assign RX_BIT_CTRL_OUT3[245] = GND;
assign RX_BIT_CTRL_OUT3[246] = GND;
assign RX_BIT_CTRL_OUT3[247] = GND;
assign RX_BIT_CTRL_OUT3[248] = GND;
assign RX_BIT_CTRL_OUT3[249] = GND;
assign RX_BIT_CTRL_OUT3[250] = GND;
assign RX_BIT_CTRL_OUT3[251] = GND;
assign RX_BIT_CTRL_OUT3[252] = GND;
assign RX_BIT_CTRL_OUT3[253] = GND;
assign RX_BIT_CTRL_OUT3[254] = GND;
assign RX_BIT_CTRL_OUT3[255] = GND;
assign RX_BIT_CTRL_OUT3[256] = GND;
assign RX_BIT_CTRL_OUT3[257] = GND;
assign RX_BIT_CTRL_OUT3[258] = GND;
assign RX_BIT_CTRL_OUT3[259] = GND;
assign RX_BIT_CTRL_OUT3[260] = GND;
assign RX_BIT_CTRL_OUT3[261] = GND;
assign RX_BIT_CTRL_OUT3[262] = GND;
assign RX_BIT_CTRL_OUT3[263] = GND;
assign RX_BIT_CTRL_OUT3[264] = GND;
assign RX_BIT_CTRL_OUT3[265] = GND;
assign RX_BIT_CTRL_OUT3[266] = GND;
assign RX_BIT_CTRL_OUT3[267] = GND;
assign RX_BIT_CTRL_OUT3[268] = GND;
assign RX_BIT_CTRL_OUT3[269] = GND;
assign RX_BIT_CTRL_OUT3[270] = GND;
assign RX_BIT_CTRL_OUT3[271] = GND;
assign RX_BIT_CTRL_OUT3[272] = GND;
assign RX_BIT_CTRL_OUT3[273] = GND;
assign RX_BIT_CTRL_OUT3[274] = GND;
assign RX_BIT_CTRL_OUT3[275] = GND;
assign RX_BIT_CTRL_OUT3[276] = GND;
assign RX_BIT_CTRL_OUT3[277] = GND;
assign RX_BIT_CTRL_OUT3[278] = GND;
assign RX_BIT_CTRL_OUT3[279] = GND;
assign RX_BIT_CTRL_OUT3[280] = GND;
assign RX_BIT_CTRL_OUT3[281] = GND;
assign RX_BIT_CTRL_OUT3[282] = GND;
assign RX_BIT_CTRL_OUT3[283] = GND;
assign RX_BIT_CTRL_OUT3[284] = GND;
assign RX_BIT_CTRL_OUT3[285] = GND;
assign RX_BIT_CTRL_OUT3[286] = GND;
assign RX_BIT_CTRL_OUT3[287] = GND;
assign RX_BIT_CTRL_OUT3[288] = GND;
assign RX_BIT_CTRL_OUT3[289] = GND;
assign RX_BIT_CTRL_OUT3[290] = GND;
assign RX_BIT_CTRL_OUT3[291] = GND;
assign RX_BIT_CTRL_OUT3[292] = GND;
assign RX_BIT_CTRL_OUT3[293] = GND;
assign RX_BIT_CTRL_OUT3[294] = GND;
assign RX_BIT_CTRL_OUT3[295] = GND;
assign RX_BIT_CTRL_OUT3[296] = GND;
assign RX_BIT_CTRL_OUT3[297] = GND;
assign RX_BIT_CTRL_OUT3[298] = GND;
assign RX_BIT_CTRL_OUT3[299] = GND;
assign RX_BIT_CTRL_OUT3[300] = GND;
assign RX_BIT_CTRL_OUT3[301] = GND;
assign RX_BIT_CTRL_OUT3[302] = GND;
assign RX_BIT_CTRL_OUT3[303] = GND;
assign RX_BIT_CTRL_OUT3[304] = GND;
assign RX_BIT_CTRL_OUT3[305] = GND;
assign RX_BIT_CTRL_OUT3[306] = GND;
assign RX_BIT_CTRL_OUT3[307] = GND;
assign RX_BIT_CTRL_OUT3[308] = GND;
assign RX_BIT_CTRL_OUT3[309] = GND;
assign RX_BIT_CTRL_OUT3[310] = GND;
assign RX_BIT_CTRL_OUT3[311] = GND;
assign RX_BIT_CTRL_OUT3[312] = GND;
assign RX_BIT_CTRL_OUT3[313] = GND;
assign RX_BIT_CTRL_OUT3[314] = GND;
assign RX_BIT_CTRL_OUT3[315] = GND;
assign RX_BIT_CTRL_OUT3[316] = GND;
assign RX_BIT_CTRL_OUT3[317] = GND;
assign RX_BIT_CTRL_OUT3[318] = GND;
assign RX_BIT_CTRL_OUT3[319] = GND;
assign RX_BIT_CTRL_OUT4[0] = GND;
assign RX_BIT_CTRL_OUT4[1] = GND;
assign RX_BIT_CTRL_OUT4[2] = GND;
assign RX_BIT_CTRL_OUT4[3] = GND;
assign RX_BIT_CTRL_OUT4[4] = GND;
assign RX_BIT_CTRL_OUT4[5] = GND;
assign RX_BIT_CTRL_OUT4[6] = GND;
assign RX_BIT_CTRL_OUT4[7] = GND;
assign RX_BIT_CTRL_OUT4[8] = GND;
assign RX_BIT_CTRL_OUT4[9] = GND;
assign RX_BIT_CTRL_OUT4[10] = GND;
assign RX_BIT_CTRL_OUT4[11] = GND;
assign RX_BIT_CTRL_OUT4[12] = GND;
assign RX_BIT_CTRL_OUT4[13] = GND;
assign RX_BIT_CTRL_OUT4[14] = GND;
assign RX_BIT_CTRL_OUT4[15] = GND;
assign RX_BIT_CTRL_OUT4[16] = GND;
assign RX_BIT_CTRL_OUT4[17] = GND;
assign RX_BIT_CTRL_OUT4[18] = GND;
assign RX_BIT_CTRL_OUT4[19] = GND;
assign RX_BIT_CTRL_OUT4[20] = GND;
assign RX_BIT_CTRL_OUT4[21] = GND;
assign RX_BIT_CTRL_OUT4[22] = GND;
assign RX_BIT_CTRL_OUT4[23] = GND;
assign RX_BIT_CTRL_OUT4[24] = GND;
assign RX_BIT_CTRL_OUT4[25] = GND;
assign RX_BIT_CTRL_OUT4[26] = GND;
assign RX_BIT_CTRL_OUT4[27] = GND;
assign RX_BIT_CTRL_OUT4[28] = GND;
assign RX_BIT_CTRL_OUT4[29] = GND;
assign RX_BIT_CTRL_OUT4[30] = GND;
assign RX_BIT_CTRL_OUT4[31] = GND;
assign RX_BIT_CTRL_OUT4[32] = GND;
assign RX_BIT_CTRL_OUT4[33] = GND;
assign RX_BIT_CTRL_OUT4[34] = GND;
assign RX_BIT_CTRL_OUT4[35] = GND;
assign RX_BIT_CTRL_OUT4[36] = GND;
assign RX_BIT_CTRL_OUT4[37] = GND;
assign RX_BIT_CTRL_OUT4[38] = GND;
assign RX_BIT_CTRL_OUT4[39] = GND;
assign RX_BIT_CTRL_OUT4[40] = GND;
assign RX_BIT_CTRL_OUT4[41] = GND;
assign RX_BIT_CTRL_OUT4[42] = GND;
assign RX_BIT_CTRL_OUT4[43] = GND;
assign RX_BIT_CTRL_OUT4[44] = GND;
assign RX_BIT_CTRL_OUT4[45] = GND;
assign RX_BIT_CTRL_OUT4[46] = GND;
assign RX_BIT_CTRL_OUT4[47] = GND;
assign RX_BIT_CTRL_OUT4[48] = GND;
assign RX_BIT_CTRL_OUT4[49] = GND;
assign RX_BIT_CTRL_OUT4[50] = GND;
assign RX_BIT_CTRL_OUT4[51] = GND;
assign RX_BIT_CTRL_OUT4[52] = GND;
assign RX_BIT_CTRL_OUT4[53] = GND;
assign RX_BIT_CTRL_OUT4[54] = GND;
assign RX_BIT_CTRL_OUT4[55] = GND;
assign RX_BIT_CTRL_OUT4[56] = GND;
assign RX_BIT_CTRL_OUT4[57] = GND;
assign RX_BIT_CTRL_OUT4[58] = GND;
assign RX_BIT_CTRL_OUT4[59] = GND;
assign RX_BIT_CTRL_OUT4[60] = GND;
assign RX_BIT_CTRL_OUT4[61] = GND;
assign RX_BIT_CTRL_OUT4[62] = GND;
assign RX_BIT_CTRL_OUT4[63] = GND;
assign RX_BIT_CTRL_OUT4[64] = GND;
assign RX_BIT_CTRL_OUT4[65] = GND;
assign RX_BIT_CTRL_OUT4[66] = GND;
assign RX_BIT_CTRL_OUT4[67] = GND;
assign RX_BIT_CTRL_OUT4[68] = GND;
assign RX_BIT_CTRL_OUT4[69] = GND;
assign RX_BIT_CTRL_OUT4[70] = GND;
assign RX_BIT_CTRL_OUT4[71] = GND;
assign RX_BIT_CTRL_OUT4[72] = GND;
assign RX_BIT_CTRL_OUT4[73] = GND;
assign RX_BIT_CTRL_OUT4[74] = GND;
assign RX_BIT_CTRL_OUT4[75] = GND;
assign RX_BIT_CTRL_OUT4[76] = GND;
assign RX_BIT_CTRL_OUT4[77] = GND;
assign RX_BIT_CTRL_OUT4[78] = GND;
assign RX_BIT_CTRL_OUT4[79] = GND;
assign RX_BIT_CTRL_OUT4[80] = GND;
assign RX_BIT_CTRL_OUT4[81] = GND;
assign RX_BIT_CTRL_OUT4[82] = GND;
assign RX_BIT_CTRL_OUT4[83] = GND;
assign RX_BIT_CTRL_OUT4[84] = GND;
assign RX_BIT_CTRL_OUT4[85] = GND;
assign RX_BIT_CTRL_OUT4[86] = GND;
assign RX_BIT_CTRL_OUT4[87] = GND;
assign RX_BIT_CTRL_OUT4[88] = GND;
assign RX_BIT_CTRL_OUT4[89] = GND;
assign RX_BIT_CTRL_OUT4[90] = GND;
assign RX_BIT_CTRL_OUT4[91] = GND;
assign RX_BIT_CTRL_OUT4[92] = GND;
assign RX_BIT_CTRL_OUT4[93] = GND;
assign RX_BIT_CTRL_OUT4[94] = GND;
assign RX_BIT_CTRL_OUT4[95] = GND;
assign RX_BIT_CTRL_OUT4[96] = GND;
assign RX_BIT_CTRL_OUT4[97] = GND;
assign RX_BIT_CTRL_OUT4[98] = GND;
assign RX_BIT_CTRL_OUT4[99] = GND;
assign RX_BIT_CTRL_OUT4[100] = GND;
assign RX_BIT_CTRL_OUT4[101] = GND;
assign RX_BIT_CTRL_OUT4[102] = GND;
assign RX_BIT_CTRL_OUT4[103] = GND;
assign RX_BIT_CTRL_OUT4[104] = GND;
assign RX_BIT_CTRL_OUT4[105] = GND;
assign RX_BIT_CTRL_OUT4[106] = GND;
assign RX_BIT_CTRL_OUT4[107] = GND;
assign RX_BIT_CTRL_OUT4[108] = GND;
assign RX_BIT_CTRL_OUT4[109] = GND;
assign RX_BIT_CTRL_OUT4[110] = GND;
assign RX_BIT_CTRL_OUT4[111] = GND;
assign RX_BIT_CTRL_OUT4[112] = GND;
assign RX_BIT_CTRL_OUT4[113] = GND;
assign RX_BIT_CTRL_OUT4[114] = GND;
assign RX_BIT_CTRL_OUT4[115] = GND;
assign RX_BIT_CTRL_OUT4[116] = GND;
assign RX_BIT_CTRL_OUT4[117] = GND;
assign RX_BIT_CTRL_OUT4[118] = GND;
assign RX_BIT_CTRL_OUT4[119] = GND;
assign RX_BIT_CTRL_OUT4[160] = GND;
assign RX_BIT_CTRL_OUT4[161] = GND;
assign RX_BIT_CTRL_OUT4[162] = GND;
assign RX_BIT_CTRL_OUT4[163] = GND;
assign RX_BIT_CTRL_OUT4[164] = GND;
assign RX_BIT_CTRL_OUT4[165] = GND;
assign RX_BIT_CTRL_OUT4[166] = GND;
assign RX_BIT_CTRL_OUT4[167] = GND;
assign RX_BIT_CTRL_OUT4[168] = GND;
assign RX_BIT_CTRL_OUT4[169] = GND;
assign RX_BIT_CTRL_OUT4[170] = GND;
assign RX_BIT_CTRL_OUT4[171] = GND;
assign RX_BIT_CTRL_OUT4[172] = GND;
assign RX_BIT_CTRL_OUT4[173] = GND;
assign RX_BIT_CTRL_OUT4[174] = GND;
assign RX_BIT_CTRL_OUT4[175] = GND;
assign RX_BIT_CTRL_OUT4[176] = GND;
assign RX_BIT_CTRL_OUT4[177] = GND;
assign RX_BIT_CTRL_OUT4[178] = GND;
assign RX_BIT_CTRL_OUT4[179] = GND;
assign RX_BIT_CTRL_OUT4[180] = GND;
assign RX_BIT_CTRL_OUT4[181] = GND;
assign RX_BIT_CTRL_OUT4[182] = GND;
assign RX_BIT_CTRL_OUT4[183] = GND;
assign RX_BIT_CTRL_OUT4[184] = GND;
assign RX_BIT_CTRL_OUT4[185] = GND;
assign RX_BIT_CTRL_OUT4[186] = GND;
assign RX_BIT_CTRL_OUT4[187] = GND;
assign RX_BIT_CTRL_OUT4[188] = GND;
assign RX_BIT_CTRL_OUT4[189] = GND;
assign RX_BIT_CTRL_OUT4[190] = GND;
assign RX_BIT_CTRL_OUT4[191] = GND;
assign RX_BIT_CTRL_OUT4[192] = GND;
assign RX_BIT_CTRL_OUT4[193] = GND;
assign RX_BIT_CTRL_OUT4[194] = GND;
assign RX_BIT_CTRL_OUT4[195] = GND;
assign RX_BIT_CTRL_OUT4[196] = GND;
assign RX_BIT_CTRL_OUT4[197] = GND;
assign RX_BIT_CTRL_OUT4[198] = GND;
assign RX_BIT_CTRL_OUT4[199] = GND;
assign RX_BIT_CTRL_OUT4[200] = GND;
assign RX_BIT_CTRL_OUT4[201] = GND;
assign RX_BIT_CTRL_OUT4[202] = GND;
assign RX_BIT_CTRL_OUT4[203] = GND;
assign RX_BIT_CTRL_OUT4[204] = GND;
assign RX_BIT_CTRL_OUT4[205] = GND;
assign RX_BIT_CTRL_OUT4[206] = GND;
assign RX_BIT_CTRL_OUT4[207] = GND;
assign RX_BIT_CTRL_OUT4[208] = GND;
assign RX_BIT_CTRL_OUT4[209] = GND;
assign RX_BIT_CTRL_OUT4[210] = GND;
assign RX_BIT_CTRL_OUT4[211] = GND;
assign RX_BIT_CTRL_OUT4[212] = GND;
assign RX_BIT_CTRL_OUT4[213] = GND;
assign RX_BIT_CTRL_OUT4[214] = GND;
assign RX_BIT_CTRL_OUT4[215] = GND;
assign RX_BIT_CTRL_OUT4[216] = GND;
assign RX_BIT_CTRL_OUT4[217] = GND;
assign RX_BIT_CTRL_OUT4[218] = GND;
assign RX_BIT_CTRL_OUT4[219] = GND;
assign RX_BIT_CTRL_OUT4[220] = GND;
assign RX_BIT_CTRL_OUT4[221] = GND;
assign RX_BIT_CTRL_OUT4[222] = GND;
assign RX_BIT_CTRL_OUT4[223] = GND;
assign RX_BIT_CTRL_OUT4[224] = GND;
assign RX_BIT_CTRL_OUT4[225] = GND;
assign RX_BIT_CTRL_OUT4[226] = GND;
assign RX_BIT_CTRL_OUT4[227] = GND;
assign RX_BIT_CTRL_OUT4[228] = GND;
assign RX_BIT_CTRL_OUT4[229] = GND;
assign RX_BIT_CTRL_OUT4[230] = GND;
assign RX_BIT_CTRL_OUT4[231] = GND;
assign RX_BIT_CTRL_OUT4[232] = GND;
assign RX_BIT_CTRL_OUT4[233] = GND;
assign RX_BIT_CTRL_OUT4[234] = GND;
assign RX_BIT_CTRL_OUT4[235] = GND;
assign RX_BIT_CTRL_OUT4[236] = GND;
assign RX_BIT_CTRL_OUT4[237] = GND;
assign RX_BIT_CTRL_OUT4[238] = GND;
assign RX_BIT_CTRL_OUT4[239] = GND;
assign RX_BIT_CTRL_OUT4[240] = GND;
assign RX_BIT_CTRL_OUT4[241] = GND;
assign RX_BIT_CTRL_OUT4[242] = GND;
assign RX_BIT_CTRL_OUT4[243] = GND;
assign RX_BIT_CTRL_OUT4[244] = GND;
assign RX_BIT_CTRL_OUT4[245] = GND;
assign RX_BIT_CTRL_OUT4[246] = GND;
assign RX_BIT_CTRL_OUT4[247] = GND;
assign RX_BIT_CTRL_OUT4[248] = GND;
assign RX_BIT_CTRL_OUT4[249] = GND;
assign RX_BIT_CTRL_OUT4[250] = GND;
assign RX_BIT_CTRL_OUT4[251] = GND;
assign RX_BIT_CTRL_OUT4[252] = GND;
assign RX_BIT_CTRL_OUT4[253] = GND;
assign RX_BIT_CTRL_OUT4[254] = GND;
assign RX_BIT_CTRL_OUT4[255] = GND;
assign RX_BIT_CTRL_OUT4[256] = GND;
assign RX_BIT_CTRL_OUT4[257] = GND;
assign RX_BIT_CTRL_OUT4[258] = GND;
assign RX_BIT_CTRL_OUT4[259] = GND;
assign RX_BIT_CTRL_OUT4[260] = GND;
assign RX_BIT_CTRL_OUT4[261] = GND;
assign RX_BIT_CTRL_OUT4[262] = GND;
assign RX_BIT_CTRL_OUT4[263] = GND;
assign RX_BIT_CTRL_OUT4[264] = GND;
assign RX_BIT_CTRL_OUT4[265] = GND;
assign RX_BIT_CTRL_OUT4[266] = GND;
assign RX_BIT_CTRL_OUT4[267] = GND;
assign RX_BIT_CTRL_OUT4[268] = GND;
assign RX_BIT_CTRL_OUT4[269] = GND;
assign RX_BIT_CTRL_OUT4[270] = GND;
assign RX_BIT_CTRL_OUT4[271] = GND;
assign RX_BIT_CTRL_OUT4[272] = GND;
assign RX_BIT_CTRL_OUT4[273] = GND;
assign RX_BIT_CTRL_OUT4[274] = GND;
assign RX_BIT_CTRL_OUT4[275] = GND;
assign RX_BIT_CTRL_OUT4[276] = GND;
assign RX_BIT_CTRL_OUT4[277] = GND;
assign RX_BIT_CTRL_OUT4[278] = GND;
assign RX_BIT_CTRL_OUT4[279] = GND;
assign RX_BIT_CTRL_OUT4[280] = GND;
assign RX_BIT_CTRL_OUT4[281] = GND;
assign RX_BIT_CTRL_OUT4[282] = GND;
assign RX_BIT_CTRL_OUT4[283] = GND;
assign RX_BIT_CTRL_OUT4[284] = GND;
assign RX_BIT_CTRL_OUT4[285] = GND;
assign RX_BIT_CTRL_OUT4[286] = GND;
assign RX_BIT_CTRL_OUT4[287] = GND;
assign RX_BIT_CTRL_OUT4[288] = GND;
assign RX_BIT_CTRL_OUT4[289] = GND;
assign RX_BIT_CTRL_OUT4[290] = GND;
assign RX_BIT_CTRL_OUT4[291] = GND;
assign RX_BIT_CTRL_OUT4[292] = GND;
assign RX_BIT_CTRL_OUT4[293] = GND;
assign RX_BIT_CTRL_OUT4[294] = GND;
assign RX_BIT_CTRL_OUT4[295] = GND;
assign RX_BIT_CTRL_OUT4[296] = GND;
assign RX_BIT_CTRL_OUT4[297] = GND;
assign RX_BIT_CTRL_OUT4[298] = GND;
assign RX_BIT_CTRL_OUT4[299] = GND;
assign RX_BIT_CTRL_OUT4[300] = GND;
assign RX_BIT_CTRL_OUT4[301] = GND;
assign RX_BIT_CTRL_OUT4[302] = GND;
assign RX_BIT_CTRL_OUT4[303] = GND;
assign RX_BIT_CTRL_OUT4[304] = GND;
assign RX_BIT_CTRL_OUT4[305] = GND;
assign RX_BIT_CTRL_OUT4[306] = GND;
assign RX_BIT_CTRL_OUT4[307] = GND;
assign RX_BIT_CTRL_OUT4[308] = GND;
assign RX_BIT_CTRL_OUT4[309] = GND;
assign RX_BIT_CTRL_OUT4[310] = GND;
assign RX_BIT_CTRL_OUT4[311] = GND;
assign RX_BIT_CTRL_OUT4[312] = GND;
assign RX_BIT_CTRL_OUT4[313] = GND;
assign RX_BIT_CTRL_OUT4[314] = GND;
assign RX_BIT_CTRL_OUT4[315] = GND;
assign RX_BIT_CTRL_OUT4[316] = GND;
assign RX_BIT_CTRL_OUT4[317] = GND;
assign RX_BIT_CTRL_OUT4[318] = GND;
assign RX_BIT_CTRL_OUT4[319] = GND;
assign RX_BIT_CTRL_OUT5[0] = GND;
assign RX_BIT_CTRL_OUT5[1] = GND;
assign RX_BIT_CTRL_OUT5[2] = GND;
assign RX_BIT_CTRL_OUT5[3] = GND;
assign RX_BIT_CTRL_OUT5[4] = GND;
assign RX_BIT_CTRL_OUT5[5] = GND;
assign RX_BIT_CTRL_OUT5[6] = GND;
assign RX_BIT_CTRL_OUT5[7] = GND;
assign RX_BIT_CTRL_OUT5[8] = GND;
assign RX_BIT_CTRL_OUT5[9] = GND;
assign RX_BIT_CTRL_OUT5[10] = GND;
assign RX_BIT_CTRL_OUT5[11] = GND;
assign RX_BIT_CTRL_OUT5[12] = GND;
assign RX_BIT_CTRL_OUT5[13] = GND;
assign RX_BIT_CTRL_OUT5[14] = GND;
assign RX_BIT_CTRL_OUT5[15] = GND;
assign RX_BIT_CTRL_OUT5[16] = GND;
assign RX_BIT_CTRL_OUT5[17] = GND;
assign RX_BIT_CTRL_OUT5[18] = GND;
assign RX_BIT_CTRL_OUT5[19] = GND;
assign RX_BIT_CTRL_OUT5[20] = GND;
assign RX_BIT_CTRL_OUT5[21] = GND;
assign RX_BIT_CTRL_OUT5[22] = GND;
assign RX_BIT_CTRL_OUT5[23] = GND;
assign RX_BIT_CTRL_OUT5[24] = GND;
assign RX_BIT_CTRL_OUT5[25] = GND;
assign RX_BIT_CTRL_OUT5[26] = GND;
assign RX_BIT_CTRL_OUT5[27] = GND;
assign RX_BIT_CTRL_OUT5[28] = GND;
assign RX_BIT_CTRL_OUT5[29] = GND;
assign RX_BIT_CTRL_OUT5[30] = GND;
assign RX_BIT_CTRL_OUT5[31] = GND;
assign RX_BIT_CTRL_OUT5[32] = GND;
assign RX_BIT_CTRL_OUT5[33] = GND;
assign RX_BIT_CTRL_OUT5[34] = GND;
assign RX_BIT_CTRL_OUT5[35] = GND;
assign RX_BIT_CTRL_OUT5[36] = GND;
assign RX_BIT_CTRL_OUT5[37] = GND;
assign RX_BIT_CTRL_OUT5[38] = GND;
assign RX_BIT_CTRL_OUT5[39] = GND;
assign RX_BIT_CTRL_OUT5[40] = GND;
assign RX_BIT_CTRL_OUT5[41] = GND;
assign RX_BIT_CTRL_OUT5[42] = GND;
assign RX_BIT_CTRL_OUT5[43] = GND;
assign RX_BIT_CTRL_OUT5[44] = GND;
assign RX_BIT_CTRL_OUT5[45] = GND;
assign RX_BIT_CTRL_OUT5[46] = GND;
assign RX_BIT_CTRL_OUT5[47] = GND;
assign RX_BIT_CTRL_OUT5[48] = GND;
assign RX_BIT_CTRL_OUT5[49] = GND;
assign RX_BIT_CTRL_OUT5[50] = GND;
assign RX_BIT_CTRL_OUT5[51] = GND;
assign RX_BIT_CTRL_OUT5[52] = GND;
assign RX_BIT_CTRL_OUT5[53] = GND;
assign RX_BIT_CTRL_OUT5[54] = GND;
assign RX_BIT_CTRL_OUT5[55] = GND;
assign RX_BIT_CTRL_OUT5[56] = GND;
assign RX_BIT_CTRL_OUT5[57] = GND;
assign RX_BIT_CTRL_OUT5[58] = GND;
assign RX_BIT_CTRL_OUT5[59] = GND;
assign RX_BIT_CTRL_OUT5[60] = GND;
assign RX_BIT_CTRL_OUT5[61] = GND;
assign RX_BIT_CTRL_OUT5[62] = GND;
assign RX_BIT_CTRL_OUT5[63] = GND;
assign RX_BIT_CTRL_OUT5[64] = GND;
assign RX_BIT_CTRL_OUT5[65] = GND;
assign RX_BIT_CTRL_OUT5[66] = GND;
assign RX_BIT_CTRL_OUT5[67] = GND;
assign RX_BIT_CTRL_OUT5[68] = GND;
assign RX_BIT_CTRL_OUT5[69] = GND;
assign RX_BIT_CTRL_OUT5[70] = GND;
assign RX_BIT_CTRL_OUT5[71] = GND;
assign RX_BIT_CTRL_OUT5[72] = GND;
assign RX_BIT_CTRL_OUT5[73] = GND;
assign RX_BIT_CTRL_OUT5[74] = GND;
assign RX_BIT_CTRL_OUT5[75] = GND;
assign RX_BIT_CTRL_OUT5[76] = GND;
assign RX_BIT_CTRL_OUT5[77] = GND;
assign RX_BIT_CTRL_OUT5[78] = GND;
assign RX_BIT_CTRL_OUT5[79] = GND;
assign RX_BIT_CTRL_OUT5[80] = GND;
assign RX_BIT_CTRL_OUT5[81] = GND;
assign RX_BIT_CTRL_OUT5[82] = GND;
assign RX_BIT_CTRL_OUT5[83] = GND;
assign RX_BIT_CTRL_OUT5[84] = GND;
assign RX_BIT_CTRL_OUT5[85] = GND;
assign RX_BIT_CTRL_OUT5[86] = GND;
assign RX_BIT_CTRL_OUT5[87] = GND;
assign RX_BIT_CTRL_OUT5[88] = GND;
assign RX_BIT_CTRL_OUT5[89] = GND;
assign RX_BIT_CTRL_OUT5[90] = GND;
assign RX_BIT_CTRL_OUT5[91] = GND;
assign RX_BIT_CTRL_OUT5[92] = GND;
assign RX_BIT_CTRL_OUT5[93] = GND;
assign RX_BIT_CTRL_OUT5[94] = GND;
assign RX_BIT_CTRL_OUT5[95] = GND;
assign RX_BIT_CTRL_OUT5[96] = GND;
assign RX_BIT_CTRL_OUT5[97] = GND;
assign RX_BIT_CTRL_OUT5[98] = GND;
assign RX_BIT_CTRL_OUT5[99] = GND;
assign RX_BIT_CTRL_OUT5[100] = GND;
assign RX_BIT_CTRL_OUT5[101] = GND;
assign RX_BIT_CTRL_OUT5[102] = GND;
assign RX_BIT_CTRL_OUT5[103] = GND;
assign RX_BIT_CTRL_OUT5[104] = GND;
assign RX_BIT_CTRL_OUT5[105] = GND;
assign RX_BIT_CTRL_OUT5[106] = GND;
assign RX_BIT_CTRL_OUT5[107] = GND;
assign RX_BIT_CTRL_OUT5[108] = GND;
assign RX_BIT_CTRL_OUT5[109] = GND;
assign RX_BIT_CTRL_OUT5[110] = GND;
assign RX_BIT_CTRL_OUT5[111] = GND;
assign RX_BIT_CTRL_OUT5[112] = GND;
assign RX_BIT_CTRL_OUT5[113] = GND;
assign RX_BIT_CTRL_OUT5[114] = GND;
assign RX_BIT_CTRL_OUT5[115] = GND;
assign RX_BIT_CTRL_OUT5[116] = GND;
assign RX_BIT_CTRL_OUT5[117] = GND;
assign RX_BIT_CTRL_OUT5[118] = GND;
assign RX_BIT_CTRL_OUT5[119] = GND;
assign RX_BIT_CTRL_OUT5[160] = GND;
assign RX_BIT_CTRL_OUT5[161] = GND;
assign RX_BIT_CTRL_OUT5[162] = GND;
assign RX_BIT_CTRL_OUT5[163] = GND;
assign RX_BIT_CTRL_OUT5[164] = GND;
assign RX_BIT_CTRL_OUT5[165] = GND;
assign RX_BIT_CTRL_OUT5[166] = GND;
assign RX_BIT_CTRL_OUT5[167] = GND;
assign RX_BIT_CTRL_OUT5[168] = GND;
assign RX_BIT_CTRL_OUT5[169] = GND;
assign RX_BIT_CTRL_OUT5[170] = GND;
assign RX_BIT_CTRL_OUT5[171] = GND;
assign RX_BIT_CTRL_OUT5[172] = GND;
assign RX_BIT_CTRL_OUT5[173] = GND;
assign RX_BIT_CTRL_OUT5[174] = GND;
assign RX_BIT_CTRL_OUT5[175] = GND;
assign RX_BIT_CTRL_OUT5[176] = GND;
assign RX_BIT_CTRL_OUT5[177] = GND;
assign RX_BIT_CTRL_OUT5[178] = GND;
assign RX_BIT_CTRL_OUT5[179] = GND;
assign RX_BIT_CTRL_OUT5[180] = GND;
assign RX_BIT_CTRL_OUT5[181] = GND;
assign RX_BIT_CTRL_OUT5[182] = GND;
assign RX_BIT_CTRL_OUT5[183] = GND;
assign RX_BIT_CTRL_OUT5[184] = GND;
assign RX_BIT_CTRL_OUT5[185] = GND;
assign RX_BIT_CTRL_OUT5[186] = GND;
assign RX_BIT_CTRL_OUT5[187] = GND;
assign RX_BIT_CTRL_OUT5[188] = GND;
assign RX_BIT_CTRL_OUT5[189] = GND;
assign RX_BIT_CTRL_OUT5[190] = GND;
assign RX_BIT_CTRL_OUT5[191] = GND;
assign RX_BIT_CTRL_OUT5[192] = GND;
assign RX_BIT_CTRL_OUT5[193] = GND;
assign RX_BIT_CTRL_OUT5[194] = GND;
assign RX_BIT_CTRL_OUT5[195] = GND;
assign RX_BIT_CTRL_OUT5[196] = GND;
assign RX_BIT_CTRL_OUT5[197] = GND;
assign RX_BIT_CTRL_OUT5[198] = GND;
assign RX_BIT_CTRL_OUT5[199] = GND;
assign RX_BIT_CTRL_OUT5[200] = GND;
assign RX_BIT_CTRL_OUT5[201] = GND;
assign RX_BIT_CTRL_OUT5[202] = GND;
assign RX_BIT_CTRL_OUT5[203] = GND;
assign RX_BIT_CTRL_OUT5[204] = GND;
assign RX_BIT_CTRL_OUT5[205] = GND;
assign RX_BIT_CTRL_OUT5[206] = GND;
assign RX_BIT_CTRL_OUT5[207] = GND;
assign RX_BIT_CTRL_OUT5[208] = GND;
assign RX_BIT_CTRL_OUT5[209] = GND;
assign RX_BIT_CTRL_OUT5[210] = GND;
assign RX_BIT_CTRL_OUT5[211] = GND;
assign RX_BIT_CTRL_OUT5[212] = GND;
assign RX_BIT_CTRL_OUT5[213] = GND;
assign RX_BIT_CTRL_OUT5[214] = GND;
assign RX_BIT_CTRL_OUT5[215] = GND;
assign RX_BIT_CTRL_OUT5[216] = GND;
assign RX_BIT_CTRL_OUT5[217] = GND;
assign RX_BIT_CTRL_OUT5[218] = GND;
assign RX_BIT_CTRL_OUT5[219] = GND;
assign RX_BIT_CTRL_OUT5[220] = GND;
assign RX_BIT_CTRL_OUT5[221] = GND;
assign RX_BIT_CTRL_OUT5[222] = GND;
assign RX_BIT_CTRL_OUT5[223] = GND;
assign RX_BIT_CTRL_OUT5[224] = GND;
assign RX_BIT_CTRL_OUT5[225] = GND;
assign RX_BIT_CTRL_OUT5[226] = GND;
assign RX_BIT_CTRL_OUT5[227] = GND;
assign RX_BIT_CTRL_OUT5[228] = GND;
assign RX_BIT_CTRL_OUT5[229] = GND;
assign RX_BIT_CTRL_OUT5[230] = GND;
assign RX_BIT_CTRL_OUT5[231] = GND;
assign RX_BIT_CTRL_OUT5[232] = GND;
assign RX_BIT_CTRL_OUT5[233] = GND;
assign RX_BIT_CTRL_OUT5[234] = GND;
assign RX_BIT_CTRL_OUT5[235] = GND;
assign RX_BIT_CTRL_OUT5[236] = GND;
assign RX_BIT_CTRL_OUT5[237] = GND;
assign RX_BIT_CTRL_OUT5[238] = GND;
assign RX_BIT_CTRL_OUT5[239] = GND;
assign RX_BIT_CTRL_OUT5[240] = GND;
assign RX_BIT_CTRL_OUT5[241] = GND;
assign RX_BIT_CTRL_OUT5[242] = GND;
assign RX_BIT_CTRL_OUT5[243] = GND;
assign RX_BIT_CTRL_OUT5[244] = GND;
assign RX_BIT_CTRL_OUT5[245] = GND;
assign RX_BIT_CTRL_OUT5[246] = GND;
assign RX_BIT_CTRL_OUT5[247] = GND;
assign RX_BIT_CTRL_OUT5[248] = GND;
assign RX_BIT_CTRL_OUT5[249] = GND;
assign RX_BIT_CTRL_OUT5[250] = GND;
assign RX_BIT_CTRL_OUT5[251] = GND;
assign RX_BIT_CTRL_OUT5[252] = GND;
assign RX_BIT_CTRL_OUT5[253] = GND;
assign RX_BIT_CTRL_OUT5[254] = GND;
assign RX_BIT_CTRL_OUT5[255] = GND;
assign RX_BIT_CTRL_OUT5[256] = GND;
assign RX_BIT_CTRL_OUT5[257] = GND;
assign RX_BIT_CTRL_OUT5[258] = GND;
assign RX_BIT_CTRL_OUT5[259] = GND;
assign RX_BIT_CTRL_OUT5[260] = GND;
assign RX_BIT_CTRL_OUT5[261] = GND;
assign RX_BIT_CTRL_OUT5[262] = GND;
assign RX_BIT_CTRL_OUT5[263] = GND;
assign RX_BIT_CTRL_OUT5[264] = GND;
assign RX_BIT_CTRL_OUT5[265] = GND;
assign RX_BIT_CTRL_OUT5[266] = GND;
assign RX_BIT_CTRL_OUT5[267] = GND;
assign RX_BIT_CTRL_OUT5[268] = GND;
assign RX_BIT_CTRL_OUT5[269] = GND;
assign RX_BIT_CTRL_OUT5[270] = GND;
assign RX_BIT_CTRL_OUT5[271] = GND;
assign RX_BIT_CTRL_OUT5[272] = GND;
assign RX_BIT_CTRL_OUT5[273] = GND;
assign RX_BIT_CTRL_OUT5[274] = GND;
assign RX_BIT_CTRL_OUT5[275] = GND;
assign RX_BIT_CTRL_OUT5[276] = GND;
assign RX_BIT_CTRL_OUT5[277] = GND;
assign RX_BIT_CTRL_OUT5[278] = GND;
assign RX_BIT_CTRL_OUT5[279] = GND;
assign RX_BIT_CTRL_OUT5[280] = GND;
assign RX_BIT_CTRL_OUT5[281] = GND;
assign RX_BIT_CTRL_OUT5[282] = GND;
assign RX_BIT_CTRL_OUT5[283] = GND;
assign RX_BIT_CTRL_OUT5[284] = GND;
assign RX_BIT_CTRL_OUT5[285] = GND;
assign RX_BIT_CTRL_OUT5[286] = GND;
assign RX_BIT_CTRL_OUT5[287] = GND;
assign RX_BIT_CTRL_OUT5[288] = GND;
assign RX_BIT_CTRL_OUT5[289] = GND;
assign RX_BIT_CTRL_OUT5[290] = GND;
assign RX_BIT_CTRL_OUT5[291] = GND;
assign RX_BIT_CTRL_OUT5[292] = GND;
assign RX_BIT_CTRL_OUT5[293] = GND;
assign RX_BIT_CTRL_OUT5[294] = GND;
assign RX_BIT_CTRL_OUT5[295] = GND;
assign RX_BIT_CTRL_OUT5[296] = GND;
assign RX_BIT_CTRL_OUT5[297] = GND;
assign RX_BIT_CTRL_OUT5[298] = GND;
assign RX_BIT_CTRL_OUT5[299] = GND;
assign RX_BIT_CTRL_OUT5[300] = GND;
assign RX_BIT_CTRL_OUT5[301] = GND;
assign RX_BIT_CTRL_OUT5[302] = GND;
assign RX_BIT_CTRL_OUT5[303] = GND;
assign RX_BIT_CTRL_OUT5[304] = GND;
assign RX_BIT_CTRL_OUT5[305] = GND;
assign RX_BIT_CTRL_OUT5[306] = GND;
assign RX_BIT_CTRL_OUT5[307] = GND;
assign RX_BIT_CTRL_OUT5[308] = GND;
assign RX_BIT_CTRL_OUT5[309] = GND;
assign RX_BIT_CTRL_OUT5[310] = GND;
assign RX_BIT_CTRL_OUT5[311] = GND;
assign RX_BIT_CTRL_OUT5[312] = GND;
assign RX_BIT_CTRL_OUT5[313] = GND;
assign RX_BIT_CTRL_OUT5[314] = GND;
assign RX_BIT_CTRL_OUT5[315] = GND;
assign RX_BIT_CTRL_OUT5[316] = GND;
assign RX_BIT_CTRL_OUT5[317] = GND;
assign RX_BIT_CTRL_OUT5[318] = GND;
assign RX_BIT_CTRL_OUT5[319] = GND;
assign RX_BIT_CTRL_OUT6[0] = GND;
assign RX_BIT_CTRL_OUT6[1] = GND;
assign RX_BIT_CTRL_OUT6[2] = GND;
assign RX_BIT_CTRL_OUT6[3] = GND;
assign RX_BIT_CTRL_OUT6[4] = GND;
assign RX_BIT_CTRL_OUT6[5] = GND;
assign RX_BIT_CTRL_OUT6[6] = GND;
assign RX_BIT_CTRL_OUT6[7] = GND;
assign RX_BIT_CTRL_OUT6[8] = GND;
assign RX_BIT_CTRL_OUT6[9] = GND;
assign RX_BIT_CTRL_OUT6[10] = GND;
assign RX_BIT_CTRL_OUT6[11] = GND;
assign RX_BIT_CTRL_OUT6[12] = GND;
assign RX_BIT_CTRL_OUT6[13] = GND;
assign RX_BIT_CTRL_OUT6[14] = GND;
assign RX_BIT_CTRL_OUT6[15] = GND;
assign RX_BIT_CTRL_OUT6[16] = GND;
assign RX_BIT_CTRL_OUT6[17] = GND;
assign RX_BIT_CTRL_OUT6[18] = GND;
assign RX_BIT_CTRL_OUT6[19] = GND;
assign RX_BIT_CTRL_OUT6[20] = GND;
assign RX_BIT_CTRL_OUT6[21] = GND;
assign RX_BIT_CTRL_OUT6[22] = GND;
assign RX_BIT_CTRL_OUT6[23] = GND;
assign RX_BIT_CTRL_OUT6[24] = GND;
assign RX_BIT_CTRL_OUT6[25] = GND;
assign RX_BIT_CTRL_OUT6[26] = GND;
assign RX_BIT_CTRL_OUT6[27] = GND;
assign RX_BIT_CTRL_OUT6[28] = GND;
assign RX_BIT_CTRL_OUT6[29] = GND;
assign RX_BIT_CTRL_OUT6[30] = GND;
assign RX_BIT_CTRL_OUT6[31] = GND;
assign RX_BIT_CTRL_OUT6[32] = GND;
assign RX_BIT_CTRL_OUT6[33] = GND;
assign RX_BIT_CTRL_OUT6[34] = GND;
assign RX_BIT_CTRL_OUT6[35] = GND;
assign RX_BIT_CTRL_OUT6[36] = GND;
assign RX_BIT_CTRL_OUT6[37] = GND;
assign RX_BIT_CTRL_OUT6[38] = GND;
assign RX_BIT_CTRL_OUT6[39] = GND;
assign RX_BIT_CTRL_OUT6[40] = GND;
assign RX_BIT_CTRL_OUT6[41] = GND;
assign RX_BIT_CTRL_OUT6[42] = GND;
assign RX_BIT_CTRL_OUT6[43] = GND;
assign RX_BIT_CTRL_OUT6[44] = GND;
assign RX_BIT_CTRL_OUT6[45] = GND;
assign RX_BIT_CTRL_OUT6[46] = GND;
assign RX_BIT_CTRL_OUT6[47] = GND;
assign RX_BIT_CTRL_OUT6[48] = GND;
assign RX_BIT_CTRL_OUT6[49] = GND;
assign RX_BIT_CTRL_OUT6[50] = GND;
assign RX_BIT_CTRL_OUT6[51] = GND;
assign RX_BIT_CTRL_OUT6[52] = GND;
assign RX_BIT_CTRL_OUT6[53] = GND;
assign RX_BIT_CTRL_OUT6[54] = GND;
assign RX_BIT_CTRL_OUT6[55] = GND;
assign RX_BIT_CTRL_OUT6[56] = GND;
assign RX_BIT_CTRL_OUT6[57] = GND;
assign RX_BIT_CTRL_OUT6[58] = GND;
assign RX_BIT_CTRL_OUT6[59] = GND;
assign RX_BIT_CTRL_OUT6[60] = GND;
assign RX_BIT_CTRL_OUT6[61] = GND;
assign RX_BIT_CTRL_OUT6[62] = GND;
assign RX_BIT_CTRL_OUT6[63] = GND;
assign RX_BIT_CTRL_OUT6[64] = GND;
assign RX_BIT_CTRL_OUT6[65] = GND;
assign RX_BIT_CTRL_OUT6[66] = GND;
assign RX_BIT_CTRL_OUT6[67] = GND;
assign RX_BIT_CTRL_OUT6[68] = GND;
assign RX_BIT_CTRL_OUT6[69] = GND;
assign RX_BIT_CTRL_OUT6[70] = GND;
assign RX_BIT_CTRL_OUT6[71] = GND;
assign RX_BIT_CTRL_OUT6[72] = GND;
assign RX_BIT_CTRL_OUT6[73] = GND;
assign RX_BIT_CTRL_OUT6[74] = GND;
assign RX_BIT_CTRL_OUT6[75] = GND;
assign RX_BIT_CTRL_OUT6[76] = GND;
assign RX_BIT_CTRL_OUT6[77] = GND;
assign RX_BIT_CTRL_OUT6[78] = GND;
assign RX_BIT_CTRL_OUT6[79] = GND;
assign RX_BIT_CTRL_OUT6[80] = GND;
assign RX_BIT_CTRL_OUT6[81] = GND;
assign RX_BIT_CTRL_OUT6[82] = GND;
assign RX_BIT_CTRL_OUT6[83] = GND;
assign RX_BIT_CTRL_OUT6[84] = GND;
assign RX_BIT_CTRL_OUT6[85] = GND;
assign RX_BIT_CTRL_OUT6[86] = GND;
assign RX_BIT_CTRL_OUT6[87] = GND;
assign RX_BIT_CTRL_OUT6[88] = GND;
assign RX_BIT_CTRL_OUT6[89] = GND;
assign RX_BIT_CTRL_OUT6[90] = GND;
assign RX_BIT_CTRL_OUT6[91] = GND;
assign RX_BIT_CTRL_OUT6[92] = GND;
assign RX_BIT_CTRL_OUT6[93] = GND;
assign RX_BIT_CTRL_OUT6[94] = GND;
assign RX_BIT_CTRL_OUT6[95] = GND;
assign RX_BIT_CTRL_OUT6[96] = GND;
assign RX_BIT_CTRL_OUT6[97] = GND;
assign RX_BIT_CTRL_OUT6[98] = GND;
assign RX_BIT_CTRL_OUT6[99] = GND;
assign RX_BIT_CTRL_OUT6[100] = GND;
assign RX_BIT_CTRL_OUT6[101] = GND;
assign RX_BIT_CTRL_OUT6[102] = GND;
assign RX_BIT_CTRL_OUT6[103] = GND;
assign RX_BIT_CTRL_OUT6[104] = GND;
assign RX_BIT_CTRL_OUT6[105] = GND;
assign RX_BIT_CTRL_OUT6[106] = GND;
assign RX_BIT_CTRL_OUT6[107] = GND;
assign RX_BIT_CTRL_OUT6[108] = GND;
assign RX_BIT_CTRL_OUT6[109] = GND;
assign RX_BIT_CTRL_OUT6[110] = GND;
assign RX_BIT_CTRL_OUT6[111] = GND;
assign RX_BIT_CTRL_OUT6[112] = GND;
assign RX_BIT_CTRL_OUT6[113] = GND;
assign RX_BIT_CTRL_OUT6[114] = GND;
assign RX_BIT_CTRL_OUT6[115] = GND;
assign RX_BIT_CTRL_OUT6[116] = GND;
assign RX_BIT_CTRL_OUT6[117] = GND;
assign RX_BIT_CTRL_OUT6[118] = GND;
assign RX_BIT_CTRL_OUT6[119] = GND;
assign RX_BIT_CTRL_OUT6[120] = GND;
assign RX_BIT_CTRL_OUT6[121] = GND;
assign RX_BIT_CTRL_OUT6[122] = GND;
assign RX_BIT_CTRL_OUT6[123] = GND;
assign RX_BIT_CTRL_OUT6[124] = GND;
assign RX_BIT_CTRL_OUT6[125] = GND;
assign RX_BIT_CTRL_OUT6[126] = GND;
assign RX_BIT_CTRL_OUT6[127] = GND;
assign RX_BIT_CTRL_OUT6[128] = GND;
assign RX_BIT_CTRL_OUT6[129] = GND;
assign RX_BIT_CTRL_OUT6[130] = GND;
assign RX_BIT_CTRL_OUT6[131] = GND;
assign RX_BIT_CTRL_OUT6[132] = GND;
assign RX_BIT_CTRL_OUT6[133] = GND;
assign RX_BIT_CTRL_OUT6[134] = GND;
assign RX_BIT_CTRL_OUT6[135] = GND;
assign RX_BIT_CTRL_OUT6[136] = GND;
assign RX_BIT_CTRL_OUT6[137] = GND;
assign RX_BIT_CTRL_OUT6[138] = GND;
assign RX_BIT_CTRL_OUT6[139] = GND;
assign RX_BIT_CTRL_OUT6[140] = GND;
assign RX_BIT_CTRL_OUT6[141] = GND;
assign RX_BIT_CTRL_OUT6[142] = GND;
assign RX_BIT_CTRL_OUT6[143] = GND;
assign RX_BIT_CTRL_OUT6[144] = GND;
assign RX_BIT_CTRL_OUT6[145] = GND;
assign RX_BIT_CTRL_OUT6[146] = GND;
assign RX_BIT_CTRL_OUT6[147] = GND;
assign RX_BIT_CTRL_OUT6[148] = GND;
assign RX_BIT_CTRL_OUT6[149] = GND;
assign RX_BIT_CTRL_OUT6[150] = GND;
assign RX_BIT_CTRL_OUT6[151] = GND;
assign RX_BIT_CTRL_OUT6[152] = GND;
assign RX_BIT_CTRL_OUT6[153] = GND;
assign RX_BIT_CTRL_OUT6[154] = GND;
assign RX_BIT_CTRL_OUT6[155] = GND;
assign RX_BIT_CTRL_OUT6[156] = GND;
assign RX_BIT_CTRL_OUT6[157] = GND;
assign RX_BIT_CTRL_OUT6[158] = GND;
assign RX_BIT_CTRL_OUT6[159] = GND;
assign RX_BIT_CTRL_OUT6[160] = GND;
assign RX_BIT_CTRL_OUT6[161] = GND;
assign RX_BIT_CTRL_OUT6[162] = GND;
assign RX_BIT_CTRL_OUT6[163] = GND;
assign RX_BIT_CTRL_OUT6[164] = GND;
assign RX_BIT_CTRL_OUT6[165] = GND;
assign RX_BIT_CTRL_OUT6[166] = GND;
assign RX_BIT_CTRL_OUT6[167] = GND;
assign RX_BIT_CTRL_OUT6[168] = GND;
assign RX_BIT_CTRL_OUT6[169] = GND;
assign RX_BIT_CTRL_OUT6[170] = GND;
assign RX_BIT_CTRL_OUT6[171] = GND;
assign RX_BIT_CTRL_OUT6[172] = GND;
assign RX_BIT_CTRL_OUT6[173] = GND;
assign RX_BIT_CTRL_OUT6[174] = GND;
assign RX_BIT_CTRL_OUT6[175] = GND;
assign RX_BIT_CTRL_OUT6[176] = GND;
assign RX_BIT_CTRL_OUT6[177] = GND;
assign RX_BIT_CTRL_OUT6[178] = GND;
assign RX_BIT_CTRL_OUT6[179] = GND;
assign RX_BIT_CTRL_OUT6[180] = GND;
assign RX_BIT_CTRL_OUT6[181] = GND;
assign RX_BIT_CTRL_OUT6[182] = GND;
assign RX_BIT_CTRL_OUT6[183] = GND;
assign RX_BIT_CTRL_OUT6[184] = GND;
assign RX_BIT_CTRL_OUT6[185] = GND;
assign RX_BIT_CTRL_OUT6[186] = GND;
assign RX_BIT_CTRL_OUT6[187] = GND;
assign RX_BIT_CTRL_OUT6[188] = GND;
assign RX_BIT_CTRL_OUT6[189] = GND;
assign RX_BIT_CTRL_OUT6[190] = GND;
assign RX_BIT_CTRL_OUT6[191] = GND;
assign RX_BIT_CTRL_OUT6[192] = GND;
assign RX_BIT_CTRL_OUT6[193] = GND;
assign RX_BIT_CTRL_OUT6[194] = GND;
assign RX_BIT_CTRL_OUT6[195] = GND;
assign RX_BIT_CTRL_OUT6[196] = GND;
assign RX_BIT_CTRL_OUT6[197] = GND;
assign RX_BIT_CTRL_OUT6[198] = GND;
assign RX_BIT_CTRL_OUT6[199] = GND;
assign RX_BIT_CTRL_OUT6[200] = GND;
assign RX_BIT_CTRL_OUT6[201] = GND;
assign RX_BIT_CTRL_OUT6[202] = GND;
assign RX_BIT_CTRL_OUT6[203] = GND;
assign RX_BIT_CTRL_OUT6[204] = GND;
assign RX_BIT_CTRL_OUT6[205] = GND;
assign RX_BIT_CTRL_OUT6[206] = GND;
assign RX_BIT_CTRL_OUT6[207] = GND;
assign RX_BIT_CTRL_OUT6[208] = GND;
assign RX_BIT_CTRL_OUT6[209] = GND;
assign RX_BIT_CTRL_OUT6[210] = GND;
assign RX_BIT_CTRL_OUT6[211] = GND;
assign RX_BIT_CTRL_OUT6[212] = GND;
assign RX_BIT_CTRL_OUT6[213] = GND;
assign RX_BIT_CTRL_OUT6[214] = GND;
assign RX_BIT_CTRL_OUT6[215] = GND;
assign RX_BIT_CTRL_OUT6[216] = GND;
assign RX_BIT_CTRL_OUT6[217] = GND;
assign RX_BIT_CTRL_OUT6[218] = GND;
assign RX_BIT_CTRL_OUT6[219] = GND;
assign RX_BIT_CTRL_OUT6[220] = GND;
assign RX_BIT_CTRL_OUT6[221] = GND;
assign RX_BIT_CTRL_OUT6[222] = GND;
assign RX_BIT_CTRL_OUT6[223] = GND;
assign RX_BIT_CTRL_OUT6[224] = GND;
assign RX_BIT_CTRL_OUT6[225] = GND;
assign RX_BIT_CTRL_OUT6[226] = GND;
assign RX_BIT_CTRL_OUT6[227] = GND;
assign RX_BIT_CTRL_OUT6[228] = GND;
assign RX_BIT_CTRL_OUT6[229] = GND;
assign RX_BIT_CTRL_OUT6[230] = GND;
assign RX_BIT_CTRL_OUT6[231] = GND;
assign RX_BIT_CTRL_OUT6[232] = GND;
assign RX_BIT_CTRL_OUT6[233] = GND;
assign RX_BIT_CTRL_OUT6[234] = GND;
assign RX_BIT_CTRL_OUT6[235] = GND;
assign RX_BIT_CTRL_OUT6[236] = GND;
assign RX_BIT_CTRL_OUT6[237] = GND;
assign RX_BIT_CTRL_OUT6[238] = GND;
assign RX_BIT_CTRL_OUT6[239] = GND;
assign RX_BIT_CTRL_OUT6[240] = GND;
assign RX_BIT_CTRL_OUT6[241] = GND;
assign RX_BIT_CTRL_OUT6[242] = GND;
assign RX_BIT_CTRL_OUT6[243] = GND;
assign RX_BIT_CTRL_OUT6[244] = GND;
assign RX_BIT_CTRL_OUT6[245] = GND;
assign RX_BIT_CTRL_OUT6[246] = GND;
assign RX_BIT_CTRL_OUT6[247] = GND;
assign RX_BIT_CTRL_OUT6[248] = GND;
assign RX_BIT_CTRL_OUT6[249] = GND;
assign RX_BIT_CTRL_OUT6[250] = GND;
assign RX_BIT_CTRL_OUT6[251] = GND;
assign RX_BIT_CTRL_OUT6[252] = GND;
assign RX_BIT_CTRL_OUT6[253] = GND;
assign RX_BIT_CTRL_OUT6[254] = GND;
assign RX_BIT_CTRL_OUT6[255] = GND;
assign RX_BIT_CTRL_OUT6[256] = GND;
assign RX_BIT_CTRL_OUT6[257] = GND;
assign RX_BIT_CTRL_OUT6[258] = GND;
assign RX_BIT_CTRL_OUT6[259] = GND;
assign RX_BIT_CTRL_OUT6[260] = GND;
assign RX_BIT_CTRL_OUT6[261] = GND;
assign RX_BIT_CTRL_OUT6[262] = GND;
assign RX_BIT_CTRL_OUT6[263] = GND;
assign RX_BIT_CTRL_OUT6[264] = GND;
assign RX_BIT_CTRL_OUT6[265] = GND;
assign RX_BIT_CTRL_OUT6[266] = GND;
assign RX_BIT_CTRL_OUT6[267] = GND;
assign RX_BIT_CTRL_OUT6[268] = GND;
assign RX_BIT_CTRL_OUT6[269] = GND;
assign RX_BIT_CTRL_OUT6[270] = GND;
assign RX_BIT_CTRL_OUT6[271] = GND;
assign RX_BIT_CTRL_OUT6[272] = GND;
assign RX_BIT_CTRL_OUT6[273] = GND;
assign RX_BIT_CTRL_OUT6[274] = GND;
assign RX_BIT_CTRL_OUT6[275] = GND;
assign RX_BIT_CTRL_OUT6[276] = GND;
assign RX_BIT_CTRL_OUT6[277] = GND;
assign RX_BIT_CTRL_OUT6[278] = GND;
assign RX_BIT_CTRL_OUT6[279] = GND;
assign RX_BIT_CTRL_OUT6[280] = GND;
assign RX_BIT_CTRL_OUT6[281] = GND;
assign RX_BIT_CTRL_OUT6[282] = GND;
assign RX_BIT_CTRL_OUT6[283] = GND;
assign RX_BIT_CTRL_OUT6[284] = GND;
assign RX_BIT_CTRL_OUT6[285] = GND;
assign RX_BIT_CTRL_OUT6[286] = GND;
assign RX_BIT_CTRL_OUT6[287] = GND;
assign RX_BIT_CTRL_OUT6[288] = GND;
assign RX_BIT_CTRL_OUT6[289] = GND;
assign RX_BIT_CTRL_OUT6[290] = GND;
assign RX_BIT_CTRL_OUT6[291] = GND;
assign RX_BIT_CTRL_OUT6[292] = GND;
assign RX_BIT_CTRL_OUT6[293] = GND;
assign RX_BIT_CTRL_OUT6[294] = GND;
assign RX_BIT_CTRL_OUT6[295] = GND;
assign RX_BIT_CTRL_OUT6[296] = GND;
assign RX_BIT_CTRL_OUT6[297] = GND;
assign RX_BIT_CTRL_OUT6[298] = GND;
assign RX_BIT_CTRL_OUT6[299] = GND;
assign RX_BIT_CTRL_OUT6[300] = GND;
assign RX_BIT_CTRL_OUT6[301] = GND;
assign RX_BIT_CTRL_OUT6[302] = GND;
assign RX_BIT_CTRL_OUT6[303] = GND;
assign RX_BIT_CTRL_OUT6[304] = GND;
assign RX_BIT_CTRL_OUT6[305] = GND;
assign RX_BIT_CTRL_OUT6[306] = GND;
assign RX_BIT_CTRL_OUT6[307] = GND;
assign RX_BIT_CTRL_OUT6[308] = GND;
assign RX_BIT_CTRL_OUT6[309] = GND;
assign RX_BIT_CTRL_OUT6[310] = GND;
assign RX_BIT_CTRL_OUT6[311] = GND;
assign RX_BIT_CTRL_OUT6[312] = GND;
assign RX_BIT_CTRL_OUT6[313] = GND;
assign RX_BIT_CTRL_OUT6[314] = GND;
assign RX_BIT_CTRL_OUT6[315] = GND;
assign RX_BIT_CTRL_OUT6[316] = GND;
assign RX_BIT_CTRL_OUT6[317] = GND;
assign RX_BIT_CTRL_OUT6[318] = GND;
assign RX_BIT_CTRL_OUT6[319] = GND;
assign TX_BIT_CTRL_OUT0[0] = GND;
assign TX_BIT_CTRL_OUT0[1] = GND;
assign TX_BIT_CTRL_OUT0[2] = GND;
assign TX_BIT_CTRL_OUT0[3] = GND;
assign TX_BIT_CTRL_OUT0[4] = GND;
assign TX_BIT_CTRL_OUT0[5] = GND;
assign TX_BIT_CTRL_OUT0[6] = GND;
assign TX_BIT_CTRL_OUT0[7] = GND;
assign TX_BIT_CTRL_OUT0[8] = GND;
assign TX_BIT_CTRL_OUT0[9] = GND;
assign TX_BIT_CTRL_OUT0[10] = GND;
assign TX_BIT_CTRL_OUT0[11] = GND;
assign TX_BIT_CTRL_OUT0[12] = GND;
assign TX_BIT_CTRL_OUT0[13] = GND;
assign TX_BIT_CTRL_OUT0[14] = GND;
assign TX_BIT_CTRL_OUT0[15] = GND;
assign TX_BIT_CTRL_OUT0[16] = GND;
assign TX_BIT_CTRL_OUT0[17] = GND;
assign TX_BIT_CTRL_OUT0[18] = GND;
assign TX_BIT_CTRL_OUT0[19] = GND;
assign TX_BIT_CTRL_OUT0[20] = GND;
assign TX_BIT_CTRL_OUT0[21] = GND;
assign TX_BIT_CTRL_OUT0[22] = GND;
assign TX_BIT_CTRL_OUT0[23] = GND;
assign TX_BIT_CTRL_OUT0[24] = GND;
assign TX_BIT_CTRL_OUT0[25] = GND;
assign TX_BIT_CTRL_OUT0[26] = GND;
assign TX_BIT_CTRL_OUT0[27] = GND;
assign TX_BIT_CTRL_OUT0[28] = GND;
assign TX_BIT_CTRL_OUT0[29] = GND;
assign TX_BIT_CTRL_OUT0[30] = GND;
assign TX_BIT_CTRL_OUT0[31] = GND;
assign TX_BIT_CTRL_OUT0[32] = GND;
assign TX_BIT_CTRL_OUT0[33] = GND;
assign TX_BIT_CTRL_OUT0[34] = GND;
assign TX_BIT_CTRL_OUT0[35] = GND;
assign TX_BIT_CTRL_OUT0[36] = GND;
assign TX_BIT_CTRL_OUT0[37] = GND;
assign TX_BIT_CTRL_OUT0[38] = GND;
assign TX_BIT_CTRL_OUT0[39] = GND;
assign TX_BIT_CTRL_OUT0[40] = GND;
assign TX_BIT_CTRL_OUT0[41] = GND;
assign TX_BIT_CTRL_OUT0[42] = GND;
assign TX_BIT_CTRL_OUT0[43] = GND;
assign TX_BIT_CTRL_OUT0[44] = GND;
assign TX_BIT_CTRL_OUT0[45] = GND;
assign TX_BIT_CTRL_OUT0[46] = GND;
assign TX_BIT_CTRL_OUT0[47] = GND;
assign TX_BIT_CTRL_OUT0[48] = GND;
assign TX_BIT_CTRL_OUT0[49] = GND;
assign TX_BIT_CTRL_OUT0[50] = GND;
assign TX_BIT_CTRL_OUT0[51] = GND;
assign TX_BIT_CTRL_OUT0[52] = GND;
assign TX_BIT_CTRL_OUT0[53] = GND;
assign TX_BIT_CTRL_OUT0[54] = GND;
assign TX_BIT_CTRL_OUT0[55] = GND;
assign TX_BIT_CTRL_OUT0[56] = GND;
assign TX_BIT_CTRL_OUT0[57] = GND;
assign TX_BIT_CTRL_OUT0[58] = GND;
assign TX_BIT_CTRL_OUT0[59] = GND;
assign TX_BIT_CTRL_OUT0[60] = GND;
assign TX_BIT_CTRL_OUT0[61] = GND;
assign TX_BIT_CTRL_OUT0[62] = GND;
assign TX_BIT_CTRL_OUT0[63] = GND;
assign TX_BIT_CTRL_OUT0[64] = GND;
assign TX_BIT_CTRL_OUT0[65] = GND;
assign TX_BIT_CTRL_OUT0[66] = GND;
assign TX_BIT_CTRL_OUT0[67] = GND;
assign TX_BIT_CTRL_OUT0[68] = GND;
assign TX_BIT_CTRL_OUT0[69] = GND;
assign TX_BIT_CTRL_OUT0[70] = GND;
assign TX_BIT_CTRL_OUT0[71] = GND;
assign TX_BIT_CTRL_OUT0[72] = GND;
assign TX_BIT_CTRL_OUT0[73] = GND;
assign TX_BIT_CTRL_OUT0[74] = GND;
assign TX_BIT_CTRL_OUT0[75] = GND;
assign TX_BIT_CTRL_OUT0[76] = GND;
assign TX_BIT_CTRL_OUT0[77] = GND;
assign TX_BIT_CTRL_OUT0[78] = GND;
assign TX_BIT_CTRL_OUT0[79] = GND;
assign TX_BIT_CTRL_OUT0[80] = GND;
assign TX_BIT_CTRL_OUT0[81] = GND;
assign TX_BIT_CTRL_OUT0[82] = GND;
assign TX_BIT_CTRL_OUT0[83] = GND;
assign TX_BIT_CTRL_OUT0[84] = GND;
assign TX_BIT_CTRL_OUT0[85] = GND;
assign TX_BIT_CTRL_OUT0[86] = GND;
assign TX_BIT_CTRL_OUT0[87] = GND;
assign TX_BIT_CTRL_OUT0[88] = GND;
assign TX_BIT_CTRL_OUT0[89] = GND;
assign TX_BIT_CTRL_OUT0[90] = GND;
assign TX_BIT_CTRL_OUT0[91] = GND;
assign TX_BIT_CTRL_OUT0[92] = GND;
assign TX_BIT_CTRL_OUT0[93] = GND;
assign TX_BIT_CTRL_OUT0[94] = GND;
assign TX_BIT_CTRL_OUT0[95] = GND;
assign TX_BIT_CTRL_OUT0[96] = GND;
assign TX_BIT_CTRL_OUT0[97] = GND;
assign TX_BIT_CTRL_OUT0[98] = GND;
assign TX_BIT_CTRL_OUT0[99] = GND;
assign TX_BIT_CTRL_OUT0[100] = GND;
assign TX_BIT_CTRL_OUT0[101] = GND;
assign TX_BIT_CTRL_OUT0[102] = GND;
assign TX_BIT_CTRL_OUT0[103] = GND;
assign TX_BIT_CTRL_OUT0[104] = GND;
assign TX_BIT_CTRL_OUT0[105] = GND;
assign TX_BIT_CTRL_OUT0[106] = GND;
assign TX_BIT_CTRL_OUT0[107] = GND;
assign TX_BIT_CTRL_OUT0[108] = GND;
assign TX_BIT_CTRL_OUT0[109] = GND;
assign TX_BIT_CTRL_OUT0[110] = GND;
assign TX_BIT_CTRL_OUT0[111] = GND;
assign TX_BIT_CTRL_OUT0[112] = GND;
assign TX_BIT_CTRL_OUT0[113] = GND;
assign TX_BIT_CTRL_OUT0[114] = GND;
assign TX_BIT_CTRL_OUT0[115] = GND;
assign TX_BIT_CTRL_OUT0[116] = GND;
assign TX_BIT_CTRL_OUT0[117] = GND;
assign TX_BIT_CTRL_OUT0[118] = GND;
assign TX_BIT_CTRL_OUT0[119] = GND;
assign TX_BIT_CTRL_OUT0[160] = GND;
assign TX_BIT_CTRL_OUT0[161] = GND;
assign TX_BIT_CTRL_OUT0[162] = GND;
assign TX_BIT_CTRL_OUT0[163] = GND;
assign TX_BIT_CTRL_OUT0[164] = GND;
assign TX_BIT_CTRL_OUT0[165] = GND;
assign TX_BIT_CTRL_OUT0[166] = GND;
assign TX_BIT_CTRL_OUT0[167] = GND;
assign TX_BIT_CTRL_OUT0[168] = GND;
assign TX_BIT_CTRL_OUT0[169] = GND;
assign TX_BIT_CTRL_OUT0[170] = GND;
assign TX_BIT_CTRL_OUT0[171] = GND;
assign TX_BIT_CTRL_OUT0[172] = GND;
assign TX_BIT_CTRL_OUT0[173] = GND;
assign TX_BIT_CTRL_OUT0[174] = GND;
assign TX_BIT_CTRL_OUT0[175] = GND;
assign TX_BIT_CTRL_OUT0[176] = GND;
assign TX_BIT_CTRL_OUT0[177] = GND;
assign TX_BIT_CTRL_OUT0[178] = GND;
assign TX_BIT_CTRL_OUT0[179] = GND;
assign TX_BIT_CTRL_OUT0[180] = GND;
assign TX_BIT_CTRL_OUT0[181] = GND;
assign TX_BIT_CTRL_OUT0[182] = GND;
assign TX_BIT_CTRL_OUT0[183] = GND;
assign TX_BIT_CTRL_OUT0[184] = GND;
assign TX_BIT_CTRL_OUT0[185] = GND;
assign TX_BIT_CTRL_OUT0[186] = GND;
assign TX_BIT_CTRL_OUT0[187] = GND;
assign TX_BIT_CTRL_OUT0[188] = GND;
assign TX_BIT_CTRL_OUT0[189] = GND;
assign TX_BIT_CTRL_OUT0[190] = GND;
assign TX_BIT_CTRL_OUT0[191] = GND;
assign TX_BIT_CTRL_OUT0[192] = GND;
assign TX_BIT_CTRL_OUT0[193] = GND;
assign TX_BIT_CTRL_OUT0[194] = GND;
assign TX_BIT_CTRL_OUT0[195] = GND;
assign TX_BIT_CTRL_OUT0[196] = GND;
assign TX_BIT_CTRL_OUT0[197] = GND;
assign TX_BIT_CTRL_OUT0[198] = GND;
assign TX_BIT_CTRL_OUT0[199] = GND;
assign TX_BIT_CTRL_OUT0[200] = GND;
assign TX_BIT_CTRL_OUT0[201] = GND;
assign TX_BIT_CTRL_OUT0[202] = GND;
assign TX_BIT_CTRL_OUT0[203] = GND;
assign TX_BIT_CTRL_OUT0[204] = GND;
assign TX_BIT_CTRL_OUT0[205] = GND;
assign TX_BIT_CTRL_OUT0[206] = GND;
assign TX_BIT_CTRL_OUT0[207] = GND;
assign TX_BIT_CTRL_OUT0[208] = GND;
assign TX_BIT_CTRL_OUT0[209] = GND;
assign TX_BIT_CTRL_OUT0[210] = GND;
assign TX_BIT_CTRL_OUT0[211] = GND;
assign TX_BIT_CTRL_OUT0[212] = GND;
assign TX_BIT_CTRL_OUT0[213] = GND;
assign TX_BIT_CTRL_OUT0[214] = GND;
assign TX_BIT_CTRL_OUT0[215] = GND;
assign TX_BIT_CTRL_OUT0[216] = GND;
assign TX_BIT_CTRL_OUT0[217] = GND;
assign TX_BIT_CTRL_OUT0[218] = GND;
assign TX_BIT_CTRL_OUT0[219] = GND;
assign TX_BIT_CTRL_OUT0[220] = GND;
assign TX_BIT_CTRL_OUT0[221] = GND;
assign TX_BIT_CTRL_OUT0[222] = GND;
assign TX_BIT_CTRL_OUT0[223] = GND;
assign TX_BIT_CTRL_OUT0[224] = GND;
assign TX_BIT_CTRL_OUT0[225] = GND;
assign TX_BIT_CTRL_OUT0[226] = GND;
assign TX_BIT_CTRL_OUT0[227] = GND;
assign TX_BIT_CTRL_OUT0[228] = GND;
assign TX_BIT_CTRL_OUT0[229] = GND;
assign TX_BIT_CTRL_OUT0[230] = GND;
assign TX_BIT_CTRL_OUT0[231] = GND;
assign TX_BIT_CTRL_OUT0[232] = GND;
assign TX_BIT_CTRL_OUT0[233] = GND;
assign TX_BIT_CTRL_OUT0[234] = GND;
assign TX_BIT_CTRL_OUT0[235] = GND;
assign TX_BIT_CTRL_OUT0[236] = GND;
assign TX_BIT_CTRL_OUT0[237] = GND;
assign TX_BIT_CTRL_OUT0[238] = GND;
assign TX_BIT_CTRL_OUT0[239] = GND;
assign TX_BIT_CTRL_OUT0[240] = GND;
assign TX_BIT_CTRL_OUT0[241] = GND;
assign TX_BIT_CTRL_OUT0[242] = GND;
assign TX_BIT_CTRL_OUT0[243] = GND;
assign TX_BIT_CTRL_OUT0[244] = GND;
assign TX_BIT_CTRL_OUT0[245] = GND;
assign TX_BIT_CTRL_OUT0[246] = GND;
assign TX_BIT_CTRL_OUT0[247] = GND;
assign TX_BIT_CTRL_OUT0[248] = GND;
assign TX_BIT_CTRL_OUT0[249] = GND;
assign TX_BIT_CTRL_OUT0[250] = GND;
assign TX_BIT_CTRL_OUT0[251] = GND;
assign TX_BIT_CTRL_OUT0[252] = GND;
assign TX_BIT_CTRL_OUT0[253] = GND;
assign TX_BIT_CTRL_OUT0[254] = GND;
assign TX_BIT_CTRL_OUT0[255] = GND;
assign TX_BIT_CTRL_OUT0[256] = GND;
assign TX_BIT_CTRL_OUT0[257] = GND;
assign TX_BIT_CTRL_OUT0[258] = GND;
assign TX_BIT_CTRL_OUT0[259] = GND;
assign TX_BIT_CTRL_OUT0[260] = GND;
assign TX_BIT_CTRL_OUT0[261] = GND;
assign TX_BIT_CTRL_OUT0[262] = GND;
assign TX_BIT_CTRL_OUT0[263] = GND;
assign TX_BIT_CTRL_OUT0[264] = GND;
assign TX_BIT_CTRL_OUT0[265] = GND;
assign TX_BIT_CTRL_OUT0[266] = GND;
assign TX_BIT_CTRL_OUT0[267] = GND;
assign TX_BIT_CTRL_OUT0[268] = GND;
assign TX_BIT_CTRL_OUT0[269] = GND;
assign TX_BIT_CTRL_OUT0[270] = GND;
assign TX_BIT_CTRL_OUT0[271] = GND;
assign TX_BIT_CTRL_OUT0[272] = GND;
assign TX_BIT_CTRL_OUT0[273] = GND;
assign TX_BIT_CTRL_OUT0[274] = GND;
assign TX_BIT_CTRL_OUT0[275] = GND;
assign TX_BIT_CTRL_OUT0[276] = GND;
assign TX_BIT_CTRL_OUT0[277] = GND;
assign TX_BIT_CTRL_OUT0[278] = GND;
assign TX_BIT_CTRL_OUT0[279] = GND;
assign TX_BIT_CTRL_OUT0[280] = GND;
assign TX_BIT_CTRL_OUT0[281] = GND;
assign TX_BIT_CTRL_OUT0[282] = GND;
assign TX_BIT_CTRL_OUT0[283] = GND;
assign TX_BIT_CTRL_OUT0[284] = GND;
assign TX_BIT_CTRL_OUT0[285] = GND;
assign TX_BIT_CTRL_OUT0[286] = GND;
assign TX_BIT_CTRL_OUT0[287] = GND;
assign TX_BIT_CTRL_OUT0[288] = GND;
assign TX_BIT_CTRL_OUT0[289] = GND;
assign TX_BIT_CTRL_OUT0[290] = GND;
assign TX_BIT_CTRL_OUT0[291] = GND;
assign TX_BIT_CTRL_OUT0[292] = GND;
assign TX_BIT_CTRL_OUT0[293] = GND;
assign TX_BIT_CTRL_OUT0[294] = GND;
assign TX_BIT_CTRL_OUT0[295] = GND;
assign TX_BIT_CTRL_OUT0[296] = GND;
assign TX_BIT_CTRL_OUT0[297] = GND;
assign TX_BIT_CTRL_OUT0[298] = GND;
assign TX_BIT_CTRL_OUT0[299] = GND;
assign TX_BIT_CTRL_OUT0[300] = GND;
assign TX_BIT_CTRL_OUT0[301] = GND;
assign TX_BIT_CTRL_OUT0[302] = GND;
assign TX_BIT_CTRL_OUT0[303] = GND;
assign TX_BIT_CTRL_OUT0[304] = GND;
assign TX_BIT_CTRL_OUT0[305] = GND;
assign TX_BIT_CTRL_OUT0[306] = GND;
assign TX_BIT_CTRL_OUT0[307] = GND;
assign TX_BIT_CTRL_OUT0[308] = GND;
assign TX_BIT_CTRL_OUT0[309] = GND;
assign TX_BIT_CTRL_OUT0[310] = GND;
assign TX_BIT_CTRL_OUT0[311] = GND;
assign TX_BIT_CTRL_OUT0[312] = GND;
assign TX_BIT_CTRL_OUT0[313] = GND;
assign TX_BIT_CTRL_OUT0[314] = GND;
assign TX_BIT_CTRL_OUT0[315] = GND;
assign TX_BIT_CTRL_OUT0[316] = GND;
assign TX_BIT_CTRL_OUT0[317] = GND;
assign TX_BIT_CTRL_OUT0[318] = GND;
assign TX_BIT_CTRL_OUT0[319] = GND;
assign TX_BIT_CTRL_OUT1[0] = GND;
assign TX_BIT_CTRL_OUT1[1] = GND;
assign TX_BIT_CTRL_OUT1[2] = GND;
assign TX_BIT_CTRL_OUT1[3] = GND;
assign TX_BIT_CTRL_OUT1[4] = GND;
assign TX_BIT_CTRL_OUT1[5] = GND;
assign TX_BIT_CTRL_OUT1[6] = GND;
assign TX_BIT_CTRL_OUT1[7] = GND;
assign TX_BIT_CTRL_OUT1[8] = GND;
assign TX_BIT_CTRL_OUT1[9] = GND;
assign TX_BIT_CTRL_OUT1[10] = GND;
assign TX_BIT_CTRL_OUT1[11] = GND;
assign TX_BIT_CTRL_OUT1[12] = GND;
assign TX_BIT_CTRL_OUT1[13] = GND;
assign TX_BIT_CTRL_OUT1[14] = GND;
assign TX_BIT_CTRL_OUT1[15] = GND;
assign TX_BIT_CTRL_OUT1[16] = GND;
assign TX_BIT_CTRL_OUT1[17] = GND;
assign TX_BIT_CTRL_OUT1[18] = GND;
assign TX_BIT_CTRL_OUT1[19] = GND;
assign TX_BIT_CTRL_OUT1[20] = GND;
assign TX_BIT_CTRL_OUT1[21] = GND;
assign TX_BIT_CTRL_OUT1[22] = GND;
assign TX_BIT_CTRL_OUT1[23] = GND;
assign TX_BIT_CTRL_OUT1[24] = GND;
assign TX_BIT_CTRL_OUT1[25] = GND;
assign TX_BIT_CTRL_OUT1[26] = GND;
assign TX_BIT_CTRL_OUT1[27] = GND;
assign TX_BIT_CTRL_OUT1[28] = GND;
assign TX_BIT_CTRL_OUT1[29] = GND;
assign TX_BIT_CTRL_OUT1[30] = GND;
assign TX_BIT_CTRL_OUT1[31] = GND;
assign TX_BIT_CTRL_OUT1[32] = GND;
assign TX_BIT_CTRL_OUT1[33] = GND;
assign TX_BIT_CTRL_OUT1[34] = GND;
assign TX_BIT_CTRL_OUT1[35] = GND;
assign TX_BIT_CTRL_OUT1[36] = GND;
assign TX_BIT_CTRL_OUT1[37] = GND;
assign TX_BIT_CTRL_OUT1[38] = GND;
assign TX_BIT_CTRL_OUT1[39] = GND;
assign TX_BIT_CTRL_OUT1[40] = GND;
assign TX_BIT_CTRL_OUT1[41] = GND;
assign TX_BIT_CTRL_OUT1[42] = GND;
assign TX_BIT_CTRL_OUT1[43] = GND;
assign TX_BIT_CTRL_OUT1[44] = GND;
assign TX_BIT_CTRL_OUT1[45] = GND;
assign TX_BIT_CTRL_OUT1[46] = GND;
assign TX_BIT_CTRL_OUT1[47] = GND;
assign TX_BIT_CTRL_OUT1[48] = GND;
assign TX_BIT_CTRL_OUT1[49] = GND;
assign TX_BIT_CTRL_OUT1[50] = GND;
assign TX_BIT_CTRL_OUT1[51] = GND;
assign TX_BIT_CTRL_OUT1[52] = GND;
assign TX_BIT_CTRL_OUT1[53] = GND;
assign TX_BIT_CTRL_OUT1[54] = GND;
assign TX_BIT_CTRL_OUT1[55] = GND;
assign TX_BIT_CTRL_OUT1[56] = GND;
assign TX_BIT_CTRL_OUT1[57] = GND;
assign TX_BIT_CTRL_OUT1[58] = GND;
assign TX_BIT_CTRL_OUT1[59] = GND;
assign TX_BIT_CTRL_OUT1[60] = GND;
assign TX_BIT_CTRL_OUT1[61] = GND;
assign TX_BIT_CTRL_OUT1[62] = GND;
assign TX_BIT_CTRL_OUT1[63] = GND;
assign TX_BIT_CTRL_OUT1[64] = GND;
assign TX_BIT_CTRL_OUT1[65] = GND;
assign TX_BIT_CTRL_OUT1[66] = GND;
assign TX_BIT_CTRL_OUT1[67] = GND;
assign TX_BIT_CTRL_OUT1[68] = GND;
assign TX_BIT_CTRL_OUT1[69] = GND;
assign TX_BIT_CTRL_OUT1[70] = GND;
assign TX_BIT_CTRL_OUT1[71] = GND;
assign TX_BIT_CTRL_OUT1[72] = GND;
assign TX_BIT_CTRL_OUT1[73] = GND;
assign TX_BIT_CTRL_OUT1[74] = GND;
assign TX_BIT_CTRL_OUT1[75] = GND;
assign TX_BIT_CTRL_OUT1[76] = GND;
assign TX_BIT_CTRL_OUT1[77] = GND;
assign TX_BIT_CTRL_OUT1[78] = GND;
assign TX_BIT_CTRL_OUT1[79] = GND;
assign TX_BIT_CTRL_OUT1[80] = GND;
assign TX_BIT_CTRL_OUT1[81] = GND;
assign TX_BIT_CTRL_OUT1[82] = GND;
assign TX_BIT_CTRL_OUT1[83] = GND;
assign TX_BIT_CTRL_OUT1[84] = GND;
assign TX_BIT_CTRL_OUT1[85] = GND;
assign TX_BIT_CTRL_OUT1[86] = GND;
assign TX_BIT_CTRL_OUT1[87] = GND;
assign TX_BIT_CTRL_OUT1[88] = GND;
assign TX_BIT_CTRL_OUT1[89] = GND;
assign TX_BIT_CTRL_OUT1[90] = GND;
assign TX_BIT_CTRL_OUT1[91] = GND;
assign TX_BIT_CTRL_OUT1[92] = GND;
assign TX_BIT_CTRL_OUT1[93] = GND;
assign TX_BIT_CTRL_OUT1[94] = GND;
assign TX_BIT_CTRL_OUT1[95] = GND;
assign TX_BIT_CTRL_OUT1[96] = GND;
assign TX_BIT_CTRL_OUT1[97] = GND;
assign TX_BIT_CTRL_OUT1[98] = GND;
assign TX_BIT_CTRL_OUT1[99] = GND;
assign TX_BIT_CTRL_OUT1[100] = GND;
assign TX_BIT_CTRL_OUT1[101] = GND;
assign TX_BIT_CTRL_OUT1[102] = GND;
assign TX_BIT_CTRL_OUT1[103] = GND;
assign TX_BIT_CTRL_OUT1[104] = GND;
assign TX_BIT_CTRL_OUT1[105] = GND;
assign TX_BIT_CTRL_OUT1[106] = GND;
assign TX_BIT_CTRL_OUT1[107] = GND;
assign TX_BIT_CTRL_OUT1[108] = GND;
assign TX_BIT_CTRL_OUT1[109] = GND;
assign TX_BIT_CTRL_OUT1[110] = GND;
assign TX_BIT_CTRL_OUT1[111] = GND;
assign TX_BIT_CTRL_OUT1[112] = GND;
assign TX_BIT_CTRL_OUT1[113] = GND;
assign TX_BIT_CTRL_OUT1[114] = GND;
assign TX_BIT_CTRL_OUT1[115] = GND;
assign TX_BIT_CTRL_OUT1[116] = GND;
assign TX_BIT_CTRL_OUT1[117] = GND;
assign TX_BIT_CTRL_OUT1[118] = GND;
assign TX_BIT_CTRL_OUT1[119] = GND;
assign TX_BIT_CTRL_OUT1[120] = GND;
assign TX_BIT_CTRL_OUT1[121] = GND;
assign TX_BIT_CTRL_OUT1[122] = GND;
assign TX_BIT_CTRL_OUT1[123] = GND;
assign TX_BIT_CTRL_OUT1[124] = GND;
assign TX_BIT_CTRL_OUT1[125] = GND;
assign TX_BIT_CTRL_OUT1[126] = GND;
assign TX_BIT_CTRL_OUT1[127] = GND;
assign TX_BIT_CTRL_OUT1[128] = GND;
assign TX_BIT_CTRL_OUT1[129] = GND;
assign TX_BIT_CTRL_OUT1[130] = GND;
assign TX_BIT_CTRL_OUT1[131] = GND;
assign TX_BIT_CTRL_OUT1[132] = GND;
assign TX_BIT_CTRL_OUT1[133] = GND;
assign TX_BIT_CTRL_OUT1[134] = GND;
assign TX_BIT_CTRL_OUT1[135] = GND;
assign TX_BIT_CTRL_OUT1[136] = GND;
assign TX_BIT_CTRL_OUT1[137] = GND;
assign TX_BIT_CTRL_OUT1[138] = GND;
assign TX_BIT_CTRL_OUT1[139] = GND;
assign TX_BIT_CTRL_OUT1[140] = GND;
assign TX_BIT_CTRL_OUT1[141] = GND;
assign TX_BIT_CTRL_OUT1[142] = GND;
assign TX_BIT_CTRL_OUT1[143] = GND;
assign TX_BIT_CTRL_OUT1[144] = GND;
assign TX_BIT_CTRL_OUT1[145] = GND;
assign TX_BIT_CTRL_OUT1[146] = GND;
assign TX_BIT_CTRL_OUT1[147] = GND;
assign TX_BIT_CTRL_OUT1[148] = GND;
assign TX_BIT_CTRL_OUT1[149] = GND;
assign TX_BIT_CTRL_OUT1[150] = GND;
assign TX_BIT_CTRL_OUT1[151] = GND;
assign TX_BIT_CTRL_OUT1[152] = GND;
assign TX_BIT_CTRL_OUT1[153] = GND;
assign TX_BIT_CTRL_OUT1[154] = GND;
assign TX_BIT_CTRL_OUT1[155] = GND;
assign TX_BIT_CTRL_OUT1[156] = GND;
assign TX_BIT_CTRL_OUT1[157] = GND;
assign TX_BIT_CTRL_OUT1[158] = GND;
assign TX_BIT_CTRL_OUT1[159] = GND;
assign TX_BIT_CTRL_OUT1[160] = GND;
assign TX_BIT_CTRL_OUT1[161] = GND;
assign TX_BIT_CTRL_OUT1[162] = GND;
assign TX_BIT_CTRL_OUT1[163] = GND;
assign TX_BIT_CTRL_OUT1[164] = GND;
assign TX_BIT_CTRL_OUT1[165] = GND;
assign TX_BIT_CTRL_OUT1[166] = GND;
assign TX_BIT_CTRL_OUT1[167] = GND;
assign TX_BIT_CTRL_OUT1[168] = GND;
assign TX_BIT_CTRL_OUT1[169] = GND;
assign TX_BIT_CTRL_OUT1[170] = GND;
assign TX_BIT_CTRL_OUT1[171] = GND;
assign TX_BIT_CTRL_OUT1[172] = GND;
assign TX_BIT_CTRL_OUT1[173] = GND;
assign TX_BIT_CTRL_OUT1[174] = GND;
assign TX_BIT_CTRL_OUT1[175] = GND;
assign TX_BIT_CTRL_OUT1[176] = GND;
assign TX_BIT_CTRL_OUT1[177] = GND;
assign TX_BIT_CTRL_OUT1[178] = GND;
assign TX_BIT_CTRL_OUT1[179] = GND;
assign TX_BIT_CTRL_OUT1[180] = GND;
assign TX_BIT_CTRL_OUT1[181] = GND;
assign TX_BIT_CTRL_OUT1[182] = GND;
assign TX_BIT_CTRL_OUT1[183] = GND;
assign TX_BIT_CTRL_OUT1[184] = GND;
assign TX_BIT_CTRL_OUT1[185] = GND;
assign TX_BIT_CTRL_OUT1[186] = GND;
assign TX_BIT_CTRL_OUT1[187] = GND;
assign TX_BIT_CTRL_OUT1[188] = GND;
assign TX_BIT_CTRL_OUT1[189] = GND;
assign TX_BIT_CTRL_OUT1[190] = GND;
assign TX_BIT_CTRL_OUT1[191] = GND;
assign TX_BIT_CTRL_OUT1[192] = GND;
assign TX_BIT_CTRL_OUT1[193] = GND;
assign TX_BIT_CTRL_OUT1[194] = GND;
assign TX_BIT_CTRL_OUT1[195] = GND;
assign TX_BIT_CTRL_OUT1[196] = GND;
assign TX_BIT_CTRL_OUT1[197] = GND;
assign TX_BIT_CTRL_OUT1[198] = GND;
assign TX_BIT_CTRL_OUT1[199] = GND;
assign TX_BIT_CTRL_OUT1[200] = GND;
assign TX_BIT_CTRL_OUT1[201] = GND;
assign TX_BIT_CTRL_OUT1[202] = GND;
assign TX_BIT_CTRL_OUT1[203] = GND;
assign TX_BIT_CTRL_OUT1[204] = GND;
assign TX_BIT_CTRL_OUT1[205] = GND;
assign TX_BIT_CTRL_OUT1[206] = GND;
assign TX_BIT_CTRL_OUT1[207] = GND;
assign TX_BIT_CTRL_OUT1[208] = GND;
assign TX_BIT_CTRL_OUT1[209] = GND;
assign TX_BIT_CTRL_OUT1[210] = GND;
assign TX_BIT_CTRL_OUT1[211] = GND;
assign TX_BIT_CTRL_OUT1[212] = GND;
assign TX_BIT_CTRL_OUT1[213] = GND;
assign TX_BIT_CTRL_OUT1[214] = GND;
assign TX_BIT_CTRL_OUT1[215] = GND;
assign TX_BIT_CTRL_OUT1[216] = GND;
assign TX_BIT_CTRL_OUT1[217] = GND;
assign TX_BIT_CTRL_OUT1[218] = GND;
assign TX_BIT_CTRL_OUT1[219] = GND;
assign TX_BIT_CTRL_OUT1[220] = GND;
assign TX_BIT_CTRL_OUT1[221] = GND;
assign TX_BIT_CTRL_OUT1[222] = GND;
assign TX_BIT_CTRL_OUT1[223] = GND;
assign TX_BIT_CTRL_OUT1[224] = GND;
assign TX_BIT_CTRL_OUT1[225] = GND;
assign TX_BIT_CTRL_OUT1[226] = GND;
assign TX_BIT_CTRL_OUT1[227] = GND;
assign TX_BIT_CTRL_OUT1[228] = GND;
assign TX_BIT_CTRL_OUT1[229] = GND;
assign TX_BIT_CTRL_OUT1[230] = GND;
assign TX_BIT_CTRL_OUT1[231] = GND;
assign TX_BIT_CTRL_OUT1[232] = GND;
assign TX_BIT_CTRL_OUT1[233] = GND;
assign TX_BIT_CTRL_OUT1[234] = GND;
assign TX_BIT_CTRL_OUT1[235] = GND;
assign TX_BIT_CTRL_OUT1[236] = GND;
assign TX_BIT_CTRL_OUT1[237] = GND;
assign TX_BIT_CTRL_OUT1[238] = GND;
assign TX_BIT_CTRL_OUT1[239] = GND;
assign TX_BIT_CTRL_OUT1[240] = GND;
assign TX_BIT_CTRL_OUT1[241] = GND;
assign TX_BIT_CTRL_OUT1[242] = GND;
assign TX_BIT_CTRL_OUT1[243] = GND;
assign TX_BIT_CTRL_OUT1[244] = GND;
assign TX_BIT_CTRL_OUT1[245] = GND;
assign TX_BIT_CTRL_OUT1[246] = GND;
assign TX_BIT_CTRL_OUT1[247] = GND;
assign TX_BIT_CTRL_OUT1[248] = GND;
assign TX_BIT_CTRL_OUT1[249] = GND;
assign TX_BIT_CTRL_OUT1[250] = GND;
assign TX_BIT_CTRL_OUT1[251] = GND;
assign TX_BIT_CTRL_OUT1[252] = GND;
assign TX_BIT_CTRL_OUT1[253] = GND;
assign TX_BIT_CTRL_OUT1[254] = GND;
assign TX_BIT_CTRL_OUT1[255] = GND;
assign TX_BIT_CTRL_OUT1[256] = GND;
assign TX_BIT_CTRL_OUT1[257] = GND;
assign TX_BIT_CTRL_OUT1[258] = GND;
assign TX_BIT_CTRL_OUT1[259] = GND;
assign TX_BIT_CTRL_OUT1[260] = GND;
assign TX_BIT_CTRL_OUT1[261] = GND;
assign TX_BIT_CTRL_OUT1[262] = GND;
assign TX_BIT_CTRL_OUT1[263] = GND;
assign TX_BIT_CTRL_OUT1[264] = GND;
assign TX_BIT_CTRL_OUT1[265] = GND;
assign TX_BIT_CTRL_OUT1[266] = GND;
assign TX_BIT_CTRL_OUT1[267] = GND;
assign TX_BIT_CTRL_OUT1[268] = GND;
assign TX_BIT_CTRL_OUT1[269] = GND;
assign TX_BIT_CTRL_OUT1[270] = GND;
assign TX_BIT_CTRL_OUT1[271] = GND;
assign TX_BIT_CTRL_OUT1[272] = GND;
assign TX_BIT_CTRL_OUT1[273] = GND;
assign TX_BIT_CTRL_OUT1[274] = GND;
assign TX_BIT_CTRL_OUT1[275] = GND;
assign TX_BIT_CTRL_OUT1[276] = GND;
assign TX_BIT_CTRL_OUT1[277] = GND;
assign TX_BIT_CTRL_OUT1[278] = GND;
assign TX_BIT_CTRL_OUT1[279] = GND;
assign TX_BIT_CTRL_OUT1[280] = GND;
assign TX_BIT_CTRL_OUT1[281] = GND;
assign TX_BIT_CTRL_OUT1[282] = GND;
assign TX_BIT_CTRL_OUT1[283] = GND;
assign TX_BIT_CTRL_OUT1[284] = GND;
assign TX_BIT_CTRL_OUT1[285] = GND;
assign TX_BIT_CTRL_OUT1[286] = GND;
assign TX_BIT_CTRL_OUT1[287] = GND;
assign TX_BIT_CTRL_OUT1[288] = GND;
assign TX_BIT_CTRL_OUT1[289] = GND;
assign TX_BIT_CTRL_OUT1[290] = GND;
assign TX_BIT_CTRL_OUT1[291] = GND;
assign TX_BIT_CTRL_OUT1[292] = GND;
assign TX_BIT_CTRL_OUT1[293] = GND;
assign TX_BIT_CTRL_OUT1[294] = GND;
assign TX_BIT_CTRL_OUT1[295] = GND;
assign TX_BIT_CTRL_OUT1[296] = GND;
assign TX_BIT_CTRL_OUT1[297] = GND;
assign TX_BIT_CTRL_OUT1[298] = GND;
assign TX_BIT_CTRL_OUT1[299] = GND;
assign TX_BIT_CTRL_OUT1[300] = GND;
assign TX_BIT_CTRL_OUT1[301] = GND;
assign TX_BIT_CTRL_OUT1[302] = GND;
assign TX_BIT_CTRL_OUT1[303] = GND;
assign TX_BIT_CTRL_OUT1[304] = GND;
assign TX_BIT_CTRL_OUT1[305] = GND;
assign TX_BIT_CTRL_OUT1[306] = GND;
assign TX_BIT_CTRL_OUT1[307] = GND;
assign TX_BIT_CTRL_OUT1[308] = GND;
assign TX_BIT_CTRL_OUT1[309] = GND;
assign TX_BIT_CTRL_OUT1[310] = GND;
assign TX_BIT_CTRL_OUT1[311] = GND;
assign TX_BIT_CTRL_OUT1[312] = GND;
assign TX_BIT_CTRL_OUT1[313] = GND;
assign TX_BIT_CTRL_OUT1[314] = GND;
assign TX_BIT_CTRL_OUT1[315] = GND;
assign TX_BIT_CTRL_OUT1[316] = GND;
assign TX_BIT_CTRL_OUT1[317] = GND;
assign TX_BIT_CTRL_OUT1[318] = GND;
assign TX_BIT_CTRL_OUT1[319] = GND;
assign TX_BIT_CTRL_OUT2[0] = GND;
assign TX_BIT_CTRL_OUT2[1] = GND;
assign TX_BIT_CTRL_OUT2[2] = GND;
assign TX_BIT_CTRL_OUT2[3] = GND;
assign TX_BIT_CTRL_OUT2[4] = GND;
assign TX_BIT_CTRL_OUT2[5] = GND;
assign TX_BIT_CTRL_OUT2[6] = GND;
assign TX_BIT_CTRL_OUT2[7] = GND;
assign TX_BIT_CTRL_OUT2[8] = GND;
assign TX_BIT_CTRL_OUT2[9] = GND;
assign TX_BIT_CTRL_OUT2[10] = GND;
assign TX_BIT_CTRL_OUT2[11] = GND;
assign TX_BIT_CTRL_OUT2[12] = GND;
assign TX_BIT_CTRL_OUT2[13] = GND;
assign TX_BIT_CTRL_OUT2[14] = GND;
assign TX_BIT_CTRL_OUT2[15] = GND;
assign TX_BIT_CTRL_OUT2[16] = GND;
assign TX_BIT_CTRL_OUT2[17] = GND;
assign TX_BIT_CTRL_OUT2[18] = GND;
assign TX_BIT_CTRL_OUT2[19] = GND;
assign TX_BIT_CTRL_OUT2[20] = GND;
assign TX_BIT_CTRL_OUT2[21] = GND;
assign TX_BIT_CTRL_OUT2[22] = GND;
assign TX_BIT_CTRL_OUT2[23] = GND;
assign TX_BIT_CTRL_OUT2[24] = GND;
assign TX_BIT_CTRL_OUT2[25] = GND;
assign TX_BIT_CTRL_OUT2[26] = GND;
assign TX_BIT_CTRL_OUT2[27] = GND;
assign TX_BIT_CTRL_OUT2[28] = GND;
assign TX_BIT_CTRL_OUT2[29] = GND;
assign TX_BIT_CTRL_OUT2[30] = GND;
assign TX_BIT_CTRL_OUT2[31] = GND;
assign TX_BIT_CTRL_OUT2[32] = GND;
assign TX_BIT_CTRL_OUT2[33] = GND;
assign TX_BIT_CTRL_OUT2[34] = GND;
assign TX_BIT_CTRL_OUT2[35] = GND;
assign TX_BIT_CTRL_OUT2[36] = GND;
assign TX_BIT_CTRL_OUT2[37] = GND;
assign TX_BIT_CTRL_OUT2[38] = GND;
assign TX_BIT_CTRL_OUT2[39] = GND;
assign TX_BIT_CTRL_OUT2[80] = GND;
assign TX_BIT_CTRL_OUT2[81] = GND;
assign TX_BIT_CTRL_OUT2[82] = GND;
assign TX_BIT_CTRL_OUT2[83] = GND;
assign TX_BIT_CTRL_OUT2[84] = GND;
assign TX_BIT_CTRL_OUT2[85] = GND;
assign TX_BIT_CTRL_OUT2[86] = GND;
assign TX_BIT_CTRL_OUT2[87] = GND;
assign TX_BIT_CTRL_OUT2[88] = GND;
assign TX_BIT_CTRL_OUT2[89] = GND;
assign TX_BIT_CTRL_OUT2[90] = GND;
assign TX_BIT_CTRL_OUT2[91] = GND;
assign TX_BIT_CTRL_OUT2[92] = GND;
assign TX_BIT_CTRL_OUT2[93] = GND;
assign TX_BIT_CTRL_OUT2[94] = GND;
assign TX_BIT_CTRL_OUT2[95] = GND;
assign TX_BIT_CTRL_OUT2[96] = GND;
assign TX_BIT_CTRL_OUT2[97] = GND;
assign TX_BIT_CTRL_OUT2[98] = GND;
assign TX_BIT_CTRL_OUT2[99] = GND;
assign TX_BIT_CTRL_OUT2[100] = GND;
assign TX_BIT_CTRL_OUT2[101] = GND;
assign TX_BIT_CTRL_OUT2[102] = GND;
assign TX_BIT_CTRL_OUT2[103] = GND;
assign TX_BIT_CTRL_OUT2[104] = GND;
assign TX_BIT_CTRL_OUT2[105] = GND;
assign TX_BIT_CTRL_OUT2[106] = GND;
assign TX_BIT_CTRL_OUT2[107] = GND;
assign TX_BIT_CTRL_OUT2[108] = GND;
assign TX_BIT_CTRL_OUT2[109] = GND;
assign TX_BIT_CTRL_OUT2[110] = GND;
assign TX_BIT_CTRL_OUT2[111] = GND;
assign TX_BIT_CTRL_OUT2[112] = GND;
assign TX_BIT_CTRL_OUT2[113] = GND;
assign TX_BIT_CTRL_OUT2[114] = GND;
assign TX_BIT_CTRL_OUT2[115] = GND;
assign TX_BIT_CTRL_OUT2[116] = GND;
assign TX_BIT_CTRL_OUT2[117] = GND;
assign TX_BIT_CTRL_OUT2[118] = GND;
assign TX_BIT_CTRL_OUT2[119] = GND;
assign TX_BIT_CTRL_OUT2[120] = GND;
assign TX_BIT_CTRL_OUT2[121] = GND;
assign TX_BIT_CTRL_OUT2[122] = GND;
assign TX_BIT_CTRL_OUT2[123] = GND;
assign TX_BIT_CTRL_OUT2[124] = GND;
assign TX_BIT_CTRL_OUT2[125] = GND;
assign TX_BIT_CTRL_OUT2[126] = GND;
assign TX_BIT_CTRL_OUT2[127] = GND;
assign TX_BIT_CTRL_OUT2[128] = GND;
assign TX_BIT_CTRL_OUT2[129] = GND;
assign TX_BIT_CTRL_OUT2[130] = GND;
assign TX_BIT_CTRL_OUT2[131] = GND;
assign TX_BIT_CTRL_OUT2[132] = GND;
assign TX_BIT_CTRL_OUT2[133] = GND;
assign TX_BIT_CTRL_OUT2[134] = GND;
assign TX_BIT_CTRL_OUT2[135] = GND;
assign TX_BIT_CTRL_OUT2[136] = GND;
assign TX_BIT_CTRL_OUT2[137] = GND;
assign TX_BIT_CTRL_OUT2[138] = GND;
assign TX_BIT_CTRL_OUT2[139] = GND;
assign TX_BIT_CTRL_OUT2[140] = GND;
assign TX_BIT_CTRL_OUT2[141] = GND;
assign TX_BIT_CTRL_OUT2[142] = GND;
assign TX_BIT_CTRL_OUT2[143] = GND;
assign TX_BIT_CTRL_OUT2[144] = GND;
assign TX_BIT_CTRL_OUT2[145] = GND;
assign TX_BIT_CTRL_OUT2[146] = GND;
assign TX_BIT_CTRL_OUT2[147] = GND;
assign TX_BIT_CTRL_OUT2[148] = GND;
assign TX_BIT_CTRL_OUT2[149] = GND;
assign TX_BIT_CTRL_OUT2[150] = GND;
assign TX_BIT_CTRL_OUT2[151] = GND;
assign TX_BIT_CTRL_OUT2[152] = GND;
assign TX_BIT_CTRL_OUT2[153] = GND;
assign TX_BIT_CTRL_OUT2[154] = GND;
assign TX_BIT_CTRL_OUT2[155] = GND;
assign TX_BIT_CTRL_OUT2[156] = GND;
assign TX_BIT_CTRL_OUT2[157] = GND;
assign TX_BIT_CTRL_OUT2[158] = GND;
assign TX_BIT_CTRL_OUT2[159] = GND;
assign TX_BIT_CTRL_OUT2[160] = GND;
assign TX_BIT_CTRL_OUT2[161] = GND;
assign TX_BIT_CTRL_OUT2[162] = GND;
assign TX_BIT_CTRL_OUT2[163] = GND;
assign TX_BIT_CTRL_OUT2[164] = GND;
assign TX_BIT_CTRL_OUT2[165] = GND;
assign TX_BIT_CTRL_OUT2[166] = GND;
assign TX_BIT_CTRL_OUT2[167] = GND;
assign TX_BIT_CTRL_OUT2[168] = GND;
assign TX_BIT_CTRL_OUT2[169] = GND;
assign TX_BIT_CTRL_OUT2[170] = GND;
assign TX_BIT_CTRL_OUT2[171] = GND;
assign TX_BIT_CTRL_OUT2[172] = GND;
assign TX_BIT_CTRL_OUT2[173] = GND;
assign TX_BIT_CTRL_OUT2[174] = GND;
assign TX_BIT_CTRL_OUT2[175] = GND;
assign TX_BIT_CTRL_OUT2[176] = GND;
assign TX_BIT_CTRL_OUT2[177] = GND;
assign TX_BIT_CTRL_OUT2[178] = GND;
assign TX_BIT_CTRL_OUT2[179] = GND;
assign TX_BIT_CTRL_OUT2[180] = GND;
assign TX_BIT_CTRL_OUT2[181] = GND;
assign TX_BIT_CTRL_OUT2[182] = GND;
assign TX_BIT_CTRL_OUT2[183] = GND;
assign TX_BIT_CTRL_OUT2[184] = GND;
assign TX_BIT_CTRL_OUT2[185] = GND;
assign TX_BIT_CTRL_OUT2[186] = GND;
assign TX_BIT_CTRL_OUT2[187] = GND;
assign TX_BIT_CTRL_OUT2[188] = GND;
assign TX_BIT_CTRL_OUT2[189] = GND;
assign TX_BIT_CTRL_OUT2[190] = GND;
assign TX_BIT_CTRL_OUT2[191] = GND;
assign TX_BIT_CTRL_OUT2[192] = GND;
assign TX_BIT_CTRL_OUT2[193] = GND;
assign TX_BIT_CTRL_OUT2[194] = GND;
assign TX_BIT_CTRL_OUT2[195] = GND;
assign TX_BIT_CTRL_OUT2[196] = GND;
assign TX_BIT_CTRL_OUT2[197] = GND;
assign TX_BIT_CTRL_OUT2[198] = GND;
assign TX_BIT_CTRL_OUT2[199] = GND;
assign TX_BIT_CTRL_OUT2[200] = GND;
assign TX_BIT_CTRL_OUT2[201] = GND;
assign TX_BIT_CTRL_OUT2[202] = GND;
assign TX_BIT_CTRL_OUT2[203] = GND;
assign TX_BIT_CTRL_OUT2[204] = GND;
assign TX_BIT_CTRL_OUT2[205] = GND;
assign TX_BIT_CTRL_OUT2[206] = GND;
assign TX_BIT_CTRL_OUT2[207] = GND;
assign TX_BIT_CTRL_OUT2[208] = GND;
assign TX_BIT_CTRL_OUT2[209] = GND;
assign TX_BIT_CTRL_OUT2[210] = GND;
assign TX_BIT_CTRL_OUT2[211] = GND;
assign TX_BIT_CTRL_OUT2[212] = GND;
assign TX_BIT_CTRL_OUT2[213] = GND;
assign TX_BIT_CTRL_OUT2[214] = GND;
assign TX_BIT_CTRL_OUT2[215] = GND;
assign TX_BIT_CTRL_OUT2[216] = GND;
assign TX_BIT_CTRL_OUT2[217] = GND;
assign TX_BIT_CTRL_OUT2[218] = GND;
assign TX_BIT_CTRL_OUT2[219] = GND;
assign TX_BIT_CTRL_OUT2[220] = GND;
assign TX_BIT_CTRL_OUT2[221] = GND;
assign TX_BIT_CTRL_OUT2[222] = GND;
assign TX_BIT_CTRL_OUT2[223] = GND;
assign TX_BIT_CTRL_OUT2[224] = GND;
assign TX_BIT_CTRL_OUT2[225] = GND;
assign TX_BIT_CTRL_OUT2[226] = GND;
assign TX_BIT_CTRL_OUT2[227] = GND;
assign TX_BIT_CTRL_OUT2[228] = GND;
assign TX_BIT_CTRL_OUT2[229] = GND;
assign TX_BIT_CTRL_OUT2[230] = GND;
assign TX_BIT_CTRL_OUT2[231] = GND;
assign TX_BIT_CTRL_OUT2[232] = GND;
assign TX_BIT_CTRL_OUT2[233] = GND;
assign TX_BIT_CTRL_OUT2[234] = GND;
assign TX_BIT_CTRL_OUT2[235] = GND;
assign TX_BIT_CTRL_OUT2[236] = GND;
assign TX_BIT_CTRL_OUT2[237] = GND;
assign TX_BIT_CTRL_OUT2[238] = GND;
assign TX_BIT_CTRL_OUT2[239] = GND;
assign TX_BIT_CTRL_OUT2[240] = GND;
assign TX_BIT_CTRL_OUT2[241] = GND;
assign TX_BIT_CTRL_OUT2[242] = GND;
assign TX_BIT_CTRL_OUT2[243] = GND;
assign TX_BIT_CTRL_OUT2[244] = GND;
assign TX_BIT_CTRL_OUT2[245] = GND;
assign TX_BIT_CTRL_OUT2[246] = GND;
assign TX_BIT_CTRL_OUT2[247] = GND;
assign TX_BIT_CTRL_OUT2[248] = GND;
assign TX_BIT_CTRL_OUT2[249] = GND;
assign TX_BIT_CTRL_OUT2[250] = GND;
assign TX_BIT_CTRL_OUT2[251] = GND;
assign TX_BIT_CTRL_OUT2[252] = GND;
assign TX_BIT_CTRL_OUT2[253] = GND;
assign TX_BIT_CTRL_OUT2[254] = GND;
assign TX_BIT_CTRL_OUT2[255] = GND;
assign TX_BIT_CTRL_OUT2[256] = GND;
assign TX_BIT_CTRL_OUT2[257] = GND;
assign TX_BIT_CTRL_OUT2[258] = GND;
assign TX_BIT_CTRL_OUT2[259] = GND;
assign TX_BIT_CTRL_OUT2[260] = GND;
assign TX_BIT_CTRL_OUT2[261] = GND;
assign TX_BIT_CTRL_OUT2[262] = GND;
assign TX_BIT_CTRL_OUT2[263] = GND;
assign TX_BIT_CTRL_OUT2[264] = GND;
assign TX_BIT_CTRL_OUT2[265] = GND;
assign TX_BIT_CTRL_OUT2[266] = GND;
assign TX_BIT_CTRL_OUT2[267] = GND;
assign TX_BIT_CTRL_OUT2[268] = GND;
assign TX_BIT_CTRL_OUT2[269] = GND;
assign TX_BIT_CTRL_OUT2[270] = GND;
assign TX_BIT_CTRL_OUT2[271] = GND;
assign TX_BIT_CTRL_OUT2[272] = GND;
assign TX_BIT_CTRL_OUT2[273] = GND;
assign TX_BIT_CTRL_OUT2[274] = GND;
assign TX_BIT_CTRL_OUT2[275] = GND;
assign TX_BIT_CTRL_OUT2[276] = GND;
assign TX_BIT_CTRL_OUT2[277] = GND;
assign TX_BIT_CTRL_OUT2[278] = GND;
assign TX_BIT_CTRL_OUT2[279] = GND;
assign TX_BIT_CTRL_OUT2[280] = GND;
assign TX_BIT_CTRL_OUT2[281] = GND;
assign TX_BIT_CTRL_OUT2[282] = GND;
assign TX_BIT_CTRL_OUT2[283] = GND;
assign TX_BIT_CTRL_OUT2[284] = GND;
assign TX_BIT_CTRL_OUT2[285] = GND;
assign TX_BIT_CTRL_OUT2[286] = GND;
assign TX_BIT_CTRL_OUT2[287] = GND;
assign TX_BIT_CTRL_OUT2[288] = GND;
assign TX_BIT_CTRL_OUT2[289] = GND;
assign TX_BIT_CTRL_OUT2[290] = GND;
assign TX_BIT_CTRL_OUT2[291] = GND;
assign TX_BIT_CTRL_OUT2[292] = GND;
assign TX_BIT_CTRL_OUT2[293] = GND;
assign TX_BIT_CTRL_OUT2[294] = GND;
assign TX_BIT_CTRL_OUT2[295] = GND;
assign TX_BIT_CTRL_OUT2[296] = GND;
assign TX_BIT_CTRL_OUT2[297] = GND;
assign TX_BIT_CTRL_OUT2[298] = GND;
assign TX_BIT_CTRL_OUT2[299] = GND;
assign TX_BIT_CTRL_OUT2[300] = GND;
assign TX_BIT_CTRL_OUT2[301] = GND;
assign TX_BIT_CTRL_OUT2[302] = GND;
assign TX_BIT_CTRL_OUT2[303] = GND;
assign TX_BIT_CTRL_OUT2[304] = GND;
assign TX_BIT_CTRL_OUT2[305] = GND;
assign TX_BIT_CTRL_OUT2[306] = GND;
assign TX_BIT_CTRL_OUT2[307] = GND;
assign TX_BIT_CTRL_OUT2[308] = GND;
assign TX_BIT_CTRL_OUT2[309] = GND;
assign TX_BIT_CTRL_OUT2[310] = GND;
assign TX_BIT_CTRL_OUT2[311] = GND;
assign TX_BIT_CTRL_OUT2[312] = GND;
assign TX_BIT_CTRL_OUT2[313] = GND;
assign TX_BIT_CTRL_OUT2[314] = GND;
assign TX_BIT_CTRL_OUT2[315] = GND;
assign TX_BIT_CTRL_OUT2[316] = GND;
assign TX_BIT_CTRL_OUT2[317] = GND;
assign TX_BIT_CTRL_OUT2[318] = GND;
assign TX_BIT_CTRL_OUT2[319] = GND;
assign TX_BIT_CTRL_OUT3[0] = GND;
assign TX_BIT_CTRL_OUT3[1] = GND;
assign TX_BIT_CTRL_OUT3[2] = GND;
assign TX_BIT_CTRL_OUT3[3] = GND;
assign TX_BIT_CTRL_OUT3[4] = GND;
assign TX_BIT_CTRL_OUT3[5] = GND;
assign TX_BIT_CTRL_OUT3[6] = GND;
assign TX_BIT_CTRL_OUT3[7] = GND;
assign TX_BIT_CTRL_OUT3[8] = GND;
assign TX_BIT_CTRL_OUT3[9] = GND;
assign TX_BIT_CTRL_OUT3[10] = GND;
assign TX_BIT_CTRL_OUT3[11] = GND;
assign TX_BIT_CTRL_OUT3[12] = GND;
assign TX_BIT_CTRL_OUT3[13] = GND;
assign TX_BIT_CTRL_OUT3[14] = GND;
assign TX_BIT_CTRL_OUT3[15] = GND;
assign TX_BIT_CTRL_OUT3[16] = GND;
assign TX_BIT_CTRL_OUT3[17] = GND;
assign TX_BIT_CTRL_OUT3[18] = GND;
assign TX_BIT_CTRL_OUT3[19] = GND;
assign TX_BIT_CTRL_OUT3[20] = GND;
assign TX_BIT_CTRL_OUT3[21] = GND;
assign TX_BIT_CTRL_OUT3[22] = GND;
assign TX_BIT_CTRL_OUT3[23] = GND;
assign TX_BIT_CTRL_OUT3[24] = GND;
assign TX_BIT_CTRL_OUT3[25] = GND;
assign TX_BIT_CTRL_OUT3[26] = GND;
assign TX_BIT_CTRL_OUT3[27] = GND;
assign TX_BIT_CTRL_OUT3[28] = GND;
assign TX_BIT_CTRL_OUT3[29] = GND;
assign TX_BIT_CTRL_OUT3[30] = GND;
assign TX_BIT_CTRL_OUT3[31] = GND;
assign TX_BIT_CTRL_OUT3[32] = GND;
assign TX_BIT_CTRL_OUT3[33] = GND;
assign TX_BIT_CTRL_OUT3[34] = GND;
assign TX_BIT_CTRL_OUT3[35] = GND;
assign TX_BIT_CTRL_OUT3[36] = GND;
assign TX_BIT_CTRL_OUT3[37] = GND;
assign TX_BIT_CTRL_OUT3[38] = GND;
assign TX_BIT_CTRL_OUT3[39] = GND;
assign TX_BIT_CTRL_OUT3[80] = GND;
assign TX_BIT_CTRL_OUT3[81] = GND;
assign TX_BIT_CTRL_OUT3[82] = GND;
assign TX_BIT_CTRL_OUT3[83] = GND;
assign TX_BIT_CTRL_OUT3[84] = GND;
assign TX_BIT_CTRL_OUT3[85] = GND;
assign TX_BIT_CTRL_OUT3[86] = GND;
assign TX_BIT_CTRL_OUT3[87] = GND;
assign TX_BIT_CTRL_OUT3[88] = GND;
assign TX_BIT_CTRL_OUT3[89] = GND;
assign TX_BIT_CTRL_OUT3[90] = GND;
assign TX_BIT_CTRL_OUT3[91] = GND;
assign TX_BIT_CTRL_OUT3[92] = GND;
assign TX_BIT_CTRL_OUT3[93] = GND;
assign TX_BIT_CTRL_OUT3[94] = GND;
assign TX_BIT_CTRL_OUT3[95] = GND;
assign TX_BIT_CTRL_OUT3[96] = GND;
assign TX_BIT_CTRL_OUT3[97] = GND;
assign TX_BIT_CTRL_OUT3[98] = GND;
assign TX_BIT_CTRL_OUT3[99] = GND;
assign TX_BIT_CTRL_OUT3[100] = GND;
assign TX_BIT_CTRL_OUT3[101] = GND;
assign TX_BIT_CTRL_OUT3[102] = GND;
assign TX_BIT_CTRL_OUT3[103] = GND;
assign TX_BIT_CTRL_OUT3[104] = GND;
assign TX_BIT_CTRL_OUT3[105] = GND;
assign TX_BIT_CTRL_OUT3[106] = GND;
assign TX_BIT_CTRL_OUT3[107] = GND;
assign TX_BIT_CTRL_OUT3[108] = GND;
assign TX_BIT_CTRL_OUT3[109] = GND;
assign TX_BIT_CTRL_OUT3[110] = GND;
assign TX_BIT_CTRL_OUT3[111] = GND;
assign TX_BIT_CTRL_OUT3[112] = GND;
assign TX_BIT_CTRL_OUT3[113] = GND;
assign TX_BIT_CTRL_OUT3[114] = GND;
assign TX_BIT_CTRL_OUT3[115] = GND;
assign TX_BIT_CTRL_OUT3[116] = GND;
assign TX_BIT_CTRL_OUT3[117] = GND;
assign TX_BIT_CTRL_OUT3[118] = GND;
assign TX_BIT_CTRL_OUT3[119] = GND;
assign TX_BIT_CTRL_OUT3[120] = GND;
assign TX_BIT_CTRL_OUT3[121] = GND;
assign TX_BIT_CTRL_OUT3[122] = GND;
assign TX_BIT_CTRL_OUT3[123] = GND;
assign TX_BIT_CTRL_OUT3[124] = GND;
assign TX_BIT_CTRL_OUT3[125] = GND;
assign TX_BIT_CTRL_OUT3[126] = GND;
assign TX_BIT_CTRL_OUT3[127] = GND;
assign TX_BIT_CTRL_OUT3[128] = GND;
assign TX_BIT_CTRL_OUT3[129] = GND;
assign TX_BIT_CTRL_OUT3[130] = GND;
assign TX_BIT_CTRL_OUT3[131] = GND;
assign TX_BIT_CTRL_OUT3[132] = GND;
assign TX_BIT_CTRL_OUT3[133] = GND;
assign TX_BIT_CTRL_OUT3[134] = GND;
assign TX_BIT_CTRL_OUT3[135] = GND;
assign TX_BIT_CTRL_OUT3[136] = GND;
assign TX_BIT_CTRL_OUT3[137] = GND;
assign TX_BIT_CTRL_OUT3[138] = GND;
assign TX_BIT_CTRL_OUT3[139] = GND;
assign TX_BIT_CTRL_OUT3[140] = GND;
assign TX_BIT_CTRL_OUT3[141] = GND;
assign TX_BIT_CTRL_OUT3[142] = GND;
assign TX_BIT_CTRL_OUT3[143] = GND;
assign TX_BIT_CTRL_OUT3[144] = GND;
assign TX_BIT_CTRL_OUT3[145] = GND;
assign TX_BIT_CTRL_OUT3[146] = GND;
assign TX_BIT_CTRL_OUT3[147] = GND;
assign TX_BIT_CTRL_OUT3[148] = GND;
assign TX_BIT_CTRL_OUT3[149] = GND;
assign TX_BIT_CTRL_OUT3[150] = GND;
assign TX_BIT_CTRL_OUT3[151] = GND;
assign TX_BIT_CTRL_OUT3[152] = GND;
assign TX_BIT_CTRL_OUT3[153] = GND;
assign TX_BIT_CTRL_OUT3[154] = GND;
assign TX_BIT_CTRL_OUT3[155] = GND;
assign TX_BIT_CTRL_OUT3[156] = GND;
assign TX_BIT_CTRL_OUT3[157] = GND;
assign TX_BIT_CTRL_OUT3[158] = GND;
assign TX_BIT_CTRL_OUT3[159] = GND;
assign TX_BIT_CTRL_OUT3[160] = GND;
assign TX_BIT_CTRL_OUT3[161] = GND;
assign TX_BIT_CTRL_OUT3[162] = GND;
assign TX_BIT_CTRL_OUT3[163] = GND;
assign TX_BIT_CTRL_OUT3[164] = GND;
assign TX_BIT_CTRL_OUT3[165] = GND;
assign TX_BIT_CTRL_OUT3[166] = GND;
assign TX_BIT_CTRL_OUT3[167] = GND;
assign TX_BIT_CTRL_OUT3[168] = GND;
assign TX_BIT_CTRL_OUT3[169] = GND;
assign TX_BIT_CTRL_OUT3[170] = GND;
assign TX_BIT_CTRL_OUT3[171] = GND;
assign TX_BIT_CTRL_OUT3[172] = GND;
assign TX_BIT_CTRL_OUT3[173] = GND;
assign TX_BIT_CTRL_OUT3[174] = GND;
assign TX_BIT_CTRL_OUT3[175] = GND;
assign TX_BIT_CTRL_OUT3[176] = GND;
assign TX_BIT_CTRL_OUT3[177] = GND;
assign TX_BIT_CTRL_OUT3[178] = GND;
assign TX_BIT_CTRL_OUT3[179] = GND;
assign TX_BIT_CTRL_OUT3[180] = GND;
assign TX_BIT_CTRL_OUT3[181] = GND;
assign TX_BIT_CTRL_OUT3[182] = GND;
assign TX_BIT_CTRL_OUT3[183] = GND;
assign TX_BIT_CTRL_OUT3[184] = GND;
assign TX_BIT_CTRL_OUT3[185] = GND;
assign TX_BIT_CTRL_OUT3[186] = GND;
assign TX_BIT_CTRL_OUT3[187] = GND;
assign TX_BIT_CTRL_OUT3[188] = GND;
assign TX_BIT_CTRL_OUT3[189] = GND;
assign TX_BIT_CTRL_OUT3[190] = GND;
assign TX_BIT_CTRL_OUT3[191] = GND;
assign TX_BIT_CTRL_OUT3[192] = GND;
assign TX_BIT_CTRL_OUT3[193] = GND;
assign TX_BIT_CTRL_OUT3[194] = GND;
assign TX_BIT_CTRL_OUT3[195] = GND;
assign TX_BIT_CTRL_OUT3[196] = GND;
assign TX_BIT_CTRL_OUT3[197] = GND;
assign TX_BIT_CTRL_OUT3[198] = GND;
assign TX_BIT_CTRL_OUT3[199] = GND;
assign TX_BIT_CTRL_OUT3[200] = GND;
assign TX_BIT_CTRL_OUT3[201] = GND;
assign TX_BIT_CTRL_OUT3[202] = GND;
assign TX_BIT_CTRL_OUT3[203] = GND;
assign TX_BIT_CTRL_OUT3[204] = GND;
assign TX_BIT_CTRL_OUT3[205] = GND;
assign TX_BIT_CTRL_OUT3[206] = GND;
assign TX_BIT_CTRL_OUT3[207] = GND;
assign TX_BIT_CTRL_OUT3[208] = GND;
assign TX_BIT_CTRL_OUT3[209] = GND;
assign TX_BIT_CTRL_OUT3[210] = GND;
assign TX_BIT_CTRL_OUT3[211] = GND;
assign TX_BIT_CTRL_OUT3[212] = GND;
assign TX_BIT_CTRL_OUT3[213] = GND;
assign TX_BIT_CTRL_OUT3[214] = GND;
assign TX_BIT_CTRL_OUT3[215] = GND;
assign TX_BIT_CTRL_OUT3[216] = GND;
assign TX_BIT_CTRL_OUT3[217] = GND;
assign TX_BIT_CTRL_OUT3[218] = GND;
assign TX_BIT_CTRL_OUT3[219] = GND;
assign TX_BIT_CTRL_OUT3[220] = GND;
assign TX_BIT_CTRL_OUT3[221] = GND;
assign TX_BIT_CTRL_OUT3[222] = GND;
assign TX_BIT_CTRL_OUT3[223] = GND;
assign TX_BIT_CTRL_OUT3[224] = GND;
assign TX_BIT_CTRL_OUT3[225] = GND;
assign TX_BIT_CTRL_OUT3[226] = GND;
assign TX_BIT_CTRL_OUT3[227] = GND;
assign TX_BIT_CTRL_OUT3[228] = GND;
assign TX_BIT_CTRL_OUT3[229] = GND;
assign TX_BIT_CTRL_OUT3[230] = GND;
assign TX_BIT_CTRL_OUT3[231] = GND;
assign TX_BIT_CTRL_OUT3[232] = GND;
assign TX_BIT_CTRL_OUT3[233] = GND;
assign TX_BIT_CTRL_OUT3[234] = GND;
assign TX_BIT_CTRL_OUT3[235] = GND;
assign TX_BIT_CTRL_OUT3[236] = GND;
assign TX_BIT_CTRL_OUT3[237] = GND;
assign TX_BIT_CTRL_OUT3[238] = GND;
assign TX_BIT_CTRL_OUT3[239] = GND;
assign TX_BIT_CTRL_OUT3[240] = GND;
assign TX_BIT_CTRL_OUT3[241] = GND;
assign TX_BIT_CTRL_OUT3[242] = GND;
assign TX_BIT_CTRL_OUT3[243] = GND;
assign TX_BIT_CTRL_OUT3[244] = GND;
assign TX_BIT_CTRL_OUT3[245] = GND;
assign TX_BIT_CTRL_OUT3[246] = GND;
assign TX_BIT_CTRL_OUT3[247] = GND;
assign TX_BIT_CTRL_OUT3[248] = GND;
assign TX_BIT_CTRL_OUT3[249] = GND;
assign TX_BIT_CTRL_OUT3[250] = GND;
assign TX_BIT_CTRL_OUT3[251] = GND;
assign TX_BIT_CTRL_OUT3[252] = GND;
assign TX_BIT_CTRL_OUT3[253] = GND;
assign TX_BIT_CTRL_OUT3[254] = GND;
assign TX_BIT_CTRL_OUT3[255] = GND;
assign TX_BIT_CTRL_OUT3[256] = GND;
assign TX_BIT_CTRL_OUT3[257] = GND;
assign TX_BIT_CTRL_OUT3[258] = GND;
assign TX_BIT_CTRL_OUT3[259] = GND;
assign TX_BIT_CTRL_OUT3[260] = GND;
assign TX_BIT_CTRL_OUT3[261] = GND;
assign TX_BIT_CTRL_OUT3[262] = GND;
assign TX_BIT_CTRL_OUT3[263] = GND;
assign TX_BIT_CTRL_OUT3[264] = GND;
assign TX_BIT_CTRL_OUT3[265] = GND;
assign TX_BIT_CTRL_OUT3[266] = GND;
assign TX_BIT_CTRL_OUT3[267] = GND;
assign TX_BIT_CTRL_OUT3[268] = GND;
assign TX_BIT_CTRL_OUT3[269] = GND;
assign TX_BIT_CTRL_OUT3[270] = GND;
assign TX_BIT_CTRL_OUT3[271] = GND;
assign TX_BIT_CTRL_OUT3[272] = GND;
assign TX_BIT_CTRL_OUT3[273] = GND;
assign TX_BIT_CTRL_OUT3[274] = GND;
assign TX_BIT_CTRL_OUT3[275] = GND;
assign TX_BIT_CTRL_OUT3[276] = GND;
assign TX_BIT_CTRL_OUT3[277] = GND;
assign TX_BIT_CTRL_OUT3[278] = GND;
assign TX_BIT_CTRL_OUT3[279] = GND;
assign TX_BIT_CTRL_OUT3[280] = GND;
assign TX_BIT_CTRL_OUT3[281] = GND;
assign TX_BIT_CTRL_OUT3[282] = GND;
assign TX_BIT_CTRL_OUT3[283] = GND;
assign TX_BIT_CTRL_OUT3[284] = GND;
assign TX_BIT_CTRL_OUT3[285] = GND;
assign TX_BIT_CTRL_OUT3[286] = GND;
assign TX_BIT_CTRL_OUT3[287] = GND;
assign TX_BIT_CTRL_OUT3[288] = GND;
assign TX_BIT_CTRL_OUT3[289] = GND;
assign TX_BIT_CTRL_OUT3[290] = GND;
assign TX_BIT_CTRL_OUT3[291] = GND;
assign TX_BIT_CTRL_OUT3[292] = GND;
assign TX_BIT_CTRL_OUT3[293] = GND;
assign TX_BIT_CTRL_OUT3[294] = GND;
assign TX_BIT_CTRL_OUT3[295] = GND;
assign TX_BIT_CTRL_OUT3[296] = GND;
assign TX_BIT_CTRL_OUT3[297] = GND;
assign TX_BIT_CTRL_OUT3[298] = GND;
assign TX_BIT_CTRL_OUT3[299] = GND;
assign TX_BIT_CTRL_OUT3[300] = GND;
assign TX_BIT_CTRL_OUT3[301] = GND;
assign TX_BIT_CTRL_OUT3[302] = GND;
assign TX_BIT_CTRL_OUT3[303] = GND;
assign TX_BIT_CTRL_OUT3[304] = GND;
assign TX_BIT_CTRL_OUT3[305] = GND;
assign TX_BIT_CTRL_OUT3[306] = GND;
assign TX_BIT_CTRL_OUT3[307] = GND;
assign TX_BIT_CTRL_OUT3[308] = GND;
assign TX_BIT_CTRL_OUT3[309] = GND;
assign TX_BIT_CTRL_OUT3[310] = GND;
assign TX_BIT_CTRL_OUT3[311] = GND;
assign TX_BIT_CTRL_OUT3[312] = GND;
assign TX_BIT_CTRL_OUT3[313] = GND;
assign TX_BIT_CTRL_OUT3[314] = GND;
assign TX_BIT_CTRL_OUT3[315] = GND;
assign TX_BIT_CTRL_OUT3[316] = GND;
assign TX_BIT_CTRL_OUT3[317] = GND;
assign TX_BIT_CTRL_OUT3[318] = GND;
assign TX_BIT_CTRL_OUT3[319] = GND;
assign TX_BIT_CTRL_OUT4[0] = GND;
assign TX_BIT_CTRL_OUT4[1] = GND;
assign TX_BIT_CTRL_OUT4[2] = GND;
assign TX_BIT_CTRL_OUT4[3] = GND;
assign TX_BIT_CTRL_OUT4[4] = GND;
assign TX_BIT_CTRL_OUT4[5] = GND;
assign TX_BIT_CTRL_OUT4[6] = GND;
assign TX_BIT_CTRL_OUT4[7] = GND;
assign TX_BIT_CTRL_OUT4[8] = GND;
assign TX_BIT_CTRL_OUT4[9] = GND;
assign TX_BIT_CTRL_OUT4[10] = GND;
assign TX_BIT_CTRL_OUT4[11] = GND;
assign TX_BIT_CTRL_OUT4[12] = GND;
assign TX_BIT_CTRL_OUT4[13] = GND;
assign TX_BIT_CTRL_OUT4[14] = GND;
assign TX_BIT_CTRL_OUT4[15] = GND;
assign TX_BIT_CTRL_OUT4[16] = GND;
assign TX_BIT_CTRL_OUT4[17] = GND;
assign TX_BIT_CTRL_OUT4[18] = GND;
assign TX_BIT_CTRL_OUT4[19] = GND;
assign TX_BIT_CTRL_OUT4[20] = GND;
assign TX_BIT_CTRL_OUT4[21] = GND;
assign TX_BIT_CTRL_OUT4[22] = GND;
assign TX_BIT_CTRL_OUT4[23] = GND;
assign TX_BIT_CTRL_OUT4[24] = GND;
assign TX_BIT_CTRL_OUT4[25] = GND;
assign TX_BIT_CTRL_OUT4[26] = GND;
assign TX_BIT_CTRL_OUT4[27] = GND;
assign TX_BIT_CTRL_OUT4[28] = GND;
assign TX_BIT_CTRL_OUT4[29] = GND;
assign TX_BIT_CTRL_OUT4[30] = GND;
assign TX_BIT_CTRL_OUT4[31] = GND;
assign TX_BIT_CTRL_OUT4[32] = GND;
assign TX_BIT_CTRL_OUT4[33] = GND;
assign TX_BIT_CTRL_OUT4[34] = GND;
assign TX_BIT_CTRL_OUT4[35] = GND;
assign TX_BIT_CTRL_OUT4[36] = GND;
assign TX_BIT_CTRL_OUT4[37] = GND;
assign TX_BIT_CTRL_OUT4[38] = GND;
assign TX_BIT_CTRL_OUT4[39] = GND;
assign TX_BIT_CTRL_OUT4[40] = GND;
assign TX_BIT_CTRL_OUT4[41] = GND;
assign TX_BIT_CTRL_OUT4[42] = GND;
assign TX_BIT_CTRL_OUT4[43] = GND;
assign TX_BIT_CTRL_OUT4[44] = GND;
assign TX_BIT_CTRL_OUT4[45] = GND;
assign TX_BIT_CTRL_OUT4[46] = GND;
assign TX_BIT_CTRL_OUT4[47] = GND;
assign TX_BIT_CTRL_OUT4[48] = GND;
assign TX_BIT_CTRL_OUT4[49] = GND;
assign TX_BIT_CTRL_OUT4[50] = GND;
assign TX_BIT_CTRL_OUT4[51] = GND;
assign TX_BIT_CTRL_OUT4[52] = GND;
assign TX_BIT_CTRL_OUT4[53] = GND;
assign TX_BIT_CTRL_OUT4[54] = GND;
assign TX_BIT_CTRL_OUT4[55] = GND;
assign TX_BIT_CTRL_OUT4[56] = GND;
assign TX_BIT_CTRL_OUT4[57] = GND;
assign TX_BIT_CTRL_OUT4[58] = GND;
assign TX_BIT_CTRL_OUT4[59] = GND;
assign TX_BIT_CTRL_OUT4[60] = GND;
assign TX_BIT_CTRL_OUT4[61] = GND;
assign TX_BIT_CTRL_OUT4[62] = GND;
assign TX_BIT_CTRL_OUT4[63] = GND;
assign TX_BIT_CTRL_OUT4[64] = GND;
assign TX_BIT_CTRL_OUT4[65] = GND;
assign TX_BIT_CTRL_OUT4[66] = GND;
assign TX_BIT_CTRL_OUT4[67] = GND;
assign TX_BIT_CTRL_OUT4[68] = GND;
assign TX_BIT_CTRL_OUT4[69] = GND;
assign TX_BIT_CTRL_OUT4[70] = GND;
assign TX_BIT_CTRL_OUT4[71] = GND;
assign TX_BIT_CTRL_OUT4[72] = GND;
assign TX_BIT_CTRL_OUT4[73] = GND;
assign TX_BIT_CTRL_OUT4[74] = GND;
assign TX_BIT_CTRL_OUT4[75] = GND;
assign TX_BIT_CTRL_OUT4[76] = GND;
assign TX_BIT_CTRL_OUT4[77] = GND;
assign TX_BIT_CTRL_OUT4[78] = GND;
assign TX_BIT_CTRL_OUT4[79] = GND;
assign TX_BIT_CTRL_OUT4[80] = GND;
assign TX_BIT_CTRL_OUT4[81] = GND;
assign TX_BIT_CTRL_OUT4[82] = GND;
assign TX_BIT_CTRL_OUT4[83] = GND;
assign TX_BIT_CTRL_OUT4[84] = GND;
assign TX_BIT_CTRL_OUT4[85] = GND;
assign TX_BIT_CTRL_OUT4[86] = GND;
assign TX_BIT_CTRL_OUT4[87] = GND;
assign TX_BIT_CTRL_OUT4[88] = GND;
assign TX_BIT_CTRL_OUT4[89] = GND;
assign TX_BIT_CTRL_OUT4[90] = GND;
assign TX_BIT_CTRL_OUT4[91] = GND;
assign TX_BIT_CTRL_OUT4[92] = GND;
assign TX_BIT_CTRL_OUT4[93] = GND;
assign TX_BIT_CTRL_OUT4[94] = GND;
assign TX_BIT_CTRL_OUT4[95] = GND;
assign TX_BIT_CTRL_OUT4[96] = GND;
assign TX_BIT_CTRL_OUT4[97] = GND;
assign TX_BIT_CTRL_OUT4[98] = GND;
assign TX_BIT_CTRL_OUT4[99] = GND;
assign TX_BIT_CTRL_OUT4[100] = GND;
assign TX_BIT_CTRL_OUT4[101] = GND;
assign TX_BIT_CTRL_OUT4[102] = GND;
assign TX_BIT_CTRL_OUT4[103] = GND;
assign TX_BIT_CTRL_OUT4[104] = GND;
assign TX_BIT_CTRL_OUT4[105] = GND;
assign TX_BIT_CTRL_OUT4[106] = GND;
assign TX_BIT_CTRL_OUT4[107] = GND;
assign TX_BIT_CTRL_OUT4[108] = GND;
assign TX_BIT_CTRL_OUT4[109] = GND;
assign TX_BIT_CTRL_OUT4[110] = GND;
assign TX_BIT_CTRL_OUT4[111] = GND;
assign TX_BIT_CTRL_OUT4[112] = GND;
assign TX_BIT_CTRL_OUT4[113] = GND;
assign TX_BIT_CTRL_OUT4[114] = GND;
assign TX_BIT_CTRL_OUT4[115] = GND;
assign TX_BIT_CTRL_OUT4[116] = GND;
assign TX_BIT_CTRL_OUT4[117] = GND;
assign TX_BIT_CTRL_OUT4[118] = GND;
assign TX_BIT_CTRL_OUT4[119] = GND;
assign TX_BIT_CTRL_OUT4[160] = GND;
assign TX_BIT_CTRL_OUT4[161] = GND;
assign TX_BIT_CTRL_OUT4[162] = GND;
assign TX_BIT_CTRL_OUT4[163] = GND;
assign TX_BIT_CTRL_OUT4[164] = GND;
assign TX_BIT_CTRL_OUT4[165] = GND;
assign TX_BIT_CTRL_OUT4[166] = GND;
assign TX_BIT_CTRL_OUT4[167] = GND;
assign TX_BIT_CTRL_OUT4[168] = GND;
assign TX_BIT_CTRL_OUT4[169] = GND;
assign TX_BIT_CTRL_OUT4[170] = GND;
assign TX_BIT_CTRL_OUT4[171] = GND;
assign TX_BIT_CTRL_OUT4[172] = GND;
assign TX_BIT_CTRL_OUT4[173] = GND;
assign TX_BIT_CTRL_OUT4[174] = GND;
assign TX_BIT_CTRL_OUT4[175] = GND;
assign TX_BIT_CTRL_OUT4[176] = GND;
assign TX_BIT_CTRL_OUT4[177] = GND;
assign TX_BIT_CTRL_OUT4[178] = GND;
assign TX_BIT_CTRL_OUT4[179] = GND;
assign TX_BIT_CTRL_OUT4[180] = GND;
assign TX_BIT_CTRL_OUT4[181] = GND;
assign TX_BIT_CTRL_OUT4[182] = GND;
assign TX_BIT_CTRL_OUT4[183] = GND;
assign TX_BIT_CTRL_OUT4[184] = GND;
assign TX_BIT_CTRL_OUT4[185] = GND;
assign TX_BIT_CTRL_OUT4[186] = GND;
assign TX_BIT_CTRL_OUT4[187] = GND;
assign TX_BIT_CTRL_OUT4[188] = GND;
assign TX_BIT_CTRL_OUT4[189] = GND;
assign TX_BIT_CTRL_OUT4[190] = GND;
assign TX_BIT_CTRL_OUT4[191] = GND;
assign TX_BIT_CTRL_OUT4[192] = GND;
assign TX_BIT_CTRL_OUT4[193] = GND;
assign TX_BIT_CTRL_OUT4[194] = GND;
assign TX_BIT_CTRL_OUT4[195] = GND;
assign TX_BIT_CTRL_OUT4[196] = GND;
assign TX_BIT_CTRL_OUT4[197] = GND;
assign TX_BIT_CTRL_OUT4[198] = GND;
assign TX_BIT_CTRL_OUT4[199] = GND;
assign TX_BIT_CTRL_OUT4[200] = GND;
assign TX_BIT_CTRL_OUT4[201] = GND;
assign TX_BIT_CTRL_OUT4[202] = GND;
assign TX_BIT_CTRL_OUT4[203] = GND;
assign TX_BIT_CTRL_OUT4[204] = GND;
assign TX_BIT_CTRL_OUT4[205] = GND;
assign TX_BIT_CTRL_OUT4[206] = GND;
assign TX_BIT_CTRL_OUT4[207] = GND;
assign TX_BIT_CTRL_OUT4[208] = GND;
assign TX_BIT_CTRL_OUT4[209] = GND;
assign TX_BIT_CTRL_OUT4[210] = GND;
assign TX_BIT_CTRL_OUT4[211] = GND;
assign TX_BIT_CTRL_OUT4[212] = GND;
assign TX_BIT_CTRL_OUT4[213] = GND;
assign TX_BIT_CTRL_OUT4[214] = GND;
assign TX_BIT_CTRL_OUT4[215] = GND;
assign TX_BIT_CTRL_OUT4[216] = GND;
assign TX_BIT_CTRL_OUT4[217] = GND;
assign TX_BIT_CTRL_OUT4[218] = GND;
assign TX_BIT_CTRL_OUT4[219] = GND;
assign TX_BIT_CTRL_OUT4[220] = GND;
assign TX_BIT_CTRL_OUT4[221] = GND;
assign TX_BIT_CTRL_OUT4[222] = GND;
assign TX_BIT_CTRL_OUT4[223] = GND;
assign TX_BIT_CTRL_OUT4[224] = GND;
assign TX_BIT_CTRL_OUT4[225] = GND;
assign TX_BIT_CTRL_OUT4[226] = GND;
assign TX_BIT_CTRL_OUT4[227] = GND;
assign TX_BIT_CTRL_OUT4[228] = GND;
assign TX_BIT_CTRL_OUT4[229] = GND;
assign TX_BIT_CTRL_OUT4[230] = GND;
assign TX_BIT_CTRL_OUT4[231] = GND;
assign TX_BIT_CTRL_OUT4[232] = GND;
assign TX_BIT_CTRL_OUT4[233] = GND;
assign TX_BIT_CTRL_OUT4[234] = GND;
assign TX_BIT_CTRL_OUT4[235] = GND;
assign TX_BIT_CTRL_OUT4[236] = GND;
assign TX_BIT_CTRL_OUT4[237] = GND;
assign TX_BIT_CTRL_OUT4[238] = GND;
assign TX_BIT_CTRL_OUT4[239] = GND;
assign TX_BIT_CTRL_OUT4[240] = GND;
assign TX_BIT_CTRL_OUT4[241] = GND;
assign TX_BIT_CTRL_OUT4[242] = GND;
assign TX_BIT_CTRL_OUT4[243] = GND;
assign TX_BIT_CTRL_OUT4[244] = GND;
assign TX_BIT_CTRL_OUT4[245] = GND;
assign TX_BIT_CTRL_OUT4[246] = GND;
assign TX_BIT_CTRL_OUT4[247] = GND;
assign TX_BIT_CTRL_OUT4[248] = GND;
assign TX_BIT_CTRL_OUT4[249] = GND;
assign TX_BIT_CTRL_OUT4[250] = GND;
assign TX_BIT_CTRL_OUT4[251] = GND;
assign TX_BIT_CTRL_OUT4[252] = GND;
assign TX_BIT_CTRL_OUT4[253] = GND;
assign TX_BIT_CTRL_OUT4[254] = GND;
assign TX_BIT_CTRL_OUT4[255] = GND;
assign TX_BIT_CTRL_OUT4[256] = GND;
assign TX_BIT_CTRL_OUT4[257] = GND;
assign TX_BIT_CTRL_OUT4[258] = GND;
assign TX_BIT_CTRL_OUT4[259] = GND;
assign TX_BIT_CTRL_OUT4[260] = GND;
assign TX_BIT_CTRL_OUT4[261] = GND;
assign TX_BIT_CTRL_OUT4[262] = GND;
assign TX_BIT_CTRL_OUT4[263] = GND;
assign TX_BIT_CTRL_OUT4[264] = GND;
assign TX_BIT_CTRL_OUT4[265] = GND;
assign TX_BIT_CTRL_OUT4[266] = GND;
assign TX_BIT_CTRL_OUT4[267] = GND;
assign TX_BIT_CTRL_OUT4[268] = GND;
assign TX_BIT_CTRL_OUT4[269] = GND;
assign TX_BIT_CTRL_OUT4[270] = GND;
assign TX_BIT_CTRL_OUT4[271] = GND;
assign TX_BIT_CTRL_OUT4[272] = GND;
assign TX_BIT_CTRL_OUT4[273] = GND;
assign TX_BIT_CTRL_OUT4[274] = GND;
assign TX_BIT_CTRL_OUT4[275] = GND;
assign TX_BIT_CTRL_OUT4[276] = GND;
assign TX_BIT_CTRL_OUT4[277] = GND;
assign TX_BIT_CTRL_OUT4[278] = GND;
assign TX_BIT_CTRL_OUT4[279] = GND;
assign TX_BIT_CTRL_OUT4[280] = GND;
assign TX_BIT_CTRL_OUT4[281] = GND;
assign TX_BIT_CTRL_OUT4[282] = GND;
assign TX_BIT_CTRL_OUT4[283] = GND;
assign TX_BIT_CTRL_OUT4[284] = GND;
assign TX_BIT_CTRL_OUT4[285] = GND;
assign TX_BIT_CTRL_OUT4[286] = GND;
assign TX_BIT_CTRL_OUT4[287] = GND;
assign TX_BIT_CTRL_OUT4[288] = GND;
assign TX_BIT_CTRL_OUT4[289] = GND;
assign TX_BIT_CTRL_OUT4[290] = GND;
assign TX_BIT_CTRL_OUT4[291] = GND;
assign TX_BIT_CTRL_OUT4[292] = GND;
assign TX_BIT_CTRL_OUT4[293] = GND;
assign TX_BIT_CTRL_OUT4[294] = GND;
assign TX_BIT_CTRL_OUT4[295] = GND;
assign TX_BIT_CTRL_OUT4[296] = GND;
assign TX_BIT_CTRL_OUT4[297] = GND;
assign TX_BIT_CTRL_OUT4[298] = GND;
assign TX_BIT_CTRL_OUT4[299] = GND;
assign TX_BIT_CTRL_OUT4[300] = GND;
assign TX_BIT_CTRL_OUT4[301] = GND;
assign TX_BIT_CTRL_OUT4[302] = GND;
assign TX_BIT_CTRL_OUT4[303] = GND;
assign TX_BIT_CTRL_OUT4[304] = GND;
assign TX_BIT_CTRL_OUT4[305] = GND;
assign TX_BIT_CTRL_OUT4[306] = GND;
assign TX_BIT_CTRL_OUT4[307] = GND;
assign TX_BIT_CTRL_OUT4[308] = GND;
assign TX_BIT_CTRL_OUT4[309] = GND;
assign TX_BIT_CTRL_OUT4[310] = GND;
assign TX_BIT_CTRL_OUT4[311] = GND;
assign TX_BIT_CTRL_OUT4[312] = GND;
assign TX_BIT_CTRL_OUT4[313] = GND;
assign TX_BIT_CTRL_OUT4[314] = GND;
assign TX_BIT_CTRL_OUT4[315] = GND;
assign TX_BIT_CTRL_OUT4[316] = GND;
assign TX_BIT_CTRL_OUT4[317] = GND;
assign TX_BIT_CTRL_OUT4[318] = GND;
assign TX_BIT_CTRL_OUT4[319] = GND;
assign TX_BIT_CTRL_OUT5[0] = GND;
assign TX_BIT_CTRL_OUT5[1] = GND;
assign TX_BIT_CTRL_OUT5[2] = GND;
assign TX_BIT_CTRL_OUT5[3] = GND;
assign TX_BIT_CTRL_OUT5[4] = GND;
assign TX_BIT_CTRL_OUT5[5] = GND;
assign TX_BIT_CTRL_OUT5[6] = GND;
assign TX_BIT_CTRL_OUT5[7] = GND;
assign TX_BIT_CTRL_OUT5[8] = GND;
assign TX_BIT_CTRL_OUT5[9] = GND;
assign TX_BIT_CTRL_OUT5[10] = GND;
assign TX_BIT_CTRL_OUT5[11] = GND;
assign TX_BIT_CTRL_OUT5[12] = GND;
assign TX_BIT_CTRL_OUT5[13] = GND;
assign TX_BIT_CTRL_OUT5[14] = GND;
assign TX_BIT_CTRL_OUT5[15] = GND;
assign TX_BIT_CTRL_OUT5[16] = GND;
assign TX_BIT_CTRL_OUT5[17] = GND;
assign TX_BIT_CTRL_OUT5[18] = GND;
assign TX_BIT_CTRL_OUT5[19] = GND;
assign TX_BIT_CTRL_OUT5[20] = GND;
assign TX_BIT_CTRL_OUT5[21] = GND;
assign TX_BIT_CTRL_OUT5[22] = GND;
assign TX_BIT_CTRL_OUT5[23] = GND;
assign TX_BIT_CTRL_OUT5[24] = GND;
assign TX_BIT_CTRL_OUT5[25] = GND;
assign TX_BIT_CTRL_OUT5[26] = GND;
assign TX_BIT_CTRL_OUT5[27] = GND;
assign TX_BIT_CTRL_OUT5[28] = GND;
assign TX_BIT_CTRL_OUT5[29] = GND;
assign TX_BIT_CTRL_OUT5[30] = GND;
assign TX_BIT_CTRL_OUT5[31] = GND;
assign TX_BIT_CTRL_OUT5[32] = GND;
assign TX_BIT_CTRL_OUT5[33] = GND;
assign TX_BIT_CTRL_OUT5[34] = GND;
assign TX_BIT_CTRL_OUT5[35] = GND;
assign TX_BIT_CTRL_OUT5[36] = GND;
assign TX_BIT_CTRL_OUT5[37] = GND;
assign TX_BIT_CTRL_OUT5[38] = GND;
assign TX_BIT_CTRL_OUT5[39] = GND;
assign TX_BIT_CTRL_OUT5[40] = GND;
assign TX_BIT_CTRL_OUT5[41] = GND;
assign TX_BIT_CTRL_OUT5[42] = GND;
assign TX_BIT_CTRL_OUT5[43] = GND;
assign TX_BIT_CTRL_OUT5[44] = GND;
assign TX_BIT_CTRL_OUT5[45] = GND;
assign TX_BIT_CTRL_OUT5[46] = GND;
assign TX_BIT_CTRL_OUT5[47] = GND;
assign TX_BIT_CTRL_OUT5[48] = GND;
assign TX_BIT_CTRL_OUT5[49] = GND;
assign TX_BIT_CTRL_OUT5[50] = GND;
assign TX_BIT_CTRL_OUT5[51] = GND;
assign TX_BIT_CTRL_OUT5[52] = GND;
assign TX_BIT_CTRL_OUT5[53] = GND;
assign TX_BIT_CTRL_OUT5[54] = GND;
assign TX_BIT_CTRL_OUT5[55] = GND;
assign TX_BIT_CTRL_OUT5[56] = GND;
assign TX_BIT_CTRL_OUT5[57] = GND;
assign TX_BIT_CTRL_OUT5[58] = GND;
assign TX_BIT_CTRL_OUT5[59] = GND;
assign TX_BIT_CTRL_OUT5[60] = GND;
assign TX_BIT_CTRL_OUT5[61] = GND;
assign TX_BIT_CTRL_OUT5[62] = GND;
assign TX_BIT_CTRL_OUT5[63] = GND;
assign TX_BIT_CTRL_OUT5[64] = GND;
assign TX_BIT_CTRL_OUT5[65] = GND;
assign TX_BIT_CTRL_OUT5[66] = GND;
assign TX_BIT_CTRL_OUT5[67] = GND;
assign TX_BIT_CTRL_OUT5[68] = GND;
assign TX_BIT_CTRL_OUT5[69] = GND;
assign TX_BIT_CTRL_OUT5[70] = GND;
assign TX_BIT_CTRL_OUT5[71] = GND;
assign TX_BIT_CTRL_OUT5[72] = GND;
assign TX_BIT_CTRL_OUT5[73] = GND;
assign TX_BIT_CTRL_OUT5[74] = GND;
assign TX_BIT_CTRL_OUT5[75] = GND;
assign TX_BIT_CTRL_OUT5[76] = GND;
assign TX_BIT_CTRL_OUT5[77] = GND;
assign TX_BIT_CTRL_OUT5[78] = GND;
assign TX_BIT_CTRL_OUT5[79] = GND;
assign TX_BIT_CTRL_OUT5[80] = GND;
assign TX_BIT_CTRL_OUT5[81] = GND;
assign TX_BIT_CTRL_OUT5[82] = GND;
assign TX_BIT_CTRL_OUT5[83] = GND;
assign TX_BIT_CTRL_OUT5[84] = GND;
assign TX_BIT_CTRL_OUT5[85] = GND;
assign TX_BIT_CTRL_OUT5[86] = GND;
assign TX_BIT_CTRL_OUT5[87] = GND;
assign TX_BIT_CTRL_OUT5[88] = GND;
assign TX_BIT_CTRL_OUT5[89] = GND;
assign TX_BIT_CTRL_OUT5[90] = GND;
assign TX_BIT_CTRL_OUT5[91] = GND;
assign TX_BIT_CTRL_OUT5[92] = GND;
assign TX_BIT_CTRL_OUT5[93] = GND;
assign TX_BIT_CTRL_OUT5[94] = GND;
assign TX_BIT_CTRL_OUT5[95] = GND;
assign TX_BIT_CTRL_OUT5[96] = GND;
assign TX_BIT_CTRL_OUT5[97] = GND;
assign TX_BIT_CTRL_OUT5[98] = GND;
assign TX_BIT_CTRL_OUT5[99] = GND;
assign TX_BIT_CTRL_OUT5[100] = GND;
assign TX_BIT_CTRL_OUT5[101] = GND;
assign TX_BIT_CTRL_OUT5[102] = GND;
assign TX_BIT_CTRL_OUT5[103] = GND;
assign TX_BIT_CTRL_OUT5[104] = GND;
assign TX_BIT_CTRL_OUT5[105] = GND;
assign TX_BIT_CTRL_OUT5[106] = GND;
assign TX_BIT_CTRL_OUT5[107] = GND;
assign TX_BIT_CTRL_OUT5[108] = GND;
assign TX_BIT_CTRL_OUT5[109] = GND;
assign TX_BIT_CTRL_OUT5[110] = GND;
assign TX_BIT_CTRL_OUT5[111] = GND;
assign TX_BIT_CTRL_OUT5[112] = GND;
assign TX_BIT_CTRL_OUT5[113] = GND;
assign TX_BIT_CTRL_OUT5[114] = GND;
assign TX_BIT_CTRL_OUT5[115] = GND;
assign TX_BIT_CTRL_OUT5[116] = GND;
assign TX_BIT_CTRL_OUT5[117] = GND;
assign TX_BIT_CTRL_OUT5[118] = GND;
assign TX_BIT_CTRL_OUT5[119] = GND;
assign TX_BIT_CTRL_OUT5[160] = GND;
assign TX_BIT_CTRL_OUT5[161] = GND;
assign TX_BIT_CTRL_OUT5[162] = GND;
assign TX_BIT_CTRL_OUT5[163] = GND;
assign TX_BIT_CTRL_OUT5[164] = GND;
assign TX_BIT_CTRL_OUT5[165] = GND;
assign TX_BIT_CTRL_OUT5[166] = GND;
assign TX_BIT_CTRL_OUT5[167] = GND;
assign TX_BIT_CTRL_OUT5[168] = GND;
assign TX_BIT_CTRL_OUT5[169] = GND;
assign TX_BIT_CTRL_OUT5[170] = GND;
assign TX_BIT_CTRL_OUT5[171] = GND;
assign TX_BIT_CTRL_OUT5[172] = GND;
assign TX_BIT_CTRL_OUT5[173] = GND;
assign TX_BIT_CTRL_OUT5[174] = GND;
assign TX_BIT_CTRL_OUT5[175] = GND;
assign TX_BIT_CTRL_OUT5[176] = GND;
assign TX_BIT_CTRL_OUT5[177] = GND;
assign TX_BIT_CTRL_OUT5[178] = GND;
assign TX_BIT_CTRL_OUT5[179] = GND;
assign TX_BIT_CTRL_OUT5[180] = GND;
assign TX_BIT_CTRL_OUT5[181] = GND;
assign TX_BIT_CTRL_OUT5[182] = GND;
assign TX_BIT_CTRL_OUT5[183] = GND;
assign TX_BIT_CTRL_OUT5[184] = GND;
assign TX_BIT_CTRL_OUT5[185] = GND;
assign TX_BIT_CTRL_OUT5[186] = GND;
assign TX_BIT_CTRL_OUT5[187] = GND;
assign TX_BIT_CTRL_OUT5[188] = GND;
assign TX_BIT_CTRL_OUT5[189] = GND;
assign TX_BIT_CTRL_OUT5[190] = GND;
assign TX_BIT_CTRL_OUT5[191] = GND;
assign TX_BIT_CTRL_OUT5[192] = GND;
assign TX_BIT_CTRL_OUT5[193] = GND;
assign TX_BIT_CTRL_OUT5[194] = GND;
assign TX_BIT_CTRL_OUT5[195] = GND;
assign TX_BIT_CTRL_OUT5[196] = GND;
assign TX_BIT_CTRL_OUT5[197] = GND;
assign TX_BIT_CTRL_OUT5[198] = GND;
assign TX_BIT_CTRL_OUT5[199] = GND;
assign TX_BIT_CTRL_OUT5[200] = GND;
assign TX_BIT_CTRL_OUT5[201] = GND;
assign TX_BIT_CTRL_OUT5[202] = GND;
assign TX_BIT_CTRL_OUT5[203] = GND;
assign TX_BIT_CTRL_OUT5[204] = GND;
assign TX_BIT_CTRL_OUT5[205] = GND;
assign TX_BIT_CTRL_OUT5[206] = GND;
assign TX_BIT_CTRL_OUT5[207] = GND;
assign TX_BIT_CTRL_OUT5[208] = GND;
assign TX_BIT_CTRL_OUT5[209] = GND;
assign TX_BIT_CTRL_OUT5[210] = GND;
assign TX_BIT_CTRL_OUT5[211] = GND;
assign TX_BIT_CTRL_OUT5[212] = GND;
assign TX_BIT_CTRL_OUT5[213] = GND;
assign TX_BIT_CTRL_OUT5[214] = GND;
assign TX_BIT_CTRL_OUT5[215] = GND;
assign TX_BIT_CTRL_OUT5[216] = GND;
assign TX_BIT_CTRL_OUT5[217] = GND;
assign TX_BIT_CTRL_OUT5[218] = GND;
assign TX_BIT_CTRL_OUT5[219] = GND;
assign TX_BIT_CTRL_OUT5[220] = GND;
assign TX_BIT_CTRL_OUT5[221] = GND;
assign TX_BIT_CTRL_OUT5[222] = GND;
assign TX_BIT_CTRL_OUT5[223] = GND;
assign TX_BIT_CTRL_OUT5[224] = GND;
assign TX_BIT_CTRL_OUT5[225] = GND;
assign TX_BIT_CTRL_OUT5[226] = GND;
assign TX_BIT_CTRL_OUT5[227] = GND;
assign TX_BIT_CTRL_OUT5[228] = GND;
assign TX_BIT_CTRL_OUT5[229] = GND;
assign TX_BIT_CTRL_OUT5[230] = GND;
assign TX_BIT_CTRL_OUT5[231] = GND;
assign TX_BIT_CTRL_OUT5[232] = GND;
assign TX_BIT_CTRL_OUT5[233] = GND;
assign TX_BIT_CTRL_OUT5[234] = GND;
assign TX_BIT_CTRL_OUT5[235] = GND;
assign TX_BIT_CTRL_OUT5[236] = GND;
assign TX_BIT_CTRL_OUT5[237] = GND;
assign TX_BIT_CTRL_OUT5[238] = GND;
assign TX_BIT_CTRL_OUT5[239] = GND;
assign TX_BIT_CTRL_OUT5[240] = GND;
assign TX_BIT_CTRL_OUT5[241] = GND;
assign TX_BIT_CTRL_OUT5[242] = GND;
assign TX_BIT_CTRL_OUT5[243] = GND;
assign TX_BIT_CTRL_OUT5[244] = GND;
assign TX_BIT_CTRL_OUT5[245] = GND;
assign TX_BIT_CTRL_OUT5[246] = GND;
assign TX_BIT_CTRL_OUT5[247] = GND;
assign TX_BIT_CTRL_OUT5[248] = GND;
assign TX_BIT_CTRL_OUT5[249] = GND;
assign TX_BIT_CTRL_OUT5[250] = GND;
assign TX_BIT_CTRL_OUT5[251] = GND;
assign TX_BIT_CTRL_OUT5[252] = GND;
assign TX_BIT_CTRL_OUT5[253] = GND;
assign TX_BIT_CTRL_OUT5[254] = GND;
assign TX_BIT_CTRL_OUT5[255] = GND;
assign TX_BIT_CTRL_OUT5[256] = GND;
assign TX_BIT_CTRL_OUT5[257] = GND;
assign TX_BIT_CTRL_OUT5[258] = GND;
assign TX_BIT_CTRL_OUT5[259] = GND;
assign TX_BIT_CTRL_OUT5[260] = GND;
assign TX_BIT_CTRL_OUT5[261] = GND;
assign TX_BIT_CTRL_OUT5[262] = GND;
assign TX_BIT_CTRL_OUT5[263] = GND;
assign TX_BIT_CTRL_OUT5[264] = GND;
assign TX_BIT_CTRL_OUT5[265] = GND;
assign TX_BIT_CTRL_OUT5[266] = GND;
assign TX_BIT_CTRL_OUT5[267] = GND;
assign TX_BIT_CTRL_OUT5[268] = GND;
assign TX_BIT_CTRL_OUT5[269] = GND;
assign TX_BIT_CTRL_OUT5[270] = GND;
assign TX_BIT_CTRL_OUT5[271] = GND;
assign TX_BIT_CTRL_OUT5[272] = GND;
assign TX_BIT_CTRL_OUT5[273] = GND;
assign TX_BIT_CTRL_OUT5[274] = GND;
assign TX_BIT_CTRL_OUT5[275] = GND;
assign TX_BIT_CTRL_OUT5[276] = GND;
assign TX_BIT_CTRL_OUT5[277] = GND;
assign TX_BIT_CTRL_OUT5[278] = GND;
assign TX_BIT_CTRL_OUT5[279] = GND;
assign TX_BIT_CTRL_OUT5[280] = GND;
assign TX_BIT_CTRL_OUT5[281] = GND;
assign TX_BIT_CTRL_OUT5[282] = GND;
assign TX_BIT_CTRL_OUT5[283] = GND;
assign TX_BIT_CTRL_OUT5[284] = GND;
assign TX_BIT_CTRL_OUT5[285] = GND;
assign TX_BIT_CTRL_OUT5[286] = GND;
assign TX_BIT_CTRL_OUT5[287] = GND;
assign TX_BIT_CTRL_OUT5[288] = GND;
assign TX_BIT_CTRL_OUT5[289] = GND;
assign TX_BIT_CTRL_OUT5[290] = GND;
assign TX_BIT_CTRL_OUT5[291] = GND;
assign TX_BIT_CTRL_OUT5[292] = GND;
assign TX_BIT_CTRL_OUT5[293] = GND;
assign TX_BIT_CTRL_OUT5[294] = GND;
assign TX_BIT_CTRL_OUT5[295] = GND;
assign TX_BIT_CTRL_OUT5[296] = GND;
assign TX_BIT_CTRL_OUT5[297] = GND;
assign TX_BIT_CTRL_OUT5[298] = GND;
assign TX_BIT_CTRL_OUT5[299] = GND;
assign TX_BIT_CTRL_OUT5[300] = GND;
assign TX_BIT_CTRL_OUT5[301] = GND;
assign TX_BIT_CTRL_OUT5[302] = GND;
assign TX_BIT_CTRL_OUT5[303] = GND;
assign TX_BIT_CTRL_OUT5[304] = GND;
assign TX_BIT_CTRL_OUT5[305] = GND;
assign TX_BIT_CTRL_OUT5[306] = GND;
assign TX_BIT_CTRL_OUT5[307] = GND;
assign TX_BIT_CTRL_OUT5[308] = GND;
assign TX_BIT_CTRL_OUT5[309] = GND;
assign TX_BIT_CTRL_OUT5[310] = GND;
assign TX_BIT_CTRL_OUT5[311] = GND;
assign TX_BIT_CTRL_OUT5[312] = GND;
assign TX_BIT_CTRL_OUT5[313] = GND;
assign TX_BIT_CTRL_OUT5[314] = GND;
assign TX_BIT_CTRL_OUT5[315] = GND;
assign TX_BIT_CTRL_OUT5[316] = GND;
assign TX_BIT_CTRL_OUT5[317] = GND;
assign TX_BIT_CTRL_OUT5[318] = GND;
assign TX_BIT_CTRL_OUT5[319] = GND;
assign TX_BIT_CTRL_OUT6[0] = GND;
assign TX_BIT_CTRL_OUT6[1] = GND;
assign TX_BIT_CTRL_OUT6[2] = GND;
assign TX_BIT_CTRL_OUT6[3] = GND;
assign TX_BIT_CTRL_OUT6[4] = GND;
assign TX_BIT_CTRL_OUT6[5] = GND;
assign TX_BIT_CTRL_OUT6[6] = GND;
assign TX_BIT_CTRL_OUT6[7] = GND;
assign TX_BIT_CTRL_OUT6[8] = GND;
assign TX_BIT_CTRL_OUT6[9] = GND;
assign TX_BIT_CTRL_OUT6[10] = GND;
assign TX_BIT_CTRL_OUT6[11] = GND;
assign TX_BIT_CTRL_OUT6[12] = GND;
assign TX_BIT_CTRL_OUT6[13] = GND;
assign TX_BIT_CTRL_OUT6[14] = GND;
assign TX_BIT_CTRL_OUT6[15] = GND;
assign TX_BIT_CTRL_OUT6[16] = GND;
assign TX_BIT_CTRL_OUT6[17] = GND;
assign TX_BIT_CTRL_OUT6[18] = GND;
assign TX_BIT_CTRL_OUT6[19] = GND;
assign TX_BIT_CTRL_OUT6[20] = GND;
assign TX_BIT_CTRL_OUT6[21] = GND;
assign TX_BIT_CTRL_OUT6[22] = GND;
assign TX_BIT_CTRL_OUT6[23] = GND;
assign TX_BIT_CTRL_OUT6[24] = GND;
assign TX_BIT_CTRL_OUT6[25] = GND;
assign TX_BIT_CTRL_OUT6[26] = GND;
assign TX_BIT_CTRL_OUT6[27] = GND;
assign TX_BIT_CTRL_OUT6[28] = GND;
assign TX_BIT_CTRL_OUT6[29] = GND;
assign TX_BIT_CTRL_OUT6[30] = GND;
assign TX_BIT_CTRL_OUT6[31] = GND;
assign TX_BIT_CTRL_OUT6[32] = GND;
assign TX_BIT_CTRL_OUT6[33] = GND;
assign TX_BIT_CTRL_OUT6[34] = GND;
assign TX_BIT_CTRL_OUT6[35] = GND;
assign TX_BIT_CTRL_OUT6[36] = GND;
assign TX_BIT_CTRL_OUT6[37] = GND;
assign TX_BIT_CTRL_OUT6[38] = GND;
assign TX_BIT_CTRL_OUT6[39] = GND;
assign TX_BIT_CTRL_OUT6[40] = GND;
assign TX_BIT_CTRL_OUT6[41] = GND;
assign TX_BIT_CTRL_OUT6[42] = GND;
assign TX_BIT_CTRL_OUT6[43] = GND;
assign TX_BIT_CTRL_OUT6[44] = GND;
assign TX_BIT_CTRL_OUT6[45] = GND;
assign TX_BIT_CTRL_OUT6[46] = GND;
assign TX_BIT_CTRL_OUT6[47] = GND;
assign TX_BIT_CTRL_OUT6[48] = GND;
assign TX_BIT_CTRL_OUT6[49] = GND;
assign TX_BIT_CTRL_OUT6[50] = GND;
assign TX_BIT_CTRL_OUT6[51] = GND;
assign TX_BIT_CTRL_OUT6[52] = GND;
assign TX_BIT_CTRL_OUT6[53] = GND;
assign TX_BIT_CTRL_OUT6[54] = GND;
assign TX_BIT_CTRL_OUT6[55] = GND;
assign TX_BIT_CTRL_OUT6[56] = GND;
assign TX_BIT_CTRL_OUT6[57] = GND;
assign TX_BIT_CTRL_OUT6[58] = GND;
assign TX_BIT_CTRL_OUT6[59] = GND;
assign TX_BIT_CTRL_OUT6[60] = GND;
assign TX_BIT_CTRL_OUT6[61] = GND;
assign TX_BIT_CTRL_OUT6[62] = GND;
assign TX_BIT_CTRL_OUT6[63] = GND;
assign TX_BIT_CTRL_OUT6[64] = GND;
assign TX_BIT_CTRL_OUT6[65] = GND;
assign TX_BIT_CTRL_OUT6[66] = GND;
assign TX_BIT_CTRL_OUT6[67] = GND;
assign TX_BIT_CTRL_OUT6[68] = GND;
assign TX_BIT_CTRL_OUT6[69] = GND;
assign TX_BIT_CTRL_OUT6[70] = GND;
assign TX_BIT_CTRL_OUT6[71] = GND;
assign TX_BIT_CTRL_OUT6[72] = GND;
assign TX_BIT_CTRL_OUT6[73] = GND;
assign TX_BIT_CTRL_OUT6[74] = GND;
assign TX_BIT_CTRL_OUT6[75] = GND;
assign TX_BIT_CTRL_OUT6[76] = GND;
assign TX_BIT_CTRL_OUT6[77] = GND;
assign TX_BIT_CTRL_OUT6[78] = GND;
assign TX_BIT_CTRL_OUT6[79] = GND;
assign TX_BIT_CTRL_OUT6[80] = GND;
assign TX_BIT_CTRL_OUT6[81] = GND;
assign TX_BIT_CTRL_OUT6[82] = GND;
assign TX_BIT_CTRL_OUT6[83] = GND;
assign TX_BIT_CTRL_OUT6[84] = GND;
assign TX_BIT_CTRL_OUT6[85] = GND;
assign TX_BIT_CTRL_OUT6[86] = GND;
assign TX_BIT_CTRL_OUT6[87] = GND;
assign TX_BIT_CTRL_OUT6[88] = GND;
assign TX_BIT_CTRL_OUT6[89] = GND;
assign TX_BIT_CTRL_OUT6[90] = GND;
assign TX_BIT_CTRL_OUT6[91] = GND;
assign TX_BIT_CTRL_OUT6[92] = GND;
assign TX_BIT_CTRL_OUT6[93] = GND;
assign TX_BIT_CTRL_OUT6[94] = GND;
assign TX_BIT_CTRL_OUT6[95] = GND;
assign TX_BIT_CTRL_OUT6[96] = GND;
assign TX_BIT_CTRL_OUT6[97] = GND;
assign TX_BIT_CTRL_OUT6[98] = GND;
assign TX_BIT_CTRL_OUT6[99] = GND;
assign TX_BIT_CTRL_OUT6[100] = GND;
assign TX_BIT_CTRL_OUT6[101] = GND;
assign TX_BIT_CTRL_OUT6[102] = GND;
assign TX_BIT_CTRL_OUT6[103] = GND;
assign TX_BIT_CTRL_OUT6[104] = GND;
assign TX_BIT_CTRL_OUT6[105] = GND;
assign TX_BIT_CTRL_OUT6[106] = GND;
assign TX_BIT_CTRL_OUT6[107] = GND;
assign TX_BIT_CTRL_OUT6[108] = GND;
assign TX_BIT_CTRL_OUT6[109] = GND;
assign TX_BIT_CTRL_OUT6[110] = GND;
assign TX_BIT_CTRL_OUT6[111] = GND;
assign TX_BIT_CTRL_OUT6[112] = GND;
assign TX_BIT_CTRL_OUT6[113] = GND;
assign TX_BIT_CTRL_OUT6[114] = GND;
assign TX_BIT_CTRL_OUT6[115] = GND;
assign TX_BIT_CTRL_OUT6[116] = GND;
assign TX_BIT_CTRL_OUT6[117] = GND;
assign TX_BIT_CTRL_OUT6[118] = GND;
assign TX_BIT_CTRL_OUT6[119] = GND;
assign TX_BIT_CTRL_OUT6[120] = GND;
assign TX_BIT_CTRL_OUT6[121] = GND;
assign TX_BIT_CTRL_OUT6[122] = GND;
assign TX_BIT_CTRL_OUT6[123] = GND;
assign TX_BIT_CTRL_OUT6[124] = GND;
assign TX_BIT_CTRL_OUT6[125] = GND;
assign TX_BIT_CTRL_OUT6[126] = GND;
assign TX_BIT_CTRL_OUT6[127] = GND;
assign TX_BIT_CTRL_OUT6[128] = GND;
assign TX_BIT_CTRL_OUT6[129] = GND;
assign TX_BIT_CTRL_OUT6[130] = GND;
assign TX_BIT_CTRL_OUT6[131] = GND;
assign TX_BIT_CTRL_OUT6[132] = GND;
assign TX_BIT_CTRL_OUT6[133] = GND;
assign TX_BIT_CTRL_OUT6[134] = GND;
assign TX_BIT_CTRL_OUT6[135] = GND;
assign TX_BIT_CTRL_OUT6[136] = GND;
assign TX_BIT_CTRL_OUT6[137] = GND;
assign TX_BIT_CTRL_OUT6[138] = GND;
assign TX_BIT_CTRL_OUT6[139] = GND;
assign TX_BIT_CTRL_OUT6[140] = GND;
assign TX_BIT_CTRL_OUT6[141] = GND;
assign TX_BIT_CTRL_OUT6[142] = GND;
assign TX_BIT_CTRL_OUT6[143] = GND;
assign TX_BIT_CTRL_OUT6[144] = GND;
assign TX_BIT_CTRL_OUT6[145] = GND;
assign TX_BIT_CTRL_OUT6[146] = GND;
assign TX_BIT_CTRL_OUT6[147] = GND;
assign TX_BIT_CTRL_OUT6[148] = GND;
assign TX_BIT_CTRL_OUT6[149] = GND;
assign TX_BIT_CTRL_OUT6[150] = GND;
assign TX_BIT_CTRL_OUT6[151] = GND;
assign TX_BIT_CTRL_OUT6[152] = GND;
assign TX_BIT_CTRL_OUT6[153] = GND;
assign TX_BIT_CTRL_OUT6[154] = GND;
assign TX_BIT_CTRL_OUT6[155] = GND;
assign TX_BIT_CTRL_OUT6[156] = GND;
assign TX_BIT_CTRL_OUT6[157] = GND;
assign TX_BIT_CTRL_OUT6[158] = GND;
assign TX_BIT_CTRL_OUT6[159] = GND;
assign TX_BIT_CTRL_OUT6[160] = GND;
assign TX_BIT_CTRL_OUT6[161] = GND;
assign TX_BIT_CTRL_OUT6[162] = GND;
assign TX_BIT_CTRL_OUT6[163] = GND;
assign TX_BIT_CTRL_OUT6[164] = GND;
assign TX_BIT_CTRL_OUT6[165] = GND;
assign TX_BIT_CTRL_OUT6[166] = GND;
assign TX_BIT_CTRL_OUT6[167] = GND;
assign TX_BIT_CTRL_OUT6[168] = GND;
assign TX_BIT_CTRL_OUT6[169] = GND;
assign TX_BIT_CTRL_OUT6[170] = GND;
assign TX_BIT_CTRL_OUT6[171] = GND;
assign TX_BIT_CTRL_OUT6[172] = GND;
assign TX_BIT_CTRL_OUT6[173] = GND;
assign TX_BIT_CTRL_OUT6[174] = GND;
assign TX_BIT_CTRL_OUT6[175] = GND;
assign TX_BIT_CTRL_OUT6[176] = GND;
assign TX_BIT_CTRL_OUT6[177] = GND;
assign TX_BIT_CTRL_OUT6[178] = GND;
assign TX_BIT_CTRL_OUT6[179] = GND;
assign TX_BIT_CTRL_OUT6[180] = GND;
assign TX_BIT_CTRL_OUT6[181] = GND;
assign TX_BIT_CTRL_OUT6[182] = GND;
assign TX_BIT_CTRL_OUT6[183] = GND;
assign TX_BIT_CTRL_OUT6[184] = GND;
assign TX_BIT_CTRL_OUT6[185] = GND;
assign TX_BIT_CTRL_OUT6[186] = GND;
assign TX_BIT_CTRL_OUT6[187] = GND;
assign TX_BIT_CTRL_OUT6[188] = GND;
assign TX_BIT_CTRL_OUT6[189] = GND;
assign TX_BIT_CTRL_OUT6[190] = GND;
assign TX_BIT_CTRL_OUT6[191] = GND;
assign TX_BIT_CTRL_OUT6[192] = GND;
assign TX_BIT_CTRL_OUT6[193] = GND;
assign TX_BIT_CTRL_OUT6[194] = GND;
assign TX_BIT_CTRL_OUT6[195] = GND;
assign TX_BIT_CTRL_OUT6[196] = GND;
assign TX_BIT_CTRL_OUT6[197] = GND;
assign TX_BIT_CTRL_OUT6[198] = GND;
assign TX_BIT_CTRL_OUT6[199] = GND;
assign TX_BIT_CTRL_OUT6[200] = GND;
assign TX_BIT_CTRL_OUT6[201] = GND;
assign TX_BIT_CTRL_OUT6[202] = GND;
assign TX_BIT_CTRL_OUT6[203] = GND;
assign TX_BIT_CTRL_OUT6[204] = GND;
assign TX_BIT_CTRL_OUT6[205] = GND;
assign TX_BIT_CTRL_OUT6[206] = GND;
assign TX_BIT_CTRL_OUT6[207] = GND;
assign TX_BIT_CTRL_OUT6[208] = GND;
assign TX_BIT_CTRL_OUT6[209] = GND;
assign TX_BIT_CTRL_OUT6[210] = GND;
assign TX_BIT_CTRL_OUT6[211] = GND;
assign TX_BIT_CTRL_OUT6[212] = GND;
assign TX_BIT_CTRL_OUT6[213] = GND;
assign TX_BIT_CTRL_OUT6[214] = GND;
assign TX_BIT_CTRL_OUT6[215] = GND;
assign TX_BIT_CTRL_OUT6[216] = GND;
assign TX_BIT_CTRL_OUT6[217] = GND;
assign TX_BIT_CTRL_OUT6[218] = GND;
assign TX_BIT_CTRL_OUT6[219] = GND;
assign TX_BIT_CTRL_OUT6[220] = GND;
assign TX_BIT_CTRL_OUT6[221] = GND;
assign TX_BIT_CTRL_OUT6[222] = GND;
assign TX_BIT_CTRL_OUT6[223] = GND;
assign TX_BIT_CTRL_OUT6[224] = GND;
assign TX_BIT_CTRL_OUT6[225] = GND;
assign TX_BIT_CTRL_OUT6[226] = GND;
assign TX_BIT_CTRL_OUT6[227] = GND;
assign TX_BIT_CTRL_OUT6[228] = GND;
assign TX_BIT_CTRL_OUT6[229] = GND;
assign TX_BIT_CTRL_OUT6[230] = GND;
assign TX_BIT_CTRL_OUT6[231] = GND;
assign TX_BIT_CTRL_OUT6[232] = GND;
assign TX_BIT_CTRL_OUT6[233] = GND;
assign TX_BIT_CTRL_OUT6[234] = GND;
assign TX_BIT_CTRL_OUT6[235] = GND;
assign TX_BIT_CTRL_OUT6[236] = GND;
assign TX_BIT_CTRL_OUT6[237] = GND;
assign TX_BIT_CTRL_OUT6[238] = GND;
assign TX_BIT_CTRL_OUT6[239] = GND;
assign TX_BIT_CTRL_OUT6[240] = GND;
assign TX_BIT_CTRL_OUT6[241] = GND;
assign TX_BIT_CTRL_OUT6[242] = GND;
assign TX_BIT_CTRL_OUT6[243] = GND;
assign TX_BIT_CTRL_OUT6[244] = GND;
assign TX_BIT_CTRL_OUT6[245] = GND;
assign TX_BIT_CTRL_OUT6[246] = GND;
assign TX_BIT_CTRL_OUT6[247] = GND;
assign TX_BIT_CTRL_OUT6[248] = GND;
assign TX_BIT_CTRL_OUT6[249] = GND;
assign TX_BIT_CTRL_OUT6[250] = GND;
assign TX_BIT_CTRL_OUT6[251] = GND;
assign TX_BIT_CTRL_OUT6[252] = GND;
assign TX_BIT_CTRL_OUT6[253] = GND;
assign TX_BIT_CTRL_OUT6[254] = GND;
assign TX_BIT_CTRL_OUT6[255] = GND;
assign TX_BIT_CTRL_OUT6[256] = GND;
assign TX_BIT_CTRL_OUT6[257] = GND;
assign TX_BIT_CTRL_OUT6[258] = GND;
assign TX_BIT_CTRL_OUT6[259] = GND;
assign TX_BIT_CTRL_OUT6[260] = GND;
assign TX_BIT_CTRL_OUT6[261] = GND;
assign TX_BIT_CTRL_OUT6[262] = GND;
assign TX_BIT_CTRL_OUT6[263] = GND;
assign TX_BIT_CTRL_OUT6[264] = GND;
assign TX_BIT_CTRL_OUT6[265] = GND;
assign TX_BIT_CTRL_OUT6[266] = GND;
assign TX_BIT_CTRL_OUT6[267] = GND;
assign TX_BIT_CTRL_OUT6[268] = GND;
assign TX_BIT_CTRL_OUT6[269] = GND;
assign TX_BIT_CTRL_OUT6[270] = GND;
assign TX_BIT_CTRL_OUT6[271] = GND;
assign TX_BIT_CTRL_OUT6[272] = GND;
assign TX_BIT_CTRL_OUT6[273] = GND;
assign TX_BIT_CTRL_OUT6[274] = GND;
assign TX_BIT_CTRL_OUT6[275] = GND;
assign TX_BIT_CTRL_OUT6[276] = GND;
assign TX_BIT_CTRL_OUT6[277] = GND;
assign TX_BIT_CTRL_OUT6[278] = GND;
assign TX_BIT_CTRL_OUT6[279] = GND;
assign TX_BIT_CTRL_OUT6[280] = GND;
assign TX_BIT_CTRL_OUT6[281] = GND;
assign TX_BIT_CTRL_OUT6[282] = GND;
assign TX_BIT_CTRL_OUT6[283] = GND;
assign TX_BIT_CTRL_OUT6[284] = GND;
assign TX_BIT_CTRL_OUT6[285] = GND;
assign TX_BIT_CTRL_OUT6[286] = GND;
assign TX_BIT_CTRL_OUT6[287] = GND;
assign TX_BIT_CTRL_OUT6[288] = GND;
assign TX_BIT_CTRL_OUT6[289] = GND;
assign TX_BIT_CTRL_OUT6[290] = GND;
assign TX_BIT_CTRL_OUT6[291] = GND;
assign TX_BIT_CTRL_OUT6[292] = GND;
assign TX_BIT_CTRL_OUT6[293] = GND;
assign TX_BIT_CTRL_OUT6[294] = GND;
assign TX_BIT_CTRL_OUT6[295] = GND;
assign TX_BIT_CTRL_OUT6[296] = GND;
assign TX_BIT_CTRL_OUT6[297] = GND;
assign TX_BIT_CTRL_OUT6[298] = GND;
assign TX_BIT_CTRL_OUT6[299] = GND;
assign TX_BIT_CTRL_OUT6[300] = GND;
assign TX_BIT_CTRL_OUT6[301] = GND;
assign TX_BIT_CTRL_OUT6[302] = GND;
assign TX_BIT_CTRL_OUT6[303] = GND;
assign TX_BIT_CTRL_OUT6[304] = GND;
assign TX_BIT_CTRL_OUT6[305] = GND;
assign TX_BIT_CTRL_OUT6[306] = GND;
assign TX_BIT_CTRL_OUT6[307] = GND;
assign TX_BIT_CTRL_OUT6[308] = GND;
assign TX_BIT_CTRL_OUT6[309] = GND;
assign TX_BIT_CTRL_OUT6[310] = GND;
assign TX_BIT_CTRL_OUT6[311] = GND;
assign TX_BIT_CTRL_OUT6[312] = GND;
assign TX_BIT_CTRL_OUT6[313] = GND;
assign TX_BIT_CTRL_OUT6[314] = GND;
assign TX_BIT_CTRL_OUT6[315] = GND;
assign TX_BIT_CTRL_OUT6[316] = GND;
assign TX_BIT_CTRL_OUT6[317] = GND;
assign TX_BIT_CTRL_OUT6[318] = GND;
assign TX_BIT_CTRL_OUT6[319] = GND;
assign DLY_RDY[0] = VCC;
assign DLY_RDY[1] = GND;
assign DLY_RDY[2] = VCC;
assign DLY_RDY[3] = GND;
assign DLY_RDY[4] = VCC;
assign DLY_RDY[5] = VCC;
assign DLY_RDY[6] = VCC;
assign DLY_RDY[7] = VCC;
assign VTC_RDY[0] = VCC;
assign VTC_RDY[1] = GND;
assign VTC_RDY[2] = VCC;
assign VTC_RDY[3] = GND;
assign VTC_RDY[4] = VCC;
assign VTC_RDY[5] = VCC;
assign VTC_RDY[6] = VCC;
assign VTC_RDY[7] = VCC;
endmodule /* hstdm_ultrascale_bitslice_control_8s_40s_DIV2_10s_10s_0s_0s_0s_0s_ULTRASCALE_PLUS_Z1_FB1_uA */

(* haps_ip_type="hstdm" *)module hstdm_ultrascale_bitslice_control_8s_40s_DIV2_10s_10s_0s_0s_0s_0s_ULTRASCALE_PLUS_Z1_0_FB1_uA (
  RX_BIT_CTRL_OUT0,
  RX_BIT_CTRL_OUT1,
  RX_BIT_CTRL_OUT2,
  RX_BIT_CTRL_OUT3,
  RX_BIT_CTRL_OUT4,
  RX_BIT_CTRL_OUT5,
  RX_BIT_CTRL_OUT6,
  TX_BIT_CTRL_OUT0,
  TX_BIT_CTRL_OUT1,
  TX_BIT_CTRL_OUT2,
  TX_BIT_CTRL_OUT3,
  TX_BIT_CTRL_OUT4,
  TX_BIT_CTRL_OUT5,
  TX_BIT_CTRL_OUT6,
  RX_BIT_CTRL_IN0,
  RX_BIT_CTRL_IN1,
  RX_BIT_CTRL_IN2,
  RX_BIT_CTRL_IN3,
  RX_BIT_CTRL_IN4,
  RX_BIT_CTRL_IN5,
  RX_BIT_CTRL_IN6,
  TX_BIT_CTRL_IN0,
  TX_BIT_CTRL_IN1,
  TX_BIT_CTRL_IN2,
  TX_BIT_CTRL_IN3,
  TX_BIT_CTRL_IN4,
  TX_BIT_CTRL_IN5,
  TX_BIT_CTRL_IN6,
  DLY_RDY,
  VTC_RDY,
  PLL_CLK,
  RST,
  EN_VTC,
  RIU_ADDR,
  RIU_CLK,
  RIU_NIBBLE_SEL_LOWER,
  RIU_NIBBLE_SEL_UPPER,
  RIU_WR_DATA,
  RIU_WR_EN
)
;
output [319:0] RX_BIT_CTRL_OUT0 ;
output [319:0] RX_BIT_CTRL_OUT1 ;
output [319:0] RX_BIT_CTRL_OUT2 ;
output [319:0] RX_BIT_CTRL_OUT3 ;
output [319:0] RX_BIT_CTRL_OUT4 ;
output [319:0] RX_BIT_CTRL_OUT5 ;
output [319:0] RX_BIT_CTRL_OUT6 ;
output [319:0] TX_BIT_CTRL_OUT0 ;
output [319:0] TX_BIT_CTRL_OUT1 ;
output [319:0] TX_BIT_CTRL_OUT2 ;
output [319:0] TX_BIT_CTRL_OUT3 ;
output [319:0] TX_BIT_CTRL_OUT4 ;
output [319:0] TX_BIT_CTRL_OUT5 ;
output [319:0] TX_BIT_CTRL_OUT6 ;
input [319:0] RX_BIT_CTRL_IN0 ;
input [319:0] RX_BIT_CTRL_IN1 ;
input [319:0] RX_BIT_CTRL_IN2 ;
input [319:0] RX_BIT_CTRL_IN3 ;
input [319:0] RX_BIT_CTRL_IN4 ;
input [319:0] RX_BIT_CTRL_IN5 ;
input [319:0] RX_BIT_CTRL_IN6 ;
input [319:0] TX_BIT_CTRL_IN0 ;
input [319:0] TX_BIT_CTRL_IN1 ;
input [319:0] TX_BIT_CTRL_IN2 ;
input [319:0] TX_BIT_CTRL_IN3 ;
input [319:0] TX_BIT_CTRL_IN4 ;
input [319:0] TX_BIT_CTRL_IN5 ;
input [319:0] TX_BIT_CTRL_IN6 ;
output [7:0] DLY_RDY ;
output [7:0] VTC_RDY ;
input PLL_CLK ;
input RST ;
input EN_VTC ;
input [5:0] RIU_ADDR ;
input RIU_CLK ;
input RIU_NIBBLE_SEL_LOWER ;
input RIU_NIBBLE_SEL_UPPER ;
input [15:0] RIU_WR_DATA ;
input RIU_WR_EN ;
wire PLL_CLK ;
wire RST ;
wire EN_VTC ;
wire RIU_CLK ;
wire RIU_NIBBLE_SEL_LOWER ;
wire RIU_NIBBLE_SEL_UPPER ;
wire RIU_WR_EN ;
wire [79:40] RX_BIT_CTRL_OUT0_1;
wire [159:40] RX_BIT_CTRL_OUT1_1;
wire [159:120] RX_BIT_CTRL_OUT2_1;
wire [159:120] RX_BIT_CTRL_OUT3_1;
wire [79:40] RX_BIT_CTRL_OUT4_1;
wire [79:40] RX_BIT_CTRL_OUT5_1;
wire [159:40] RX_BIT_CTRL_OUT6_1;
wire [79:40] TX_BIT_CTRL_OUT0_1;
wire [159:40] TX_BIT_CTRL_OUT1_1;
wire [159:120] TX_BIT_CTRL_OUT2_1;
wire [159:120] TX_BIT_CTRL_OUT3_1;
wire [79:40] TX_BIT_CTRL_OUT4_1;
wire [79:40] TX_BIT_CTRL_OUT5_1;
wire [159:40] TX_BIT_CTRL_OUT6_1;
wire [3:1] DLY_RDY_1;
wire [3:1] VTC_RDY_1;
wire [6:0] \NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_2 ;
wire [15:0] \NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_3 ;
wire [39:0] \NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_7 ;
wire [6:0] \NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_1 ;
wire [15:0] \NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_2 ;
wire [39:0] \NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_7 ;
wire \NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_1  ;
wire \NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control  ;
wire \NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_5  ;
wire \NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_4  ;
wire \NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_6  ;
wire \NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control  ;
wire \NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_5  ;
wire \NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_4  ;
wire \NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_3  ;
wire \NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_6  ;
wire GND ;
wire VCC ;
  GND GND_cZ (
	.G(GND)
);
  VCC VCC_cZ (
	.P(VCC)
);
// @225:8066
(* haps_ip_type="hstdm_native_bitslice_ctrl" *)  BITSLICE_CONTROL \NIBBLE[3].BITSLICE_CTRL.bitslice_control  (
	.CLK_TO_EXT_NORTH(\NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_1 ),
	.CLK_TO_EXT_SOUTH(\NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control ),
	.DLY_RDY(DLY_RDY_1[3]),
	.DYN_DCI(\NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_2 [6:0]),
	.NCLK_NIBBLE_OUT(\NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_5 ),
	.PCLK_NIBBLE_OUT(\NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_4 ),
	.RIU_RD_DATA(\NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_3 [15:0]),
	.RIU_VALID(\NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_6 ),
	.RX_BIT_CTRL_OUT0(RX_BIT_CTRL_OUT0[159:120]),
	.RX_BIT_CTRL_OUT1(RX_BIT_CTRL_OUT1_1[159:120]),
	.RX_BIT_CTRL_OUT2(RX_BIT_CTRL_OUT2_1[159:120]),
	.RX_BIT_CTRL_OUT3(RX_BIT_CTRL_OUT3_1[159:120]),
	.RX_BIT_CTRL_OUT4(RX_BIT_CTRL_OUT4[159:120]),
	.RX_BIT_CTRL_OUT5(RX_BIT_CTRL_OUT5[159:120]),
	.RX_BIT_CTRL_OUT6(RX_BIT_CTRL_OUT6_1[159:120]),
	.TX_BIT_CTRL_OUT0(TX_BIT_CTRL_OUT0[159:120]),
	.TX_BIT_CTRL_OUT1(TX_BIT_CTRL_OUT1_1[159:120]),
	.TX_BIT_CTRL_OUT2(TX_BIT_CTRL_OUT2_1[159:120]),
	.TX_BIT_CTRL_OUT3(TX_BIT_CTRL_OUT3_1[159:120]),
	.TX_BIT_CTRL_OUT4(TX_BIT_CTRL_OUT4[159:120]),
	.TX_BIT_CTRL_OUT5(TX_BIT_CTRL_OUT5[159:120]),
	.TX_BIT_CTRL_OUT6(TX_BIT_CTRL_OUT6_1[159:120]),
	.TX_BIT_CTRL_OUT_TRI(\NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_7 [39:0]),
	.VTC_RDY(VTC_RDY_1[3]),
	.CLK_FROM_EXT(VCC),
	.EN_VTC(GND),
	.NCLK_NIBBLE_IN(GND),
	.PCLK_NIBBLE_IN(GND),
	.PHY_RDEN({GND, GND, GND, GND}),
	.PLL_CLK(PLL_CLK),
	.REFCLK(GND),
	.RIU_ADDR({GND, GND, GND, GND, GND, GND}),
	.RIU_CLK(RIU_CLK),
	.RIU_NIBBLE_SEL(GND),
	.RIU_WR_DATA({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RIU_WR_EN(GND),
	.RST(RST),
	.RX_BIT_CTRL_IN0(RX_BIT_CTRL_IN0[159:120]),
	.RX_BIT_CTRL_IN1({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN2({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN3({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN4(RX_BIT_CTRL_IN4[159:120]),
	.RX_BIT_CTRL_IN5(RX_BIT_CTRL_IN5[159:120]),
	.RX_BIT_CTRL_IN6({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TBYTE_IN({GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN0(TX_BIT_CTRL_IN0[159:120]),
	.TX_BIT_CTRL_IN1({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN2({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN3({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN4(TX_BIT_CTRL_IN4[159:120]),
	.TX_BIT_CTRL_IN5(TX_BIT_CTRL_IN5[159:120]),
	.TX_BIT_CTRL_IN6({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN_TRI({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND})
);
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .CTRL_CLK="EXTERNAL";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .DIV_MODE="DIV2";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .EN_CLK_TO_EXT_NORTH="DISABLE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .EN_CLK_TO_EXT_SOUTH="DISABLE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .EN_OTHER_NCLK="FALSE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .EN_OTHER_PCLK="FALSE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .IDLY_VT_TRACK="FALSE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .ODLY_VT_TRACK="FALSE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .QDLY_VT_TRACK="FALSE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .REFCLK_SRC="PLLCLK";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .RX_GATING="DISABLE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .SELF_CALIBRATE="DISABLE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .SERIAL_MODE="FALSE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .SIM_VERSION=2.0;
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .TX_GATING="DISABLE";
// @225:8066
(* haps_ip_type="hstdm_native_bitslice_ctrl" *)  BITSLICE_CONTROL \NIBBLE[1].BITSLICE_CTRL.bitslice_control  (
	.CLK_TO_EXT_NORTH(\NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control ),
	.CLK_TO_EXT_SOUTH(\NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_5 ),
	.DLY_RDY(DLY_RDY_1[1]),
	.DYN_DCI(\NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_1 [6:0]),
	.NCLK_NIBBLE_OUT(\NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_4 ),
	.PCLK_NIBBLE_OUT(\NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_3 ),
	.RIU_RD_DATA(\NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_2 [15:0]),
	.RIU_VALID(\NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_6 ),
	.RX_BIT_CTRL_OUT0(RX_BIT_CTRL_OUT0_1[79:40]),
	.RX_BIT_CTRL_OUT1(RX_BIT_CTRL_OUT1_1[79:40]),
	.RX_BIT_CTRL_OUT2(RX_BIT_CTRL_OUT2[79:40]),
	.RX_BIT_CTRL_OUT3(RX_BIT_CTRL_OUT3[79:40]),
	.RX_BIT_CTRL_OUT4(RX_BIT_CTRL_OUT4_1[79:40]),
	.RX_BIT_CTRL_OUT5(RX_BIT_CTRL_OUT5_1[79:40]),
	.RX_BIT_CTRL_OUT6(RX_BIT_CTRL_OUT6_1[79:40]),
	.TX_BIT_CTRL_OUT0(TX_BIT_CTRL_OUT0_1[79:40]),
	.TX_BIT_CTRL_OUT1(TX_BIT_CTRL_OUT1_1[79:40]),
	.TX_BIT_CTRL_OUT2(TX_BIT_CTRL_OUT2[79:40]),
	.TX_BIT_CTRL_OUT3(TX_BIT_CTRL_OUT3[79:40]),
	.TX_BIT_CTRL_OUT4(TX_BIT_CTRL_OUT4_1[79:40]),
	.TX_BIT_CTRL_OUT5(TX_BIT_CTRL_OUT5_1[79:40]),
	.TX_BIT_CTRL_OUT6(TX_BIT_CTRL_OUT6_1[79:40]),
	.TX_BIT_CTRL_OUT_TRI(\NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_7 [39:0]),
	.VTC_RDY(VTC_RDY_1[1]),
	.CLK_FROM_EXT(VCC),
	.EN_VTC(GND),
	.NCLK_NIBBLE_IN(GND),
	.PCLK_NIBBLE_IN(GND),
	.PHY_RDEN({GND, GND, GND, GND}),
	.PLL_CLK(PLL_CLK),
	.REFCLK(GND),
	.RIU_ADDR({GND, GND, GND, GND, GND, GND}),
	.RIU_CLK(RIU_CLK),
	.RIU_NIBBLE_SEL(GND),
	.RIU_WR_DATA({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RIU_WR_EN(GND),
	.RST(RST),
	.RX_BIT_CTRL_IN0({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN1({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN2(RX_BIT_CTRL_IN2[79:40]),
	.RX_BIT_CTRL_IN3(RX_BIT_CTRL_IN3[79:40]),
	.RX_BIT_CTRL_IN4({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN5({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN6({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TBYTE_IN({GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN0({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN1({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN2(TX_BIT_CTRL_IN2[79:40]),
	.TX_BIT_CTRL_IN3(TX_BIT_CTRL_IN3[79:40]),
	.TX_BIT_CTRL_IN4({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN5({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN6({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN_TRI({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND})
);
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .CTRL_CLK="EXTERNAL";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .DIV_MODE="DIV2";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .EN_CLK_TO_EXT_NORTH="DISABLE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .EN_CLK_TO_EXT_SOUTH="DISABLE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .EN_OTHER_NCLK="FALSE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .EN_OTHER_PCLK="FALSE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .IDLY_VT_TRACK="FALSE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .ODLY_VT_TRACK="FALSE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .QDLY_VT_TRACK="FALSE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .REFCLK_SRC="PLLCLK";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .RX_GATING="DISABLE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .SELF_CALIBRATE="DISABLE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .SERIAL_MODE="FALSE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .TX_GATING="DISABLE";
assign RX_BIT_CTRL_OUT0[0] = GND;
assign RX_BIT_CTRL_OUT0[1] = GND;
assign RX_BIT_CTRL_OUT0[2] = GND;
assign RX_BIT_CTRL_OUT0[3] = GND;
assign RX_BIT_CTRL_OUT0[4] = GND;
assign RX_BIT_CTRL_OUT0[5] = GND;
assign RX_BIT_CTRL_OUT0[6] = GND;
assign RX_BIT_CTRL_OUT0[7] = GND;
assign RX_BIT_CTRL_OUT0[8] = GND;
assign RX_BIT_CTRL_OUT0[9] = GND;
assign RX_BIT_CTRL_OUT0[10] = GND;
assign RX_BIT_CTRL_OUT0[11] = GND;
assign RX_BIT_CTRL_OUT0[12] = GND;
assign RX_BIT_CTRL_OUT0[13] = GND;
assign RX_BIT_CTRL_OUT0[14] = GND;
assign RX_BIT_CTRL_OUT0[15] = GND;
assign RX_BIT_CTRL_OUT0[16] = GND;
assign RX_BIT_CTRL_OUT0[17] = GND;
assign RX_BIT_CTRL_OUT0[18] = GND;
assign RX_BIT_CTRL_OUT0[19] = GND;
assign RX_BIT_CTRL_OUT0[20] = GND;
assign RX_BIT_CTRL_OUT0[21] = GND;
assign RX_BIT_CTRL_OUT0[22] = GND;
assign RX_BIT_CTRL_OUT0[23] = GND;
assign RX_BIT_CTRL_OUT0[24] = GND;
assign RX_BIT_CTRL_OUT0[25] = GND;
assign RX_BIT_CTRL_OUT0[26] = GND;
assign RX_BIT_CTRL_OUT0[27] = GND;
assign RX_BIT_CTRL_OUT0[28] = GND;
assign RX_BIT_CTRL_OUT0[29] = GND;
assign RX_BIT_CTRL_OUT0[30] = GND;
assign RX_BIT_CTRL_OUT0[31] = GND;
assign RX_BIT_CTRL_OUT0[32] = GND;
assign RX_BIT_CTRL_OUT0[33] = GND;
assign RX_BIT_CTRL_OUT0[34] = GND;
assign RX_BIT_CTRL_OUT0[35] = GND;
assign RX_BIT_CTRL_OUT0[36] = GND;
assign RX_BIT_CTRL_OUT0[37] = GND;
assign RX_BIT_CTRL_OUT0[38] = GND;
assign RX_BIT_CTRL_OUT0[39] = GND;
assign RX_BIT_CTRL_OUT0[40] = GND;
assign RX_BIT_CTRL_OUT0[41] = GND;
assign RX_BIT_CTRL_OUT0[42] = GND;
assign RX_BIT_CTRL_OUT0[43] = GND;
assign RX_BIT_CTRL_OUT0[44] = GND;
assign RX_BIT_CTRL_OUT0[45] = GND;
assign RX_BIT_CTRL_OUT0[46] = GND;
assign RX_BIT_CTRL_OUT0[47] = GND;
assign RX_BIT_CTRL_OUT0[48] = GND;
assign RX_BIT_CTRL_OUT0[49] = GND;
assign RX_BIT_CTRL_OUT0[50] = GND;
assign RX_BIT_CTRL_OUT0[51] = GND;
assign RX_BIT_CTRL_OUT0[52] = GND;
assign RX_BIT_CTRL_OUT0[53] = GND;
assign RX_BIT_CTRL_OUT0[54] = GND;
assign RX_BIT_CTRL_OUT0[55] = GND;
assign RX_BIT_CTRL_OUT0[56] = GND;
assign RX_BIT_CTRL_OUT0[57] = GND;
assign RX_BIT_CTRL_OUT0[58] = GND;
assign RX_BIT_CTRL_OUT0[59] = GND;
assign RX_BIT_CTRL_OUT0[60] = GND;
assign RX_BIT_CTRL_OUT0[61] = GND;
assign RX_BIT_CTRL_OUT0[62] = GND;
assign RX_BIT_CTRL_OUT0[63] = GND;
assign RX_BIT_CTRL_OUT0[64] = GND;
assign RX_BIT_CTRL_OUT0[65] = GND;
assign RX_BIT_CTRL_OUT0[66] = GND;
assign RX_BIT_CTRL_OUT0[67] = GND;
assign RX_BIT_CTRL_OUT0[68] = GND;
assign RX_BIT_CTRL_OUT0[69] = GND;
assign RX_BIT_CTRL_OUT0[70] = GND;
assign RX_BIT_CTRL_OUT0[71] = GND;
assign RX_BIT_CTRL_OUT0[72] = GND;
assign RX_BIT_CTRL_OUT0[73] = GND;
assign RX_BIT_CTRL_OUT0[74] = GND;
assign RX_BIT_CTRL_OUT0[75] = GND;
assign RX_BIT_CTRL_OUT0[76] = GND;
assign RX_BIT_CTRL_OUT0[77] = GND;
assign RX_BIT_CTRL_OUT0[78] = GND;
assign RX_BIT_CTRL_OUT0[79] = GND;
assign RX_BIT_CTRL_OUT0[80] = GND;
assign RX_BIT_CTRL_OUT0[81] = GND;
assign RX_BIT_CTRL_OUT0[82] = GND;
assign RX_BIT_CTRL_OUT0[83] = GND;
assign RX_BIT_CTRL_OUT0[84] = GND;
assign RX_BIT_CTRL_OUT0[85] = GND;
assign RX_BIT_CTRL_OUT0[86] = GND;
assign RX_BIT_CTRL_OUT0[87] = GND;
assign RX_BIT_CTRL_OUT0[88] = GND;
assign RX_BIT_CTRL_OUT0[89] = GND;
assign RX_BIT_CTRL_OUT0[90] = GND;
assign RX_BIT_CTRL_OUT0[91] = GND;
assign RX_BIT_CTRL_OUT0[92] = GND;
assign RX_BIT_CTRL_OUT0[93] = GND;
assign RX_BIT_CTRL_OUT0[94] = GND;
assign RX_BIT_CTRL_OUT0[95] = GND;
assign RX_BIT_CTRL_OUT0[96] = GND;
assign RX_BIT_CTRL_OUT0[97] = GND;
assign RX_BIT_CTRL_OUT0[98] = GND;
assign RX_BIT_CTRL_OUT0[99] = GND;
assign RX_BIT_CTRL_OUT0[100] = GND;
assign RX_BIT_CTRL_OUT0[101] = GND;
assign RX_BIT_CTRL_OUT0[102] = GND;
assign RX_BIT_CTRL_OUT0[103] = GND;
assign RX_BIT_CTRL_OUT0[104] = GND;
assign RX_BIT_CTRL_OUT0[105] = GND;
assign RX_BIT_CTRL_OUT0[106] = GND;
assign RX_BIT_CTRL_OUT0[107] = GND;
assign RX_BIT_CTRL_OUT0[108] = GND;
assign RX_BIT_CTRL_OUT0[109] = GND;
assign RX_BIT_CTRL_OUT0[110] = GND;
assign RX_BIT_CTRL_OUT0[111] = GND;
assign RX_BIT_CTRL_OUT0[112] = GND;
assign RX_BIT_CTRL_OUT0[113] = GND;
assign RX_BIT_CTRL_OUT0[114] = GND;
assign RX_BIT_CTRL_OUT0[115] = GND;
assign RX_BIT_CTRL_OUT0[116] = GND;
assign RX_BIT_CTRL_OUT0[117] = GND;
assign RX_BIT_CTRL_OUT0[118] = GND;
assign RX_BIT_CTRL_OUT0[119] = GND;
assign RX_BIT_CTRL_OUT0[160] = GND;
assign RX_BIT_CTRL_OUT0[161] = GND;
assign RX_BIT_CTRL_OUT0[162] = GND;
assign RX_BIT_CTRL_OUT0[163] = GND;
assign RX_BIT_CTRL_OUT0[164] = GND;
assign RX_BIT_CTRL_OUT0[165] = GND;
assign RX_BIT_CTRL_OUT0[166] = GND;
assign RX_BIT_CTRL_OUT0[167] = GND;
assign RX_BIT_CTRL_OUT0[168] = GND;
assign RX_BIT_CTRL_OUT0[169] = GND;
assign RX_BIT_CTRL_OUT0[170] = GND;
assign RX_BIT_CTRL_OUT0[171] = GND;
assign RX_BIT_CTRL_OUT0[172] = GND;
assign RX_BIT_CTRL_OUT0[173] = GND;
assign RX_BIT_CTRL_OUT0[174] = GND;
assign RX_BIT_CTRL_OUT0[175] = GND;
assign RX_BIT_CTRL_OUT0[176] = GND;
assign RX_BIT_CTRL_OUT0[177] = GND;
assign RX_BIT_CTRL_OUT0[178] = GND;
assign RX_BIT_CTRL_OUT0[179] = GND;
assign RX_BIT_CTRL_OUT0[180] = GND;
assign RX_BIT_CTRL_OUT0[181] = GND;
assign RX_BIT_CTRL_OUT0[182] = GND;
assign RX_BIT_CTRL_OUT0[183] = GND;
assign RX_BIT_CTRL_OUT0[184] = GND;
assign RX_BIT_CTRL_OUT0[185] = GND;
assign RX_BIT_CTRL_OUT0[186] = GND;
assign RX_BIT_CTRL_OUT0[187] = GND;
assign RX_BIT_CTRL_OUT0[188] = GND;
assign RX_BIT_CTRL_OUT0[189] = GND;
assign RX_BIT_CTRL_OUT0[190] = GND;
assign RX_BIT_CTRL_OUT0[191] = GND;
assign RX_BIT_CTRL_OUT0[192] = GND;
assign RX_BIT_CTRL_OUT0[193] = GND;
assign RX_BIT_CTRL_OUT0[194] = GND;
assign RX_BIT_CTRL_OUT0[195] = GND;
assign RX_BIT_CTRL_OUT0[196] = GND;
assign RX_BIT_CTRL_OUT0[197] = GND;
assign RX_BIT_CTRL_OUT0[198] = GND;
assign RX_BIT_CTRL_OUT0[199] = GND;
assign RX_BIT_CTRL_OUT0[200] = GND;
assign RX_BIT_CTRL_OUT0[201] = GND;
assign RX_BIT_CTRL_OUT0[202] = GND;
assign RX_BIT_CTRL_OUT0[203] = GND;
assign RX_BIT_CTRL_OUT0[204] = GND;
assign RX_BIT_CTRL_OUT0[205] = GND;
assign RX_BIT_CTRL_OUT0[206] = GND;
assign RX_BIT_CTRL_OUT0[207] = GND;
assign RX_BIT_CTRL_OUT0[208] = GND;
assign RX_BIT_CTRL_OUT0[209] = GND;
assign RX_BIT_CTRL_OUT0[210] = GND;
assign RX_BIT_CTRL_OUT0[211] = GND;
assign RX_BIT_CTRL_OUT0[212] = GND;
assign RX_BIT_CTRL_OUT0[213] = GND;
assign RX_BIT_CTRL_OUT0[214] = GND;
assign RX_BIT_CTRL_OUT0[215] = GND;
assign RX_BIT_CTRL_OUT0[216] = GND;
assign RX_BIT_CTRL_OUT0[217] = GND;
assign RX_BIT_CTRL_OUT0[218] = GND;
assign RX_BIT_CTRL_OUT0[219] = GND;
assign RX_BIT_CTRL_OUT0[220] = GND;
assign RX_BIT_CTRL_OUT0[221] = GND;
assign RX_BIT_CTRL_OUT0[222] = GND;
assign RX_BIT_CTRL_OUT0[223] = GND;
assign RX_BIT_CTRL_OUT0[224] = GND;
assign RX_BIT_CTRL_OUT0[225] = GND;
assign RX_BIT_CTRL_OUT0[226] = GND;
assign RX_BIT_CTRL_OUT0[227] = GND;
assign RX_BIT_CTRL_OUT0[228] = GND;
assign RX_BIT_CTRL_OUT0[229] = GND;
assign RX_BIT_CTRL_OUT0[230] = GND;
assign RX_BIT_CTRL_OUT0[231] = GND;
assign RX_BIT_CTRL_OUT0[232] = GND;
assign RX_BIT_CTRL_OUT0[233] = GND;
assign RX_BIT_CTRL_OUT0[234] = GND;
assign RX_BIT_CTRL_OUT0[235] = GND;
assign RX_BIT_CTRL_OUT0[236] = GND;
assign RX_BIT_CTRL_OUT0[237] = GND;
assign RX_BIT_CTRL_OUT0[238] = GND;
assign RX_BIT_CTRL_OUT0[239] = GND;
assign RX_BIT_CTRL_OUT0[240] = GND;
assign RX_BIT_CTRL_OUT0[241] = GND;
assign RX_BIT_CTRL_OUT0[242] = GND;
assign RX_BIT_CTRL_OUT0[243] = GND;
assign RX_BIT_CTRL_OUT0[244] = GND;
assign RX_BIT_CTRL_OUT0[245] = GND;
assign RX_BIT_CTRL_OUT0[246] = GND;
assign RX_BIT_CTRL_OUT0[247] = GND;
assign RX_BIT_CTRL_OUT0[248] = GND;
assign RX_BIT_CTRL_OUT0[249] = GND;
assign RX_BIT_CTRL_OUT0[250] = GND;
assign RX_BIT_CTRL_OUT0[251] = GND;
assign RX_BIT_CTRL_OUT0[252] = GND;
assign RX_BIT_CTRL_OUT0[253] = GND;
assign RX_BIT_CTRL_OUT0[254] = GND;
assign RX_BIT_CTRL_OUT0[255] = GND;
assign RX_BIT_CTRL_OUT0[256] = GND;
assign RX_BIT_CTRL_OUT0[257] = GND;
assign RX_BIT_CTRL_OUT0[258] = GND;
assign RX_BIT_CTRL_OUT0[259] = GND;
assign RX_BIT_CTRL_OUT0[260] = GND;
assign RX_BIT_CTRL_OUT0[261] = GND;
assign RX_BIT_CTRL_OUT0[262] = GND;
assign RX_BIT_CTRL_OUT0[263] = GND;
assign RX_BIT_CTRL_OUT0[264] = GND;
assign RX_BIT_CTRL_OUT0[265] = GND;
assign RX_BIT_CTRL_OUT0[266] = GND;
assign RX_BIT_CTRL_OUT0[267] = GND;
assign RX_BIT_CTRL_OUT0[268] = GND;
assign RX_BIT_CTRL_OUT0[269] = GND;
assign RX_BIT_CTRL_OUT0[270] = GND;
assign RX_BIT_CTRL_OUT0[271] = GND;
assign RX_BIT_CTRL_OUT0[272] = GND;
assign RX_BIT_CTRL_OUT0[273] = GND;
assign RX_BIT_CTRL_OUT0[274] = GND;
assign RX_BIT_CTRL_OUT0[275] = GND;
assign RX_BIT_CTRL_OUT0[276] = GND;
assign RX_BIT_CTRL_OUT0[277] = GND;
assign RX_BIT_CTRL_OUT0[278] = GND;
assign RX_BIT_CTRL_OUT0[279] = GND;
assign RX_BIT_CTRL_OUT0[280] = GND;
assign RX_BIT_CTRL_OUT0[281] = GND;
assign RX_BIT_CTRL_OUT0[282] = GND;
assign RX_BIT_CTRL_OUT0[283] = GND;
assign RX_BIT_CTRL_OUT0[284] = GND;
assign RX_BIT_CTRL_OUT0[285] = GND;
assign RX_BIT_CTRL_OUT0[286] = GND;
assign RX_BIT_CTRL_OUT0[287] = GND;
assign RX_BIT_CTRL_OUT0[288] = GND;
assign RX_BIT_CTRL_OUT0[289] = GND;
assign RX_BIT_CTRL_OUT0[290] = GND;
assign RX_BIT_CTRL_OUT0[291] = GND;
assign RX_BIT_CTRL_OUT0[292] = GND;
assign RX_BIT_CTRL_OUT0[293] = GND;
assign RX_BIT_CTRL_OUT0[294] = GND;
assign RX_BIT_CTRL_OUT0[295] = GND;
assign RX_BIT_CTRL_OUT0[296] = GND;
assign RX_BIT_CTRL_OUT0[297] = GND;
assign RX_BIT_CTRL_OUT0[298] = GND;
assign RX_BIT_CTRL_OUT0[299] = GND;
assign RX_BIT_CTRL_OUT0[300] = GND;
assign RX_BIT_CTRL_OUT0[301] = GND;
assign RX_BIT_CTRL_OUT0[302] = GND;
assign RX_BIT_CTRL_OUT0[303] = GND;
assign RX_BIT_CTRL_OUT0[304] = GND;
assign RX_BIT_CTRL_OUT0[305] = GND;
assign RX_BIT_CTRL_OUT0[306] = GND;
assign RX_BIT_CTRL_OUT0[307] = GND;
assign RX_BIT_CTRL_OUT0[308] = GND;
assign RX_BIT_CTRL_OUT0[309] = GND;
assign RX_BIT_CTRL_OUT0[310] = GND;
assign RX_BIT_CTRL_OUT0[311] = GND;
assign RX_BIT_CTRL_OUT0[312] = GND;
assign RX_BIT_CTRL_OUT0[313] = GND;
assign RX_BIT_CTRL_OUT0[314] = GND;
assign RX_BIT_CTRL_OUT0[315] = GND;
assign RX_BIT_CTRL_OUT0[316] = GND;
assign RX_BIT_CTRL_OUT0[317] = GND;
assign RX_BIT_CTRL_OUT0[318] = GND;
assign RX_BIT_CTRL_OUT0[319] = GND;
assign RX_BIT_CTRL_OUT1[0] = GND;
assign RX_BIT_CTRL_OUT1[1] = GND;
assign RX_BIT_CTRL_OUT1[2] = GND;
assign RX_BIT_CTRL_OUT1[3] = GND;
assign RX_BIT_CTRL_OUT1[4] = GND;
assign RX_BIT_CTRL_OUT1[5] = GND;
assign RX_BIT_CTRL_OUT1[6] = GND;
assign RX_BIT_CTRL_OUT1[7] = GND;
assign RX_BIT_CTRL_OUT1[8] = GND;
assign RX_BIT_CTRL_OUT1[9] = GND;
assign RX_BIT_CTRL_OUT1[10] = GND;
assign RX_BIT_CTRL_OUT1[11] = GND;
assign RX_BIT_CTRL_OUT1[12] = GND;
assign RX_BIT_CTRL_OUT1[13] = GND;
assign RX_BIT_CTRL_OUT1[14] = GND;
assign RX_BIT_CTRL_OUT1[15] = GND;
assign RX_BIT_CTRL_OUT1[16] = GND;
assign RX_BIT_CTRL_OUT1[17] = GND;
assign RX_BIT_CTRL_OUT1[18] = GND;
assign RX_BIT_CTRL_OUT1[19] = GND;
assign RX_BIT_CTRL_OUT1[20] = GND;
assign RX_BIT_CTRL_OUT1[21] = GND;
assign RX_BIT_CTRL_OUT1[22] = GND;
assign RX_BIT_CTRL_OUT1[23] = GND;
assign RX_BIT_CTRL_OUT1[24] = GND;
assign RX_BIT_CTRL_OUT1[25] = GND;
assign RX_BIT_CTRL_OUT1[26] = GND;
assign RX_BIT_CTRL_OUT1[27] = GND;
assign RX_BIT_CTRL_OUT1[28] = GND;
assign RX_BIT_CTRL_OUT1[29] = GND;
assign RX_BIT_CTRL_OUT1[30] = GND;
assign RX_BIT_CTRL_OUT1[31] = GND;
assign RX_BIT_CTRL_OUT1[32] = GND;
assign RX_BIT_CTRL_OUT1[33] = GND;
assign RX_BIT_CTRL_OUT1[34] = GND;
assign RX_BIT_CTRL_OUT1[35] = GND;
assign RX_BIT_CTRL_OUT1[36] = GND;
assign RX_BIT_CTRL_OUT1[37] = GND;
assign RX_BIT_CTRL_OUT1[38] = GND;
assign RX_BIT_CTRL_OUT1[39] = GND;
assign RX_BIT_CTRL_OUT1[40] = GND;
assign RX_BIT_CTRL_OUT1[41] = GND;
assign RX_BIT_CTRL_OUT1[42] = GND;
assign RX_BIT_CTRL_OUT1[43] = GND;
assign RX_BIT_CTRL_OUT1[44] = GND;
assign RX_BIT_CTRL_OUT1[45] = GND;
assign RX_BIT_CTRL_OUT1[46] = GND;
assign RX_BIT_CTRL_OUT1[47] = GND;
assign RX_BIT_CTRL_OUT1[48] = GND;
assign RX_BIT_CTRL_OUT1[49] = GND;
assign RX_BIT_CTRL_OUT1[50] = GND;
assign RX_BIT_CTRL_OUT1[51] = GND;
assign RX_BIT_CTRL_OUT1[52] = GND;
assign RX_BIT_CTRL_OUT1[53] = GND;
assign RX_BIT_CTRL_OUT1[54] = GND;
assign RX_BIT_CTRL_OUT1[55] = GND;
assign RX_BIT_CTRL_OUT1[56] = GND;
assign RX_BIT_CTRL_OUT1[57] = GND;
assign RX_BIT_CTRL_OUT1[58] = GND;
assign RX_BIT_CTRL_OUT1[59] = GND;
assign RX_BIT_CTRL_OUT1[60] = GND;
assign RX_BIT_CTRL_OUT1[61] = GND;
assign RX_BIT_CTRL_OUT1[62] = GND;
assign RX_BIT_CTRL_OUT1[63] = GND;
assign RX_BIT_CTRL_OUT1[64] = GND;
assign RX_BIT_CTRL_OUT1[65] = GND;
assign RX_BIT_CTRL_OUT1[66] = GND;
assign RX_BIT_CTRL_OUT1[67] = GND;
assign RX_BIT_CTRL_OUT1[68] = GND;
assign RX_BIT_CTRL_OUT1[69] = GND;
assign RX_BIT_CTRL_OUT1[70] = GND;
assign RX_BIT_CTRL_OUT1[71] = GND;
assign RX_BIT_CTRL_OUT1[72] = GND;
assign RX_BIT_CTRL_OUT1[73] = GND;
assign RX_BIT_CTRL_OUT1[74] = GND;
assign RX_BIT_CTRL_OUT1[75] = GND;
assign RX_BIT_CTRL_OUT1[76] = GND;
assign RX_BIT_CTRL_OUT1[77] = GND;
assign RX_BIT_CTRL_OUT1[78] = GND;
assign RX_BIT_CTRL_OUT1[79] = GND;
assign RX_BIT_CTRL_OUT1[80] = GND;
assign RX_BIT_CTRL_OUT1[81] = GND;
assign RX_BIT_CTRL_OUT1[82] = GND;
assign RX_BIT_CTRL_OUT1[83] = GND;
assign RX_BIT_CTRL_OUT1[84] = GND;
assign RX_BIT_CTRL_OUT1[85] = GND;
assign RX_BIT_CTRL_OUT1[86] = GND;
assign RX_BIT_CTRL_OUT1[87] = GND;
assign RX_BIT_CTRL_OUT1[88] = GND;
assign RX_BIT_CTRL_OUT1[89] = GND;
assign RX_BIT_CTRL_OUT1[90] = GND;
assign RX_BIT_CTRL_OUT1[91] = GND;
assign RX_BIT_CTRL_OUT1[92] = GND;
assign RX_BIT_CTRL_OUT1[93] = GND;
assign RX_BIT_CTRL_OUT1[94] = GND;
assign RX_BIT_CTRL_OUT1[95] = GND;
assign RX_BIT_CTRL_OUT1[96] = GND;
assign RX_BIT_CTRL_OUT1[97] = GND;
assign RX_BIT_CTRL_OUT1[98] = GND;
assign RX_BIT_CTRL_OUT1[99] = GND;
assign RX_BIT_CTRL_OUT1[100] = GND;
assign RX_BIT_CTRL_OUT1[101] = GND;
assign RX_BIT_CTRL_OUT1[102] = GND;
assign RX_BIT_CTRL_OUT1[103] = GND;
assign RX_BIT_CTRL_OUT1[104] = GND;
assign RX_BIT_CTRL_OUT1[105] = GND;
assign RX_BIT_CTRL_OUT1[106] = GND;
assign RX_BIT_CTRL_OUT1[107] = GND;
assign RX_BIT_CTRL_OUT1[108] = GND;
assign RX_BIT_CTRL_OUT1[109] = GND;
assign RX_BIT_CTRL_OUT1[110] = GND;
assign RX_BIT_CTRL_OUT1[111] = GND;
assign RX_BIT_CTRL_OUT1[112] = GND;
assign RX_BIT_CTRL_OUT1[113] = GND;
assign RX_BIT_CTRL_OUT1[114] = GND;
assign RX_BIT_CTRL_OUT1[115] = GND;
assign RX_BIT_CTRL_OUT1[116] = GND;
assign RX_BIT_CTRL_OUT1[117] = GND;
assign RX_BIT_CTRL_OUT1[118] = GND;
assign RX_BIT_CTRL_OUT1[119] = GND;
assign RX_BIT_CTRL_OUT1[120] = GND;
assign RX_BIT_CTRL_OUT1[121] = GND;
assign RX_BIT_CTRL_OUT1[122] = GND;
assign RX_BIT_CTRL_OUT1[123] = GND;
assign RX_BIT_CTRL_OUT1[124] = GND;
assign RX_BIT_CTRL_OUT1[125] = GND;
assign RX_BIT_CTRL_OUT1[126] = GND;
assign RX_BIT_CTRL_OUT1[127] = GND;
assign RX_BIT_CTRL_OUT1[128] = GND;
assign RX_BIT_CTRL_OUT1[129] = GND;
assign RX_BIT_CTRL_OUT1[130] = GND;
assign RX_BIT_CTRL_OUT1[131] = GND;
assign RX_BIT_CTRL_OUT1[132] = GND;
assign RX_BIT_CTRL_OUT1[133] = GND;
assign RX_BIT_CTRL_OUT1[134] = GND;
assign RX_BIT_CTRL_OUT1[135] = GND;
assign RX_BIT_CTRL_OUT1[136] = GND;
assign RX_BIT_CTRL_OUT1[137] = GND;
assign RX_BIT_CTRL_OUT1[138] = GND;
assign RX_BIT_CTRL_OUT1[139] = GND;
assign RX_BIT_CTRL_OUT1[140] = GND;
assign RX_BIT_CTRL_OUT1[141] = GND;
assign RX_BIT_CTRL_OUT1[142] = GND;
assign RX_BIT_CTRL_OUT1[143] = GND;
assign RX_BIT_CTRL_OUT1[144] = GND;
assign RX_BIT_CTRL_OUT1[145] = GND;
assign RX_BIT_CTRL_OUT1[146] = GND;
assign RX_BIT_CTRL_OUT1[147] = GND;
assign RX_BIT_CTRL_OUT1[148] = GND;
assign RX_BIT_CTRL_OUT1[149] = GND;
assign RX_BIT_CTRL_OUT1[150] = GND;
assign RX_BIT_CTRL_OUT1[151] = GND;
assign RX_BIT_CTRL_OUT1[152] = GND;
assign RX_BIT_CTRL_OUT1[153] = GND;
assign RX_BIT_CTRL_OUT1[154] = GND;
assign RX_BIT_CTRL_OUT1[155] = GND;
assign RX_BIT_CTRL_OUT1[156] = GND;
assign RX_BIT_CTRL_OUT1[157] = GND;
assign RX_BIT_CTRL_OUT1[158] = GND;
assign RX_BIT_CTRL_OUT1[159] = GND;
assign RX_BIT_CTRL_OUT1[160] = GND;
assign RX_BIT_CTRL_OUT1[161] = GND;
assign RX_BIT_CTRL_OUT1[162] = GND;
assign RX_BIT_CTRL_OUT1[163] = GND;
assign RX_BIT_CTRL_OUT1[164] = GND;
assign RX_BIT_CTRL_OUT1[165] = GND;
assign RX_BIT_CTRL_OUT1[166] = GND;
assign RX_BIT_CTRL_OUT1[167] = GND;
assign RX_BIT_CTRL_OUT1[168] = GND;
assign RX_BIT_CTRL_OUT1[169] = GND;
assign RX_BIT_CTRL_OUT1[170] = GND;
assign RX_BIT_CTRL_OUT1[171] = GND;
assign RX_BIT_CTRL_OUT1[172] = GND;
assign RX_BIT_CTRL_OUT1[173] = GND;
assign RX_BIT_CTRL_OUT1[174] = GND;
assign RX_BIT_CTRL_OUT1[175] = GND;
assign RX_BIT_CTRL_OUT1[176] = GND;
assign RX_BIT_CTRL_OUT1[177] = GND;
assign RX_BIT_CTRL_OUT1[178] = GND;
assign RX_BIT_CTRL_OUT1[179] = GND;
assign RX_BIT_CTRL_OUT1[180] = GND;
assign RX_BIT_CTRL_OUT1[181] = GND;
assign RX_BIT_CTRL_OUT1[182] = GND;
assign RX_BIT_CTRL_OUT1[183] = GND;
assign RX_BIT_CTRL_OUT1[184] = GND;
assign RX_BIT_CTRL_OUT1[185] = GND;
assign RX_BIT_CTRL_OUT1[186] = GND;
assign RX_BIT_CTRL_OUT1[187] = GND;
assign RX_BIT_CTRL_OUT1[188] = GND;
assign RX_BIT_CTRL_OUT1[189] = GND;
assign RX_BIT_CTRL_OUT1[190] = GND;
assign RX_BIT_CTRL_OUT1[191] = GND;
assign RX_BIT_CTRL_OUT1[192] = GND;
assign RX_BIT_CTRL_OUT1[193] = GND;
assign RX_BIT_CTRL_OUT1[194] = GND;
assign RX_BIT_CTRL_OUT1[195] = GND;
assign RX_BIT_CTRL_OUT1[196] = GND;
assign RX_BIT_CTRL_OUT1[197] = GND;
assign RX_BIT_CTRL_OUT1[198] = GND;
assign RX_BIT_CTRL_OUT1[199] = GND;
assign RX_BIT_CTRL_OUT1[200] = GND;
assign RX_BIT_CTRL_OUT1[201] = GND;
assign RX_BIT_CTRL_OUT1[202] = GND;
assign RX_BIT_CTRL_OUT1[203] = GND;
assign RX_BIT_CTRL_OUT1[204] = GND;
assign RX_BIT_CTRL_OUT1[205] = GND;
assign RX_BIT_CTRL_OUT1[206] = GND;
assign RX_BIT_CTRL_OUT1[207] = GND;
assign RX_BIT_CTRL_OUT1[208] = GND;
assign RX_BIT_CTRL_OUT1[209] = GND;
assign RX_BIT_CTRL_OUT1[210] = GND;
assign RX_BIT_CTRL_OUT1[211] = GND;
assign RX_BIT_CTRL_OUT1[212] = GND;
assign RX_BIT_CTRL_OUT1[213] = GND;
assign RX_BIT_CTRL_OUT1[214] = GND;
assign RX_BIT_CTRL_OUT1[215] = GND;
assign RX_BIT_CTRL_OUT1[216] = GND;
assign RX_BIT_CTRL_OUT1[217] = GND;
assign RX_BIT_CTRL_OUT1[218] = GND;
assign RX_BIT_CTRL_OUT1[219] = GND;
assign RX_BIT_CTRL_OUT1[220] = GND;
assign RX_BIT_CTRL_OUT1[221] = GND;
assign RX_BIT_CTRL_OUT1[222] = GND;
assign RX_BIT_CTRL_OUT1[223] = GND;
assign RX_BIT_CTRL_OUT1[224] = GND;
assign RX_BIT_CTRL_OUT1[225] = GND;
assign RX_BIT_CTRL_OUT1[226] = GND;
assign RX_BIT_CTRL_OUT1[227] = GND;
assign RX_BIT_CTRL_OUT1[228] = GND;
assign RX_BIT_CTRL_OUT1[229] = GND;
assign RX_BIT_CTRL_OUT1[230] = GND;
assign RX_BIT_CTRL_OUT1[231] = GND;
assign RX_BIT_CTRL_OUT1[232] = GND;
assign RX_BIT_CTRL_OUT1[233] = GND;
assign RX_BIT_CTRL_OUT1[234] = GND;
assign RX_BIT_CTRL_OUT1[235] = GND;
assign RX_BIT_CTRL_OUT1[236] = GND;
assign RX_BIT_CTRL_OUT1[237] = GND;
assign RX_BIT_CTRL_OUT1[238] = GND;
assign RX_BIT_CTRL_OUT1[239] = GND;
assign RX_BIT_CTRL_OUT1[240] = GND;
assign RX_BIT_CTRL_OUT1[241] = GND;
assign RX_BIT_CTRL_OUT1[242] = GND;
assign RX_BIT_CTRL_OUT1[243] = GND;
assign RX_BIT_CTRL_OUT1[244] = GND;
assign RX_BIT_CTRL_OUT1[245] = GND;
assign RX_BIT_CTRL_OUT1[246] = GND;
assign RX_BIT_CTRL_OUT1[247] = GND;
assign RX_BIT_CTRL_OUT1[248] = GND;
assign RX_BIT_CTRL_OUT1[249] = GND;
assign RX_BIT_CTRL_OUT1[250] = GND;
assign RX_BIT_CTRL_OUT1[251] = GND;
assign RX_BIT_CTRL_OUT1[252] = GND;
assign RX_BIT_CTRL_OUT1[253] = GND;
assign RX_BIT_CTRL_OUT1[254] = GND;
assign RX_BIT_CTRL_OUT1[255] = GND;
assign RX_BIT_CTRL_OUT1[256] = GND;
assign RX_BIT_CTRL_OUT1[257] = GND;
assign RX_BIT_CTRL_OUT1[258] = GND;
assign RX_BIT_CTRL_OUT1[259] = GND;
assign RX_BIT_CTRL_OUT1[260] = GND;
assign RX_BIT_CTRL_OUT1[261] = GND;
assign RX_BIT_CTRL_OUT1[262] = GND;
assign RX_BIT_CTRL_OUT1[263] = GND;
assign RX_BIT_CTRL_OUT1[264] = GND;
assign RX_BIT_CTRL_OUT1[265] = GND;
assign RX_BIT_CTRL_OUT1[266] = GND;
assign RX_BIT_CTRL_OUT1[267] = GND;
assign RX_BIT_CTRL_OUT1[268] = GND;
assign RX_BIT_CTRL_OUT1[269] = GND;
assign RX_BIT_CTRL_OUT1[270] = GND;
assign RX_BIT_CTRL_OUT1[271] = GND;
assign RX_BIT_CTRL_OUT1[272] = GND;
assign RX_BIT_CTRL_OUT1[273] = GND;
assign RX_BIT_CTRL_OUT1[274] = GND;
assign RX_BIT_CTRL_OUT1[275] = GND;
assign RX_BIT_CTRL_OUT1[276] = GND;
assign RX_BIT_CTRL_OUT1[277] = GND;
assign RX_BIT_CTRL_OUT1[278] = GND;
assign RX_BIT_CTRL_OUT1[279] = GND;
assign RX_BIT_CTRL_OUT1[280] = GND;
assign RX_BIT_CTRL_OUT1[281] = GND;
assign RX_BIT_CTRL_OUT1[282] = GND;
assign RX_BIT_CTRL_OUT1[283] = GND;
assign RX_BIT_CTRL_OUT1[284] = GND;
assign RX_BIT_CTRL_OUT1[285] = GND;
assign RX_BIT_CTRL_OUT1[286] = GND;
assign RX_BIT_CTRL_OUT1[287] = GND;
assign RX_BIT_CTRL_OUT1[288] = GND;
assign RX_BIT_CTRL_OUT1[289] = GND;
assign RX_BIT_CTRL_OUT1[290] = GND;
assign RX_BIT_CTRL_OUT1[291] = GND;
assign RX_BIT_CTRL_OUT1[292] = GND;
assign RX_BIT_CTRL_OUT1[293] = GND;
assign RX_BIT_CTRL_OUT1[294] = GND;
assign RX_BIT_CTRL_OUT1[295] = GND;
assign RX_BIT_CTRL_OUT1[296] = GND;
assign RX_BIT_CTRL_OUT1[297] = GND;
assign RX_BIT_CTRL_OUT1[298] = GND;
assign RX_BIT_CTRL_OUT1[299] = GND;
assign RX_BIT_CTRL_OUT1[300] = GND;
assign RX_BIT_CTRL_OUT1[301] = GND;
assign RX_BIT_CTRL_OUT1[302] = GND;
assign RX_BIT_CTRL_OUT1[303] = GND;
assign RX_BIT_CTRL_OUT1[304] = GND;
assign RX_BIT_CTRL_OUT1[305] = GND;
assign RX_BIT_CTRL_OUT1[306] = GND;
assign RX_BIT_CTRL_OUT1[307] = GND;
assign RX_BIT_CTRL_OUT1[308] = GND;
assign RX_BIT_CTRL_OUT1[309] = GND;
assign RX_BIT_CTRL_OUT1[310] = GND;
assign RX_BIT_CTRL_OUT1[311] = GND;
assign RX_BIT_CTRL_OUT1[312] = GND;
assign RX_BIT_CTRL_OUT1[313] = GND;
assign RX_BIT_CTRL_OUT1[314] = GND;
assign RX_BIT_CTRL_OUT1[315] = GND;
assign RX_BIT_CTRL_OUT1[316] = GND;
assign RX_BIT_CTRL_OUT1[317] = GND;
assign RX_BIT_CTRL_OUT1[318] = GND;
assign RX_BIT_CTRL_OUT1[319] = GND;
assign RX_BIT_CTRL_OUT2[0] = GND;
assign RX_BIT_CTRL_OUT2[1] = GND;
assign RX_BIT_CTRL_OUT2[2] = GND;
assign RX_BIT_CTRL_OUT2[3] = GND;
assign RX_BIT_CTRL_OUT2[4] = GND;
assign RX_BIT_CTRL_OUT2[5] = GND;
assign RX_BIT_CTRL_OUT2[6] = GND;
assign RX_BIT_CTRL_OUT2[7] = GND;
assign RX_BIT_CTRL_OUT2[8] = GND;
assign RX_BIT_CTRL_OUT2[9] = GND;
assign RX_BIT_CTRL_OUT2[10] = GND;
assign RX_BIT_CTRL_OUT2[11] = GND;
assign RX_BIT_CTRL_OUT2[12] = GND;
assign RX_BIT_CTRL_OUT2[13] = GND;
assign RX_BIT_CTRL_OUT2[14] = GND;
assign RX_BIT_CTRL_OUT2[15] = GND;
assign RX_BIT_CTRL_OUT2[16] = GND;
assign RX_BIT_CTRL_OUT2[17] = GND;
assign RX_BIT_CTRL_OUT2[18] = GND;
assign RX_BIT_CTRL_OUT2[19] = GND;
assign RX_BIT_CTRL_OUT2[20] = GND;
assign RX_BIT_CTRL_OUT2[21] = GND;
assign RX_BIT_CTRL_OUT2[22] = GND;
assign RX_BIT_CTRL_OUT2[23] = GND;
assign RX_BIT_CTRL_OUT2[24] = GND;
assign RX_BIT_CTRL_OUT2[25] = GND;
assign RX_BIT_CTRL_OUT2[26] = GND;
assign RX_BIT_CTRL_OUT2[27] = GND;
assign RX_BIT_CTRL_OUT2[28] = GND;
assign RX_BIT_CTRL_OUT2[29] = GND;
assign RX_BIT_CTRL_OUT2[30] = GND;
assign RX_BIT_CTRL_OUT2[31] = GND;
assign RX_BIT_CTRL_OUT2[32] = GND;
assign RX_BIT_CTRL_OUT2[33] = GND;
assign RX_BIT_CTRL_OUT2[34] = GND;
assign RX_BIT_CTRL_OUT2[35] = GND;
assign RX_BIT_CTRL_OUT2[36] = GND;
assign RX_BIT_CTRL_OUT2[37] = GND;
assign RX_BIT_CTRL_OUT2[38] = GND;
assign RX_BIT_CTRL_OUT2[39] = GND;
assign RX_BIT_CTRL_OUT2[80] = GND;
assign RX_BIT_CTRL_OUT2[81] = GND;
assign RX_BIT_CTRL_OUT2[82] = GND;
assign RX_BIT_CTRL_OUT2[83] = GND;
assign RX_BIT_CTRL_OUT2[84] = GND;
assign RX_BIT_CTRL_OUT2[85] = GND;
assign RX_BIT_CTRL_OUT2[86] = GND;
assign RX_BIT_CTRL_OUT2[87] = GND;
assign RX_BIT_CTRL_OUT2[88] = GND;
assign RX_BIT_CTRL_OUT2[89] = GND;
assign RX_BIT_CTRL_OUT2[90] = GND;
assign RX_BIT_CTRL_OUT2[91] = GND;
assign RX_BIT_CTRL_OUT2[92] = GND;
assign RX_BIT_CTRL_OUT2[93] = GND;
assign RX_BIT_CTRL_OUT2[94] = GND;
assign RX_BIT_CTRL_OUT2[95] = GND;
assign RX_BIT_CTRL_OUT2[96] = GND;
assign RX_BIT_CTRL_OUT2[97] = GND;
assign RX_BIT_CTRL_OUT2[98] = GND;
assign RX_BIT_CTRL_OUT2[99] = GND;
assign RX_BIT_CTRL_OUT2[100] = GND;
assign RX_BIT_CTRL_OUT2[101] = GND;
assign RX_BIT_CTRL_OUT2[102] = GND;
assign RX_BIT_CTRL_OUT2[103] = GND;
assign RX_BIT_CTRL_OUT2[104] = GND;
assign RX_BIT_CTRL_OUT2[105] = GND;
assign RX_BIT_CTRL_OUT2[106] = GND;
assign RX_BIT_CTRL_OUT2[107] = GND;
assign RX_BIT_CTRL_OUT2[108] = GND;
assign RX_BIT_CTRL_OUT2[109] = GND;
assign RX_BIT_CTRL_OUT2[110] = GND;
assign RX_BIT_CTRL_OUT2[111] = GND;
assign RX_BIT_CTRL_OUT2[112] = GND;
assign RX_BIT_CTRL_OUT2[113] = GND;
assign RX_BIT_CTRL_OUT2[114] = GND;
assign RX_BIT_CTRL_OUT2[115] = GND;
assign RX_BIT_CTRL_OUT2[116] = GND;
assign RX_BIT_CTRL_OUT2[117] = GND;
assign RX_BIT_CTRL_OUT2[118] = GND;
assign RX_BIT_CTRL_OUT2[119] = GND;
assign RX_BIT_CTRL_OUT2[120] = GND;
assign RX_BIT_CTRL_OUT2[121] = GND;
assign RX_BIT_CTRL_OUT2[122] = GND;
assign RX_BIT_CTRL_OUT2[123] = GND;
assign RX_BIT_CTRL_OUT2[124] = GND;
assign RX_BIT_CTRL_OUT2[125] = GND;
assign RX_BIT_CTRL_OUT2[126] = GND;
assign RX_BIT_CTRL_OUT2[127] = GND;
assign RX_BIT_CTRL_OUT2[128] = GND;
assign RX_BIT_CTRL_OUT2[129] = GND;
assign RX_BIT_CTRL_OUT2[130] = GND;
assign RX_BIT_CTRL_OUT2[131] = GND;
assign RX_BIT_CTRL_OUT2[132] = GND;
assign RX_BIT_CTRL_OUT2[133] = GND;
assign RX_BIT_CTRL_OUT2[134] = GND;
assign RX_BIT_CTRL_OUT2[135] = GND;
assign RX_BIT_CTRL_OUT2[136] = GND;
assign RX_BIT_CTRL_OUT2[137] = GND;
assign RX_BIT_CTRL_OUT2[138] = GND;
assign RX_BIT_CTRL_OUT2[139] = GND;
assign RX_BIT_CTRL_OUT2[140] = GND;
assign RX_BIT_CTRL_OUT2[141] = GND;
assign RX_BIT_CTRL_OUT2[142] = GND;
assign RX_BIT_CTRL_OUT2[143] = GND;
assign RX_BIT_CTRL_OUT2[144] = GND;
assign RX_BIT_CTRL_OUT2[145] = GND;
assign RX_BIT_CTRL_OUT2[146] = GND;
assign RX_BIT_CTRL_OUT2[147] = GND;
assign RX_BIT_CTRL_OUT2[148] = GND;
assign RX_BIT_CTRL_OUT2[149] = GND;
assign RX_BIT_CTRL_OUT2[150] = GND;
assign RX_BIT_CTRL_OUT2[151] = GND;
assign RX_BIT_CTRL_OUT2[152] = GND;
assign RX_BIT_CTRL_OUT2[153] = GND;
assign RX_BIT_CTRL_OUT2[154] = GND;
assign RX_BIT_CTRL_OUT2[155] = GND;
assign RX_BIT_CTRL_OUT2[156] = GND;
assign RX_BIT_CTRL_OUT2[157] = GND;
assign RX_BIT_CTRL_OUT2[158] = GND;
assign RX_BIT_CTRL_OUT2[159] = GND;
assign RX_BIT_CTRL_OUT2[160] = GND;
assign RX_BIT_CTRL_OUT2[161] = GND;
assign RX_BIT_CTRL_OUT2[162] = GND;
assign RX_BIT_CTRL_OUT2[163] = GND;
assign RX_BIT_CTRL_OUT2[164] = GND;
assign RX_BIT_CTRL_OUT2[165] = GND;
assign RX_BIT_CTRL_OUT2[166] = GND;
assign RX_BIT_CTRL_OUT2[167] = GND;
assign RX_BIT_CTRL_OUT2[168] = GND;
assign RX_BIT_CTRL_OUT2[169] = GND;
assign RX_BIT_CTRL_OUT2[170] = GND;
assign RX_BIT_CTRL_OUT2[171] = GND;
assign RX_BIT_CTRL_OUT2[172] = GND;
assign RX_BIT_CTRL_OUT2[173] = GND;
assign RX_BIT_CTRL_OUT2[174] = GND;
assign RX_BIT_CTRL_OUT2[175] = GND;
assign RX_BIT_CTRL_OUT2[176] = GND;
assign RX_BIT_CTRL_OUT2[177] = GND;
assign RX_BIT_CTRL_OUT2[178] = GND;
assign RX_BIT_CTRL_OUT2[179] = GND;
assign RX_BIT_CTRL_OUT2[180] = GND;
assign RX_BIT_CTRL_OUT2[181] = GND;
assign RX_BIT_CTRL_OUT2[182] = GND;
assign RX_BIT_CTRL_OUT2[183] = GND;
assign RX_BIT_CTRL_OUT2[184] = GND;
assign RX_BIT_CTRL_OUT2[185] = GND;
assign RX_BIT_CTRL_OUT2[186] = GND;
assign RX_BIT_CTRL_OUT2[187] = GND;
assign RX_BIT_CTRL_OUT2[188] = GND;
assign RX_BIT_CTRL_OUT2[189] = GND;
assign RX_BIT_CTRL_OUT2[190] = GND;
assign RX_BIT_CTRL_OUT2[191] = GND;
assign RX_BIT_CTRL_OUT2[192] = GND;
assign RX_BIT_CTRL_OUT2[193] = GND;
assign RX_BIT_CTRL_OUT2[194] = GND;
assign RX_BIT_CTRL_OUT2[195] = GND;
assign RX_BIT_CTRL_OUT2[196] = GND;
assign RX_BIT_CTRL_OUT2[197] = GND;
assign RX_BIT_CTRL_OUT2[198] = GND;
assign RX_BIT_CTRL_OUT2[199] = GND;
assign RX_BIT_CTRL_OUT2[200] = GND;
assign RX_BIT_CTRL_OUT2[201] = GND;
assign RX_BIT_CTRL_OUT2[202] = GND;
assign RX_BIT_CTRL_OUT2[203] = GND;
assign RX_BIT_CTRL_OUT2[204] = GND;
assign RX_BIT_CTRL_OUT2[205] = GND;
assign RX_BIT_CTRL_OUT2[206] = GND;
assign RX_BIT_CTRL_OUT2[207] = GND;
assign RX_BIT_CTRL_OUT2[208] = GND;
assign RX_BIT_CTRL_OUT2[209] = GND;
assign RX_BIT_CTRL_OUT2[210] = GND;
assign RX_BIT_CTRL_OUT2[211] = GND;
assign RX_BIT_CTRL_OUT2[212] = GND;
assign RX_BIT_CTRL_OUT2[213] = GND;
assign RX_BIT_CTRL_OUT2[214] = GND;
assign RX_BIT_CTRL_OUT2[215] = GND;
assign RX_BIT_CTRL_OUT2[216] = GND;
assign RX_BIT_CTRL_OUT2[217] = GND;
assign RX_BIT_CTRL_OUT2[218] = GND;
assign RX_BIT_CTRL_OUT2[219] = GND;
assign RX_BIT_CTRL_OUT2[220] = GND;
assign RX_BIT_CTRL_OUT2[221] = GND;
assign RX_BIT_CTRL_OUT2[222] = GND;
assign RX_BIT_CTRL_OUT2[223] = GND;
assign RX_BIT_CTRL_OUT2[224] = GND;
assign RX_BIT_CTRL_OUT2[225] = GND;
assign RX_BIT_CTRL_OUT2[226] = GND;
assign RX_BIT_CTRL_OUT2[227] = GND;
assign RX_BIT_CTRL_OUT2[228] = GND;
assign RX_BIT_CTRL_OUT2[229] = GND;
assign RX_BIT_CTRL_OUT2[230] = GND;
assign RX_BIT_CTRL_OUT2[231] = GND;
assign RX_BIT_CTRL_OUT2[232] = GND;
assign RX_BIT_CTRL_OUT2[233] = GND;
assign RX_BIT_CTRL_OUT2[234] = GND;
assign RX_BIT_CTRL_OUT2[235] = GND;
assign RX_BIT_CTRL_OUT2[236] = GND;
assign RX_BIT_CTRL_OUT2[237] = GND;
assign RX_BIT_CTRL_OUT2[238] = GND;
assign RX_BIT_CTRL_OUT2[239] = GND;
assign RX_BIT_CTRL_OUT2[240] = GND;
assign RX_BIT_CTRL_OUT2[241] = GND;
assign RX_BIT_CTRL_OUT2[242] = GND;
assign RX_BIT_CTRL_OUT2[243] = GND;
assign RX_BIT_CTRL_OUT2[244] = GND;
assign RX_BIT_CTRL_OUT2[245] = GND;
assign RX_BIT_CTRL_OUT2[246] = GND;
assign RX_BIT_CTRL_OUT2[247] = GND;
assign RX_BIT_CTRL_OUT2[248] = GND;
assign RX_BIT_CTRL_OUT2[249] = GND;
assign RX_BIT_CTRL_OUT2[250] = GND;
assign RX_BIT_CTRL_OUT2[251] = GND;
assign RX_BIT_CTRL_OUT2[252] = GND;
assign RX_BIT_CTRL_OUT2[253] = GND;
assign RX_BIT_CTRL_OUT2[254] = GND;
assign RX_BIT_CTRL_OUT2[255] = GND;
assign RX_BIT_CTRL_OUT2[256] = GND;
assign RX_BIT_CTRL_OUT2[257] = GND;
assign RX_BIT_CTRL_OUT2[258] = GND;
assign RX_BIT_CTRL_OUT2[259] = GND;
assign RX_BIT_CTRL_OUT2[260] = GND;
assign RX_BIT_CTRL_OUT2[261] = GND;
assign RX_BIT_CTRL_OUT2[262] = GND;
assign RX_BIT_CTRL_OUT2[263] = GND;
assign RX_BIT_CTRL_OUT2[264] = GND;
assign RX_BIT_CTRL_OUT2[265] = GND;
assign RX_BIT_CTRL_OUT2[266] = GND;
assign RX_BIT_CTRL_OUT2[267] = GND;
assign RX_BIT_CTRL_OUT2[268] = GND;
assign RX_BIT_CTRL_OUT2[269] = GND;
assign RX_BIT_CTRL_OUT2[270] = GND;
assign RX_BIT_CTRL_OUT2[271] = GND;
assign RX_BIT_CTRL_OUT2[272] = GND;
assign RX_BIT_CTRL_OUT2[273] = GND;
assign RX_BIT_CTRL_OUT2[274] = GND;
assign RX_BIT_CTRL_OUT2[275] = GND;
assign RX_BIT_CTRL_OUT2[276] = GND;
assign RX_BIT_CTRL_OUT2[277] = GND;
assign RX_BIT_CTRL_OUT2[278] = GND;
assign RX_BIT_CTRL_OUT2[279] = GND;
assign RX_BIT_CTRL_OUT2[280] = GND;
assign RX_BIT_CTRL_OUT2[281] = GND;
assign RX_BIT_CTRL_OUT2[282] = GND;
assign RX_BIT_CTRL_OUT2[283] = GND;
assign RX_BIT_CTRL_OUT2[284] = GND;
assign RX_BIT_CTRL_OUT2[285] = GND;
assign RX_BIT_CTRL_OUT2[286] = GND;
assign RX_BIT_CTRL_OUT2[287] = GND;
assign RX_BIT_CTRL_OUT2[288] = GND;
assign RX_BIT_CTRL_OUT2[289] = GND;
assign RX_BIT_CTRL_OUT2[290] = GND;
assign RX_BIT_CTRL_OUT2[291] = GND;
assign RX_BIT_CTRL_OUT2[292] = GND;
assign RX_BIT_CTRL_OUT2[293] = GND;
assign RX_BIT_CTRL_OUT2[294] = GND;
assign RX_BIT_CTRL_OUT2[295] = GND;
assign RX_BIT_CTRL_OUT2[296] = GND;
assign RX_BIT_CTRL_OUT2[297] = GND;
assign RX_BIT_CTRL_OUT2[298] = GND;
assign RX_BIT_CTRL_OUT2[299] = GND;
assign RX_BIT_CTRL_OUT2[300] = GND;
assign RX_BIT_CTRL_OUT2[301] = GND;
assign RX_BIT_CTRL_OUT2[302] = GND;
assign RX_BIT_CTRL_OUT2[303] = GND;
assign RX_BIT_CTRL_OUT2[304] = GND;
assign RX_BIT_CTRL_OUT2[305] = GND;
assign RX_BIT_CTRL_OUT2[306] = GND;
assign RX_BIT_CTRL_OUT2[307] = GND;
assign RX_BIT_CTRL_OUT2[308] = GND;
assign RX_BIT_CTRL_OUT2[309] = GND;
assign RX_BIT_CTRL_OUT2[310] = GND;
assign RX_BIT_CTRL_OUT2[311] = GND;
assign RX_BIT_CTRL_OUT2[312] = GND;
assign RX_BIT_CTRL_OUT2[313] = GND;
assign RX_BIT_CTRL_OUT2[314] = GND;
assign RX_BIT_CTRL_OUT2[315] = GND;
assign RX_BIT_CTRL_OUT2[316] = GND;
assign RX_BIT_CTRL_OUT2[317] = GND;
assign RX_BIT_CTRL_OUT2[318] = GND;
assign RX_BIT_CTRL_OUT2[319] = GND;
assign RX_BIT_CTRL_OUT3[0] = GND;
assign RX_BIT_CTRL_OUT3[1] = GND;
assign RX_BIT_CTRL_OUT3[2] = GND;
assign RX_BIT_CTRL_OUT3[3] = GND;
assign RX_BIT_CTRL_OUT3[4] = GND;
assign RX_BIT_CTRL_OUT3[5] = GND;
assign RX_BIT_CTRL_OUT3[6] = GND;
assign RX_BIT_CTRL_OUT3[7] = GND;
assign RX_BIT_CTRL_OUT3[8] = GND;
assign RX_BIT_CTRL_OUT3[9] = GND;
assign RX_BIT_CTRL_OUT3[10] = GND;
assign RX_BIT_CTRL_OUT3[11] = GND;
assign RX_BIT_CTRL_OUT3[12] = GND;
assign RX_BIT_CTRL_OUT3[13] = GND;
assign RX_BIT_CTRL_OUT3[14] = GND;
assign RX_BIT_CTRL_OUT3[15] = GND;
assign RX_BIT_CTRL_OUT3[16] = GND;
assign RX_BIT_CTRL_OUT3[17] = GND;
assign RX_BIT_CTRL_OUT3[18] = GND;
assign RX_BIT_CTRL_OUT3[19] = GND;
assign RX_BIT_CTRL_OUT3[20] = GND;
assign RX_BIT_CTRL_OUT3[21] = GND;
assign RX_BIT_CTRL_OUT3[22] = GND;
assign RX_BIT_CTRL_OUT3[23] = GND;
assign RX_BIT_CTRL_OUT3[24] = GND;
assign RX_BIT_CTRL_OUT3[25] = GND;
assign RX_BIT_CTRL_OUT3[26] = GND;
assign RX_BIT_CTRL_OUT3[27] = GND;
assign RX_BIT_CTRL_OUT3[28] = GND;
assign RX_BIT_CTRL_OUT3[29] = GND;
assign RX_BIT_CTRL_OUT3[30] = GND;
assign RX_BIT_CTRL_OUT3[31] = GND;
assign RX_BIT_CTRL_OUT3[32] = GND;
assign RX_BIT_CTRL_OUT3[33] = GND;
assign RX_BIT_CTRL_OUT3[34] = GND;
assign RX_BIT_CTRL_OUT3[35] = GND;
assign RX_BIT_CTRL_OUT3[36] = GND;
assign RX_BIT_CTRL_OUT3[37] = GND;
assign RX_BIT_CTRL_OUT3[38] = GND;
assign RX_BIT_CTRL_OUT3[39] = GND;
assign RX_BIT_CTRL_OUT3[80] = GND;
assign RX_BIT_CTRL_OUT3[81] = GND;
assign RX_BIT_CTRL_OUT3[82] = GND;
assign RX_BIT_CTRL_OUT3[83] = GND;
assign RX_BIT_CTRL_OUT3[84] = GND;
assign RX_BIT_CTRL_OUT3[85] = GND;
assign RX_BIT_CTRL_OUT3[86] = GND;
assign RX_BIT_CTRL_OUT3[87] = GND;
assign RX_BIT_CTRL_OUT3[88] = GND;
assign RX_BIT_CTRL_OUT3[89] = GND;
assign RX_BIT_CTRL_OUT3[90] = GND;
assign RX_BIT_CTRL_OUT3[91] = GND;
assign RX_BIT_CTRL_OUT3[92] = GND;
assign RX_BIT_CTRL_OUT3[93] = GND;
assign RX_BIT_CTRL_OUT3[94] = GND;
assign RX_BIT_CTRL_OUT3[95] = GND;
assign RX_BIT_CTRL_OUT3[96] = GND;
assign RX_BIT_CTRL_OUT3[97] = GND;
assign RX_BIT_CTRL_OUT3[98] = GND;
assign RX_BIT_CTRL_OUT3[99] = GND;
assign RX_BIT_CTRL_OUT3[100] = GND;
assign RX_BIT_CTRL_OUT3[101] = GND;
assign RX_BIT_CTRL_OUT3[102] = GND;
assign RX_BIT_CTRL_OUT3[103] = GND;
assign RX_BIT_CTRL_OUT3[104] = GND;
assign RX_BIT_CTRL_OUT3[105] = GND;
assign RX_BIT_CTRL_OUT3[106] = GND;
assign RX_BIT_CTRL_OUT3[107] = GND;
assign RX_BIT_CTRL_OUT3[108] = GND;
assign RX_BIT_CTRL_OUT3[109] = GND;
assign RX_BIT_CTRL_OUT3[110] = GND;
assign RX_BIT_CTRL_OUT3[111] = GND;
assign RX_BIT_CTRL_OUT3[112] = GND;
assign RX_BIT_CTRL_OUT3[113] = GND;
assign RX_BIT_CTRL_OUT3[114] = GND;
assign RX_BIT_CTRL_OUT3[115] = GND;
assign RX_BIT_CTRL_OUT3[116] = GND;
assign RX_BIT_CTRL_OUT3[117] = GND;
assign RX_BIT_CTRL_OUT3[118] = GND;
assign RX_BIT_CTRL_OUT3[119] = GND;
assign RX_BIT_CTRL_OUT3[120] = GND;
assign RX_BIT_CTRL_OUT3[121] = GND;
assign RX_BIT_CTRL_OUT3[122] = GND;
assign RX_BIT_CTRL_OUT3[123] = GND;
assign RX_BIT_CTRL_OUT3[124] = GND;
assign RX_BIT_CTRL_OUT3[125] = GND;
assign RX_BIT_CTRL_OUT3[126] = GND;
assign RX_BIT_CTRL_OUT3[127] = GND;
assign RX_BIT_CTRL_OUT3[128] = GND;
assign RX_BIT_CTRL_OUT3[129] = GND;
assign RX_BIT_CTRL_OUT3[130] = GND;
assign RX_BIT_CTRL_OUT3[131] = GND;
assign RX_BIT_CTRL_OUT3[132] = GND;
assign RX_BIT_CTRL_OUT3[133] = GND;
assign RX_BIT_CTRL_OUT3[134] = GND;
assign RX_BIT_CTRL_OUT3[135] = GND;
assign RX_BIT_CTRL_OUT3[136] = GND;
assign RX_BIT_CTRL_OUT3[137] = GND;
assign RX_BIT_CTRL_OUT3[138] = GND;
assign RX_BIT_CTRL_OUT3[139] = GND;
assign RX_BIT_CTRL_OUT3[140] = GND;
assign RX_BIT_CTRL_OUT3[141] = GND;
assign RX_BIT_CTRL_OUT3[142] = GND;
assign RX_BIT_CTRL_OUT3[143] = GND;
assign RX_BIT_CTRL_OUT3[144] = GND;
assign RX_BIT_CTRL_OUT3[145] = GND;
assign RX_BIT_CTRL_OUT3[146] = GND;
assign RX_BIT_CTRL_OUT3[147] = GND;
assign RX_BIT_CTRL_OUT3[148] = GND;
assign RX_BIT_CTRL_OUT3[149] = GND;
assign RX_BIT_CTRL_OUT3[150] = GND;
assign RX_BIT_CTRL_OUT3[151] = GND;
assign RX_BIT_CTRL_OUT3[152] = GND;
assign RX_BIT_CTRL_OUT3[153] = GND;
assign RX_BIT_CTRL_OUT3[154] = GND;
assign RX_BIT_CTRL_OUT3[155] = GND;
assign RX_BIT_CTRL_OUT3[156] = GND;
assign RX_BIT_CTRL_OUT3[157] = GND;
assign RX_BIT_CTRL_OUT3[158] = GND;
assign RX_BIT_CTRL_OUT3[159] = GND;
assign RX_BIT_CTRL_OUT3[160] = GND;
assign RX_BIT_CTRL_OUT3[161] = GND;
assign RX_BIT_CTRL_OUT3[162] = GND;
assign RX_BIT_CTRL_OUT3[163] = GND;
assign RX_BIT_CTRL_OUT3[164] = GND;
assign RX_BIT_CTRL_OUT3[165] = GND;
assign RX_BIT_CTRL_OUT3[166] = GND;
assign RX_BIT_CTRL_OUT3[167] = GND;
assign RX_BIT_CTRL_OUT3[168] = GND;
assign RX_BIT_CTRL_OUT3[169] = GND;
assign RX_BIT_CTRL_OUT3[170] = GND;
assign RX_BIT_CTRL_OUT3[171] = GND;
assign RX_BIT_CTRL_OUT3[172] = GND;
assign RX_BIT_CTRL_OUT3[173] = GND;
assign RX_BIT_CTRL_OUT3[174] = GND;
assign RX_BIT_CTRL_OUT3[175] = GND;
assign RX_BIT_CTRL_OUT3[176] = GND;
assign RX_BIT_CTRL_OUT3[177] = GND;
assign RX_BIT_CTRL_OUT3[178] = GND;
assign RX_BIT_CTRL_OUT3[179] = GND;
assign RX_BIT_CTRL_OUT3[180] = GND;
assign RX_BIT_CTRL_OUT3[181] = GND;
assign RX_BIT_CTRL_OUT3[182] = GND;
assign RX_BIT_CTRL_OUT3[183] = GND;
assign RX_BIT_CTRL_OUT3[184] = GND;
assign RX_BIT_CTRL_OUT3[185] = GND;
assign RX_BIT_CTRL_OUT3[186] = GND;
assign RX_BIT_CTRL_OUT3[187] = GND;
assign RX_BIT_CTRL_OUT3[188] = GND;
assign RX_BIT_CTRL_OUT3[189] = GND;
assign RX_BIT_CTRL_OUT3[190] = GND;
assign RX_BIT_CTRL_OUT3[191] = GND;
assign RX_BIT_CTRL_OUT3[192] = GND;
assign RX_BIT_CTRL_OUT3[193] = GND;
assign RX_BIT_CTRL_OUT3[194] = GND;
assign RX_BIT_CTRL_OUT3[195] = GND;
assign RX_BIT_CTRL_OUT3[196] = GND;
assign RX_BIT_CTRL_OUT3[197] = GND;
assign RX_BIT_CTRL_OUT3[198] = GND;
assign RX_BIT_CTRL_OUT3[199] = GND;
assign RX_BIT_CTRL_OUT3[200] = GND;
assign RX_BIT_CTRL_OUT3[201] = GND;
assign RX_BIT_CTRL_OUT3[202] = GND;
assign RX_BIT_CTRL_OUT3[203] = GND;
assign RX_BIT_CTRL_OUT3[204] = GND;
assign RX_BIT_CTRL_OUT3[205] = GND;
assign RX_BIT_CTRL_OUT3[206] = GND;
assign RX_BIT_CTRL_OUT3[207] = GND;
assign RX_BIT_CTRL_OUT3[208] = GND;
assign RX_BIT_CTRL_OUT3[209] = GND;
assign RX_BIT_CTRL_OUT3[210] = GND;
assign RX_BIT_CTRL_OUT3[211] = GND;
assign RX_BIT_CTRL_OUT3[212] = GND;
assign RX_BIT_CTRL_OUT3[213] = GND;
assign RX_BIT_CTRL_OUT3[214] = GND;
assign RX_BIT_CTRL_OUT3[215] = GND;
assign RX_BIT_CTRL_OUT3[216] = GND;
assign RX_BIT_CTRL_OUT3[217] = GND;
assign RX_BIT_CTRL_OUT3[218] = GND;
assign RX_BIT_CTRL_OUT3[219] = GND;
assign RX_BIT_CTRL_OUT3[220] = GND;
assign RX_BIT_CTRL_OUT3[221] = GND;
assign RX_BIT_CTRL_OUT3[222] = GND;
assign RX_BIT_CTRL_OUT3[223] = GND;
assign RX_BIT_CTRL_OUT3[224] = GND;
assign RX_BIT_CTRL_OUT3[225] = GND;
assign RX_BIT_CTRL_OUT3[226] = GND;
assign RX_BIT_CTRL_OUT3[227] = GND;
assign RX_BIT_CTRL_OUT3[228] = GND;
assign RX_BIT_CTRL_OUT3[229] = GND;
assign RX_BIT_CTRL_OUT3[230] = GND;
assign RX_BIT_CTRL_OUT3[231] = GND;
assign RX_BIT_CTRL_OUT3[232] = GND;
assign RX_BIT_CTRL_OUT3[233] = GND;
assign RX_BIT_CTRL_OUT3[234] = GND;
assign RX_BIT_CTRL_OUT3[235] = GND;
assign RX_BIT_CTRL_OUT3[236] = GND;
assign RX_BIT_CTRL_OUT3[237] = GND;
assign RX_BIT_CTRL_OUT3[238] = GND;
assign RX_BIT_CTRL_OUT3[239] = GND;
assign RX_BIT_CTRL_OUT3[240] = GND;
assign RX_BIT_CTRL_OUT3[241] = GND;
assign RX_BIT_CTRL_OUT3[242] = GND;
assign RX_BIT_CTRL_OUT3[243] = GND;
assign RX_BIT_CTRL_OUT3[244] = GND;
assign RX_BIT_CTRL_OUT3[245] = GND;
assign RX_BIT_CTRL_OUT3[246] = GND;
assign RX_BIT_CTRL_OUT3[247] = GND;
assign RX_BIT_CTRL_OUT3[248] = GND;
assign RX_BIT_CTRL_OUT3[249] = GND;
assign RX_BIT_CTRL_OUT3[250] = GND;
assign RX_BIT_CTRL_OUT3[251] = GND;
assign RX_BIT_CTRL_OUT3[252] = GND;
assign RX_BIT_CTRL_OUT3[253] = GND;
assign RX_BIT_CTRL_OUT3[254] = GND;
assign RX_BIT_CTRL_OUT3[255] = GND;
assign RX_BIT_CTRL_OUT3[256] = GND;
assign RX_BIT_CTRL_OUT3[257] = GND;
assign RX_BIT_CTRL_OUT3[258] = GND;
assign RX_BIT_CTRL_OUT3[259] = GND;
assign RX_BIT_CTRL_OUT3[260] = GND;
assign RX_BIT_CTRL_OUT3[261] = GND;
assign RX_BIT_CTRL_OUT3[262] = GND;
assign RX_BIT_CTRL_OUT3[263] = GND;
assign RX_BIT_CTRL_OUT3[264] = GND;
assign RX_BIT_CTRL_OUT3[265] = GND;
assign RX_BIT_CTRL_OUT3[266] = GND;
assign RX_BIT_CTRL_OUT3[267] = GND;
assign RX_BIT_CTRL_OUT3[268] = GND;
assign RX_BIT_CTRL_OUT3[269] = GND;
assign RX_BIT_CTRL_OUT3[270] = GND;
assign RX_BIT_CTRL_OUT3[271] = GND;
assign RX_BIT_CTRL_OUT3[272] = GND;
assign RX_BIT_CTRL_OUT3[273] = GND;
assign RX_BIT_CTRL_OUT3[274] = GND;
assign RX_BIT_CTRL_OUT3[275] = GND;
assign RX_BIT_CTRL_OUT3[276] = GND;
assign RX_BIT_CTRL_OUT3[277] = GND;
assign RX_BIT_CTRL_OUT3[278] = GND;
assign RX_BIT_CTRL_OUT3[279] = GND;
assign RX_BIT_CTRL_OUT3[280] = GND;
assign RX_BIT_CTRL_OUT3[281] = GND;
assign RX_BIT_CTRL_OUT3[282] = GND;
assign RX_BIT_CTRL_OUT3[283] = GND;
assign RX_BIT_CTRL_OUT3[284] = GND;
assign RX_BIT_CTRL_OUT3[285] = GND;
assign RX_BIT_CTRL_OUT3[286] = GND;
assign RX_BIT_CTRL_OUT3[287] = GND;
assign RX_BIT_CTRL_OUT3[288] = GND;
assign RX_BIT_CTRL_OUT3[289] = GND;
assign RX_BIT_CTRL_OUT3[290] = GND;
assign RX_BIT_CTRL_OUT3[291] = GND;
assign RX_BIT_CTRL_OUT3[292] = GND;
assign RX_BIT_CTRL_OUT3[293] = GND;
assign RX_BIT_CTRL_OUT3[294] = GND;
assign RX_BIT_CTRL_OUT3[295] = GND;
assign RX_BIT_CTRL_OUT3[296] = GND;
assign RX_BIT_CTRL_OUT3[297] = GND;
assign RX_BIT_CTRL_OUT3[298] = GND;
assign RX_BIT_CTRL_OUT3[299] = GND;
assign RX_BIT_CTRL_OUT3[300] = GND;
assign RX_BIT_CTRL_OUT3[301] = GND;
assign RX_BIT_CTRL_OUT3[302] = GND;
assign RX_BIT_CTRL_OUT3[303] = GND;
assign RX_BIT_CTRL_OUT3[304] = GND;
assign RX_BIT_CTRL_OUT3[305] = GND;
assign RX_BIT_CTRL_OUT3[306] = GND;
assign RX_BIT_CTRL_OUT3[307] = GND;
assign RX_BIT_CTRL_OUT3[308] = GND;
assign RX_BIT_CTRL_OUT3[309] = GND;
assign RX_BIT_CTRL_OUT3[310] = GND;
assign RX_BIT_CTRL_OUT3[311] = GND;
assign RX_BIT_CTRL_OUT3[312] = GND;
assign RX_BIT_CTRL_OUT3[313] = GND;
assign RX_BIT_CTRL_OUT3[314] = GND;
assign RX_BIT_CTRL_OUT3[315] = GND;
assign RX_BIT_CTRL_OUT3[316] = GND;
assign RX_BIT_CTRL_OUT3[317] = GND;
assign RX_BIT_CTRL_OUT3[318] = GND;
assign RX_BIT_CTRL_OUT3[319] = GND;
assign RX_BIT_CTRL_OUT4[0] = GND;
assign RX_BIT_CTRL_OUT4[1] = GND;
assign RX_BIT_CTRL_OUT4[2] = GND;
assign RX_BIT_CTRL_OUT4[3] = GND;
assign RX_BIT_CTRL_OUT4[4] = GND;
assign RX_BIT_CTRL_OUT4[5] = GND;
assign RX_BIT_CTRL_OUT4[6] = GND;
assign RX_BIT_CTRL_OUT4[7] = GND;
assign RX_BIT_CTRL_OUT4[8] = GND;
assign RX_BIT_CTRL_OUT4[9] = GND;
assign RX_BIT_CTRL_OUT4[10] = GND;
assign RX_BIT_CTRL_OUT4[11] = GND;
assign RX_BIT_CTRL_OUT4[12] = GND;
assign RX_BIT_CTRL_OUT4[13] = GND;
assign RX_BIT_CTRL_OUT4[14] = GND;
assign RX_BIT_CTRL_OUT4[15] = GND;
assign RX_BIT_CTRL_OUT4[16] = GND;
assign RX_BIT_CTRL_OUT4[17] = GND;
assign RX_BIT_CTRL_OUT4[18] = GND;
assign RX_BIT_CTRL_OUT4[19] = GND;
assign RX_BIT_CTRL_OUT4[20] = GND;
assign RX_BIT_CTRL_OUT4[21] = GND;
assign RX_BIT_CTRL_OUT4[22] = GND;
assign RX_BIT_CTRL_OUT4[23] = GND;
assign RX_BIT_CTRL_OUT4[24] = GND;
assign RX_BIT_CTRL_OUT4[25] = GND;
assign RX_BIT_CTRL_OUT4[26] = GND;
assign RX_BIT_CTRL_OUT4[27] = GND;
assign RX_BIT_CTRL_OUT4[28] = GND;
assign RX_BIT_CTRL_OUT4[29] = GND;
assign RX_BIT_CTRL_OUT4[30] = GND;
assign RX_BIT_CTRL_OUT4[31] = GND;
assign RX_BIT_CTRL_OUT4[32] = GND;
assign RX_BIT_CTRL_OUT4[33] = GND;
assign RX_BIT_CTRL_OUT4[34] = GND;
assign RX_BIT_CTRL_OUT4[35] = GND;
assign RX_BIT_CTRL_OUT4[36] = GND;
assign RX_BIT_CTRL_OUT4[37] = GND;
assign RX_BIT_CTRL_OUT4[38] = GND;
assign RX_BIT_CTRL_OUT4[39] = GND;
assign RX_BIT_CTRL_OUT4[40] = GND;
assign RX_BIT_CTRL_OUT4[41] = GND;
assign RX_BIT_CTRL_OUT4[42] = GND;
assign RX_BIT_CTRL_OUT4[43] = GND;
assign RX_BIT_CTRL_OUT4[44] = GND;
assign RX_BIT_CTRL_OUT4[45] = GND;
assign RX_BIT_CTRL_OUT4[46] = GND;
assign RX_BIT_CTRL_OUT4[47] = GND;
assign RX_BIT_CTRL_OUT4[48] = GND;
assign RX_BIT_CTRL_OUT4[49] = GND;
assign RX_BIT_CTRL_OUT4[50] = GND;
assign RX_BIT_CTRL_OUT4[51] = GND;
assign RX_BIT_CTRL_OUT4[52] = GND;
assign RX_BIT_CTRL_OUT4[53] = GND;
assign RX_BIT_CTRL_OUT4[54] = GND;
assign RX_BIT_CTRL_OUT4[55] = GND;
assign RX_BIT_CTRL_OUT4[56] = GND;
assign RX_BIT_CTRL_OUT4[57] = GND;
assign RX_BIT_CTRL_OUT4[58] = GND;
assign RX_BIT_CTRL_OUT4[59] = GND;
assign RX_BIT_CTRL_OUT4[60] = GND;
assign RX_BIT_CTRL_OUT4[61] = GND;
assign RX_BIT_CTRL_OUT4[62] = GND;
assign RX_BIT_CTRL_OUT4[63] = GND;
assign RX_BIT_CTRL_OUT4[64] = GND;
assign RX_BIT_CTRL_OUT4[65] = GND;
assign RX_BIT_CTRL_OUT4[66] = GND;
assign RX_BIT_CTRL_OUT4[67] = GND;
assign RX_BIT_CTRL_OUT4[68] = GND;
assign RX_BIT_CTRL_OUT4[69] = GND;
assign RX_BIT_CTRL_OUT4[70] = GND;
assign RX_BIT_CTRL_OUT4[71] = GND;
assign RX_BIT_CTRL_OUT4[72] = GND;
assign RX_BIT_CTRL_OUT4[73] = GND;
assign RX_BIT_CTRL_OUT4[74] = GND;
assign RX_BIT_CTRL_OUT4[75] = GND;
assign RX_BIT_CTRL_OUT4[76] = GND;
assign RX_BIT_CTRL_OUT4[77] = GND;
assign RX_BIT_CTRL_OUT4[78] = GND;
assign RX_BIT_CTRL_OUT4[79] = GND;
assign RX_BIT_CTRL_OUT4[80] = GND;
assign RX_BIT_CTRL_OUT4[81] = GND;
assign RX_BIT_CTRL_OUT4[82] = GND;
assign RX_BIT_CTRL_OUT4[83] = GND;
assign RX_BIT_CTRL_OUT4[84] = GND;
assign RX_BIT_CTRL_OUT4[85] = GND;
assign RX_BIT_CTRL_OUT4[86] = GND;
assign RX_BIT_CTRL_OUT4[87] = GND;
assign RX_BIT_CTRL_OUT4[88] = GND;
assign RX_BIT_CTRL_OUT4[89] = GND;
assign RX_BIT_CTRL_OUT4[90] = GND;
assign RX_BIT_CTRL_OUT4[91] = GND;
assign RX_BIT_CTRL_OUT4[92] = GND;
assign RX_BIT_CTRL_OUT4[93] = GND;
assign RX_BIT_CTRL_OUT4[94] = GND;
assign RX_BIT_CTRL_OUT4[95] = GND;
assign RX_BIT_CTRL_OUT4[96] = GND;
assign RX_BIT_CTRL_OUT4[97] = GND;
assign RX_BIT_CTRL_OUT4[98] = GND;
assign RX_BIT_CTRL_OUT4[99] = GND;
assign RX_BIT_CTRL_OUT4[100] = GND;
assign RX_BIT_CTRL_OUT4[101] = GND;
assign RX_BIT_CTRL_OUT4[102] = GND;
assign RX_BIT_CTRL_OUT4[103] = GND;
assign RX_BIT_CTRL_OUT4[104] = GND;
assign RX_BIT_CTRL_OUT4[105] = GND;
assign RX_BIT_CTRL_OUT4[106] = GND;
assign RX_BIT_CTRL_OUT4[107] = GND;
assign RX_BIT_CTRL_OUT4[108] = GND;
assign RX_BIT_CTRL_OUT4[109] = GND;
assign RX_BIT_CTRL_OUT4[110] = GND;
assign RX_BIT_CTRL_OUT4[111] = GND;
assign RX_BIT_CTRL_OUT4[112] = GND;
assign RX_BIT_CTRL_OUT4[113] = GND;
assign RX_BIT_CTRL_OUT4[114] = GND;
assign RX_BIT_CTRL_OUT4[115] = GND;
assign RX_BIT_CTRL_OUT4[116] = GND;
assign RX_BIT_CTRL_OUT4[117] = GND;
assign RX_BIT_CTRL_OUT4[118] = GND;
assign RX_BIT_CTRL_OUT4[119] = GND;
assign RX_BIT_CTRL_OUT4[160] = GND;
assign RX_BIT_CTRL_OUT4[161] = GND;
assign RX_BIT_CTRL_OUT4[162] = GND;
assign RX_BIT_CTRL_OUT4[163] = GND;
assign RX_BIT_CTRL_OUT4[164] = GND;
assign RX_BIT_CTRL_OUT4[165] = GND;
assign RX_BIT_CTRL_OUT4[166] = GND;
assign RX_BIT_CTRL_OUT4[167] = GND;
assign RX_BIT_CTRL_OUT4[168] = GND;
assign RX_BIT_CTRL_OUT4[169] = GND;
assign RX_BIT_CTRL_OUT4[170] = GND;
assign RX_BIT_CTRL_OUT4[171] = GND;
assign RX_BIT_CTRL_OUT4[172] = GND;
assign RX_BIT_CTRL_OUT4[173] = GND;
assign RX_BIT_CTRL_OUT4[174] = GND;
assign RX_BIT_CTRL_OUT4[175] = GND;
assign RX_BIT_CTRL_OUT4[176] = GND;
assign RX_BIT_CTRL_OUT4[177] = GND;
assign RX_BIT_CTRL_OUT4[178] = GND;
assign RX_BIT_CTRL_OUT4[179] = GND;
assign RX_BIT_CTRL_OUT4[180] = GND;
assign RX_BIT_CTRL_OUT4[181] = GND;
assign RX_BIT_CTRL_OUT4[182] = GND;
assign RX_BIT_CTRL_OUT4[183] = GND;
assign RX_BIT_CTRL_OUT4[184] = GND;
assign RX_BIT_CTRL_OUT4[185] = GND;
assign RX_BIT_CTRL_OUT4[186] = GND;
assign RX_BIT_CTRL_OUT4[187] = GND;
assign RX_BIT_CTRL_OUT4[188] = GND;
assign RX_BIT_CTRL_OUT4[189] = GND;
assign RX_BIT_CTRL_OUT4[190] = GND;
assign RX_BIT_CTRL_OUT4[191] = GND;
assign RX_BIT_CTRL_OUT4[192] = GND;
assign RX_BIT_CTRL_OUT4[193] = GND;
assign RX_BIT_CTRL_OUT4[194] = GND;
assign RX_BIT_CTRL_OUT4[195] = GND;
assign RX_BIT_CTRL_OUT4[196] = GND;
assign RX_BIT_CTRL_OUT4[197] = GND;
assign RX_BIT_CTRL_OUT4[198] = GND;
assign RX_BIT_CTRL_OUT4[199] = GND;
assign RX_BIT_CTRL_OUT4[200] = GND;
assign RX_BIT_CTRL_OUT4[201] = GND;
assign RX_BIT_CTRL_OUT4[202] = GND;
assign RX_BIT_CTRL_OUT4[203] = GND;
assign RX_BIT_CTRL_OUT4[204] = GND;
assign RX_BIT_CTRL_OUT4[205] = GND;
assign RX_BIT_CTRL_OUT4[206] = GND;
assign RX_BIT_CTRL_OUT4[207] = GND;
assign RX_BIT_CTRL_OUT4[208] = GND;
assign RX_BIT_CTRL_OUT4[209] = GND;
assign RX_BIT_CTRL_OUT4[210] = GND;
assign RX_BIT_CTRL_OUT4[211] = GND;
assign RX_BIT_CTRL_OUT4[212] = GND;
assign RX_BIT_CTRL_OUT4[213] = GND;
assign RX_BIT_CTRL_OUT4[214] = GND;
assign RX_BIT_CTRL_OUT4[215] = GND;
assign RX_BIT_CTRL_OUT4[216] = GND;
assign RX_BIT_CTRL_OUT4[217] = GND;
assign RX_BIT_CTRL_OUT4[218] = GND;
assign RX_BIT_CTRL_OUT4[219] = GND;
assign RX_BIT_CTRL_OUT4[220] = GND;
assign RX_BIT_CTRL_OUT4[221] = GND;
assign RX_BIT_CTRL_OUT4[222] = GND;
assign RX_BIT_CTRL_OUT4[223] = GND;
assign RX_BIT_CTRL_OUT4[224] = GND;
assign RX_BIT_CTRL_OUT4[225] = GND;
assign RX_BIT_CTRL_OUT4[226] = GND;
assign RX_BIT_CTRL_OUT4[227] = GND;
assign RX_BIT_CTRL_OUT4[228] = GND;
assign RX_BIT_CTRL_OUT4[229] = GND;
assign RX_BIT_CTRL_OUT4[230] = GND;
assign RX_BIT_CTRL_OUT4[231] = GND;
assign RX_BIT_CTRL_OUT4[232] = GND;
assign RX_BIT_CTRL_OUT4[233] = GND;
assign RX_BIT_CTRL_OUT4[234] = GND;
assign RX_BIT_CTRL_OUT4[235] = GND;
assign RX_BIT_CTRL_OUT4[236] = GND;
assign RX_BIT_CTRL_OUT4[237] = GND;
assign RX_BIT_CTRL_OUT4[238] = GND;
assign RX_BIT_CTRL_OUT4[239] = GND;
assign RX_BIT_CTRL_OUT4[240] = GND;
assign RX_BIT_CTRL_OUT4[241] = GND;
assign RX_BIT_CTRL_OUT4[242] = GND;
assign RX_BIT_CTRL_OUT4[243] = GND;
assign RX_BIT_CTRL_OUT4[244] = GND;
assign RX_BIT_CTRL_OUT4[245] = GND;
assign RX_BIT_CTRL_OUT4[246] = GND;
assign RX_BIT_CTRL_OUT4[247] = GND;
assign RX_BIT_CTRL_OUT4[248] = GND;
assign RX_BIT_CTRL_OUT4[249] = GND;
assign RX_BIT_CTRL_OUT4[250] = GND;
assign RX_BIT_CTRL_OUT4[251] = GND;
assign RX_BIT_CTRL_OUT4[252] = GND;
assign RX_BIT_CTRL_OUT4[253] = GND;
assign RX_BIT_CTRL_OUT4[254] = GND;
assign RX_BIT_CTRL_OUT4[255] = GND;
assign RX_BIT_CTRL_OUT4[256] = GND;
assign RX_BIT_CTRL_OUT4[257] = GND;
assign RX_BIT_CTRL_OUT4[258] = GND;
assign RX_BIT_CTRL_OUT4[259] = GND;
assign RX_BIT_CTRL_OUT4[260] = GND;
assign RX_BIT_CTRL_OUT4[261] = GND;
assign RX_BIT_CTRL_OUT4[262] = GND;
assign RX_BIT_CTRL_OUT4[263] = GND;
assign RX_BIT_CTRL_OUT4[264] = GND;
assign RX_BIT_CTRL_OUT4[265] = GND;
assign RX_BIT_CTRL_OUT4[266] = GND;
assign RX_BIT_CTRL_OUT4[267] = GND;
assign RX_BIT_CTRL_OUT4[268] = GND;
assign RX_BIT_CTRL_OUT4[269] = GND;
assign RX_BIT_CTRL_OUT4[270] = GND;
assign RX_BIT_CTRL_OUT4[271] = GND;
assign RX_BIT_CTRL_OUT4[272] = GND;
assign RX_BIT_CTRL_OUT4[273] = GND;
assign RX_BIT_CTRL_OUT4[274] = GND;
assign RX_BIT_CTRL_OUT4[275] = GND;
assign RX_BIT_CTRL_OUT4[276] = GND;
assign RX_BIT_CTRL_OUT4[277] = GND;
assign RX_BIT_CTRL_OUT4[278] = GND;
assign RX_BIT_CTRL_OUT4[279] = GND;
assign RX_BIT_CTRL_OUT4[280] = GND;
assign RX_BIT_CTRL_OUT4[281] = GND;
assign RX_BIT_CTRL_OUT4[282] = GND;
assign RX_BIT_CTRL_OUT4[283] = GND;
assign RX_BIT_CTRL_OUT4[284] = GND;
assign RX_BIT_CTRL_OUT4[285] = GND;
assign RX_BIT_CTRL_OUT4[286] = GND;
assign RX_BIT_CTRL_OUT4[287] = GND;
assign RX_BIT_CTRL_OUT4[288] = GND;
assign RX_BIT_CTRL_OUT4[289] = GND;
assign RX_BIT_CTRL_OUT4[290] = GND;
assign RX_BIT_CTRL_OUT4[291] = GND;
assign RX_BIT_CTRL_OUT4[292] = GND;
assign RX_BIT_CTRL_OUT4[293] = GND;
assign RX_BIT_CTRL_OUT4[294] = GND;
assign RX_BIT_CTRL_OUT4[295] = GND;
assign RX_BIT_CTRL_OUT4[296] = GND;
assign RX_BIT_CTRL_OUT4[297] = GND;
assign RX_BIT_CTRL_OUT4[298] = GND;
assign RX_BIT_CTRL_OUT4[299] = GND;
assign RX_BIT_CTRL_OUT4[300] = GND;
assign RX_BIT_CTRL_OUT4[301] = GND;
assign RX_BIT_CTRL_OUT4[302] = GND;
assign RX_BIT_CTRL_OUT4[303] = GND;
assign RX_BIT_CTRL_OUT4[304] = GND;
assign RX_BIT_CTRL_OUT4[305] = GND;
assign RX_BIT_CTRL_OUT4[306] = GND;
assign RX_BIT_CTRL_OUT4[307] = GND;
assign RX_BIT_CTRL_OUT4[308] = GND;
assign RX_BIT_CTRL_OUT4[309] = GND;
assign RX_BIT_CTRL_OUT4[310] = GND;
assign RX_BIT_CTRL_OUT4[311] = GND;
assign RX_BIT_CTRL_OUT4[312] = GND;
assign RX_BIT_CTRL_OUT4[313] = GND;
assign RX_BIT_CTRL_OUT4[314] = GND;
assign RX_BIT_CTRL_OUT4[315] = GND;
assign RX_BIT_CTRL_OUT4[316] = GND;
assign RX_BIT_CTRL_OUT4[317] = GND;
assign RX_BIT_CTRL_OUT4[318] = GND;
assign RX_BIT_CTRL_OUT4[319] = GND;
assign RX_BIT_CTRL_OUT5[0] = GND;
assign RX_BIT_CTRL_OUT5[1] = GND;
assign RX_BIT_CTRL_OUT5[2] = GND;
assign RX_BIT_CTRL_OUT5[3] = GND;
assign RX_BIT_CTRL_OUT5[4] = GND;
assign RX_BIT_CTRL_OUT5[5] = GND;
assign RX_BIT_CTRL_OUT5[6] = GND;
assign RX_BIT_CTRL_OUT5[7] = GND;
assign RX_BIT_CTRL_OUT5[8] = GND;
assign RX_BIT_CTRL_OUT5[9] = GND;
assign RX_BIT_CTRL_OUT5[10] = GND;
assign RX_BIT_CTRL_OUT5[11] = GND;
assign RX_BIT_CTRL_OUT5[12] = GND;
assign RX_BIT_CTRL_OUT5[13] = GND;
assign RX_BIT_CTRL_OUT5[14] = GND;
assign RX_BIT_CTRL_OUT5[15] = GND;
assign RX_BIT_CTRL_OUT5[16] = GND;
assign RX_BIT_CTRL_OUT5[17] = GND;
assign RX_BIT_CTRL_OUT5[18] = GND;
assign RX_BIT_CTRL_OUT5[19] = GND;
assign RX_BIT_CTRL_OUT5[20] = GND;
assign RX_BIT_CTRL_OUT5[21] = GND;
assign RX_BIT_CTRL_OUT5[22] = GND;
assign RX_BIT_CTRL_OUT5[23] = GND;
assign RX_BIT_CTRL_OUT5[24] = GND;
assign RX_BIT_CTRL_OUT5[25] = GND;
assign RX_BIT_CTRL_OUT5[26] = GND;
assign RX_BIT_CTRL_OUT5[27] = GND;
assign RX_BIT_CTRL_OUT5[28] = GND;
assign RX_BIT_CTRL_OUT5[29] = GND;
assign RX_BIT_CTRL_OUT5[30] = GND;
assign RX_BIT_CTRL_OUT5[31] = GND;
assign RX_BIT_CTRL_OUT5[32] = GND;
assign RX_BIT_CTRL_OUT5[33] = GND;
assign RX_BIT_CTRL_OUT5[34] = GND;
assign RX_BIT_CTRL_OUT5[35] = GND;
assign RX_BIT_CTRL_OUT5[36] = GND;
assign RX_BIT_CTRL_OUT5[37] = GND;
assign RX_BIT_CTRL_OUT5[38] = GND;
assign RX_BIT_CTRL_OUT5[39] = GND;
assign RX_BIT_CTRL_OUT5[40] = GND;
assign RX_BIT_CTRL_OUT5[41] = GND;
assign RX_BIT_CTRL_OUT5[42] = GND;
assign RX_BIT_CTRL_OUT5[43] = GND;
assign RX_BIT_CTRL_OUT5[44] = GND;
assign RX_BIT_CTRL_OUT5[45] = GND;
assign RX_BIT_CTRL_OUT5[46] = GND;
assign RX_BIT_CTRL_OUT5[47] = GND;
assign RX_BIT_CTRL_OUT5[48] = GND;
assign RX_BIT_CTRL_OUT5[49] = GND;
assign RX_BIT_CTRL_OUT5[50] = GND;
assign RX_BIT_CTRL_OUT5[51] = GND;
assign RX_BIT_CTRL_OUT5[52] = GND;
assign RX_BIT_CTRL_OUT5[53] = GND;
assign RX_BIT_CTRL_OUT5[54] = GND;
assign RX_BIT_CTRL_OUT5[55] = GND;
assign RX_BIT_CTRL_OUT5[56] = GND;
assign RX_BIT_CTRL_OUT5[57] = GND;
assign RX_BIT_CTRL_OUT5[58] = GND;
assign RX_BIT_CTRL_OUT5[59] = GND;
assign RX_BIT_CTRL_OUT5[60] = GND;
assign RX_BIT_CTRL_OUT5[61] = GND;
assign RX_BIT_CTRL_OUT5[62] = GND;
assign RX_BIT_CTRL_OUT5[63] = GND;
assign RX_BIT_CTRL_OUT5[64] = GND;
assign RX_BIT_CTRL_OUT5[65] = GND;
assign RX_BIT_CTRL_OUT5[66] = GND;
assign RX_BIT_CTRL_OUT5[67] = GND;
assign RX_BIT_CTRL_OUT5[68] = GND;
assign RX_BIT_CTRL_OUT5[69] = GND;
assign RX_BIT_CTRL_OUT5[70] = GND;
assign RX_BIT_CTRL_OUT5[71] = GND;
assign RX_BIT_CTRL_OUT5[72] = GND;
assign RX_BIT_CTRL_OUT5[73] = GND;
assign RX_BIT_CTRL_OUT5[74] = GND;
assign RX_BIT_CTRL_OUT5[75] = GND;
assign RX_BIT_CTRL_OUT5[76] = GND;
assign RX_BIT_CTRL_OUT5[77] = GND;
assign RX_BIT_CTRL_OUT5[78] = GND;
assign RX_BIT_CTRL_OUT5[79] = GND;
assign RX_BIT_CTRL_OUT5[80] = GND;
assign RX_BIT_CTRL_OUT5[81] = GND;
assign RX_BIT_CTRL_OUT5[82] = GND;
assign RX_BIT_CTRL_OUT5[83] = GND;
assign RX_BIT_CTRL_OUT5[84] = GND;
assign RX_BIT_CTRL_OUT5[85] = GND;
assign RX_BIT_CTRL_OUT5[86] = GND;
assign RX_BIT_CTRL_OUT5[87] = GND;
assign RX_BIT_CTRL_OUT5[88] = GND;
assign RX_BIT_CTRL_OUT5[89] = GND;
assign RX_BIT_CTRL_OUT5[90] = GND;
assign RX_BIT_CTRL_OUT5[91] = GND;
assign RX_BIT_CTRL_OUT5[92] = GND;
assign RX_BIT_CTRL_OUT5[93] = GND;
assign RX_BIT_CTRL_OUT5[94] = GND;
assign RX_BIT_CTRL_OUT5[95] = GND;
assign RX_BIT_CTRL_OUT5[96] = GND;
assign RX_BIT_CTRL_OUT5[97] = GND;
assign RX_BIT_CTRL_OUT5[98] = GND;
assign RX_BIT_CTRL_OUT5[99] = GND;
assign RX_BIT_CTRL_OUT5[100] = GND;
assign RX_BIT_CTRL_OUT5[101] = GND;
assign RX_BIT_CTRL_OUT5[102] = GND;
assign RX_BIT_CTRL_OUT5[103] = GND;
assign RX_BIT_CTRL_OUT5[104] = GND;
assign RX_BIT_CTRL_OUT5[105] = GND;
assign RX_BIT_CTRL_OUT5[106] = GND;
assign RX_BIT_CTRL_OUT5[107] = GND;
assign RX_BIT_CTRL_OUT5[108] = GND;
assign RX_BIT_CTRL_OUT5[109] = GND;
assign RX_BIT_CTRL_OUT5[110] = GND;
assign RX_BIT_CTRL_OUT5[111] = GND;
assign RX_BIT_CTRL_OUT5[112] = GND;
assign RX_BIT_CTRL_OUT5[113] = GND;
assign RX_BIT_CTRL_OUT5[114] = GND;
assign RX_BIT_CTRL_OUT5[115] = GND;
assign RX_BIT_CTRL_OUT5[116] = GND;
assign RX_BIT_CTRL_OUT5[117] = GND;
assign RX_BIT_CTRL_OUT5[118] = GND;
assign RX_BIT_CTRL_OUT5[119] = GND;
assign RX_BIT_CTRL_OUT5[160] = GND;
assign RX_BIT_CTRL_OUT5[161] = GND;
assign RX_BIT_CTRL_OUT5[162] = GND;
assign RX_BIT_CTRL_OUT5[163] = GND;
assign RX_BIT_CTRL_OUT5[164] = GND;
assign RX_BIT_CTRL_OUT5[165] = GND;
assign RX_BIT_CTRL_OUT5[166] = GND;
assign RX_BIT_CTRL_OUT5[167] = GND;
assign RX_BIT_CTRL_OUT5[168] = GND;
assign RX_BIT_CTRL_OUT5[169] = GND;
assign RX_BIT_CTRL_OUT5[170] = GND;
assign RX_BIT_CTRL_OUT5[171] = GND;
assign RX_BIT_CTRL_OUT5[172] = GND;
assign RX_BIT_CTRL_OUT5[173] = GND;
assign RX_BIT_CTRL_OUT5[174] = GND;
assign RX_BIT_CTRL_OUT5[175] = GND;
assign RX_BIT_CTRL_OUT5[176] = GND;
assign RX_BIT_CTRL_OUT5[177] = GND;
assign RX_BIT_CTRL_OUT5[178] = GND;
assign RX_BIT_CTRL_OUT5[179] = GND;
assign RX_BIT_CTRL_OUT5[180] = GND;
assign RX_BIT_CTRL_OUT5[181] = GND;
assign RX_BIT_CTRL_OUT5[182] = GND;
assign RX_BIT_CTRL_OUT5[183] = GND;
assign RX_BIT_CTRL_OUT5[184] = GND;
assign RX_BIT_CTRL_OUT5[185] = GND;
assign RX_BIT_CTRL_OUT5[186] = GND;
assign RX_BIT_CTRL_OUT5[187] = GND;
assign RX_BIT_CTRL_OUT5[188] = GND;
assign RX_BIT_CTRL_OUT5[189] = GND;
assign RX_BIT_CTRL_OUT5[190] = GND;
assign RX_BIT_CTRL_OUT5[191] = GND;
assign RX_BIT_CTRL_OUT5[192] = GND;
assign RX_BIT_CTRL_OUT5[193] = GND;
assign RX_BIT_CTRL_OUT5[194] = GND;
assign RX_BIT_CTRL_OUT5[195] = GND;
assign RX_BIT_CTRL_OUT5[196] = GND;
assign RX_BIT_CTRL_OUT5[197] = GND;
assign RX_BIT_CTRL_OUT5[198] = GND;
assign RX_BIT_CTRL_OUT5[199] = GND;
assign RX_BIT_CTRL_OUT5[200] = GND;
assign RX_BIT_CTRL_OUT5[201] = GND;
assign RX_BIT_CTRL_OUT5[202] = GND;
assign RX_BIT_CTRL_OUT5[203] = GND;
assign RX_BIT_CTRL_OUT5[204] = GND;
assign RX_BIT_CTRL_OUT5[205] = GND;
assign RX_BIT_CTRL_OUT5[206] = GND;
assign RX_BIT_CTRL_OUT5[207] = GND;
assign RX_BIT_CTRL_OUT5[208] = GND;
assign RX_BIT_CTRL_OUT5[209] = GND;
assign RX_BIT_CTRL_OUT5[210] = GND;
assign RX_BIT_CTRL_OUT5[211] = GND;
assign RX_BIT_CTRL_OUT5[212] = GND;
assign RX_BIT_CTRL_OUT5[213] = GND;
assign RX_BIT_CTRL_OUT5[214] = GND;
assign RX_BIT_CTRL_OUT5[215] = GND;
assign RX_BIT_CTRL_OUT5[216] = GND;
assign RX_BIT_CTRL_OUT5[217] = GND;
assign RX_BIT_CTRL_OUT5[218] = GND;
assign RX_BIT_CTRL_OUT5[219] = GND;
assign RX_BIT_CTRL_OUT5[220] = GND;
assign RX_BIT_CTRL_OUT5[221] = GND;
assign RX_BIT_CTRL_OUT5[222] = GND;
assign RX_BIT_CTRL_OUT5[223] = GND;
assign RX_BIT_CTRL_OUT5[224] = GND;
assign RX_BIT_CTRL_OUT5[225] = GND;
assign RX_BIT_CTRL_OUT5[226] = GND;
assign RX_BIT_CTRL_OUT5[227] = GND;
assign RX_BIT_CTRL_OUT5[228] = GND;
assign RX_BIT_CTRL_OUT5[229] = GND;
assign RX_BIT_CTRL_OUT5[230] = GND;
assign RX_BIT_CTRL_OUT5[231] = GND;
assign RX_BIT_CTRL_OUT5[232] = GND;
assign RX_BIT_CTRL_OUT5[233] = GND;
assign RX_BIT_CTRL_OUT5[234] = GND;
assign RX_BIT_CTRL_OUT5[235] = GND;
assign RX_BIT_CTRL_OUT5[236] = GND;
assign RX_BIT_CTRL_OUT5[237] = GND;
assign RX_BIT_CTRL_OUT5[238] = GND;
assign RX_BIT_CTRL_OUT5[239] = GND;
assign RX_BIT_CTRL_OUT5[240] = GND;
assign RX_BIT_CTRL_OUT5[241] = GND;
assign RX_BIT_CTRL_OUT5[242] = GND;
assign RX_BIT_CTRL_OUT5[243] = GND;
assign RX_BIT_CTRL_OUT5[244] = GND;
assign RX_BIT_CTRL_OUT5[245] = GND;
assign RX_BIT_CTRL_OUT5[246] = GND;
assign RX_BIT_CTRL_OUT5[247] = GND;
assign RX_BIT_CTRL_OUT5[248] = GND;
assign RX_BIT_CTRL_OUT5[249] = GND;
assign RX_BIT_CTRL_OUT5[250] = GND;
assign RX_BIT_CTRL_OUT5[251] = GND;
assign RX_BIT_CTRL_OUT5[252] = GND;
assign RX_BIT_CTRL_OUT5[253] = GND;
assign RX_BIT_CTRL_OUT5[254] = GND;
assign RX_BIT_CTRL_OUT5[255] = GND;
assign RX_BIT_CTRL_OUT5[256] = GND;
assign RX_BIT_CTRL_OUT5[257] = GND;
assign RX_BIT_CTRL_OUT5[258] = GND;
assign RX_BIT_CTRL_OUT5[259] = GND;
assign RX_BIT_CTRL_OUT5[260] = GND;
assign RX_BIT_CTRL_OUT5[261] = GND;
assign RX_BIT_CTRL_OUT5[262] = GND;
assign RX_BIT_CTRL_OUT5[263] = GND;
assign RX_BIT_CTRL_OUT5[264] = GND;
assign RX_BIT_CTRL_OUT5[265] = GND;
assign RX_BIT_CTRL_OUT5[266] = GND;
assign RX_BIT_CTRL_OUT5[267] = GND;
assign RX_BIT_CTRL_OUT5[268] = GND;
assign RX_BIT_CTRL_OUT5[269] = GND;
assign RX_BIT_CTRL_OUT5[270] = GND;
assign RX_BIT_CTRL_OUT5[271] = GND;
assign RX_BIT_CTRL_OUT5[272] = GND;
assign RX_BIT_CTRL_OUT5[273] = GND;
assign RX_BIT_CTRL_OUT5[274] = GND;
assign RX_BIT_CTRL_OUT5[275] = GND;
assign RX_BIT_CTRL_OUT5[276] = GND;
assign RX_BIT_CTRL_OUT5[277] = GND;
assign RX_BIT_CTRL_OUT5[278] = GND;
assign RX_BIT_CTRL_OUT5[279] = GND;
assign RX_BIT_CTRL_OUT5[280] = GND;
assign RX_BIT_CTRL_OUT5[281] = GND;
assign RX_BIT_CTRL_OUT5[282] = GND;
assign RX_BIT_CTRL_OUT5[283] = GND;
assign RX_BIT_CTRL_OUT5[284] = GND;
assign RX_BIT_CTRL_OUT5[285] = GND;
assign RX_BIT_CTRL_OUT5[286] = GND;
assign RX_BIT_CTRL_OUT5[287] = GND;
assign RX_BIT_CTRL_OUT5[288] = GND;
assign RX_BIT_CTRL_OUT5[289] = GND;
assign RX_BIT_CTRL_OUT5[290] = GND;
assign RX_BIT_CTRL_OUT5[291] = GND;
assign RX_BIT_CTRL_OUT5[292] = GND;
assign RX_BIT_CTRL_OUT5[293] = GND;
assign RX_BIT_CTRL_OUT5[294] = GND;
assign RX_BIT_CTRL_OUT5[295] = GND;
assign RX_BIT_CTRL_OUT5[296] = GND;
assign RX_BIT_CTRL_OUT5[297] = GND;
assign RX_BIT_CTRL_OUT5[298] = GND;
assign RX_BIT_CTRL_OUT5[299] = GND;
assign RX_BIT_CTRL_OUT5[300] = GND;
assign RX_BIT_CTRL_OUT5[301] = GND;
assign RX_BIT_CTRL_OUT5[302] = GND;
assign RX_BIT_CTRL_OUT5[303] = GND;
assign RX_BIT_CTRL_OUT5[304] = GND;
assign RX_BIT_CTRL_OUT5[305] = GND;
assign RX_BIT_CTRL_OUT5[306] = GND;
assign RX_BIT_CTRL_OUT5[307] = GND;
assign RX_BIT_CTRL_OUT5[308] = GND;
assign RX_BIT_CTRL_OUT5[309] = GND;
assign RX_BIT_CTRL_OUT5[310] = GND;
assign RX_BIT_CTRL_OUT5[311] = GND;
assign RX_BIT_CTRL_OUT5[312] = GND;
assign RX_BIT_CTRL_OUT5[313] = GND;
assign RX_BIT_CTRL_OUT5[314] = GND;
assign RX_BIT_CTRL_OUT5[315] = GND;
assign RX_BIT_CTRL_OUT5[316] = GND;
assign RX_BIT_CTRL_OUT5[317] = GND;
assign RX_BIT_CTRL_OUT5[318] = GND;
assign RX_BIT_CTRL_OUT5[319] = GND;
assign RX_BIT_CTRL_OUT6[0] = GND;
assign RX_BIT_CTRL_OUT6[1] = GND;
assign RX_BIT_CTRL_OUT6[2] = GND;
assign RX_BIT_CTRL_OUT6[3] = GND;
assign RX_BIT_CTRL_OUT6[4] = GND;
assign RX_BIT_CTRL_OUT6[5] = GND;
assign RX_BIT_CTRL_OUT6[6] = GND;
assign RX_BIT_CTRL_OUT6[7] = GND;
assign RX_BIT_CTRL_OUT6[8] = GND;
assign RX_BIT_CTRL_OUT6[9] = GND;
assign RX_BIT_CTRL_OUT6[10] = GND;
assign RX_BIT_CTRL_OUT6[11] = GND;
assign RX_BIT_CTRL_OUT6[12] = GND;
assign RX_BIT_CTRL_OUT6[13] = GND;
assign RX_BIT_CTRL_OUT6[14] = GND;
assign RX_BIT_CTRL_OUT6[15] = GND;
assign RX_BIT_CTRL_OUT6[16] = GND;
assign RX_BIT_CTRL_OUT6[17] = GND;
assign RX_BIT_CTRL_OUT6[18] = GND;
assign RX_BIT_CTRL_OUT6[19] = GND;
assign RX_BIT_CTRL_OUT6[20] = GND;
assign RX_BIT_CTRL_OUT6[21] = GND;
assign RX_BIT_CTRL_OUT6[22] = GND;
assign RX_BIT_CTRL_OUT6[23] = GND;
assign RX_BIT_CTRL_OUT6[24] = GND;
assign RX_BIT_CTRL_OUT6[25] = GND;
assign RX_BIT_CTRL_OUT6[26] = GND;
assign RX_BIT_CTRL_OUT6[27] = GND;
assign RX_BIT_CTRL_OUT6[28] = GND;
assign RX_BIT_CTRL_OUT6[29] = GND;
assign RX_BIT_CTRL_OUT6[30] = GND;
assign RX_BIT_CTRL_OUT6[31] = GND;
assign RX_BIT_CTRL_OUT6[32] = GND;
assign RX_BIT_CTRL_OUT6[33] = GND;
assign RX_BIT_CTRL_OUT6[34] = GND;
assign RX_BIT_CTRL_OUT6[35] = GND;
assign RX_BIT_CTRL_OUT6[36] = GND;
assign RX_BIT_CTRL_OUT6[37] = GND;
assign RX_BIT_CTRL_OUT6[38] = GND;
assign RX_BIT_CTRL_OUT6[39] = GND;
assign RX_BIT_CTRL_OUT6[40] = GND;
assign RX_BIT_CTRL_OUT6[41] = GND;
assign RX_BIT_CTRL_OUT6[42] = GND;
assign RX_BIT_CTRL_OUT6[43] = GND;
assign RX_BIT_CTRL_OUT6[44] = GND;
assign RX_BIT_CTRL_OUT6[45] = GND;
assign RX_BIT_CTRL_OUT6[46] = GND;
assign RX_BIT_CTRL_OUT6[47] = GND;
assign RX_BIT_CTRL_OUT6[48] = GND;
assign RX_BIT_CTRL_OUT6[49] = GND;
assign RX_BIT_CTRL_OUT6[50] = GND;
assign RX_BIT_CTRL_OUT6[51] = GND;
assign RX_BIT_CTRL_OUT6[52] = GND;
assign RX_BIT_CTRL_OUT6[53] = GND;
assign RX_BIT_CTRL_OUT6[54] = GND;
assign RX_BIT_CTRL_OUT6[55] = GND;
assign RX_BIT_CTRL_OUT6[56] = GND;
assign RX_BIT_CTRL_OUT6[57] = GND;
assign RX_BIT_CTRL_OUT6[58] = GND;
assign RX_BIT_CTRL_OUT6[59] = GND;
assign RX_BIT_CTRL_OUT6[60] = GND;
assign RX_BIT_CTRL_OUT6[61] = GND;
assign RX_BIT_CTRL_OUT6[62] = GND;
assign RX_BIT_CTRL_OUT6[63] = GND;
assign RX_BIT_CTRL_OUT6[64] = GND;
assign RX_BIT_CTRL_OUT6[65] = GND;
assign RX_BIT_CTRL_OUT6[66] = GND;
assign RX_BIT_CTRL_OUT6[67] = GND;
assign RX_BIT_CTRL_OUT6[68] = GND;
assign RX_BIT_CTRL_OUT6[69] = GND;
assign RX_BIT_CTRL_OUT6[70] = GND;
assign RX_BIT_CTRL_OUT6[71] = GND;
assign RX_BIT_CTRL_OUT6[72] = GND;
assign RX_BIT_CTRL_OUT6[73] = GND;
assign RX_BIT_CTRL_OUT6[74] = GND;
assign RX_BIT_CTRL_OUT6[75] = GND;
assign RX_BIT_CTRL_OUT6[76] = GND;
assign RX_BIT_CTRL_OUT6[77] = GND;
assign RX_BIT_CTRL_OUT6[78] = GND;
assign RX_BIT_CTRL_OUT6[79] = GND;
assign RX_BIT_CTRL_OUT6[80] = GND;
assign RX_BIT_CTRL_OUT6[81] = GND;
assign RX_BIT_CTRL_OUT6[82] = GND;
assign RX_BIT_CTRL_OUT6[83] = GND;
assign RX_BIT_CTRL_OUT6[84] = GND;
assign RX_BIT_CTRL_OUT6[85] = GND;
assign RX_BIT_CTRL_OUT6[86] = GND;
assign RX_BIT_CTRL_OUT6[87] = GND;
assign RX_BIT_CTRL_OUT6[88] = GND;
assign RX_BIT_CTRL_OUT6[89] = GND;
assign RX_BIT_CTRL_OUT6[90] = GND;
assign RX_BIT_CTRL_OUT6[91] = GND;
assign RX_BIT_CTRL_OUT6[92] = GND;
assign RX_BIT_CTRL_OUT6[93] = GND;
assign RX_BIT_CTRL_OUT6[94] = GND;
assign RX_BIT_CTRL_OUT6[95] = GND;
assign RX_BIT_CTRL_OUT6[96] = GND;
assign RX_BIT_CTRL_OUT6[97] = GND;
assign RX_BIT_CTRL_OUT6[98] = GND;
assign RX_BIT_CTRL_OUT6[99] = GND;
assign RX_BIT_CTRL_OUT6[100] = GND;
assign RX_BIT_CTRL_OUT6[101] = GND;
assign RX_BIT_CTRL_OUT6[102] = GND;
assign RX_BIT_CTRL_OUT6[103] = GND;
assign RX_BIT_CTRL_OUT6[104] = GND;
assign RX_BIT_CTRL_OUT6[105] = GND;
assign RX_BIT_CTRL_OUT6[106] = GND;
assign RX_BIT_CTRL_OUT6[107] = GND;
assign RX_BIT_CTRL_OUT6[108] = GND;
assign RX_BIT_CTRL_OUT6[109] = GND;
assign RX_BIT_CTRL_OUT6[110] = GND;
assign RX_BIT_CTRL_OUT6[111] = GND;
assign RX_BIT_CTRL_OUT6[112] = GND;
assign RX_BIT_CTRL_OUT6[113] = GND;
assign RX_BIT_CTRL_OUT6[114] = GND;
assign RX_BIT_CTRL_OUT6[115] = GND;
assign RX_BIT_CTRL_OUT6[116] = GND;
assign RX_BIT_CTRL_OUT6[117] = GND;
assign RX_BIT_CTRL_OUT6[118] = GND;
assign RX_BIT_CTRL_OUT6[119] = GND;
assign RX_BIT_CTRL_OUT6[120] = GND;
assign RX_BIT_CTRL_OUT6[121] = GND;
assign RX_BIT_CTRL_OUT6[122] = GND;
assign RX_BIT_CTRL_OUT6[123] = GND;
assign RX_BIT_CTRL_OUT6[124] = GND;
assign RX_BIT_CTRL_OUT6[125] = GND;
assign RX_BIT_CTRL_OUT6[126] = GND;
assign RX_BIT_CTRL_OUT6[127] = GND;
assign RX_BIT_CTRL_OUT6[128] = GND;
assign RX_BIT_CTRL_OUT6[129] = GND;
assign RX_BIT_CTRL_OUT6[130] = GND;
assign RX_BIT_CTRL_OUT6[131] = GND;
assign RX_BIT_CTRL_OUT6[132] = GND;
assign RX_BIT_CTRL_OUT6[133] = GND;
assign RX_BIT_CTRL_OUT6[134] = GND;
assign RX_BIT_CTRL_OUT6[135] = GND;
assign RX_BIT_CTRL_OUT6[136] = GND;
assign RX_BIT_CTRL_OUT6[137] = GND;
assign RX_BIT_CTRL_OUT6[138] = GND;
assign RX_BIT_CTRL_OUT6[139] = GND;
assign RX_BIT_CTRL_OUT6[140] = GND;
assign RX_BIT_CTRL_OUT6[141] = GND;
assign RX_BIT_CTRL_OUT6[142] = GND;
assign RX_BIT_CTRL_OUT6[143] = GND;
assign RX_BIT_CTRL_OUT6[144] = GND;
assign RX_BIT_CTRL_OUT6[145] = GND;
assign RX_BIT_CTRL_OUT6[146] = GND;
assign RX_BIT_CTRL_OUT6[147] = GND;
assign RX_BIT_CTRL_OUT6[148] = GND;
assign RX_BIT_CTRL_OUT6[149] = GND;
assign RX_BIT_CTRL_OUT6[150] = GND;
assign RX_BIT_CTRL_OUT6[151] = GND;
assign RX_BIT_CTRL_OUT6[152] = GND;
assign RX_BIT_CTRL_OUT6[153] = GND;
assign RX_BIT_CTRL_OUT6[154] = GND;
assign RX_BIT_CTRL_OUT6[155] = GND;
assign RX_BIT_CTRL_OUT6[156] = GND;
assign RX_BIT_CTRL_OUT6[157] = GND;
assign RX_BIT_CTRL_OUT6[158] = GND;
assign RX_BIT_CTRL_OUT6[159] = GND;
assign RX_BIT_CTRL_OUT6[160] = GND;
assign RX_BIT_CTRL_OUT6[161] = GND;
assign RX_BIT_CTRL_OUT6[162] = GND;
assign RX_BIT_CTRL_OUT6[163] = GND;
assign RX_BIT_CTRL_OUT6[164] = GND;
assign RX_BIT_CTRL_OUT6[165] = GND;
assign RX_BIT_CTRL_OUT6[166] = GND;
assign RX_BIT_CTRL_OUT6[167] = GND;
assign RX_BIT_CTRL_OUT6[168] = GND;
assign RX_BIT_CTRL_OUT6[169] = GND;
assign RX_BIT_CTRL_OUT6[170] = GND;
assign RX_BIT_CTRL_OUT6[171] = GND;
assign RX_BIT_CTRL_OUT6[172] = GND;
assign RX_BIT_CTRL_OUT6[173] = GND;
assign RX_BIT_CTRL_OUT6[174] = GND;
assign RX_BIT_CTRL_OUT6[175] = GND;
assign RX_BIT_CTRL_OUT6[176] = GND;
assign RX_BIT_CTRL_OUT6[177] = GND;
assign RX_BIT_CTRL_OUT6[178] = GND;
assign RX_BIT_CTRL_OUT6[179] = GND;
assign RX_BIT_CTRL_OUT6[180] = GND;
assign RX_BIT_CTRL_OUT6[181] = GND;
assign RX_BIT_CTRL_OUT6[182] = GND;
assign RX_BIT_CTRL_OUT6[183] = GND;
assign RX_BIT_CTRL_OUT6[184] = GND;
assign RX_BIT_CTRL_OUT6[185] = GND;
assign RX_BIT_CTRL_OUT6[186] = GND;
assign RX_BIT_CTRL_OUT6[187] = GND;
assign RX_BIT_CTRL_OUT6[188] = GND;
assign RX_BIT_CTRL_OUT6[189] = GND;
assign RX_BIT_CTRL_OUT6[190] = GND;
assign RX_BIT_CTRL_OUT6[191] = GND;
assign RX_BIT_CTRL_OUT6[192] = GND;
assign RX_BIT_CTRL_OUT6[193] = GND;
assign RX_BIT_CTRL_OUT6[194] = GND;
assign RX_BIT_CTRL_OUT6[195] = GND;
assign RX_BIT_CTRL_OUT6[196] = GND;
assign RX_BIT_CTRL_OUT6[197] = GND;
assign RX_BIT_CTRL_OUT6[198] = GND;
assign RX_BIT_CTRL_OUT6[199] = GND;
assign RX_BIT_CTRL_OUT6[200] = GND;
assign RX_BIT_CTRL_OUT6[201] = GND;
assign RX_BIT_CTRL_OUT6[202] = GND;
assign RX_BIT_CTRL_OUT6[203] = GND;
assign RX_BIT_CTRL_OUT6[204] = GND;
assign RX_BIT_CTRL_OUT6[205] = GND;
assign RX_BIT_CTRL_OUT6[206] = GND;
assign RX_BIT_CTRL_OUT6[207] = GND;
assign RX_BIT_CTRL_OUT6[208] = GND;
assign RX_BIT_CTRL_OUT6[209] = GND;
assign RX_BIT_CTRL_OUT6[210] = GND;
assign RX_BIT_CTRL_OUT6[211] = GND;
assign RX_BIT_CTRL_OUT6[212] = GND;
assign RX_BIT_CTRL_OUT6[213] = GND;
assign RX_BIT_CTRL_OUT6[214] = GND;
assign RX_BIT_CTRL_OUT6[215] = GND;
assign RX_BIT_CTRL_OUT6[216] = GND;
assign RX_BIT_CTRL_OUT6[217] = GND;
assign RX_BIT_CTRL_OUT6[218] = GND;
assign RX_BIT_CTRL_OUT6[219] = GND;
assign RX_BIT_CTRL_OUT6[220] = GND;
assign RX_BIT_CTRL_OUT6[221] = GND;
assign RX_BIT_CTRL_OUT6[222] = GND;
assign RX_BIT_CTRL_OUT6[223] = GND;
assign RX_BIT_CTRL_OUT6[224] = GND;
assign RX_BIT_CTRL_OUT6[225] = GND;
assign RX_BIT_CTRL_OUT6[226] = GND;
assign RX_BIT_CTRL_OUT6[227] = GND;
assign RX_BIT_CTRL_OUT6[228] = GND;
assign RX_BIT_CTRL_OUT6[229] = GND;
assign RX_BIT_CTRL_OUT6[230] = GND;
assign RX_BIT_CTRL_OUT6[231] = GND;
assign RX_BIT_CTRL_OUT6[232] = GND;
assign RX_BIT_CTRL_OUT6[233] = GND;
assign RX_BIT_CTRL_OUT6[234] = GND;
assign RX_BIT_CTRL_OUT6[235] = GND;
assign RX_BIT_CTRL_OUT6[236] = GND;
assign RX_BIT_CTRL_OUT6[237] = GND;
assign RX_BIT_CTRL_OUT6[238] = GND;
assign RX_BIT_CTRL_OUT6[239] = GND;
assign RX_BIT_CTRL_OUT6[240] = GND;
assign RX_BIT_CTRL_OUT6[241] = GND;
assign RX_BIT_CTRL_OUT6[242] = GND;
assign RX_BIT_CTRL_OUT6[243] = GND;
assign RX_BIT_CTRL_OUT6[244] = GND;
assign RX_BIT_CTRL_OUT6[245] = GND;
assign RX_BIT_CTRL_OUT6[246] = GND;
assign RX_BIT_CTRL_OUT6[247] = GND;
assign RX_BIT_CTRL_OUT6[248] = GND;
assign RX_BIT_CTRL_OUT6[249] = GND;
assign RX_BIT_CTRL_OUT6[250] = GND;
assign RX_BIT_CTRL_OUT6[251] = GND;
assign RX_BIT_CTRL_OUT6[252] = GND;
assign RX_BIT_CTRL_OUT6[253] = GND;
assign RX_BIT_CTRL_OUT6[254] = GND;
assign RX_BIT_CTRL_OUT6[255] = GND;
assign RX_BIT_CTRL_OUT6[256] = GND;
assign RX_BIT_CTRL_OUT6[257] = GND;
assign RX_BIT_CTRL_OUT6[258] = GND;
assign RX_BIT_CTRL_OUT6[259] = GND;
assign RX_BIT_CTRL_OUT6[260] = GND;
assign RX_BIT_CTRL_OUT6[261] = GND;
assign RX_BIT_CTRL_OUT6[262] = GND;
assign RX_BIT_CTRL_OUT6[263] = GND;
assign RX_BIT_CTRL_OUT6[264] = GND;
assign RX_BIT_CTRL_OUT6[265] = GND;
assign RX_BIT_CTRL_OUT6[266] = GND;
assign RX_BIT_CTRL_OUT6[267] = GND;
assign RX_BIT_CTRL_OUT6[268] = GND;
assign RX_BIT_CTRL_OUT6[269] = GND;
assign RX_BIT_CTRL_OUT6[270] = GND;
assign RX_BIT_CTRL_OUT6[271] = GND;
assign RX_BIT_CTRL_OUT6[272] = GND;
assign RX_BIT_CTRL_OUT6[273] = GND;
assign RX_BIT_CTRL_OUT6[274] = GND;
assign RX_BIT_CTRL_OUT6[275] = GND;
assign RX_BIT_CTRL_OUT6[276] = GND;
assign RX_BIT_CTRL_OUT6[277] = GND;
assign RX_BIT_CTRL_OUT6[278] = GND;
assign RX_BIT_CTRL_OUT6[279] = GND;
assign RX_BIT_CTRL_OUT6[280] = GND;
assign RX_BIT_CTRL_OUT6[281] = GND;
assign RX_BIT_CTRL_OUT6[282] = GND;
assign RX_BIT_CTRL_OUT6[283] = GND;
assign RX_BIT_CTRL_OUT6[284] = GND;
assign RX_BIT_CTRL_OUT6[285] = GND;
assign RX_BIT_CTRL_OUT6[286] = GND;
assign RX_BIT_CTRL_OUT6[287] = GND;
assign RX_BIT_CTRL_OUT6[288] = GND;
assign RX_BIT_CTRL_OUT6[289] = GND;
assign RX_BIT_CTRL_OUT6[290] = GND;
assign RX_BIT_CTRL_OUT6[291] = GND;
assign RX_BIT_CTRL_OUT6[292] = GND;
assign RX_BIT_CTRL_OUT6[293] = GND;
assign RX_BIT_CTRL_OUT6[294] = GND;
assign RX_BIT_CTRL_OUT6[295] = GND;
assign RX_BIT_CTRL_OUT6[296] = GND;
assign RX_BIT_CTRL_OUT6[297] = GND;
assign RX_BIT_CTRL_OUT6[298] = GND;
assign RX_BIT_CTRL_OUT6[299] = GND;
assign RX_BIT_CTRL_OUT6[300] = GND;
assign RX_BIT_CTRL_OUT6[301] = GND;
assign RX_BIT_CTRL_OUT6[302] = GND;
assign RX_BIT_CTRL_OUT6[303] = GND;
assign RX_BIT_CTRL_OUT6[304] = GND;
assign RX_BIT_CTRL_OUT6[305] = GND;
assign RX_BIT_CTRL_OUT6[306] = GND;
assign RX_BIT_CTRL_OUT6[307] = GND;
assign RX_BIT_CTRL_OUT6[308] = GND;
assign RX_BIT_CTRL_OUT6[309] = GND;
assign RX_BIT_CTRL_OUT6[310] = GND;
assign RX_BIT_CTRL_OUT6[311] = GND;
assign RX_BIT_CTRL_OUT6[312] = GND;
assign RX_BIT_CTRL_OUT6[313] = GND;
assign RX_BIT_CTRL_OUT6[314] = GND;
assign RX_BIT_CTRL_OUT6[315] = GND;
assign RX_BIT_CTRL_OUT6[316] = GND;
assign RX_BIT_CTRL_OUT6[317] = GND;
assign RX_BIT_CTRL_OUT6[318] = GND;
assign RX_BIT_CTRL_OUT6[319] = GND;
assign TX_BIT_CTRL_OUT0[0] = GND;
assign TX_BIT_CTRL_OUT0[1] = GND;
assign TX_BIT_CTRL_OUT0[2] = GND;
assign TX_BIT_CTRL_OUT0[3] = GND;
assign TX_BIT_CTRL_OUT0[4] = GND;
assign TX_BIT_CTRL_OUT0[5] = GND;
assign TX_BIT_CTRL_OUT0[6] = GND;
assign TX_BIT_CTRL_OUT0[7] = GND;
assign TX_BIT_CTRL_OUT0[8] = GND;
assign TX_BIT_CTRL_OUT0[9] = GND;
assign TX_BIT_CTRL_OUT0[10] = GND;
assign TX_BIT_CTRL_OUT0[11] = GND;
assign TX_BIT_CTRL_OUT0[12] = GND;
assign TX_BIT_CTRL_OUT0[13] = GND;
assign TX_BIT_CTRL_OUT0[14] = GND;
assign TX_BIT_CTRL_OUT0[15] = GND;
assign TX_BIT_CTRL_OUT0[16] = GND;
assign TX_BIT_CTRL_OUT0[17] = GND;
assign TX_BIT_CTRL_OUT0[18] = GND;
assign TX_BIT_CTRL_OUT0[19] = GND;
assign TX_BIT_CTRL_OUT0[20] = GND;
assign TX_BIT_CTRL_OUT0[21] = GND;
assign TX_BIT_CTRL_OUT0[22] = GND;
assign TX_BIT_CTRL_OUT0[23] = GND;
assign TX_BIT_CTRL_OUT0[24] = GND;
assign TX_BIT_CTRL_OUT0[25] = GND;
assign TX_BIT_CTRL_OUT0[26] = GND;
assign TX_BIT_CTRL_OUT0[27] = GND;
assign TX_BIT_CTRL_OUT0[28] = GND;
assign TX_BIT_CTRL_OUT0[29] = GND;
assign TX_BIT_CTRL_OUT0[30] = GND;
assign TX_BIT_CTRL_OUT0[31] = GND;
assign TX_BIT_CTRL_OUT0[32] = GND;
assign TX_BIT_CTRL_OUT0[33] = GND;
assign TX_BIT_CTRL_OUT0[34] = GND;
assign TX_BIT_CTRL_OUT0[35] = GND;
assign TX_BIT_CTRL_OUT0[36] = GND;
assign TX_BIT_CTRL_OUT0[37] = GND;
assign TX_BIT_CTRL_OUT0[38] = GND;
assign TX_BIT_CTRL_OUT0[39] = GND;
assign TX_BIT_CTRL_OUT0[40] = GND;
assign TX_BIT_CTRL_OUT0[41] = GND;
assign TX_BIT_CTRL_OUT0[42] = GND;
assign TX_BIT_CTRL_OUT0[43] = GND;
assign TX_BIT_CTRL_OUT0[44] = GND;
assign TX_BIT_CTRL_OUT0[45] = GND;
assign TX_BIT_CTRL_OUT0[46] = GND;
assign TX_BIT_CTRL_OUT0[47] = GND;
assign TX_BIT_CTRL_OUT0[48] = GND;
assign TX_BIT_CTRL_OUT0[49] = GND;
assign TX_BIT_CTRL_OUT0[50] = GND;
assign TX_BIT_CTRL_OUT0[51] = GND;
assign TX_BIT_CTRL_OUT0[52] = GND;
assign TX_BIT_CTRL_OUT0[53] = GND;
assign TX_BIT_CTRL_OUT0[54] = GND;
assign TX_BIT_CTRL_OUT0[55] = GND;
assign TX_BIT_CTRL_OUT0[56] = GND;
assign TX_BIT_CTRL_OUT0[57] = GND;
assign TX_BIT_CTRL_OUT0[58] = GND;
assign TX_BIT_CTRL_OUT0[59] = GND;
assign TX_BIT_CTRL_OUT0[60] = GND;
assign TX_BIT_CTRL_OUT0[61] = GND;
assign TX_BIT_CTRL_OUT0[62] = GND;
assign TX_BIT_CTRL_OUT0[63] = GND;
assign TX_BIT_CTRL_OUT0[64] = GND;
assign TX_BIT_CTRL_OUT0[65] = GND;
assign TX_BIT_CTRL_OUT0[66] = GND;
assign TX_BIT_CTRL_OUT0[67] = GND;
assign TX_BIT_CTRL_OUT0[68] = GND;
assign TX_BIT_CTRL_OUT0[69] = GND;
assign TX_BIT_CTRL_OUT0[70] = GND;
assign TX_BIT_CTRL_OUT0[71] = GND;
assign TX_BIT_CTRL_OUT0[72] = GND;
assign TX_BIT_CTRL_OUT0[73] = GND;
assign TX_BIT_CTRL_OUT0[74] = GND;
assign TX_BIT_CTRL_OUT0[75] = GND;
assign TX_BIT_CTRL_OUT0[76] = GND;
assign TX_BIT_CTRL_OUT0[77] = GND;
assign TX_BIT_CTRL_OUT0[78] = GND;
assign TX_BIT_CTRL_OUT0[79] = GND;
assign TX_BIT_CTRL_OUT0[80] = GND;
assign TX_BIT_CTRL_OUT0[81] = GND;
assign TX_BIT_CTRL_OUT0[82] = GND;
assign TX_BIT_CTRL_OUT0[83] = GND;
assign TX_BIT_CTRL_OUT0[84] = GND;
assign TX_BIT_CTRL_OUT0[85] = GND;
assign TX_BIT_CTRL_OUT0[86] = GND;
assign TX_BIT_CTRL_OUT0[87] = GND;
assign TX_BIT_CTRL_OUT0[88] = GND;
assign TX_BIT_CTRL_OUT0[89] = GND;
assign TX_BIT_CTRL_OUT0[90] = GND;
assign TX_BIT_CTRL_OUT0[91] = GND;
assign TX_BIT_CTRL_OUT0[92] = GND;
assign TX_BIT_CTRL_OUT0[93] = GND;
assign TX_BIT_CTRL_OUT0[94] = GND;
assign TX_BIT_CTRL_OUT0[95] = GND;
assign TX_BIT_CTRL_OUT0[96] = GND;
assign TX_BIT_CTRL_OUT0[97] = GND;
assign TX_BIT_CTRL_OUT0[98] = GND;
assign TX_BIT_CTRL_OUT0[99] = GND;
assign TX_BIT_CTRL_OUT0[100] = GND;
assign TX_BIT_CTRL_OUT0[101] = GND;
assign TX_BIT_CTRL_OUT0[102] = GND;
assign TX_BIT_CTRL_OUT0[103] = GND;
assign TX_BIT_CTRL_OUT0[104] = GND;
assign TX_BIT_CTRL_OUT0[105] = GND;
assign TX_BIT_CTRL_OUT0[106] = GND;
assign TX_BIT_CTRL_OUT0[107] = GND;
assign TX_BIT_CTRL_OUT0[108] = GND;
assign TX_BIT_CTRL_OUT0[109] = GND;
assign TX_BIT_CTRL_OUT0[110] = GND;
assign TX_BIT_CTRL_OUT0[111] = GND;
assign TX_BIT_CTRL_OUT0[112] = GND;
assign TX_BIT_CTRL_OUT0[113] = GND;
assign TX_BIT_CTRL_OUT0[114] = GND;
assign TX_BIT_CTRL_OUT0[115] = GND;
assign TX_BIT_CTRL_OUT0[116] = GND;
assign TX_BIT_CTRL_OUT0[117] = GND;
assign TX_BIT_CTRL_OUT0[118] = GND;
assign TX_BIT_CTRL_OUT0[119] = GND;
assign TX_BIT_CTRL_OUT0[160] = GND;
assign TX_BIT_CTRL_OUT0[161] = GND;
assign TX_BIT_CTRL_OUT0[162] = GND;
assign TX_BIT_CTRL_OUT0[163] = GND;
assign TX_BIT_CTRL_OUT0[164] = GND;
assign TX_BIT_CTRL_OUT0[165] = GND;
assign TX_BIT_CTRL_OUT0[166] = GND;
assign TX_BIT_CTRL_OUT0[167] = GND;
assign TX_BIT_CTRL_OUT0[168] = GND;
assign TX_BIT_CTRL_OUT0[169] = GND;
assign TX_BIT_CTRL_OUT0[170] = GND;
assign TX_BIT_CTRL_OUT0[171] = GND;
assign TX_BIT_CTRL_OUT0[172] = GND;
assign TX_BIT_CTRL_OUT0[173] = GND;
assign TX_BIT_CTRL_OUT0[174] = GND;
assign TX_BIT_CTRL_OUT0[175] = GND;
assign TX_BIT_CTRL_OUT0[176] = GND;
assign TX_BIT_CTRL_OUT0[177] = GND;
assign TX_BIT_CTRL_OUT0[178] = GND;
assign TX_BIT_CTRL_OUT0[179] = GND;
assign TX_BIT_CTRL_OUT0[180] = GND;
assign TX_BIT_CTRL_OUT0[181] = GND;
assign TX_BIT_CTRL_OUT0[182] = GND;
assign TX_BIT_CTRL_OUT0[183] = GND;
assign TX_BIT_CTRL_OUT0[184] = GND;
assign TX_BIT_CTRL_OUT0[185] = GND;
assign TX_BIT_CTRL_OUT0[186] = GND;
assign TX_BIT_CTRL_OUT0[187] = GND;
assign TX_BIT_CTRL_OUT0[188] = GND;
assign TX_BIT_CTRL_OUT0[189] = GND;
assign TX_BIT_CTRL_OUT0[190] = GND;
assign TX_BIT_CTRL_OUT0[191] = GND;
assign TX_BIT_CTRL_OUT0[192] = GND;
assign TX_BIT_CTRL_OUT0[193] = GND;
assign TX_BIT_CTRL_OUT0[194] = GND;
assign TX_BIT_CTRL_OUT0[195] = GND;
assign TX_BIT_CTRL_OUT0[196] = GND;
assign TX_BIT_CTRL_OUT0[197] = GND;
assign TX_BIT_CTRL_OUT0[198] = GND;
assign TX_BIT_CTRL_OUT0[199] = GND;
assign TX_BIT_CTRL_OUT0[200] = GND;
assign TX_BIT_CTRL_OUT0[201] = GND;
assign TX_BIT_CTRL_OUT0[202] = GND;
assign TX_BIT_CTRL_OUT0[203] = GND;
assign TX_BIT_CTRL_OUT0[204] = GND;
assign TX_BIT_CTRL_OUT0[205] = GND;
assign TX_BIT_CTRL_OUT0[206] = GND;
assign TX_BIT_CTRL_OUT0[207] = GND;
assign TX_BIT_CTRL_OUT0[208] = GND;
assign TX_BIT_CTRL_OUT0[209] = GND;
assign TX_BIT_CTRL_OUT0[210] = GND;
assign TX_BIT_CTRL_OUT0[211] = GND;
assign TX_BIT_CTRL_OUT0[212] = GND;
assign TX_BIT_CTRL_OUT0[213] = GND;
assign TX_BIT_CTRL_OUT0[214] = GND;
assign TX_BIT_CTRL_OUT0[215] = GND;
assign TX_BIT_CTRL_OUT0[216] = GND;
assign TX_BIT_CTRL_OUT0[217] = GND;
assign TX_BIT_CTRL_OUT0[218] = GND;
assign TX_BIT_CTRL_OUT0[219] = GND;
assign TX_BIT_CTRL_OUT0[220] = GND;
assign TX_BIT_CTRL_OUT0[221] = GND;
assign TX_BIT_CTRL_OUT0[222] = GND;
assign TX_BIT_CTRL_OUT0[223] = GND;
assign TX_BIT_CTRL_OUT0[224] = GND;
assign TX_BIT_CTRL_OUT0[225] = GND;
assign TX_BIT_CTRL_OUT0[226] = GND;
assign TX_BIT_CTRL_OUT0[227] = GND;
assign TX_BIT_CTRL_OUT0[228] = GND;
assign TX_BIT_CTRL_OUT0[229] = GND;
assign TX_BIT_CTRL_OUT0[230] = GND;
assign TX_BIT_CTRL_OUT0[231] = GND;
assign TX_BIT_CTRL_OUT0[232] = GND;
assign TX_BIT_CTRL_OUT0[233] = GND;
assign TX_BIT_CTRL_OUT0[234] = GND;
assign TX_BIT_CTRL_OUT0[235] = GND;
assign TX_BIT_CTRL_OUT0[236] = GND;
assign TX_BIT_CTRL_OUT0[237] = GND;
assign TX_BIT_CTRL_OUT0[238] = GND;
assign TX_BIT_CTRL_OUT0[239] = GND;
assign TX_BIT_CTRL_OUT0[240] = GND;
assign TX_BIT_CTRL_OUT0[241] = GND;
assign TX_BIT_CTRL_OUT0[242] = GND;
assign TX_BIT_CTRL_OUT0[243] = GND;
assign TX_BIT_CTRL_OUT0[244] = GND;
assign TX_BIT_CTRL_OUT0[245] = GND;
assign TX_BIT_CTRL_OUT0[246] = GND;
assign TX_BIT_CTRL_OUT0[247] = GND;
assign TX_BIT_CTRL_OUT0[248] = GND;
assign TX_BIT_CTRL_OUT0[249] = GND;
assign TX_BIT_CTRL_OUT0[250] = GND;
assign TX_BIT_CTRL_OUT0[251] = GND;
assign TX_BIT_CTRL_OUT0[252] = GND;
assign TX_BIT_CTRL_OUT0[253] = GND;
assign TX_BIT_CTRL_OUT0[254] = GND;
assign TX_BIT_CTRL_OUT0[255] = GND;
assign TX_BIT_CTRL_OUT0[256] = GND;
assign TX_BIT_CTRL_OUT0[257] = GND;
assign TX_BIT_CTRL_OUT0[258] = GND;
assign TX_BIT_CTRL_OUT0[259] = GND;
assign TX_BIT_CTRL_OUT0[260] = GND;
assign TX_BIT_CTRL_OUT0[261] = GND;
assign TX_BIT_CTRL_OUT0[262] = GND;
assign TX_BIT_CTRL_OUT0[263] = GND;
assign TX_BIT_CTRL_OUT0[264] = GND;
assign TX_BIT_CTRL_OUT0[265] = GND;
assign TX_BIT_CTRL_OUT0[266] = GND;
assign TX_BIT_CTRL_OUT0[267] = GND;
assign TX_BIT_CTRL_OUT0[268] = GND;
assign TX_BIT_CTRL_OUT0[269] = GND;
assign TX_BIT_CTRL_OUT0[270] = GND;
assign TX_BIT_CTRL_OUT0[271] = GND;
assign TX_BIT_CTRL_OUT0[272] = GND;
assign TX_BIT_CTRL_OUT0[273] = GND;
assign TX_BIT_CTRL_OUT0[274] = GND;
assign TX_BIT_CTRL_OUT0[275] = GND;
assign TX_BIT_CTRL_OUT0[276] = GND;
assign TX_BIT_CTRL_OUT0[277] = GND;
assign TX_BIT_CTRL_OUT0[278] = GND;
assign TX_BIT_CTRL_OUT0[279] = GND;
assign TX_BIT_CTRL_OUT0[280] = GND;
assign TX_BIT_CTRL_OUT0[281] = GND;
assign TX_BIT_CTRL_OUT0[282] = GND;
assign TX_BIT_CTRL_OUT0[283] = GND;
assign TX_BIT_CTRL_OUT0[284] = GND;
assign TX_BIT_CTRL_OUT0[285] = GND;
assign TX_BIT_CTRL_OUT0[286] = GND;
assign TX_BIT_CTRL_OUT0[287] = GND;
assign TX_BIT_CTRL_OUT0[288] = GND;
assign TX_BIT_CTRL_OUT0[289] = GND;
assign TX_BIT_CTRL_OUT0[290] = GND;
assign TX_BIT_CTRL_OUT0[291] = GND;
assign TX_BIT_CTRL_OUT0[292] = GND;
assign TX_BIT_CTRL_OUT0[293] = GND;
assign TX_BIT_CTRL_OUT0[294] = GND;
assign TX_BIT_CTRL_OUT0[295] = GND;
assign TX_BIT_CTRL_OUT0[296] = GND;
assign TX_BIT_CTRL_OUT0[297] = GND;
assign TX_BIT_CTRL_OUT0[298] = GND;
assign TX_BIT_CTRL_OUT0[299] = GND;
assign TX_BIT_CTRL_OUT0[300] = GND;
assign TX_BIT_CTRL_OUT0[301] = GND;
assign TX_BIT_CTRL_OUT0[302] = GND;
assign TX_BIT_CTRL_OUT0[303] = GND;
assign TX_BIT_CTRL_OUT0[304] = GND;
assign TX_BIT_CTRL_OUT0[305] = GND;
assign TX_BIT_CTRL_OUT0[306] = GND;
assign TX_BIT_CTRL_OUT0[307] = GND;
assign TX_BIT_CTRL_OUT0[308] = GND;
assign TX_BIT_CTRL_OUT0[309] = GND;
assign TX_BIT_CTRL_OUT0[310] = GND;
assign TX_BIT_CTRL_OUT0[311] = GND;
assign TX_BIT_CTRL_OUT0[312] = GND;
assign TX_BIT_CTRL_OUT0[313] = GND;
assign TX_BIT_CTRL_OUT0[314] = GND;
assign TX_BIT_CTRL_OUT0[315] = GND;
assign TX_BIT_CTRL_OUT0[316] = GND;
assign TX_BIT_CTRL_OUT0[317] = GND;
assign TX_BIT_CTRL_OUT0[318] = GND;
assign TX_BIT_CTRL_OUT0[319] = GND;
assign TX_BIT_CTRL_OUT1[0] = GND;
assign TX_BIT_CTRL_OUT1[1] = GND;
assign TX_BIT_CTRL_OUT1[2] = GND;
assign TX_BIT_CTRL_OUT1[3] = GND;
assign TX_BIT_CTRL_OUT1[4] = GND;
assign TX_BIT_CTRL_OUT1[5] = GND;
assign TX_BIT_CTRL_OUT1[6] = GND;
assign TX_BIT_CTRL_OUT1[7] = GND;
assign TX_BIT_CTRL_OUT1[8] = GND;
assign TX_BIT_CTRL_OUT1[9] = GND;
assign TX_BIT_CTRL_OUT1[10] = GND;
assign TX_BIT_CTRL_OUT1[11] = GND;
assign TX_BIT_CTRL_OUT1[12] = GND;
assign TX_BIT_CTRL_OUT1[13] = GND;
assign TX_BIT_CTRL_OUT1[14] = GND;
assign TX_BIT_CTRL_OUT1[15] = GND;
assign TX_BIT_CTRL_OUT1[16] = GND;
assign TX_BIT_CTRL_OUT1[17] = GND;
assign TX_BIT_CTRL_OUT1[18] = GND;
assign TX_BIT_CTRL_OUT1[19] = GND;
assign TX_BIT_CTRL_OUT1[20] = GND;
assign TX_BIT_CTRL_OUT1[21] = GND;
assign TX_BIT_CTRL_OUT1[22] = GND;
assign TX_BIT_CTRL_OUT1[23] = GND;
assign TX_BIT_CTRL_OUT1[24] = GND;
assign TX_BIT_CTRL_OUT1[25] = GND;
assign TX_BIT_CTRL_OUT1[26] = GND;
assign TX_BIT_CTRL_OUT1[27] = GND;
assign TX_BIT_CTRL_OUT1[28] = GND;
assign TX_BIT_CTRL_OUT1[29] = GND;
assign TX_BIT_CTRL_OUT1[30] = GND;
assign TX_BIT_CTRL_OUT1[31] = GND;
assign TX_BIT_CTRL_OUT1[32] = GND;
assign TX_BIT_CTRL_OUT1[33] = GND;
assign TX_BIT_CTRL_OUT1[34] = GND;
assign TX_BIT_CTRL_OUT1[35] = GND;
assign TX_BIT_CTRL_OUT1[36] = GND;
assign TX_BIT_CTRL_OUT1[37] = GND;
assign TX_BIT_CTRL_OUT1[38] = GND;
assign TX_BIT_CTRL_OUT1[39] = GND;
assign TX_BIT_CTRL_OUT1[40] = GND;
assign TX_BIT_CTRL_OUT1[41] = GND;
assign TX_BIT_CTRL_OUT1[42] = GND;
assign TX_BIT_CTRL_OUT1[43] = GND;
assign TX_BIT_CTRL_OUT1[44] = GND;
assign TX_BIT_CTRL_OUT1[45] = GND;
assign TX_BIT_CTRL_OUT1[46] = GND;
assign TX_BIT_CTRL_OUT1[47] = GND;
assign TX_BIT_CTRL_OUT1[48] = GND;
assign TX_BIT_CTRL_OUT1[49] = GND;
assign TX_BIT_CTRL_OUT1[50] = GND;
assign TX_BIT_CTRL_OUT1[51] = GND;
assign TX_BIT_CTRL_OUT1[52] = GND;
assign TX_BIT_CTRL_OUT1[53] = GND;
assign TX_BIT_CTRL_OUT1[54] = GND;
assign TX_BIT_CTRL_OUT1[55] = GND;
assign TX_BIT_CTRL_OUT1[56] = GND;
assign TX_BIT_CTRL_OUT1[57] = GND;
assign TX_BIT_CTRL_OUT1[58] = GND;
assign TX_BIT_CTRL_OUT1[59] = GND;
assign TX_BIT_CTRL_OUT1[60] = GND;
assign TX_BIT_CTRL_OUT1[61] = GND;
assign TX_BIT_CTRL_OUT1[62] = GND;
assign TX_BIT_CTRL_OUT1[63] = GND;
assign TX_BIT_CTRL_OUT1[64] = GND;
assign TX_BIT_CTRL_OUT1[65] = GND;
assign TX_BIT_CTRL_OUT1[66] = GND;
assign TX_BIT_CTRL_OUT1[67] = GND;
assign TX_BIT_CTRL_OUT1[68] = GND;
assign TX_BIT_CTRL_OUT1[69] = GND;
assign TX_BIT_CTRL_OUT1[70] = GND;
assign TX_BIT_CTRL_OUT1[71] = GND;
assign TX_BIT_CTRL_OUT1[72] = GND;
assign TX_BIT_CTRL_OUT1[73] = GND;
assign TX_BIT_CTRL_OUT1[74] = GND;
assign TX_BIT_CTRL_OUT1[75] = GND;
assign TX_BIT_CTRL_OUT1[76] = GND;
assign TX_BIT_CTRL_OUT1[77] = GND;
assign TX_BIT_CTRL_OUT1[78] = GND;
assign TX_BIT_CTRL_OUT1[79] = GND;
assign TX_BIT_CTRL_OUT1[80] = GND;
assign TX_BIT_CTRL_OUT1[81] = GND;
assign TX_BIT_CTRL_OUT1[82] = GND;
assign TX_BIT_CTRL_OUT1[83] = GND;
assign TX_BIT_CTRL_OUT1[84] = GND;
assign TX_BIT_CTRL_OUT1[85] = GND;
assign TX_BIT_CTRL_OUT1[86] = GND;
assign TX_BIT_CTRL_OUT1[87] = GND;
assign TX_BIT_CTRL_OUT1[88] = GND;
assign TX_BIT_CTRL_OUT1[89] = GND;
assign TX_BIT_CTRL_OUT1[90] = GND;
assign TX_BIT_CTRL_OUT1[91] = GND;
assign TX_BIT_CTRL_OUT1[92] = GND;
assign TX_BIT_CTRL_OUT1[93] = GND;
assign TX_BIT_CTRL_OUT1[94] = GND;
assign TX_BIT_CTRL_OUT1[95] = GND;
assign TX_BIT_CTRL_OUT1[96] = GND;
assign TX_BIT_CTRL_OUT1[97] = GND;
assign TX_BIT_CTRL_OUT1[98] = GND;
assign TX_BIT_CTRL_OUT1[99] = GND;
assign TX_BIT_CTRL_OUT1[100] = GND;
assign TX_BIT_CTRL_OUT1[101] = GND;
assign TX_BIT_CTRL_OUT1[102] = GND;
assign TX_BIT_CTRL_OUT1[103] = GND;
assign TX_BIT_CTRL_OUT1[104] = GND;
assign TX_BIT_CTRL_OUT1[105] = GND;
assign TX_BIT_CTRL_OUT1[106] = GND;
assign TX_BIT_CTRL_OUT1[107] = GND;
assign TX_BIT_CTRL_OUT1[108] = GND;
assign TX_BIT_CTRL_OUT1[109] = GND;
assign TX_BIT_CTRL_OUT1[110] = GND;
assign TX_BIT_CTRL_OUT1[111] = GND;
assign TX_BIT_CTRL_OUT1[112] = GND;
assign TX_BIT_CTRL_OUT1[113] = GND;
assign TX_BIT_CTRL_OUT1[114] = GND;
assign TX_BIT_CTRL_OUT1[115] = GND;
assign TX_BIT_CTRL_OUT1[116] = GND;
assign TX_BIT_CTRL_OUT1[117] = GND;
assign TX_BIT_CTRL_OUT1[118] = GND;
assign TX_BIT_CTRL_OUT1[119] = GND;
assign TX_BIT_CTRL_OUT1[120] = GND;
assign TX_BIT_CTRL_OUT1[121] = GND;
assign TX_BIT_CTRL_OUT1[122] = GND;
assign TX_BIT_CTRL_OUT1[123] = GND;
assign TX_BIT_CTRL_OUT1[124] = GND;
assign TX_BIT_CTRL_OUT1[125] = GND;
assign TX_BIT_CTRL_OUT1[126] = GND;
assign TX_BIT_CTRL_OUT1[127] = GND;
assign TX_BIT_CTRL_OUT1[128] = GND;
assign TX_BIT_CTRL_OUT1[129] = GND;
assign TX_BIT_CTRL_OUT1[130] = GND;
assign TX_BIT_CTRL_OUT1[131] = GND;
assign TX_BIT_CTRL_OUT1[132] = GND;
assign TX_BIT_CTRL_OUT1[133] = GND;
assign TX_BIT_CTRL_OUT1[134] = GND;
assign TX_BIT_CTRL_OUT1[135] = GND;
assign TX_BIT_CTRL_OUT1[136] = GND;
assign TX_BIT_CTRL_OUT1[137] = GND;
assign TX_BIT_CTRL_OUT1[138] = GND;
assign TX_BIT_CTRL_OUT1[139] = GND;
assign TX_BIT_CTRL_OUT1[140] = GND;
assign TX_BIT_CTRL_OUT1[141] = GND;
assign TX_BIT_CTRL_OUT1[142] = GND;
assign TX_BIT_CTRL_OUT1[143] = GND;
assign TX_BIT_CTRL_OUT1[144] = GND;
assign TX_BIT_CTRL_OUT1[145] = GND;
assign TX_BIT_CTRL_OUT1[146] = GND;
assign TX_BIT_CTRL_OUT1[147] = GND;
assign TX_BIT_CTRL_OUT1[148] = GND;
assign TX_BIT_CTRL_OUT1[149] = GND;
assign TX_BIT_CTRL_OUT1[150] = GND;
assign TX_BIT_CTRL_OUT1[151] = GND;
assign TX_BIT_CTRL_OUT1[152] = GND;
assign TX_BIT_CTRL_OUT1[153] = GND;
assign TX_BIT_CTRL_OUT1[154] = GND;
assign TX_BIT_CTRL_OUT1[155] = GND;
assign TX_BIT_CTRL_OUT1[156] = GND;
assign TX_BIT_CTRL_OUT1[157] = GND;
assign TX_BIT_CTRL_OUT1[158] = GND;
assign TX_BIT_CTRL_OUT1[159] = GND;
assign TX_BIT_CTRL_OUT1[160] = GND;
assign TX_BIT_CTRL_OUT1[161] = GND;
assign TX_BIT_CTRL_OUT1[162] = GND;
assign TX_BIT_CTRL_OUT1[163] = GND;
assign TX_BIT_CTRL_OUT1[164] = GND;
assign TX_BIT_CTRL_OUT1[165] = GND;
assign TX_BIT_CTRL_OUT1[166] = GND;
assign TX_BIT_CTRL_OUT1[167] = GND;
assign TX_BIT_CTRL_OUT1[168] = GND;
assign TX_BIT_CTRL_OUT1[169] = GND;
assign TX_BIT_CTRL_OUT1[170] = GND;
assign TX_BIT_CTRL_OUT1[171] = GND;
assign TX_BIT_CTRL_OUT1[172] = GND;
assign TX_BIT_CTRL_OUT1[173] = GND;
assign TX_BIT_CTRL_OUT1[174] = GND;
assign TX_BIT_CTRL_OUT1[175] = GND;
assign TX_BIT_CTRL_OUT1[176] = GND;
assign TX_BIT_CTRL_OUT1[177] = GND;
assign TX_BIT_CTRL_OUT1[178] = GND;
assign TX_BIT_CTRL_OUT1[179] = GND;
assign TX_BIT_CTRL_OUT1[180] = GND;
assign TX_BIT_CTRL_OUT1[181] = GND;
assign TX_BIT_CTRL_OUT1[182] = GND;
assign TX_BIT_CTRL_OUT1[183] = GND;
assign TX_BIT_CTRL_OUT1[184] = GND;
assign TX_BIT_CTRL_OUT1[185] = GND;
assign TX_BIT_CTRL_OUT1[186] = GND;
assign TX_BIT_CTRL_OUT1[187] = GND;
assign TX_BIT_CTRL_OUT1[188] = GND;
assign TX_BIT_CTRL_OUT1[189] = GND;
assign TX_BIT_CTRL_OUT1[190] = GND;
assign TX_BIT_CTRL_OUT1[191] = GND;
assign TX_BIT_CTRL_OUT1[192] = GND;
assign TX_BIT_CTRL_OUT1[193] = GND;
assign TX_BIT_CTRL_OUT1[194] = GND;
assign TX_BIT_CTRL_OUT1[195] = GND;
assign TX_BIT_CTRL_OUT1[196] = GND;
assign TX_BIT_CTRL_OUT1[197] = GND;
assign TX_BIT_CTRL_OUT1[198] = GND;
assign TX_BIT_CTRL_OUT1[199] = GND;
assign TX_BIT_CTRL_OUT1[200] = GND;
assign TX_BIT_CTRL_OUT1[201] = GND;
assign TX_BIT_CTRL_OUT1[202] = GND;
assign TX_BIT_CTRL_OUT1[203] = GND;
assign TX_BIT_CTRL_OUT1[204] = GND;
assign TX_BIT_CTRL_OUT1[205] = GND;
assign TX_BIT_CTRL_OUT1[206] = GND;
assign TX_BIT_CTRL_OUT1[207] = GND;
assign TX_BIT_CTRL_OUT1[208] = GND;
assign TX_BIT_CTRL_OUT1[209] = GND;
assign TX_BIT_CTRL_OUT1[210] = GND;
assign TX_BIT_CTRL_OUT1[211] = GND;
assign TX_BIT_CTRL_OUT1[212] = GND;
assign TX_BIT_CTRL_OUT1[213] = GND;
assign TX_BIT_CTRL_OUT1[214] = GND;
assign TX_BIT_CTRL_OUT1[215] = GND;
assign TX_BIT_CTRL_OUT1[216] = GND;
assign TX_BIT_CTRL_OUT1[217] = GND;
assign TX_BIT_CTRL_OUT1[218] = GND;
assign TX_BIT_CTRL_OUT1[219] = GND;
assign TX_BIT_CTRL_OUT1[220] = GND;
assign TX_BIT_CTRL_OUT1[221] = GND;
assign TX_BIT_CTRL_OUT1[222] = GND;
assign TX_BIT_CTRL_OUT1[223] = GND;
assign TX_BIT_CTRL_OUT1[224] = GND;
assign TX_BIT_CTRL_OUT1[225] = GND;
assign TX_BIT_CTRL_OUT1[226] = GND;
assign TX_BIT_CTRL_OUT1[227] = GND;
assign TX_BIT_CTRL_OUT1[228] = GND;
assign TX_BIT_CTRL_OUT1[229] = GND;
assign TX_BIT_CTRL_OUT1[230] = GND;
assign TX_BIT_CTRL_OUT1[231] = GND;
assign TX_BIT_CTRL_OUT1[232] = GND;
assign TX_BIT_CTRL_OUT1[233] = GND;
assign TX_BIT_CTRL_OUT1[234] = GND;
assign TX_BIT_CTRL_OUT1[235] = GND;
assign TX_BIT_CTRL_OUT1[236] = GND;
assign TX_BIT_CTRL_OUT1[237] = GND;
assign TX_BIT_CTRL_OUT1[238] = GND;
assign TX_BIT_CTRL_OUT1[239] = GND;
assign TX_BIT_CTRL_OUT1[240] = GND;
assign TX_BIT_CTRL_OUT1[241] = GND;
assign TX_BIT_CTRL_OUT1[242] = GND;
assign TX_BIT_CTRL_OUT1[243] = GND;
assign TX_BIT_CTRL_OUT1[244] = GND;
assign TX_BIT_CTRL_OUT1[245] = GND;
assign TX_BIT_CTRL_OUT1[246] = GND;
assign TX_BIT_CTRL_OUT1[247] = GND;
assign TX_BIT_CTRL_OUT1[248] = GND;
assign TX_BIT_CTRL_OUT1[249] = GND;
assign TX_BIT_CTRL_OUT1[250] = GND;
assign TX_BIT_CTRL_OUT1[251] = GND;
assign TX_BIT_CTRL_OUT1[252] = GND;
assign TX_BIT_CTRL_OUT1[253] = GND;
assign TX_BIT_CTRL_OUT1[254] = GND;
assign TX_BIT_CTRL_OUT1[255] = GND;
assign TX_BIT_CTRL_OUT1[256] = GND;
assign TX_BIT_CTRL_OUT1[257] = GND;
assign TX_BIT_CTRL_OUT1[258] = GND;
assign TX_BIT_CTRL_OUT1[259] = GND;
assign TX_BIT_CTRL_OUT1[260] = GND;
assign TX_BIT_CTRL_OUT1[261] = GND;
assign TX_BIT_CTRL_OUT1[262] = GND;
assign TX_BIT_CTRL_OUT1[263] = GND;
assign TX_BIT_CTRL_OUT1[264] = GND;
assign TX_BIT_CTRL_OUT1[265] = GND;
assign TX_BIT_CTRL_OUT1[266] = GND;
assign TX_BIT_CTRL_OUT1[267] = GND;
assign TX_BIT_CTRL_OUT1[268] = GND;
assign TX_BIT_CTRL_OUT1[269] = GND;
assign TX_BIT_CTRL_OUT1[270] = GND;
assign TX_BIT_CTRL_OUT1[271] = GND;
assign TX_BIT_CTRL_OUT1[272] = GND;
assign TX_BIT_CTRL_OUT1[273] = GND;
assign TX_BIT_CTRL_OUT1[274] = GND;
assign TX_BIT_CTRL_OUT1[275] = GND;
assign TX_BIT_CTRL_OUT1[276] = GND;
assign TX_BIT_CTRL_OUT1[277] = GND;
assign TX_BIT_CTRL_OUT1[278] = GND;
assign TX_BIT_CTRL_OUT1[279] = GND;
assign TX_BIT_CTRL_OUT1[280] = GND;
assign TX_BIT_CTRL_OUT1[281] = GND;
assign TX_BIT_CTRL_OUT1[282] = GND;
assign TX_BIT_CTRL_OUT1[283] = GND;
assign TX_BIT_CTRL_OUT1[284] = GND;
assign TX_BIT_CTRL_OUT1[285] = GND;
assign TX_BIT_CTRL_OUT1[286] = GND;
assign TX_BIT_CTRL_OUT1[287] = GND;
assign TX_BIT_CTRL_OUT1[288] = GND;
assign TX_BIT_CTRL_OUT1[289] = GND;
assign TX_BIT_CTRL_OUT1[290] = GND;
assign TX_BIT_CTRL_OUT1[291] = GND;
assign TX_BIT_CTRL_OUT1[292] = GND;
assign TX_BIT_CTRL_OUT1[293] = GND;
assign TX_BIT_CTRL_OUT1[294] = GND;
assign TX_BIT_CTRL_OUT1[295] = GND;
assign TX_BIT_CTRL_OUT1[296] = GND;
assign TX_BIT_CTRL_OUT1[297] = GND;
assign TX_BIT_CTRL_OUT1[298] = GND;
assign TX_BIT_CTRL_OUT1[299] = GND;
assign TX_BIT_CTRL_OUT1[300] = GND;
assign TX_BIT_CTRL_OUT1[301] = GND;
assign TX_BIT_CTRL_OUT1[302] = GND;
assign TX_BIT_CTRL_OUT1[303] = GND;
assign TX_BIT_CTRL_OUT1[304] = GND;
assign TX_BIT_CTRL_OUT1[305] = GND;
assign TX_BIT_CTRL_OUT1[306] = GND;
assign TX_BIT_CTRL_OUT1[307] = GND;
assign TX_BIT_CTRL_OUT1[308] = GND;
assign TX_BIT_CTRL_OUT1[309] = GND;
assign TX_BIT_CTRL_OUT1[310] = GND;
assign TX_BIT_CTRL_OUT1[311] = GND;
assign TX_BIT_CTRL_OUT1[312] = GND;
assign TX_BIT_CTRL_OUT1[313] = GND;
assign TX_BIT_CTRL_OUT1[314] = GND;
assign TX_BIT_CTRL_OUT1[315] = GND;
assign TX_BIT_CTRL_OUT1[316] = GND;
assign TX_BIT_CTRL_OUT1[317] = GND;
assign TX_BIT_CTRL_OUT1[318] = GND;
assign TX_BIT_CTRL_OUT1[319] = GND;
assign TX_BIT_CTRL_OUT2[0] = GND;
assign TX_BIT_CTRL_OUT2[1] = GND;
assign TX_BIT_CTRL_OUT2[2] = GND;
assign TX_BIT_CTRL_OUT2[3] = GND;
assign TX_BIT_CTRL_OUT2[4] = GND;
assign TX_BIT_CTRL_OUT2[5] = GND;
assign TX_BIT_CTRL_OUT2[6] = GND;
assign TX_BIT_CTRL_OUT2[7] = GND;
assign TX_BIT_CTRL_OUT2[8] = GND;
assign TX_BIT_CTRL_OUT2[9] = GND;
assign TX_BIT_CTRL_OUT2[10] = GND;
assign TX_BIT_CTRL_OUT2[11] = GND;
assign TX_BIT_CTRL_OUT2[12] = GND;
assign TX_BIT_CTRL_OUT2[13] = GND;
assign TX_BIT_CTRL_OUT2[14] = GND;
assign TX_BIT_CTRL_OUT2[15] = GND;
assign TX_BIT_CTRL_OUT2[16] = GND;
assign TX_BIT_CTRL_OUT2[17] = GND;
assign TX_BIT_CTRL_OUT2[18] = GND;
assign TX_BIT_CTRL_OUT2[19] = GND;
assign TX_BIT_CTRL_OUT2[20] = GND;
assign TX_BIT_CTRL_OUT2[21] = GND;
assign TX_BIT_CTRL_OUT2[22] = GND;
assign TX_BIT_CTRL_OUT2[23] = GND;
assign TX_BIT_CTRL_OUT2[24] = GND;
assign TX_BIT_CTRL_OUT2[25] = GND;
assign TX_BIT_CTRL_OUT2[26] = GND;
assign TX_BIT_CTRL_OUT2[27] = GND;
assign TX_BIT_CTRL_OUT2[28] = GND;
assign TX_BIT_CTRL_OUT2[29] = GND;
assign TX_BIT_CTRL_OUT2[30] = GND;
assign TX_BIT_CTRL_OUT2[31] = GND;
assign TX_BIT_CTRL_OUT2[32] = GND;
assign TX_BIT_CTRL_OUT2[33] = GND;
assign TX_BIT_CTRL_OUT2[34] = GND;
assign TX_BIT_CTRL_OUT2[35] = GND;
assign TX_BIT_CTRL_OUT2[36] = GND;
assign TX_BIT_CTRL_OUT2[37] = GND;
assign TX_BIT_CTRL_OUT2[38] = GND;
assign TX_BIT_CTRL_OUT2[39] = GND;
assign TX_BIT_CTRL_OUT2[80] = GND;
assign TX_BIT_CTRL_OUT2[81] = GND;
assign TX_BIT_CTRL_OUT2[82] = GND;
assign TX_BIT_CTRL_OUT2[83] = GND;
assign TX_BIT_CTRL_OUT2[84] = GND;
assign TX_BIT_CTRL_OUT2[85] = GND;
assign TX_BIT_CTRL_OUT2[86] = GND;
assign TX_BIT_CTRL_OUT2[87] = GND;
assign TX_BIT_CTRL_OUT2[88] = GND;
assign TX_BIT_CTRL_OUT2[89] = GND;
assign TX_BIT_CTRL_OUT2[90] = GND;
assign TX_BIT_CTRL_OUT2[91] = GND;
assign TX_BIT_CTRL_OUT2[92] = GND;
assign TX_BIT_CTRL_OUT2[93] = GND;
assign TX_BIT_CTRL_OUT2[94] = GND;
assign TX_BIT_CTRL_OUT2[95] = GND;
assign TX_BIT_CTRL_OUT2[96] = GND;
assign TX_BIT_CTRL_OUT2[97] = GND;
assign TX_BIT_CTRL_OUT2[98] = GND;
assign TX_BIT_CTRL_OUT2[99] = GND;
assign TX_BIT_CTRL_OUT2[100] = GND;
assign TX_BIT_CTRL_OUT2[101] = GND;
assign TX_BIT_CTRL_OUT2[102] = GND;
assign TX_BIT_CTRL_OUT2[103] = GND;
assign TX_BIT_CTRL_OUT2[104] = GND;
assign TX_BIT_CTRL_OUT2[105] = GND;
assign TX_BIT_CTRL_OUT2[106] = GND;
assign TX_BIT_CTRL_OUT2[107] = GND;
assign TX_BIT_CTRL_OUT2[108] = GND;
assign TX_BIT_CTRL_OUT2[109] = GND;
assign TX_BIT_CTRL_OUT2[110] = GND;
assign TX_BIT_CTRL_OUT2[111] = GND;
assign TX_BIT_CTRL_OUT2[112] = GND;
assign TX_BIT_CTRL_OUT2[113] = GND;
assign TX_BIT_CTRL_OUT2[114] = GND;
assign TX_BIT_CTRL_OUT2[115] = GND;
assign TX_BIT_CTRL_OUT2[116] = GND;
assign TX_BIT_CTRL_OUT2[117] = GND;
assign TX_BIT_CTRL_OUT2[118] = GND;
assign TX_BIT_CTRL_OUT2[119] = GND;
assign TX_BIT_CTRL_OUT2[120] = GND;
assign TX_BIT_CTRL_OUT2[121] = GND;
assign TX_BIT_CTRL_OUT2[122] = GND;
assign TX_BIT_CTRL_OUT2[123] = GND;
assign TX_BIT_CTRL_OUT2[124] = GND;
assign TX_BIT_CTRL_OUT2[125] = GND;
assign TX_BIT_CTRL_OUT2[126] = GND;
assign TX_BIT_CTRL_OUT2[127] = GND;
assign TX_BIT_CTRL_OUT2[128] = GND;
assign TX_BIT_CTRL_OUT2[129] = GND;
assign TX_BIT_CTRL_OUT2[130] = GND;
assign TX_BIT_CTRL_OUT2[131] = GND;
assign TX_BIT_CTRL_OUT2[132] = GND;
assign TX_BIT_CTRL_OUT2[133] = GND;
assign TX_BIT_CTRL_OUT2[134] = GND;
assign TX_BIT_CTRL_OUT2[135] = GND;
assign TX_BIT_CTRL_OUT2[136] = GND;
assign TX_BIT_CTRL_OUT2[137] = GND;
assign TX_BIT_CTRL_OUT2[138] = GND;
assign TX_BIT_CTRL_OUT2[139] = GND;
assign TX_BIT_CTRL_OUT2[140] = GND;
assign TX_BIT_CTRL_OUT2[141] = GND;
assign TX_BIT_CTRL_OUT2[142] = GND;
assign TX_BIT_CTRL_OUT2[143] = GND;
assign TX_BIT_CTRL_OUT2[144] = GND;
assign TX_BIT_CTRL_OUT2[145] = GND;
assign TX_BIT_CTRL_OUT2[146] = GND;
assign TX_BIT_CTRL_OUT2[147] = GND;
assign TX_BIT_CTRL_OUT2[148] = GND;
assign TX_BIT_CTRL_OUT2[149] = GND;
assign TX_BIT_CTRL_OUT2[150] = GND;
assign TX_BIT_CTRL_OUT2[151] = GND;
assign TX_BIT_CTRL_OUT2[152] = GND;
assign TX_BIT_CTRL_OUT2[153] = GND;
assign TX_BIT_CTRL_OUT2[154] = GND;
assign TX_BIT_CTRL_OUT2[155] = GND;
assign TX_BIT_CTRL_OUT2[156] = GND;
assign TX_BIT_CTRL_OUT2[157] = GND;
assign TX_BIT_CTRL_OUT2[158] = GND;
assign TX_BIT_CTRL_OUT2[159] = GND;
assign TX_BIT_CTRL_OUT2[160] = GND;
assign TX_BIT_CTRL_OUT2[161] = GND;
assign TX_BIT_CTRL_OUT2[162] = GND;
assign TX_BIT_CTRL_OUT2[163] = GND;
assign TX_BIT_CTRL_OUT2[164] = GND;
assign TX_BIT_CTRL_OUT2[165] = GND;
assign TX_BIT_CTRL_OUT2[166] = GND;
assign TX_BIT_CTRL_OUT2[167] = GND;
assign TX_BIT_CTRL_OUT2[168] = GND;
assign TX_BIT_CTRL_OUT2[169] = GND;
assign TX_BIT_CTRL_OUT2[170] = GND;
assign TX_BIT_CTRL_OUT2[171] = GND;
assign TX_BIT_CTRL_OUT2[172] = GND;
assign TX_BIT_CTRL_OUT2[173] = GND;
assign TX_BIT_CTRL_OUT2[174] = GND;
assign TX_BIT_CTRL_OUT2[175] = GND;
assign TX_BIT_CTRL_OUT2[176] = GND;
assign TX_BIT_CTRL_OUT2[177] = GND;
assign TX_BIT_CTRL_OUT2[178] = GND;
assign TX_BIT_CTRL_OUT2[179] = GND;
assign TX_BIT_CTRL_OUT2[180] = GND;
assign TX_BIT_CTRL_OUT2[181] = GND;
assign TX_BIT_CTRL_OUT2[182] = GND;
assign TX_BIT_CTRL_OUT2[183] = GND;
assign TX_BIT_CTRL_OUT2[184] = GND;
assign TX_BIT_CTRL_OUT2[185] = GND;
assign TX_BIT_CTRL_OUT2[186] = GND;
assign TX_BIT_CTRL_OUT2[187] = GND;
assign TX_BIT_CTRL_OUT2[188] = GND;
assign TX_BIT_CTRL_OUT2[189] = GND;
assign TX_BIT_CTRL_OUT2[190] = GND;
assign TX_BIT_CTRL_OUT2[191] = GND;
assign TX_BIT_CTRL_OUT2[192] = GND;
assign TX_BIT_CTRL_OUT2[193] = GND;
assign TX_BIT_CTRL_OUT2[194] = GND;
assign TX_BIT_CTRL_OUT2[195] = GND;
assign TX_BIT_CTRL_OUT2[196] = GND;
assign TX_BIT_CTRL_OUT2[197] = GND;
assign TX_BIT_CTRL_OUT2[198] = GND;
assign TX_BIT_CTRL_OUT2[199] = GND;
assign TX_BIT_CTRL_OUT2[200] = GND;
assign TX_BIT_CTRL_OUT2[201] = GND;
assign TX_BIT_CTRL_OUT2[202] = GND;
assign TX_BIT_CTRL_OUT2[203] = GND;
assign TX_BIT_CTRL_OUT2[204] = GND;
assign TX_BIT_CTRL_OUT2[205] = GND;
assign TX_BIT_CTRL_OUT2[206] = GND;
assign TX_BIT_CTRL_OUT2[207] = GND;
assign TX_BIT_CTRL_OUT2[208] = GND;
assign TX_BIT_CTRL_OUT2[209] = GND;
assign TX_BIT_CTRL_OUT2[210] = GND;
assign TX_BIT_CTRL_OUT2[211] = GND;
assign TX_BIT_CTRL_OUT2[212] = GND;
assign TX_BIT_CTRL_OUT2[213] = GND;
assign TX_BIT_CTRL_OUT2[214] = GND;
assign TX_BIT_CTRL_OUT2[215] = GND;
assign TX_BIT_CTRL_OUT2[216] = GND;
assign TX_BIT_CTRL_OUT2[217] = GND;
assign TX_BIT_CTRL_OUT2[218] = GND;
assign TX_BIT_CTRL_OUT2[219] = GND;
assign TX_BIT_CTRL_OUT2[220] = GND;
assign TX_BIT_CTRL_OUT2[221] = GND;
assign TX_BIT_CTRL_OUT2[222] = GND;
assign TX_BIT_CTRL_OUT2[223] = GND;
assign TX_BIT_CTRL_OUT2[224] = GND;
assign TX_BIT_CTRL_OUT2[225] = GND;
assign TX_BIT_CTRL_OUT2[226] = GND;
assign TX_BIT_CTRL_OUT2[227] = GND;
assign TX_BIT_CTRL_OUT2[228] = GND;
assign TX_BIT_CTRL_OUT2[229] = GND;
assign TX_BIT_CTRL_OUT2[230] = GND;
assign TX_BIT_CTRL_OUT2[231] = GND;
assign TX_BIT_CTRL_OUT2[232] = GND;
assign TX_BIT_CTRL_OUT2[233] = GND;
assign TX_BIT_CTRL_OUT2[234] = GND;
assign TX_BIT_CTRL_OUT2[235] = GND;
assign TX_BIT_CTRL_OUT2[236] = GND;
assign TX_BIT_CTRL_OUT2[237] = GND;
assign TX_BIT_CTRL_OUT2[238] = GND;
assign TX_BIT_CTRL_OUT2[239] = GND;
assign TX_BIT_CTRL_OUT2[240] = GND;
assign TX_BIT_CTRL_OUT2[241] = GND;
assign TX_BIT_CTRL_OUT2[242] = GND;
assign TX_BIT_CTRL_OUT2[243] = GND;
assign TX_BIT_CTRL_OUT2[244] = GND;
assign TX_BIT_CTRL_OUT2[245] = GND;
assign TX_BIT_CTRL_OUT2[246] = GND;
assign TX_BIT_CTRL_OUT2[247] = GND;
assign TX_BIT_CTRL_OUT2[248] = GND;
assign TX_BIT_CTRL_OUT2[249] = GND;
assign TX_BIT_CTRL_OUT2[250] = GND;
assign TX_BIT_CTRL_OUT2[251] = GND;
assign TX_BIT_CTRL_OUT2[252] = GND;
assign TX_BIT_CTRL_OUT2[253] = GND;
assign TX_BIT_CTRL_OUT2[254] = GND;
assign TX_BIT_CTRL_OUT2[255] = GND;
assign TX_BIT_CTRL_OUT2[256] = GND;
assign TX_BIT_CTRL_OUT2[257] = GND;
assign TX_BIT_CTRL_OUT2[258] = GND;
assign TX_BIT_CTRL_OUT2[259] = GND;
assign TX_BIT_CTRL_OUT2[260] = GND;
assign TX_BIT_CTRL_OUT2[261] = GND;
assign TX_BIT_CTRL_OUT2[262] = GND;
assign TX_BIT_CTRL_OUT2[263] = GND;
assign TX_BIT_CTRL_OUT2[264] = GND;
assign TX_BIT_CTRL_OUT2[265] = GND;
assign TX_BIT_CTRL_OUT2[266] = GND;
assign TX_BIT_CTRL_OUT2[267] = GND;
assign TX_BIT_CTRL_OUT2[268] = GND;
assign TX_BIT_CTRL_OUT2[269] = GND;
assign TX_BIT_CTRL_OUT2[270] = GND;
assign TX_BIT_CTRL_OUT2[271] = GND;
assign TX_BIT_CTRL_OUT2[272] = GND;
assign TX_BIT_CTRL_OUT2[273] = GND;
assign TX_BIT_CTRL_OUT2[274] = GND;
assign TX_BIT_CTRL_OUT2[275] = GND;
assign TX_BIT_CTRL_OUT2[276] = GND;
assign TX_BIT_CTRL_OUT2[277] = GND;
assign TX_BIT_CTRL_OUT2[278] = GND;
assign TX_BIT_CTRL_OUT2[279] = GND;
assign TX_BIT_CTRL_OUT2[280] = GND;
assign TX_BIT_CTRL_OUT2[281] = GND;
assign TX_BIT_CTRL_OUT2[282] = GND;
assign TX_BIT_CTRL_OUT2[283] = GND;
assign TX_BIT_CTRL_OUT2[284] = GND;
assign TX_BIT_CTRL_OUT2[285] = GND;
assign TX_BIT_CTRL_OUT2[286] = GND;
assign TX_BIT_CTRL_OUT2[287] = GND;
assign TX_BIT_CTRL_OUT2[288] = GND;
assign TX_BIT_CTRL_OUT2[289] = GND;
assign TX_BIT_CTRL_OUT2[290] = GND;
assign TX_BIT_CTRL_OUT2[291] = GND;
assign TX_BIT_CTRL_OUT2[292] = GND;
assign TX_BIT_CTRL_OUT2[293] = GND;
assign TX_BIT_CTRL_OUT2[294] = GND;
assign TX_BIT_CTRL_OUT2[295] = GND;
assign TX_BIT_CTRL_OUT2[296] = GND;
assign TX_BIT_CTRL_OUT2[297] = GND;
assign TX_BIT_CTRL_OUT2[298] = GND;
assign TX_BIT_CTRL_OUT2[299] = GND;
assign TX_BIT_CTRL_OUT2[300] = GND;
assign TX_BIT_CTRL_OUT2[301] = GND;
assign TX_BIT_CTRL_OUT2[302] = GND;
assign TX_BIT_CTRL_OUT2[303] = GND;
assign TX_BIT_CTRL_OUT2[304] = GND;
assign TX_BIT_CTRL_OUT2[305] = GND;
assign TX_BIT_CTRL_OUT2[306] = GND;
assign TX_BIT_CTRL_OUT2[307] = GND;
assign TX_BIT_CTRL_OUT2[308] = GND;
assign TX_BIT_CTRL_OUT2[309] = GND;
assign TX_BIT_CTRL_OUT2[310] = GND;
assign TX_BIT_CTRL_OUT2[311] = GND;
assign TX_BIT_CTRL_OUT2[312] = GND;
assign TX_BIT_CTRL_OUT2[313] = GND;
assign TX_BIT_CTRL_OUT2[314] = GND;
assign TX_BIT_CTRL_OUT2[315] = GND;
assign TX_BIT_CTRL_OUT2[316] = GND;
assign TX_BIT_CTRL_OUT2[317] = GND;
assign TX_BIT_CTRL_OUT2[318] = GND;
assign TX_BIT_CTRL_OUT2[319] = GND;
assign TX_BIT_CTRL_OUT3[0] = GND;
assign TX_BIT_CTRL_OUT3[1] = GND;
assign TX_BIT_CTRL_OUT3[2] = GND;
assign TX_BIT_CTRL_OUT3[3] = GND;
assign TX_BIT_CTRL_OUT3[4] = GND;
assign TX_BIT_CTRL_OUT3[5] = GND;
assign TX_BIT_CTRL_OUT3[6] = GND;
assign TX_BIT_CTRL_OUT3[7] = GND;
assign TX_BIT_CTRL_OUT3[8] = GND;
assign TX_BIT_CTRL_OUT3[9] = GND;
assign TX_BIT_CTRL_OUT3[10] = GND;
assign TX_BIT_CTRL_OUT3[11] = GND;
assign TX_BIT_CTRL_OUT3[12] = GND;
assign TX_BIT_CTRL_OUT3[13] = GND;
assign TX_BIT_CTRL_OUT3[14] = GND;
assign TX_BIT_CTRL_OUT3[15] = GND;
assign TX_BIT_CTRL_OUT3[16] = GND;
assign TX_BIT_CTRL_OUT3[17] = GND;
assign TX_BIT_CTRL_OUT3[18] = GND;
assign TX_BIT_CTRL_OUT3[19] = GND;
assign TX_BIT_CTRL_OUT3[20] = GND;
assign TX_BIT_CTRL_OUT3[21] = GND;
assign TX_BIT_CTRL_OUT3[22] = GND;
assign TX_BIT_CTRL_OUT3[23] = GND;
assign TX_BIT_CTRL_OUT3[24] = GND;
assign TX_BIT_CTRL_OUT3[25] = GND;
assign TX_BIT_CTRL_OUT3[26] = GND;
assign TX_BIT_CTRL_OUT3[27] = GND;
assign TX_BIT_CTRL_OUT3[28] = GND;
assign TX_BIT_CTRL_OUT3[29] = GND;
assign TX_BIT_CTRL_OUT3[30] = GND;
assign TX_BIT_CTRL_OUT3[31] = GND;
assign TX_BIT_CTRL_OUT3[32] = GND;
assign TX_BIT_CTRL_OUT3[33] = GND;
assign TX_BIT_CTRL_OUT3[34] = GND;
assign TX_BIT_CTRL_OUT3[35] = GND;
assign TX_BIT_CTRL_OUT3[36] = GND;
assign TX_BIT_CTRL_OUT3[37] = GND;
assign TX_BIT_CTRL_OUT3[38] = GND;
assign TX_BIT_CTRL_OUT3[39] = GND;
assign TX_BIT_CTRL_OUT3[80] = GND;
assign TX_BIT_CTRL_OUT3[81] = GND;
assign TX_BIT_CTRL_OUT3[82] = GND;
assign TX_BIT_CTRL_OUT3[83] = GND;
assign TX_BIT_CTRL_OUT3[84] = GND;
assign TX_BIT_CTRL_OUT3[85] = GND;
assign TX_BIT_CTRL_OUT3[86] = GND;
assign TX_BIT_CTRL_OUT3[87] = GND;
assign TX_BIT_CTRL_OUT3[88] = GND;
assign TX_BIT_CTRL_OUT3[89] = GND;
assign TX_BIT_CTRL_OUT3[90] = GND;
assign TX_BIT_CTRL_OUT3[91] = GND;
assign TX_BIT_CTRL_OUT3[92] = GND;
assign TX_BIT_CTRL_OUT3[93] = GND;
assign TX_BIT_CTRL_OUT3[94] = GND;
assign TX_BIT_CTRL_OUT3[95] = GND;
assign TX_BIT_CTRL_OUT3[96] = GND;
assign TX_BIT_CTRL_OUT3[97] = GND;
assign TX_BIT_CTRL_OUT3[98] = GND;
assign TX_BIT_CTRL_OUT3[99] = GND;
assign TX_BIT_CTRL_OUT3[100] = GND;
assign TX_BIT_CTRL_OUT3[101] = GND;
assign TX_BIT_CTRL_OUT3[102] = GND;
assign TX_BIT_CTRL_OUT3[103] = GND;
assign TX_BIT_CTRL_OUT3[104] = GND;
assign TX_BIT_CTRL_OUT3[105] = GND;
assign TX_BIT_CTRL_OUT3[106] = GND;
assign TX_BIT_CTRL_OUT3[107] = GND;
assign TX_BIT_CTRL_OUT3[108] = GND;
assign TX_BIT_CTRL_OUT3[109] = GND;
assign TX_BIT_CTRL_OUT3[110] = GND;
assign TX_BIT_CTRL_OUT3[111] = GND;
assign TX_BIT_CTRL_OUT3[112] = GND;
assign TX_BIT_CTRL_OUT3[113] = GND;
assign TX_BIT_CTRL_OUT3[114] = GND;
assign TX_BIT_CTRL_OUT3[115] = GND;
assign TX_BIT_CTRL_OUT3[116] = GND;
assign TX_BIT_CTRL_OUT3[117] = GND;
assign TX_BIT_CTRL_OUT3[118] = GND;
assign TX_BIT_CTRL_OUT3[119] = GND;
assign TX_BIT_CTRL_OUT3[120] = GND;
assign TX_BIT_CTRL_OUT3[121] = GND;
assign TX_BIT_CTRL_OUT3[122] = GND;
assign TX_BIT_CTRL_OUT3[123] = GND;
assign TX_BIT_CTRL_OUT3[124] = GND;
assign TX_BIT_CTRL_OUT3[125] = GND;
assign TX_BIT_CTRL_OUT3[126] = GND;
assign TX_BIT_CTRL_OUT3[127] = GND;
assign TX_BIT_CTRL_OUT3[128] = GND;
assign TX_BIT_CTRL_OUT3[129] = GND;
assign TX_BIT_CTRL_OUT3[130] = GND;
assign TX_BIT_CTRL_OUT3[131] = GND;
assign TX_BIT_CTRL_OUT3[132] = GND;
assign TX_BIT_CTRL_OUT3[133] = GND;
assign TX_BIT_CTRL_OUT3[134] = GND;
assign TX_BIT_CTRL_OUT3[135] = GND;
assign TX_BIT_CTRL_OUT3[136] = GND;
assign TX_BIT_CTRL_OUT3[137] = GND;
assign TX_BIT_CTRL_OUT3[138] = GND;
assign TX_BIT_CTRL_OUT3[139] = GND;
assign TX_BIT_CTRL_OUT3[140] = GND;
assign TX_BIT_CTRL_OUT3[141] = GND;
assign TX_BIT_CTRL_OUT3[142] = GND;
assign TX_BIT_CTRL_OUT3[143] = GND;
assign TX_BIT_CTRL_OUT3[144] = GND;
assign TX_BIT_CTRL_OUT3[145] = GND;
assign TX_BIT_CTRL_OUT3[146] = GND;
assign TX_BIT_CTRL_OUT3[147] = GND;
assign TX_BIT_CTRL_OUT3[148] = GND;
assign TX_BIT_CTRL_OUT3[149] = GND;
assign TX_BIT_CTRL_OUT3[150] = GND;
assign TX_BIT_CTRL_OUT3[151] = GND;
assign TX_BIT_CTRL_OUT3[152] = GND;
assign TX_BIT_CTRL_OUT3[153] = GND;
assign TX_BIT_CTRL_OUT3[154] = GND;
assign TX_BIT_CTRL_OUT3[155] = GND;
assign TX_BIT_CTRL_OUT3[156] = GND;
assign TX_BIT_CTRL_OUT3[157] = GND;
assign TX_BIT_CTRL_OUT3[158] = GND;
assign TX_BIT_CTRL_OUT3[159] = GND;
assign TX_BIT_CTRL_OUT3[160] = GND;
assign TX_BIT_CTRL_OUT3[161] = GND;
assign TX_BIT_CTRL_OUT3[162] = GND;
assign TX_BIT_CTRL_OUT3[163] = GND;
assign TX_BIT_CTRL_OUT3[164] = GND;
assign TX_BIT_CTRL_OUT3[165] = GND;
assign TX_BIT_CTRL_OUT3[166] = GND;
assign TX_BIT_CTRL_OUT3[167] = GND;
assign TX_BIT_CTRL_OUT3[168] = GND;
assign TX_BIT_CTRL_OUT3[169] = GND;
assign TX_BIT_CTRL_OUT3[170] = GND;
assign TX_BIT_CTRL_OUT3[171] = GND;
assign TX_BIT_CTRL_OUT3[172] = GND;
assign TX_BIT_CTRL_OUT3[173] = GND;
assign TX_BIT_CTRL_OUT3[174] = GND;
assign TX_BIT_CTRL_OUT3[175] = GND;
assign TX_BIT_CTRL_OUT3[176] = GND;
assign TX_BIT_CTRL_OUT3[177] = GND;
assign TX_BIT_CTRL_OUT3[178] = GND;
assign TX_BIT_CTRL_OUT3[179] = GND;
assign TX_BIT_CTRL_OUT3[180] = GND;
assign TX_BIT_CTRL_OUT3[181] = GND;
assign TX_BIT_CTRL_OUT3[182] = GND;
assign TX_BIT_CTRL_OUT3[183] = GND;
assign TX_BIT_CTRL_OUT3[184] = GND;
assign TX_BIT_CTRL_OUT3[185] = GND;
assign TX_BIT_CTRL_OUT3[186] = GND;
assign TX_BIT_CTRL_OUT3[187] = GND;
assign TX_BIT_CTRL_OUT3[188] = GND;
assign TX_BIT_CTRL_OUT3[189] = GND;
assign TX_BIT_CTRL_OUT3[190] = GND;
assign TX_BIT_CTRL_OUT3[191] = GND;
assign TX_BIT_CTRL_OUT3[192] = GND;
assign TX_BIT_CTRL_OUT3[193] = GND;
assign TX_BIT_CTRL_OUT3[194] = GND;
assign TX_BIT_CTRL_OUT3[195] = GND;
assign TX_BIT_CTRL_OUT3[196] = GND;
assign TX_BIT_CTRL_OUT3[197] = GND;
assign TX_BIT_CTRL_OUT3[198] = GND;
assign TX_BIT_CTRL_OUT3[199] = GND;
assign TX_BIT_CTRL_OUT3[200] = GND;
assign TX_BIT_CTRL_OUT3[201] = GND;
assign TX_BIT_CTRL_OUT3[202] = GND;
assign TX_BIT_CTRL_OUT3[203] = GND;
assign TX_BIT_CTRL_OUT3[204] = GND;
assign TX_BIT_CTRL_OUT3[205] = GND;
assign TX_BIT_CTRL_OUT3[206] = GND;
assign TX_BIT_CTRL_OUT3[207] = GND;
assign TX_BIT_CTRL_OUT3[208] = GND;
assign TX_BIT_CTRL_OUT3[209] = GND;
assign TX_BIT_CTRL_OUT3[210] = GND;
assign TX_BIT_CTRL_OUT3[211] = GND;
assign TX_BIT_CTRL_OUT3[212] = GND;
assign TX_BIT_CTRL_OUT3[213] = GND;
assign TX_BIT_CTRL_OUT3[214] = GND;
assign TX_BIT_CTRL_OUT3[215] = GND;
assign TX_BIT_CTRL_OUT3[216] = GND;
assign TX_BIT_CTRL_OUT3[217] = GND;
assign TX_BIT_CTRL_OUT3[218] = GND;
assign TX_BIT_CTRL_OUT3[219] = GND;
assign TX_BIT_CTRL_OUT3[220] = GND;
assign TX_BIT_CTRL_OUT3[221] = GND;
assign TX_BIT_CTRL_OUT3[222] = GND;
assign TX_BIT_CTRL_OUT3[223] = GND;
assign TX_BIT_CTRL_OUT3[224] = GND;
assign TX_BIT_CTRL_OUT3[225] = GND;
assign TX_BIT_CTRL_OUT3[226] = GND;
assign TX_BIT_CTRL_OUT3[227] = GND;
assign TX_BIT_CTRL_OUT3[228] = GND;
assign TX_BIT_CTRL_OUT3[229] = GND;
assign TX_BIT_CTRL_OUT3[230] = GND;
assign TX_BIT_CTRL_OUT3[231] = GND;
assign TX_BIT_CTRL_OUT3[232] = GND;
assign TX_BIT_CTRL_OUT3[233] = GND;
assign TX_BIT_CTRL_OUT3[234] = GND;
assign TX_BIT_CTRL_OUT3[235] = GND;
assign TX_BIT_CTRL_OUT3[236] = GND;
assign TX_BIT_CTRL_OUT3[237] = GND;
assign TX_BIT_CTRL_OUT3[238] = GND;
assign TX_BIT_CTRL_OUT3[239] = GND;
assign TX_BIT_CTRL_OUT3[240] = GND;
assign TX_BIT_CTRL_OUT3[241] = GND;
assign TX_BIT_CTRL_OUT3[242] = GND;
assign TX_BIT_CTRL_OUT3[243] = GND;
assign TX_BIT_CTRL_OUT3[244] = GND;
assign TX_BIT_CTRL_OUT3[245] = GND;
assign TX_BIT_CTRL_OUT3[246] = GND;
assign TX_BIT_CTRL_OUT3[247] = GND;
assign TX_BIT_CTRL_OUT3[248] = GND;
assign TX_BIT_CTRL_OUT3[249] = GND;
assign TX_BIT_CTRL_OUT3[250] = GND;
assign TX_BIT_CTRL_OUT3[251] = GND;
assign TX_BIT_CTRL_OUT3[252] = GND;
assign TX_BIT_CTRL_OUT3[253] = GND;
assign TX_BIT_CTRL_OUT3[254] = GND;
assign TX_BIT_CTRL_OUT3[255] = GND;
assign TX_BIT_CTRL_OUT3[256] = GND;
assign TX_BIT_CTRL_OUT3[257] = GND;
assign TX_BIT_CTRL_OUT3[258] = GND;
assign TX_BIT_CTRL_OUT3[259] = GND;
assign TX_BIT_CTRL_OUT3[260] = GND;
assign TX_BIT_CTRL_OUT3[261] = GND;
assign TX_BIT_CTRL_OUT3[262] = GND;
assign TX_BIT_CTRL_OUT3[263] = GND;
assign TX_BIT_CTRL_OUT3[264] = GND;
assign TX_BIT_CTRL_OUT3[265] = GND;
assign TX_BIT_CTRL_OUT3[266] = GND;
assign TX_BIT_CTRL_OUT3[267] = GND;
assign TX_BIT_CTRL_OUT3[268] = GND;
assign TX_BIT_CTRL_OUT3[269] = GND;
assign TX_BIT_CTRL_OUT3[270] = GND;
assign TX_BIT_CTRL_OUT3[271] = GND;
assign TX_BIT_CTRL_OUT3[272] = GND;
assign TX_BIT_CTRL_OUT3[273] = GND;
assign TX_BIT_CTRL_OUT3[274] = GND;
assign TX_BIT_CTRL_OUT3[275] = GND;
assign TX_BIT_CTRL_OUT3[276] = GND;
assign TX_BIT_CTRL_OUT3[277] = GND;
assign TX_BIT_CTRL_OUT3[278] = GND;
assign TX_BIT_CTRL_OUT3[279] = GND;
assign TX_BIT_CTRL_OUT3[280] = GND;
assign TX_BIT_CTRL_OUT3[281] = GND;
assign TX_BIT_CTRL_OUT3[282] = GND;
assign TX_BIT_CTRL_OUT3[283] = GND;
assign TX_BIT_CTRL_OUT3[284] = GND;
assign TX_BIT_CTRL_OUT3[285] = GND;
assign TX_BIT_CTRL_OUT3[286] = GND;
assign TX_BIT_CTRL_OUT3[287] = GND;
assign TX_BIT_CTRL_OUT3[288] = GND;
assign TX_BIT_CTRL_OUT3[289] = GND;
assign TX_BIT_CTRL_OUT3[290] = GND;
assign TX_BIT_CTRL_OUT3[291] = GND;
assign TX_BIT_CTRL_OUT3[292] = GND;
assign TX_BIT_CTRL_OUT3[293] = GND;
assign TX_BIT_CTRL_OUT3[294] = GND;
assign TX_BIT_CTRL_OUT3[295] = GND;
assign TX_BIT_CTRL_OUT3[296] = GND;
assign TX_BIT_CTRL_OUT3[297] = GND;
assign TX_BIT_CTRL_OUT3[298] = GND;
assign TX_BIT_CTRL_OUT3[299] = GND;
assign TX_BIT_CTRL_OUT3[300] = GND;
assign TX_BIT_CTRL_OUT3[301] = GND;
assign TX_BIT_CTRL_OUT3[302] = GND;
assign TX_BIT_CTRL_OUT3[303] = GND;
assign TX_BIT_CTRL_OUT3[304] = GND;
assign TX_BIT_CTRL_OUT3[305] = GND;
assign TX_BIT_CTRL_OUT3[306] = GND;
assign TX_BIT_CTRL_OUT3[307] = GND;
assign TX_BIT_CTRL_OUT3[308] = GND;
assign TX_BIT_CTRL_OUT3[309] = GND;
assign TX_BIT_CTRL_OUT3[310] = GND;
assign TX_BIT_CTRL_OUT3[311] = GND;
assign TX_BIT_CTRL_OUT3[312] = GND;
assign TX_BIT_CTRL_OUT3[313] = GND;
assign TX_BIT_CTRL_OUT3[314] = GND;
assign TX_BIT_CTRL_OUT3[315] = GND;
assign TX_BIT_CTRL_OUT3[316] = GND;
assign TX_BIT_CTRL_OUT3[317] = GND;
assign TX_BIT_CTRL_OUT3[318] = GND;
assign TX_BIT_CTRL_OUT3[319] = GND;
assign TX_BIT_CTRL_OUT4[0] = GND;
assign TX_BIT_CTRL_OUT4[1] = GND;
assign TX_BIT_CTRL_OUT4[2] = GND;
assign TX_BIT_CTRL_OUT4[3] = GND;
assign TX_BIT_CTRL_OUT4[4] = GND;
assign TX_BIT_CTRL_OUT4[5] = GND;
assign TX_BIT_CTRL_OUT4[6] = GND;
assign TX_BIT_CTRL_OUT4[7] = GND;
assign TX_BIT_CTRL_OUT4[8] = GND;
assign TX_BIT_CTRL_OUT4[9] = GND;
assign TX_BIT_CTRL_OUT4[10] = GND;
assign TX_BIT_CTRL_OUT4[11] = GND;
assign TX_BIT_CTRL_OUT4[12] = GND;
assign TX_BIT_CTRL_OUT4[13] = GND;
assign TX_BIT_CTRL_OUT4[14] = GND;
assign TX_BIT_CTRL_OUT4[15] = GND;
assign TX_BIT_CTRL_OUT4[16] = GND;
assign TX_BIT_CTRL_OUT4[17] = GND;
assign TX_BIT_CTRL_OUT4[18] = GND;
assign TX_BIT_CTRL_OUT4[19] = GND;
assign TX_BIT_CTRL_OUT4[20] = GND;
assign TX_BIT_CTRL_OUT4[21] = GND;
assign TX_BIT_CTRL_OUT4[22] = GND;
assign TX_BIT_CTRL_OUT4[23] = GND;
assign TX_BIT_CTRL_OUT4[24] = GND;
assign TX_BIT_CTRL_OUT4[25] = GND;
assign TX_BIT_CTRL_OUT4[26] = GND;
assign TX_BIT_CTRL_OUT4[27] = GND;
assign TX_BIT_CTRL_OUT4[28] = GND;
assign TX_BIT_CTRL_OUT4[29] = GND;
assign TX_BIT_CTRL_OUT4[30] = GND;
assign TX_BIT_CTRL_OUT4[31] = GND;
assign TX_BIT_CTRL_OUT4[32] = GND;
assign TX_BIT_CTRL_OUT4[33] = GND;
assign TX_BIT_CTRL_OUT4[34] = GND;
assign TX_BIT_CTRL_OUT4[35] = GND;
assign TX_BIT_CTRL_OUT4[36] = GND;
assign TX_BIT_CTRL_OUT4[37] = GND;
assign TX_BIT_CTRL_OUT4[38] = GND;
assign TX_BIT_CTRL_OUT4[39] = GND;
assign TX_BIT_CTRL_OUT4[40] = GND;
assign TX_BIT_CTRL_OUT4[41] = GND;
assign TX_BIT_CTRL_OUT4[42] = GND;
assign TX_BIT_CTRL_OUT4[43] = GND;
assign TX_BIT_CTRL_OUT4[44] = GND;
assign TX_BIT_CTRL_OUT4[45] = GND;
assign TX_BIT_CTRL_OUT4[46] = GND;
assign TX_BIT_CTRL_OUT4[47] = GND;
assign TX_BIT_CTRL_OUT4[48] = GND;
assign TX_BIT_CTRL_OUT4[49] = GND;
assign TX_BIT_CTRL_OUT4[50] = GND;
assign TX_BIT_CTRL_OUT4[51] = GND;
assign TX_BIT_CTRL_OUT4[52] = GND;
assign TX_BIT_CTRL_OUT4[53] = GND;
assign TX_BIT_CTRL_OUT4[54] = GND;
assign TX_BIT_CTRL_OUT4[55] = GND;
assign TX_BIT_CTRL_OUT4[56] = GND;
assign TX_BIT_CTRL_OUT4[57] = GND;
assign TX_BIT_CTRL_OUT4[58] = GND;
assign TX_BIT_CTRL_OUT4[59] = GND;
assign TX_BIT_CTRL_OUT4[60] = GND;
assign TX_BIT_CTRL_OUT4[61] = GND;
assign TX_BIT_CTRL_OUT4[62] = GND;
assign TX_BIT_CTRL_OUT4[63] = GND;
assign TX_BIT_CTRL_OUT4[64] = GND;
assign TX_BIT_CTRL_OUT4[65] = GND;
assign TX_BIT_CTRL_OUT4[66] = GND;
assign TX_BIT_CTRL_OUT4[67] = GND;
assign TX_BIT_CTRL_OUT4[68] = GND;
assign TX_BIT_CTRL_OUT4[69] = GND;
assign TX_BIT_CTRL_OUT4[70] = GND;
assign TX_BIT_CTRL_OUT4[71] = GND;
assign TX_BIT_CTRL_OUT4[72] = GND;
assign TX_BIT_CTRL_OUT4[73] = GND;
assign TX_BIT_CTRL_OUT4[74] = GND;
assign TX_BIT_CTRL_OUT4[75] = GND;
assign TX_BIT_CTRL_OUT4[76] = GND;
assign TX_BIT_CTRL_OUT4[77] = GND;
assign TX_BIT_CTRL_OUT4[78] = GND;
assign TX_BIT_CTRL_OUT4[79] = GND;
assign TX_BIT_CTRL_OUT4[80] = GND;
assign TX_BIT_CTRL_OUT4[81] = GND;
assign TX_BIT_CTRL_OUT4[82] = GND;
assign TX_BIT_CTRL_OUT4[83] = GND;
assign TX_BIT_CTRL_OUT4[84] = GND;
assign TX_BIT_CTRL_OUT4[85] = GND;
assign TX_BIT_CTRL_OUT4[86] = GND;
assign TX_BIT_CTRL_OUT4[87] = GND;
assign TX_BIT_CTRL_OUT4[88] = GND;
assign TX_BIT_CTRL_OUT4[89] = GND;
assign TX_BIT_CTRL_OUT4[90] = GND;
assign TX_BIT_CTRL_OUT4[91] = GND;
assign TX_BIT_CTRL_OUT4[92] = GND;
assign TX_BIT_CTRL_OUT4[93] = GND;
assign TX_BIT_CTRL_OUT4[94] = GND;
assign TX_BIT_CTRL_OUT4[95] = GND;
assign TX_BIT_CTRL_OUT4[96] = GND;
assign TX_BIT_CTRL_OUT4[97] = GND;
assign TX_BIT_CTRL_OUT4[98] = GND;
assign TX_BIT_CTRL_OUT4[99] = GND;
assign TX_BIT_CTRL_OUT4[100] = GND;
assign TX_BIT_CTRL_OUT4[101] = GND;
assign TX_BIT_CTRL_OUT4[102] = GND;
assign TX_BIT_CTRL_OUT4[103] = GND;
assign TX_BIT_CTRL_OUT4[104] = GND;
assign TX_BIT_CTRL_OUT4[105] = GND;
assign TX_BIT_CTRL_OUT4[106] = GND;
assign TX_BIT_CTRL_OUT4[107] = GND;
assign TX_BIT_CTRL_OUT4[108] = GND;
assign TX_BIT_CTRL_OUT4[109] = GND;
assign TX_BIT_CTRL_OUT4[110] = GND;
assign TX_BIT_CTRL_OUT4[111] = GND;
assign TX_BIT_CTRL_OUT4[112] = GND;
assign TX_BIT_CTRL_OUT4[113] = GND;
assign TX_BIT_CTRL_OUT4[114] = GND;
assign TX_BIT_CTRL_OUT4[115] = GND;
assign TX_BIT_CTRL_OUT4[116] = GND;
assign TX_BIT_CTRL_OUT4[117] = GND;
assign TX_BIT_CTRL_OUT4[118] = GND;
assign TX_BIT_CTRL_OUT4[119] = GND;
assign TX_BIT_CTRL_OUT4[160] = GND;
assign TX_BIT_CTRL_OUT4[161] = GND;
assign TX_BIT_CTRL_OUT4[162] = GND;
assign TX_BIT_CTRL_OUT4[163] = GND;
assign TX_BIT_CTRL_OUT4[164] = GND;
assign TX_BIT_CTRL_OUT4[165] = GND;
assign TX_BIT_CTRL_OUT4[166] = GND;
assign TX_BIT_CTRL_OUT4[167] = GND;
assign TX_BIT_CTRL_OUT4[168] = GND;
assign TX_BIT_CTRL_OUT4[169] = GND;
assign TX_BIT_CTRL_OUT4[170] = GND;
assign TX_BIT_CTRL_OUT4[171] = GND;
assign TX_BIT_CTRL_OUT4[172] = GND;
assign TX_BIT_CTRL_OUT4[173] = GND;
assign TX_BIT_CTRL_OUT4[174] = GND;
assign TX_BIT_CTRL_OUT4[175] = GND;
assign TX_BIT_CTRL_OUT4[176] = GND;
assign TX_BIT_CTRL_OUT4[177] = GND;
assign TX_BIT_CTRL_OUT4[178] = GND;
assign TX_BIT_CTRL_OUT4[179] = GND;
assign TX_BIT_CTRL_OUT4[180] = GND;
assign TX_BIT_CTRL_OUT4[181] = GND;
assign TX_BIT_CTRL_OUT4[182] = GND;
assign TX_BIT_CTRL_OUT4[183] = GND;
assign TX_BIT_CTRL_OUT4[184] = GND;
assign TX_BIT_CTRL_OUT4[185] = GND;
assign TX_BIT_CTRL_OUT4[186] = GND;
assign TX_BIT_CTRL_OUT4[187] = GND;
assign TX_BIT_CTRL_OUT4[188] = GND;
assign TX_BIT_CTRL_OUT4[189] = GND;
assign TX_BIT_CTRL_OUT4[190] = GND;
assign TX_BIT_CTRL_OUT4[191] = GND;
assign TX_BIT_CTRL_OUT4[192] = GND;
assign TX_BIT_CTRL_OUT4[193] = GND;
assign TX_BIT_CTRL_OUT4[194] = GND;
assign TX_BIT_CTRL_OUT4[195] = GND;
assign TX_BIT_CTRL_OUT4[196] = GND;
assign TX_BIT_CTRL_OUT4[197] = GND;
assign TX_BIT_CTRL_OUT4[198] = GND;
assign TX_BIT_CTRL_OUT4[199] = GND;
assign TX_BIT_CTRL_OUT4[200] = GND;
assign TX_BIT_CTRL_OUT4[201] = GND;
assign TX_BIT_CTRL_OUT4[202] = GND;
assign TX_BIT_CTRL_OUT4[203] = GND;
assign TX_BIT_CTRL_OUT4[204] = GND;
assign TX_BIT_CTRL_OUT4[205] = GND;
assign TX_BIT_CTRL_OUT4[206] = GND;
assign TX_BIT_CTRL_OUT4[207] = GND;
assign TX_BIT_CTRL_OUT4[208] = GND;
assign TX_BIT_CTRL_OUT4[209] = GND;
assign TX_BIT_CTRL_OUT4[210] = GND;
assign TX_BIT_CTRL_OUT4[211] = GND;
assign TX_BIT_CTRL_OUT4[212] = GND;
assign TX_BIT_CTRL_OUT4[213] = GND;
assign TX_BIT_CTRL_OUT4[214] = GND;
assign TX_BIT_CTRL_OUT4[215] = GND;
assign TX_BIT_CTRL_OUT4[216] = GND;
assign TX_BIT_CTRL_OUT4[217] = GND;
assign TX_BIT_CTRL_OUT4[218] = GND;
assign TX_BIT_CTRL_OUT4[219] = GND;
assign TX_BIT_CTRL_OUT4[220] = GND;
assign TX_BIT_CTRL_OUT4[221] = GND;
assign TX_BIT_CTRL_OUT4[222] = GND;
assign TX_BIT_CTRL_OUT4[223] = GND;
assign TX_BIT_CTRL_OUT4[224] = GND;
assign TX_BIT_CTRL_OUT4[225] = GND;
assign TX_BIT_CTRL_OUT4[226] = GND;
assign TX_BIT_CTRL_OUT4[227] = GND;
assign TX_BIT_CTRL_OUT4[228] = GND;
assign TX_BIT_CTRL_OUT4[229] = GND;
assign TX_BIT_CTRL_OUT4[230] = GND;
assign TX_BIT_CTRL_OUT4[231] = GND;
assign TX_BIT_CTRL_OUT4[232] = GND;
assign TX_BIT_CTRL_OUT4[233] = GND;
assign TX_BIT_CTRL_OUT4[234] = GND;
assign TX_BIT_CTRL_OUT4[235] = GND;
assign TX_BIT_CTRL_OUT4[236] = GND;
assign TX_BIT_CTRL_OUT4[237] = GND;
assign TX_BIT_CTRL_OUT4[238] = GND;
assign TX_BIT_CTRL_OUT4[239] = GND;
assign TX_BIT_CTRL_OUT4[240] = GND;
assign TX_BIT_CTRL_OUT4[241] = GND;
assign TX_BIT_CTRL_OUT4[242] = GND;
assign TX_BIT_CTRL_OUT4[243] = GND;
assign TX_BIT_CTRL_OUT4[244] = GND;
assign TX_BIT_CTRL_OUT4[245] = GND;
assign TX_BIT_CTRL_OUT4[246] = GND;
assign TX_BIT_CTRL_OUT4[247] = GND;
assign TX_BIT_CTRL_OUT4[248] = GND;
assign TX_BIT_CTRL_OUT4[249] = GND;
assign TX_BIT_CTRL_OUT4[250] = GND;
assign TX_BIT_CTRL_OUT4[251] = GND;
assign TX_BIT_CTRL_OUT4[252] = GND;
assign TX_BIT_CTRL_OUT4[253] = GND;
assign TX_BIT_CTRL_OUT4[254] = GND;
assign TX_BIT_CTRL_OUT4[255] = GND;
assign TX_BIT_CTRL_OUT4[256] = GND;
assign TX_BIT_CTRL_OUT4[257] = GND;
assign TX_BIT_CTRL_OUT4[258] = GND;
assign TX_BIT_CTRL_OUT4[259] = GND;
assign TX_BIT_CTRL_OUT4[260] = GND;
assign TX_BIT_CTRL_OUT4[261] = GND;
assign TX_BIT_CTRL_OUT4[262] = GND;
assign TX_BIT_CTRL_OUT4[263] = GND;
assign TX_BIT_CTRL_OUT4[264] = GND;
assign TX_BIT_CTRL_OUT4[265] = GND;
assign TX_BIT_CTRL_OUT4[266] = GND;
assign TX_BIT_CTRL_OUT4[267] = GND;
assign TX_BIT_CTRL_OUT4[268] = GND;
assign TX_BIT_CTRL_OUT4[269] = GND;
assign TX_BIT_CTRL_OUT4[270] = GND;
assign TX_BIT_CTRL_OUT4[271] = GND;
assign TX_BIT_CTRL_OUT4[272] = GND;
assign TX_BIT_CTRL_OUT4[273] = GND;
assign TX_BIT_CTRL_OUT4[274] = GND;
assign TX_BIT_CTRL_OUT4[275] = GND;
assign TX_BIT_CTRL_OUT4[276] = GND;
assign TX_BIT_CTRL_OUT4[277] = GND;
assign TX_BIT_CTRL_OUT4[278] = GND;
assign TX_BIT_CTRL_OUT4[279] = GND;
assign TX_BIT_CTRL_OUT4[280] = GND;
assign TX_BIT_CTRL_OUT4[281] = GND;
assign TX_BIT_CTRL_OUT4[282] = GND;
assign TX_BIT_CTRL_OUT4[283] = GND;
assign TX_BIT_CTRL_OUT4[284] = GND;
assign TX_BIT_CTRL_OUT4[285] = GND;
assign TX_BIT_CTRL_OUT4[286] = GND;
assign TX_BIT_CTRL_OUT4[287] = GND;
assign TX_BIT_CTRL_OUT4[288] = GND;
assign TX_BIT_CTRL_OUT4[289] = GND;
assign TX_BIT_CTRL_OUT4[290] = GND;
assign TX_BIT_CTRL_OUT4[291] = GND;
assign TX_BIT_CTRL_OUT4[292] = GND;
assign TX_BIT_CTRL_OUT4[293] = GND;
assign TX_BIT_CTRL_OUT4[294] = GND;
assign TX_BIT_CTRL_OUT4[295] = GND;
assign TX_BIT_CTRL_OUT4[296] = GND;
assign TX_BIT_CTRL_OUT4[297] = GND;
assign TX_BIT_CTRL_OUT4[298] = GND;
assign TX_BIT_CTRL_OUT4[299] = GND;
assign TX_BIT_CTRL_OUT4[300] = GND;
assign TX_BIT_CTRL_OUT4[301] = GND;
assign TX_BIT_CTRL_OUT4[302] = GND;
assign TX_BIT_CTRL_OUT4[303] = GND;
assign TX_BIT_CTRL_OUT4[304] = GND;
assign TX_BIT_CTRL_OUT4[305] = GND;
assign TX_BIT_CTRL_OUT4[306] = GND;
assign TX_BIT_CTRL_OUT4[307] = GND;
assign TX_BIT_CTRL_OUT4[308] = GND;
assign TX_BIT_CTRL_OUT4[309] = GND;
assign TX_BIT_CTRL_OUT4[310] = GND;
assign TX_BIT_CTRL_OUT4[311] = GND;
assign TX_BIT_CTRL_OUT4[312] = GND;
assign TX_BIT_CTRL_OUT4[313] = GND;
assign TX_BIT_CTRL_OUT4[314] = GND;
assign TX_BIT_CTRL_OUT4[315] = GND;
assign TX_BIT_CTRL_OUT4[316] = GND;
assign TX_BIT_CTRL_OUT4[317] = GND;
assign TX_BIT_CTRL_OUT4[318] = GND;
assign TX_BIT_CTRL_OUT4[319] = GND;
assign TX_BIT_CTRL_OUT5[0] = GND;
assign TX_BIT_CTRL_OUT5[1] = GND;
assign TX_BIT_CTRL_OUT5[2] = GND;
assign TX_BIT_CTRL_OUT5[3] = GND;
assign TX_BIT_CTRL_OUT5[4] = GND;
assign TX_BIT_CTRL_OUT5[5] = GND;
assign TX_BIT_CTRL_OUT5[6] = GND;
assign TX_BIT_CTRL_OUT5[7] = GND;
assign TX_BIT_CTRL_OUT5[8] = GND;
assign TX_BIT_CTRL_OUT5[9] = GND;
assign TX_BIT_CTRL_OUT5[10] = GND;
assign TX_BIT_CTRL_OUT5[11] = GND;
assign TX_BIT_CTRL_OUT5[12] = GND;
assign TX_BIT_CTRL_OUT5[13] = GND;
assign TX_BIT_CTRL_OUT5[14] = GND;
assign TX_BIT_CTRL_OUT5[15] = GND;
assign TX_BIT_CTRL_OUT5[16] = GND;
assign TX_BIT_CTRL_OUT5[17] = GND;
assign TX_BIT_CTRL_OUT5[18] = GND;
assign TX_BIT_CTRL_OUT5[19] = GND;
assign TX_BIT_CTRL_OUT5[20] = GND;
assign TX_BIT_CTRL_OUT5[21] = GND;
assign TX_BIT_CTRL_OUT5[22] = GND;
assign TX_BIT_CTRL_OUT5[23] = GND;
assign TX_BIT_CTRL_OUT5[24] = GND;
assign TX_BIT_CTRL_OUT5[25] = GND;
assign TX_BIT_CTRL_OUT5[26] = GND;
assign TX_BIT_CTRL_OUT5[27] = GND;
assign TX_BIT_CTRL_OUT5[28] = GND;
assign TX_BIT_CTRL_OUT5[29] = GND;
assign TX_BIT_CTRL_OUT5[30] = GND;
assign TX_BIT_CTRL_OUT5[31] = GND;
assign TX_BIT_CTRL_OUT5[32] = GND;
assign TX_BIT_CTRL_OUT5[33] = GND;
assign TX_BIT_CTRL_OUT5[34] = GND;
assign TX_BIT_CTRL_OUT5[35] = GND;
assign TX_BIT_CTRL_OUT5[36] = GND;
assign TX_BIT_CTRL_OUT5[37] = GND;
assign TX_BIT_CTRL_OUT5[38] = GND;
assign TX_BIT_CTRL_OUT5[39] = GND;
assign TX_BIT_CTRL_OUT5[40] = GND;
assign TX_BIT_CTRL_OUT5[41] = GND;
assign TX_BIT_CTRL_OUT5[42] = GND;
assign TX_BIT_CTRL_OUT5[43] = GND;
assign TX_BIT_CTRL_OUT5[44] = GND;
assign TX_BIT_CTRL_OUT5[45] = GND;
assign TX_BIT_CTRL_OUT5[46] = GND;
assign TX_BIT_CTRL_OUT5[47] = GND;
assign TX_BIT_CTRL_OUT5[48] = GND;
assign TX_BIT_CTRL_OUT5[49] = GND;
assign TX_BIT_CTRL_OUT5[50] = GND;
assign TX_BIT_CTRL_OUT5[51] = GND;
assign TX_BIT_CTRL_OUT5[52] = GND;
assign TX_BIT_CTRL_OUT5[53] = GND;
assign TX_BIT_CTRL_OUT5[54] = GND;
assign TX_BIT_CTRL_OUT5[55] = GND;
assign TX_BIT_CTRL_OUT5[56] = GND;
assign TX_BIT_CTRL_OUT5[57] = GND;
assign TX_BIT_CTRL_OUT5[58] = GND;
assign TX_BIT_CTRL_OUT5[59] = GND;
assign TX_BIT_CTRL_OUT5[60] = GND;
assign TX_BIT_CTRL_OUT5[61] = GND;
assign TX_BIT_CTRL_OUT5[62] = GND;
assign TX_BIT_CTRL_OUT5[63] = GND;
assign TX_BIT_CTRL_OUT5[64] = GND;
assign TX_BIT_CTRL_OUT5[65] = GND;
assign TX_BIT_CTRL_OUT5[66] = GND;
assign TX_BIT_CTRL_OUT5[67] = GND;
assign TX_BIT_CTRL_OUT5[68] = GND;
assign TX_BIT_CTRL_OUT5[69] = GND;
assign TX_BIT_CTRL_OUT5[70] = GND;
assign TX_BIT_CTRL_OUT5[71] = GND;
assign TX_BIT_CTRL_OUT5[72] = GND;
assign TX_BIT_CTRL_OUT5[73] = GND;
assign TX_BIT_CTRL_OUT5[74] = GND;
assign TX_BIT_CTRL_OUT5[75] = GND;
assign TX_BIT_CTRL_OUT5[76] = GND;
assign TX_BIT_CTRL_OUT5[77] = GND;
assign TX_BIT_CTRL_OUT5[78] = GND;
assign TX_BIT_CTRL_OUT5[79] = GND;
assign TX_BIT_CTRL_OUT5[80] = GND;
assign TX_BIT_CTRL_OUT5[81] = GND;
assign TX_BIT_CTRL_OUT5[82] = GND;
assign TX_BIT_CTRL_OUT5[83] = GND;
assign TX_BIT_CTRL_OUT5[84] = GND;
assign TX_BIT_CTRL_OUT5[85] = GND;
assign TX_BIT_CTRL_OUT5[86] = GND;
assign TX_BIT_CTRL_OUT5[87] = GND;
assign TX_BIT_CTRL_OUT5[88] = GND;
assign TX_BIT_CTRL_OUT5[89] = GND;
assign TX_BIT_CTRL_OUT5[90] = GND;
assign TX_BIT_CTRL_OUT5[91] = GND;
assign TX_BIT_CTRL_OUT5[92] = GND;
assign TX_BIT_CTRL_OUT5[93] = GND;
assign TX_BIT_CTRL_OUT5[94] = GND;
assign TX_BIT_CTRL_OUT5[95] = GND;
assign TX_BIT_CTRL_OUT5[96] = GND;
assign TX_BIT_CTRL_OUT5[97] = GND;
assign TX_BIT_CTRL_OUT5[98] = GND;
assign TX_BIT_CTRL_OUT5[99] = GND;
assign TX_BIT_CTRL_OUT5[100] = GND;
assign TX_BIT_CTRL_OUT5[101] = GND;
assign TX_BIT_CTRL_OUT5[102] = GND;
assign TX_BIT_CTRL_OUT5[103] = GND;
assign TX_BIT_CTRL_OUT5[104] = GND;
assign TX_BIT_CTRL_OUT5[105] = GND;
assign TX_BIT_CTRL_OUT5[106] = GND;
assign TX_BIT_CTRL_OUT5[107] = GND;
assign TX_BIT_CTRL_OUT5[108] = GND;
assign TX_BIT_CTRL_OUT5[109] = GND;
assign TX_BIT_CTRL_OUT5[110] = GND;
assign TX_BIT_CTRL_OUT5[111] = GND;
assign TX_BIT_CTRL_OUT5[112] = GND;
assign TX_BIT_CTRL_OUT5[113] = GND;
assign TX_BIT_CTRL_OUT5[114] = GND;
assign TX_BIT_CTRL_OUT5[115] = GND;
assign TX_BIT_CTRL_OUT5[116] = GND;
assign TX_BIT_CTRL_OUT5[117] = GND;
assign TX_BIT_CTRL_OUT5[118] = GND;
assign TX_BIT_CTRL_OUT5[119] = GND;
assign TX_BIT_CTRL_OUT5[160] = GND;
assign TX_BIT_CTRL_OUT5[161] = GND;
assign TX_BIT_CTRL_OUT5[162] = GND;
assign TX_BIT_CTRL_OUT5[163] = GND;
assign TX_BIT_CTRL_OUT5[164] = GND;
assign TX_BIT_CTRL_OUT5[165] = GND;
assign TX_BIT_CTRL_OUT5[166] = GND;
assign TX_BIT_CTRL_OUT5[167] = GND;
assign TX_BIT_CTRL_OUT5[168] = GND;
assign TX_BIT_CTRL_OUT5[169] = GND;
assign TX_BIT_CTRL_OUT5[170] = GND;
assign TX_BIT_CTRL_OUT5[171] = GND;
assign TX_BIT_CTRL_OUT5[172] = GND;
assign TX_BIT_CTRL_OUT5[173] = GND;
assign TX_BIT_CTRL_OUT5[174] = GND;
assign TX_BIT_CTRL_OUT5[175] = GND;
assign TX_BIT_CTRL_OUT5[176] = GND;
assign TX_BIT_CTRL_OUT5[177] = GND;
assign TX_BIT_CTRL_OUT5[178] = GND;
assign TX_BIT_CTRL_OUT5[179] = GND;
assign TX_BIT_CTRL_OUT5[180] = GND;
assign TX_BIT_CTRL_OUT5[181] = GND;
assign TX_BIT_CTRL_OUT5[182] = GND;
assign TX_BIT_CTRL_OUT5[183] = GND;
assign TX_BIT_CTRL_OUT5[184] = GND;
assign TX_BIT_CTRL_OUT5[185] = GND;
assign TX_BIT_CTRL_OUT5[186] = GND;
assign TX_BIT_CTRL_OUT5[187] = GND;
assign TX_BIT_CTRL_OUT5[188] = GND;
assign TX_BIT_CTRL_OUT5[189] = GND;
assign TX_BIT_CTRL_OUT5[190] = GND;
assign TX_BIT_CTRL_OUT5[191] = GND;
assign TX_BIT_CTRL_OUT5[192] = GND;
assign TX_BIT_CTRL_OUT5[193] = GND;
assign TX_BIT_CTRL_OUT5[194] = GND;
assign TX_BIT_CTRL_OUT5[195] = GND;
assign TX_BIT_CTRL_OUT5[196] = GND;
assign TX_BIT_CTRL_OUT5[197] = GND;
assign TX_BIT_CTRL_OUT5[198] = GND;
assign TX_BIT_CTRL_OUT5[199] = GND;
assign TX_BIT_CTRL_OUT5[200] = GND;
assign TX_BIT_CTRL_OUT5[201] = GND;
assign TX_BIT_CTRL_OUT5[202] = GND;
assign TX_BIT_CTRL_OUT5[203] = GND;
assign TX_BIT_CTRL_OUT5[204] = GND;
assign TX_BIT_CTRL_OUT5[205] = GND;
assign TX_BIT_CTRL_OUT5[206] = GND;
assign TX_BIT_CTRL_OUT5[207] = GND;
assign TX_BIT_CTRL_OUT5[208] = GND;
assign TX_BIT_CTRL_OUT5[209] = GND;
assign TX_BIT_CTRL_OUT5[210] = GND;
assign TX_BIT_CTRL_OUT5[211] = GND;
assign TX_BIT_CTRL_OUT5[212] = GND;
assign TX_BIT_CTRL_OUT5[213] = GND;
assign TX_BIT_CTRL_OUT5[214] = GND;
assign TX_BIT_CTRL_OUT5[215] = GND;
assign TX_BIT_CTRL_OUT5[216] = GND;
assign TX_BIT_CTRL_OUT5[217] = GND;
assign TX_BIT_CTRL_OUT5[218] = GND;
assign TX_BIT_CTRL_OUT5[219] = GND;
assign TX_BIT_CTRL_OUT5[220] = GND;
assign TX_BIT_CTRL_OUT5[221] = GND;
assign TX_BIT_CTRL_OUT5[222] = GND;
assign TX_BIT_CTRL_OUT5[223] = GND;
assign TX_BIT_CTRL_OUT5[224] = GND;
assign TX_BIT_CTRL_OUT5[225] = GND;
assign TX_BIT_CTRL_OUT5[226] = GND;
assign TX_BIT_CTRL_OUT5[227] = GND;
assign TX_BIT_CTRL_OUT5[228] = GND;
assign TX_BIT_CTRL_OUT5[229] = GND;
assign TX_BIT_CTRL_OUT5[230] = GND;
assign TX_BIT_CTRL_OUT5[231] = GND;
assign TX_BIT_CTRL_OUT5[232] = GND;
assign TX_BIT_CTRL_OUT5[233] = GND;
assign TX_BIT_CTRL_OUT5[234] = GND;
assign TX_BIT_CTRL_OUT5[235] = GND;
assign TX_BIT_CTRL_OUT5[236] = GND;
assign TX_BIT_CTRL_OUT5[237] = GND;
assign TX_BIT_CTRL_OUT5[238] = GND;
assign TX_BIT_CTRL_OUT5[239] = GND;
assign TX_BIT_CTRL_OUT5[240] = GND;
assign TX_BIT_CTRL_OUT5[241] = GND;
assign TX_BIT_CTRL_OUT5[242] = GND;
assign TX_BIT_CTRL_OUT5[243] = GND;
assign TX_BIT_CTRL_OUT5[244] = GND;
assign TX_BIT_CTRL_OUT5[245] = GND;
assign TX_BIT_CTRL_OUT5[246] = GND;
assign TX_BIT_CTRL_OUT5[247] = GND;
assign TX_BIT_CTRL_OUT5[248] = GND;
assign TX_BIT_CTRL_OUT5[249] = GND;
assign TX_BIT_CTRL_OUT5[250] = GND;
assign TX_BIT_CTRL_OUT5[251] = GND;
assign TX_BIT_CTRL_OUT5[252] = GND;
assign TX_BIT_CTRL_OUT5[253] = GND;
assign TX_BIT_CTRL_OUT5[254] = GND;
assign TX_BIT_CTRL_OUT5[255] = GND;
assign TX_BIT_CTRL_OUT5[256] = GND;
assign TX_BIT_CTRL_OUT5[257] = GND;
assign TX_BIT_CTRL_OUT5[258] = GND;
assign TX_BIT_CTRL_OUT5[259] = GND;
assign TX_BIT_CTRL_OUT5[260] = GND;
assign TX_BIT_CTRL_OUT5[261] = GND;
assign TX_BIT_CTRL_OUT5[262] = GND;
assign TX_BIT_CTRL_OUT5[263] = GND;
assign TX_BIT_CTRL_OUT5[264] = GND;
assign TX_BIT_CTRL_OUT5[265] = GND;
assign TX_BIT_CTRL_OUT5[266] = GND;
assign TX_BIT_CTRL_OUT5[267] = GND;
assign TX_BIT_CTRL_OUT5[268] = GND;
assign TX_BIT_CTRL_OUT5[269] = GND;
assign TX_BIT_CTRL_OUT5[270] = GND;
assign TX_BIT_CTRL_OUT5[271] = GND;
assign TX_BIT_CTRL_OUT5[272] = GND;
assign TX_BIT_CTRL_OUT5[273] = GND;
assign TX_BIT_CTRL_OUT5[274] = GND;
assign TX_BIT_CTRL_OUT5[275] = GND;
assign TX_BIT_CTRL_OUT5[276] = GND;
assign TX_BIT_CTRL_OUT5[277] = GND;
assign TX_BIT_CTRL_OUT5[278] = GND;
assign TX_BIT_CTRL_OUT5[279] = GND;
assign TX_BIT_CTRL_OUT5[280] = GND;
assign TX_BIT_CTRL_OUT5[281] = GND;
assign TX_BIT_CTRL_OUT5[282] = GND;
assign TX_BIT_CTRL_OUT5[283] = GND;
assign TX_BIT_CTRL_OUT5[284] = GND;
assign TX_BIT_CTRL_OUT5[285] = GND;
assign TX_BIT_CTRL_OUT5[286] = GND;
assign TX_BIT_CTRL_OUT5[287] = GND;
assign TX_BIT_CTRL_OUT5[288] = GND;
assign TX_BIT_CTRL_OUT5[289] = GND;
assign TX_BIT_CTRL_OUT5[290] = GND;
assign TX_BIT_CTRL_OUT5[291] = GND;
assign TX_BIT_CTRL_OUT5[292] = GND;
assign TX_BIT_CTRL_OUT5[293] = GND;
assign TX_BIT_CTRL_OUT5[294] = GND;
assign TX_BIT_CTRL_OUT5[295] = GND;
assign TX_BIT_CTRL_OUT5[296] = GND;
assign TX_BIT_CTRL_OUT5[297] = GND;
assign TX_BIT_CTRL_OUT5[298] = GND;
assign TX_BIT_CTRL_OUT5[299] = GND;
assign TX_BIT_CTRL_OUT5[300] = GND;
assign TX_BIT_CTRL_OUT5[301] = GND;
assign TX_BIT_CTRL_OUT5[302] = GND;
assign TX_BIT_CTRL_OUT5[303] = GND;
assign TX_BIT_CTRL_OUT5[304] = GND;
assign TX_BIT_CTRL_OUT5[305] = GND;
assign TX_BIT_CTRL_OUT5[306] = GND;
assign TX_BIT_CTRL_OUT5[307] = GND;
assign TX_BIT_CTRL_OUT5[308] = GND;
assign TX_BIT_CTRL_OUT5[309] = GND;
assign TX_BIT_CTRL_OUT5[310] = GND;
assign TX_BIT_CTRL_OUT5[311] = GND;
assign TX_BIT_CTRL_OUT5[312] = GND;
assign TX_BIT_CTRL_OUT5[313] = GND;
assign TX_BIT_CTRL_OUT5[314] = GND;
assign TX_BIT_CTRL_OUT5[315] = GND;
assign TX_BIT_CTRL_OUT5[316] = GND;
assign TX_BIT_CTRL_OUT5[317] = GND;
assign TX_BIT_CTRL_OUT5[318] = GND;
assign TX_BIT_CTRL_OUT5[319] = GND;
assign TX_BIT_CTRL_OUT6[0] = GND;
assign TX_BIT_CTRL_OUT6[1] = GND;
assign TX_BIT_CTRL_OUT6[2] = GND;
assign TX_BIT_CTRL_OUT6[3] = GND;
assign TX_BIT_CTRL_OUT6[4] = GND;
assign TX_BIT_CTRL_OUT6[5] = GND;
assign TX_BIT_CTRL_OUT6[6] = GND;
assign TX_BIT_CTRL_OUT6[7] = GND;
assign TX_BIT_CTRL_OUT6[8] = GND;
assign TX_BIT_CTRL_OUT6[9] = GND;
assign TX_BIT_CTRL_OUT6[10] = GND;
assign TX_BIT_CTRL_OUT6[11] = GND;
assign TX_BIT_CTRL_OUT6[12] = GND;
assign TX_BIT_CTRL_OUT6[13] = GND;
assign TX_BIT_CTRL_OUT6[14] = GND;
assign TX_BIT_CTRL_OUT6[15] = GND;
assign TX_BIT_CTRL_OUT6[16] = GND;
assign TX_BIT_CTRL_OUT6[17] = GND;
assign TX_BIT_CTRL_OUT6[18] = GND;
assign TX_BIT_CTRL_OUT6[19] = GND;
assign TX_BIT_CTRL_OUT6[20] = GND;
assign TX_BIT_CTRL_OUT6[21] = GND;
assign TX_BIT_CTRL_OUT6[22] = GND;
assign TX_BIT_CTRL_OUT6[23] = GND;
assign TX_BIT_CTRL_OUT6[24] = GND;
assign TX_BIT_CTRL_OUT6[25] = GND;
assign TX_BIT_CTRL_OUT6[26] = GND;
assign TX_BIT_CTRL_OUT6[27] = GND;
assign TX_BIT_CTRL_OUT6[28] = GND;
assign TX_BIT_CTRL_OUT6[29] = GND;
assign TX_BIT_CTRL_OUT6[30] = GND;
assign TX_BIT_CTRL_OUT6[31] = GND;
assign TX_BIT_CTRL_OUT6[32] = GND;
assign TX_BIT_CTRL_OUT6[33] = GND;
assign TX_BIT_CTRL_OUT6[34] = GND;
assign TX_BIT_CTRL_OUT6[35] = GND;
assign TX_BIT_CTRL_OUT6[36] = GND;
assign TX_BIT_CTRL_OUT6[37] = GND;
assign TX_BIT_CTRL_OUT6[38] = GND;
assign TX_BIT_CTRL_OUT6[39] = GND;
assign TX_BIT_CTRL_OUT6[40] = GND;
assign TX_BIT_CTRL_OUT6[41] = GND;
assign TX_BIT_CTRL_OUT6[42] = GND;
assign TX_BIT_CTRL_OUT6[43] = GND;
assign TX_BIT_CTRL_OUT6[44] = GND;
assign TX_BIT_CTRL_OUT6[45] = GND;
assign TX_BIT_CTRL_OUT6[46] = GND;
assign TX_BIT_CTRL_OUT6[47] = GND;
assign TX_BIT_CTRL_OUT6[48] = GND;
assign TX_BIT_CTRL_OUT6[49] = GND;
assign TX_BIT_CTRL_OUT6[50] = GND;
assign TX_BIT_CTRL_OUT6[51] = GND;
assign TX_BIT_CTRL_OUT6[52] = GND;
assign TX_BIT_CTRL_OUT6[53] = GND;
assign TX_BIT_CTRL_OUT6[54] = GND;
assign TX_BIT_CTRL_OUT6[55] = GND;
assign TX_BIT_CTRL_OUT6[56] = GND;
assign TX_BIT_CTRL_OUT6[57] = GND;
assign TX_BIT_CTRL_OUT6[58] = GND;
assign TX_BIT_CTRL_OUT6[59] = GND;
assign TX_BIT_CTRL_OUT6[60] = GND;
assign TX_BIT_CTRL_OUT6[61] = GND;
assign TX_BIT_CTRL_OUT6[62] = GND;
assign TX_BIT_CTRL_OUT6[63] = GND;
assign TX_BIT_CTRL_OUT6[64] = GND;
assign TX_BIT_CTRL_OUT6[65] = GND;
assign TX_BIT_CTRL_OUT6[66] = GND;
assign TX_BIT_CTRL_OUT6[67] = GND;
assign TX_BIT_CTRL_OUT6[68] = GND;
assign TX_BIT_CTRL_OUT6[69] = GND;
assign TX_BIT_CTRL_OUT6[70] = GND;
assign TX_BIT_CTRL_OUT6[71] = GND;
assign TX_BIT_CTRL_OUT6[72] = GND;
assign TX_BIT_CTRL_OUT6[73] = GND;
assign TX_BIT_CTRL_OUT6[74] = GND;
assign TX_BIT_CTRL_OUT6[75] = GND;
assign TX_BIT_CTRL_OUT6[76] = GND;
assign TX_BIT_CTRL_OUT6[77] = GND;
assign TX_BIT_CTRL_OUT6[78] = GND;
assign TX_BIT_CTRL_OUT6[79] = GND;
assign TX_BIT_CTRL_OUT6[80] = GND;
assign TX_BIT_CTRL_OUT6[81] = GND;
assign TX_BIT_CTRL_OUT6[82] = GND;
assign TX_BIT_CTRL_OUT6[83] = GND;
assign TX_BIT_CTRL_OUT6[84] = GND;
assign TX_BIT_CTRL_OUT6[85] = GND;
assign TX_BIT_CTRL_OUT6[86] = GND;
assign TX_BIT_CTRL_OUT6[87] = GND;
assign TX_BIT_CTRL_OUT6[88] = GND;
assign TX_BIT_CTRL_OUT6[89] = GND;
assign TX_BIT_CTRL_OUT6[90] = GND;
assign TX_BIT_CTRL_OUT6[91] = GND;
assign TX_BIT_CTRL_OUT6[92] = GND;
assign TX_BIT_CTRL_OUT6[93] = GND;
assign TX_BIT_CTRL_OUT6[94] = GND;
assign TX_BIT_CTRL_OUT6[95] = GND;
assign TX_BIT_CTRL_OUT6[96] = GND;
assign TX_BIT_CTRL_OUT6[97] = GND;
assign TX_BIT_CTRL_OUT6[98] = GND;
assign TX_BIT_CTRL_OUT6[99] = GND;
assign TX_BIT_CTRL_OUT6[100] = GND;
assign TX_BIT_CTRL_OUT6[101] = GND;
assign TX_BIT_CTRL_OUT6[102] = GND;
assign TX_BIT_CTRL_OUT6[103] = GND;
assign TX_BIT_CTRL_OUT6[104] = GND;
assign TX_BIT_CTRL_OUT6[105] = GND;
assign TX_BIT_CTRL_OUT6[106] = GND;
assign TX_BIT_CTRL_OUT6[107] = GND;
assign TX_BIT_CTRL_OUT6[108] = GND;
assign TX_BIT_CTRL_OUT6[109] = GND;
assign TX_BIT_CTRL_OUT6[110] = GND;
assign TX_BIT_CTRL_OUT6[111] = GND;
assign TX_BIT_CTRL_OUT6[112] = GND;
assign TX_BIT_CTRL_OUT6[113] = GND;
assign TX_BIT_CTRL_OUT6[114] = GND;
assign TX_BIT_CTRL_OUT6[115] = GND;
assign TX_BIT_CTRL_OUT6[116] = GND;
assign TX_BIT_CTRL_OUT6[117] = GND;
assign TX_BIT_CTRL_OUT6[118] = GND;
assign TX_BIT_CTRL_OUT6[119] = GND;
assign TX_BIT_CTRL_OUT6[120] = GND;
assign TX_BIT_CTRL_OUT6[121] = GND;
assign TX_BIT_CTRL_OUT6[122] = GND;
assign TX_BIT_CTRL_OUT6[123] = GND;
assign TX_BIT_CTRL_OUT6[124] = GND;
assign TX_BIT_CTRL_OUT6[125] = GND;
assign TX_BIT_CTRL_OUT6[126] = GND;
assign TX_BIT_CTRL_OUT6[127] = GND;
assign TX_BIT_CTRL_OUT6[128] = GND;
assign TX_BIT_CTRL_OUT6[129] = GND;
assign TX_BIT_CTRL_OUT6[130] = GND;
assign TX_BIT_CTRL_OUT6[131] = GND;
assign TX_BIT_CTRL_OUT6[132] = GND;
assign TX_BIT_CTRL_OUT6[133] = GND;
assign TX_BIT_CTRL_OUT6[134] = GND;
assign TX_BIT_CTRL_OUT6[135] = GND;
assign TX_BIT_CTRL_OUT6[136] = GND;
assign TX_BIT_CTRL_OUT6[137] = GND;
assign TX_BIT_CTRL_OUT6[138] = GND;
assign TX_BIT_CTRL_OUT6[139] = GND;
assign TX_BIT_CTRL_OUT6[140] = GND;
assign TX_BIT_CTRL_OUT6[141] = GND;
assign TX_BIT_CTRL_OUT6[142] = GND;
assign TX_BIT_CTRL_OUT6[143] = GND;
assign TX_BIT_CTRL_OUT6[144] = GND;
assign TX_BIT_CTRL_OUT6[145] = GND;
assign TX_BIT_CTRL_OUT6[146] = GND;
assign TX_BIT_CTRL_OUT6[147] = GND;
assign TX_BIT_CTRL_OUT6[148] = GND;
assign TX_BIT_CTRL_OUT6[149] = GND;
assign TX_BIT_CTRL_OUT6[150] = GND;
assign TX_BIT_CTRL_OUT6[151] = GND;
assign TX_BIT_CTRL_OUT6[152] = GND;
assign TX_BIT_CTRL_OUT6[153] = GND;
assign TX_BIT_CTRL_OUT6[154] = GND;
assign TX_BIT_CTRL_OUT6[155] = GND;
assign TX_BIT_CTRL_OUT6[156] = GND;
assign TX_BIT_CTRL_OUT6[157] = GND;
assign TX_BIT_CTRL_OUT6[158] = GND;
assign TX_BIT_CTRL_OUT6[159] = GND;
assign TX_BIT_CTRL_OUT6[160] = GND;
assign TX_BIT_CTRL_OUT6[161] = GND;
assign TX_BIT_CTRL_OUT6[162] = GND;
assign TX_BIT_CTRL_OUT6[163] = GND;
assign TX_BIT_CTRL_OUT6[164] = GND;
assign TX_BIT_CTRL_OUT6[165] = GND;
assign TX_BIT_CTRL_OUT6[166] = GND;
assign TX_BIT_CTRL_OUT6[167] = GND;
assign TX_BIT_CTRL_OUT6[168] = GND;
assign TX_BIT_CTRL_OUT6[169] = GND;
assign TX_BIT_CTRL_OUT6[170] = GND;
assign TX_BIT_CTRL_OUT6[171] = GND;
assign TX_BIT_CTRL_OUT6[172] = GND;
assign TX_BIT_CTRL_OUT6[173] = GND;
assign TX_BIT_CTRL_OUT6[174] = GND;
assign TX_BIT_CTRL_OUT6[175] = GND;
assign TX_BIT_CTRL_OUT6[176] = GND;
assign TX_BIT_CTRL_OUT6[177] = GND;
assign TX_BIT_CTRL_OUT6[178] = GND;
assign TX_BIT_CTRL_OUT6[179] = GND;
assign TX_BIT_CTRL_OUT6[180] = GND;
assign TX_BIT_CTRL_OUT6[181] = GND;
assign TX_BIT_CTRL_OUT6[182] = GND;
assign TX_BIT_CTRL_OUT6[183] = GND;
assign TX_BIT_CTRL_OUT6[184] = GND;
assign TX_BIT_CTRL_OUT6[185] = GND;
assign TX_BIT_CTRL_OUT6[186] = GND;
assign TX_BIT_CTRL_OUT6[187] = GND;
assign TX_BIT_CTRL_OUT6[188] = GND;
assign TX_BIT_CTRL_OUT6[189] = GND;
assign TX_BIT_CTRL_OUT6[190] = GND;
assign TX_BIT_CTRL_OUT6[191] = GND;
assign TX_BIT_CTRL_OUT6[192] = GND;
assign TX_BIT_CTRL_OUT6[193] = GND;
assign TX_BIT_CTRL_OUT6[194] = GND;
assign TX_BIT_CTRL_OUT6[195] = GND;
assign TX_BIT_CTRL_OUT6[196] = GND;
assign TX_BIT_CTRL_OUT6[197] = GND;
assign TX_BIT_CTRL_OUT6[198] = GND;
assign TX_BIT_CTRL_OUT6[199] = GND;
assign TX_BIT_CTRL_OUT6[200] = GND;
assign TX_BIT_CTRL_OUT6[201] = GND;
assign TX_BIT_CTRL_OUT6[202] = GND;
assign TX_BIT_CTRL_OUT6[203] = GND;
assign TX_BIT_CTRL_OUT6[204] = GND;
assign TX_BIT_CTRL_OUT6[205] = GND;
assign TX_BIT_CTRL_OUT6[206] = GND;
assign TX_BIT_CTRL_OUT6[207] = GND;
assign TX_BIT_CTRL_OUT6[208] = GND;
assign TX_BIT_CTRL_OUT6[209] = GND;
assign TX_BIT_CTRL_OUT6[210] = GND;
assign TX_BIT_CTRL_OUT6[211] = GND;
assign TX_BIT_CTRL_OUT6[212] = GND;
assign TX_BIT_CTRL_OUT6[213] = GND;
assign TX_BIT_CTRL_OUT6[214] = GND;
assign TX_BIT_CTRL_OUT6[215] = GND;
assign TX_BIT_CTRL_OUT6[216] = GND;
assign TX_BIT_CTRL_OUT6[217] = GND;
assign TX_BIT_CTRL_OUT6[218] = GND;
assign TX_BIT_CTRL_OUT6[219] = GND;
assign TX_BIT_CTRL_OUT6[220] = GND;
assign TX_BIT_CTRL_OUT6[221] = GND;
assign TX_BIT_CTRL_OUT6[222] = GND;
assign TX_BIT_CTRL_OUT6[223] = GND;
assign TX_BIT_CTRL_OUT6[224] = GND;
assign TX_BIT_CTRL_OUT6[225] = GND;
assign TX_BIT_CTRL_OUT6[226] = GND;
assign TX_BIT_CTRL_OUT6[227] = GND;
assign TX_BIT_CTRL_OUT6[228] = GND;
assign TX_BIT_CTRL_OUT6[229] = GND;
assign TX_BIT_CTRL_OUT6[230] = GND;
assign TX_BIT_CTRL_OUT6[231] = GND;
assign TX_BIT_CTRL_OUT6[232] = GND;
assign TX_BIT_CTRL_OUT6[233] = GND;
assign TX_BIT_CTRL_OUT6[234] = GND;
assign TX_BIT_CTRL_OUT6[235] = GND;
assign TX_BIT_CTRL_OUT6[236] = GND;
assign TX_BIT_CTRL_OUT6[237] = GND;
assign TX_BIT_CTRL_OUT6[238] = GND;
assign TX_BIT_CTRL_OUT6[239] = GND;
assign TX_BIT_CTRL_OUT6[240] = GND;
assign TX_BIT_CTRL_OUT6[241] = GND;
assign TX_BIT_CTRL_OUT6[242] = GND;
assign TX_BIT_CTRL_OUT6[243] = GND;
assign TX_BIT_CTRL_OUT6[244] = GND;
assign TX_BIT_CTRL_OUT6[245] = GND;
assign TX_BIT_CTRL_OUT6[246] = GND;
assign TX_BIT_CTRL_OUT6[247] = GND;
assign TX_BIT_CTRL_OUT6[248] = GND;
assign TX_BIT_CTRL_OUT6[249] = GND;
assign TX_BIT_CTRL_OUT6[250] = GND;
assign TX_BIT_CTRL_OUT6[251] = GND;
assign TX_BIT_CTRL_OUT6[252] = GND;
assign TX_BIT_CTRL_OUT6[253] = GND;
assign TX_BIT_CTRL_OUT6[254] = GND;
assign TX_BIT_CTRL_OUT6[255] = GND;
assign TX_BIT_CTRL_OUT6[256] = GND;
assign TX_BIT_CTRL_OUT6[257] = GND;
assign TX_BIT_CTRL_OUT6[258] = GND;
assign TX_BIT_CTRL_OUT6[259] = GND;
assign TX_BIT_CTRL_OUT6[260] = GND;
assign TX_BIT_CTRL_OUT6[261] = GND;
assign TX_BIT_CTRL_OUT6[262] = GND;
assign TX_BIT_CTRL_OUT6[263] = GND;
assign TX_BIT_CTRL_OUT6[264] = GND;
assign TX_BIT_CTRL_OUT6[265] = GND;
assign TX_BIT_CTRL_OUT6[266] = GND;
assign TX_BIT_CTRL_OUT6[267] = GND;
assign TX_BIT_CTRL_OUT6[268] = GND;
assign TX_BIT_CTRL_OUT6[269] = GND;
assign TX_BIT_CTRL_OUT6[270] = GND;
assign TX_BIT_CTRL_OUT6[271] = GND;
assign TX_BIT_CTRL_OUT6[272] = GND;
assign TX_BIT_CTRL_OUT6[273] = GND;
assign TX_BIT_CTRL_OUT6[274] = GND;
assign TX_BIT_CTRL_OUT6[275] = GND;
assign TX_BIT_CTRL_OUT6[276] = GND;
assign TX_BIT_CTRL_OUT6[277] = GND;
assign TX_BIT_CTRL_OUT6[278] = GND;
assign TX_BIT_CTRL_OUT6[279] = GND;
assign TX_BIT_CTRL_OUT6[280] = GND;
assign TX_BIT_CTRL_OUT6[281] = GND;
assign TX_BIT_CTRL_OUT6[282] = GND;
assign TX_BIT_CTRL_OUT6[283] = GND;
assign TX_BIT_CTRL_OUT6[284] = GND;
assign TX_BIT_CTRL_OUT6[285] = GND;
assign TX_BIT_CTRL_OUT6[286] = GND;
assign TX_BIT_CTRL_OUT6[287] = GND;
assign TX_BIT_CTRL_OUT6[288] = GND;
assign TX_BIT_CTRL_OUT6[289] = GND;
assign TX_BIT_CTRL_OUT6[290] = GND;
assign TX_BIT_CTRL_OUT6[291] = GND;
assign TX_BIT_CTRL_OUT6[292] = GND;
assign TX_BIT_CTRL_OUT6[293] = GND;
assign TX_BIT_CTRL_OUT6[294] = GND;
assign TX_BIT_CTRL_OUT6[295] = GND;
assign TX_BIT_CTRL_OUT6[296] = GND;
assign TX_BIT_CTRL_OUT6[297] = GND;
assign TX_BIT_CTRL_OUT6[298] = GND;
assign TX_BIT_CTRL_OUT6[299] = GND;
assign TX_BIT_CTRL_OUT6[300] = GND;
assign TX_BIT_CTRL_OUT6[301] = GND;
assign TX_BIT_CTRL_OUT6[302] = GND;
assign TX_BIT_CTRL_OUT6[303] = GND;
assign TX_BIT_CTRL_OUT6[304] = GND;
assign TX_BIT_CTRL_OUT6[305] = GND;
assign TX_BIT_CTRL_OUT6[306] = GND;
assign TX_BIT_CTRL_OUT6[307] = GND;
assign TX_BIT_CTRL_OUT6[308] = GND;
assign TX_BIT_CTRL_OUT6[309] = GND;
assign TX_BIT_CTRL_OUT6[310] = GND;
assign TX_BIT_CTRL_OUT6[311] = GND;
assign TX_BIT_CTRL_OUT6[312] = GND;
assign TX_BIT_CTRL_OUT6[313] = GND;
assign TX_BIT_CTRL_OUT6[314] = GND;
assign TX_BIT_CTRL_OUT6[315] = GND;
assign TX_BIT_CTRL_OUT6[316] = GND;
assign TX_BIT_CTRL_OUT6[317] = GND;
assign TX_BIT_CTRL_OUT6[318] = GND;
assign TX_BIT_CTRL_OUT6[319] = GND;
assign DLY_RDY[0] = VCC;
assign DLY_RDY[1] = GND;
assign DLY_RDY[2] = VCC;
assign DLY_RDY[3] = GND;
assign DLY_RDY[4] = VCC;
assign DLY_RDY[5] = VCC;
assign DLY_RDY[6] = VCC;
assign DLY_RDY[7] = VCC;
assign VTC_RDY[0] = VCC;
assign VTC_RDY[1] = GND;
assign VTC_RDY[2] = VCC;
assign VTC_RDY[3] = GND;
assign VTC_RDY[4] = VCC;
assign VTC_RDY[5] = VCC;
assign VTC_RDY[6] = VCC;
assign VTC_RDY[7] = VCC;
endmodule /* hstdm_ultrascale_bitslice_control_8s_40s_DIV2_10s_10s_0s_0s_0s_0s_ULTRASCALE_PLUS_Z1_0_FB1_uA */

(* haps_ip_type="hstdm" *)module hstdm_ultrascale_bitslice_control_8s_40s_DIV2_10s_10s_0s_0s_0s_0s_ULTRASCALE_PLUS_Z1_1_FB1_uA (
  RX_BIT_CTRL_OUT0,
  RX_BIT_CTRL_OUT1,
  RX_BIT_CTRL_OUT2,
  RX_BIT_CTRL_OUT3,
  RX_BIT_CTRL_OUT4,
  RX_BIT_CTRL_OUT5,
  RX_BIT_CTRL_OUT6,
  TX_BIT_CTRL_OUT0,
  TX_BIT_CTRL_OUT1,
  TX_BIT_CTRL_OUT2,
  TX_BIT_CTRL_OUT3,
  TX_BIT_CTRL_OUT4,
  TX_BIT_CTRL_OUT5,
  TX_BIT_CTRL_OUT6,
  RX_BIT_CTRL_IN0,
  RX_BIT_CTRL_IN1,
  RX_BIT_CTRL_IN2,
  RX_BIT_CTRL_IN3,
  RX_BIT_CTRL_IN4,
  RX_BIT_CTRL_IN5,
  RX_BIT_CTRL_IN6,
  TX_BIT_CTRL_IN0,
  TX_BIT_CTRL_IN1,
  TX_BIT_CTRL_IN2,
  TX_BIT_CTRL_IN3,
  TX_BIT_CTRL_IN4,
  TX_BIT_CTRL_IN5,
  TX_BIT_CTRL_IN6,
  DLY_RDY,
  VTC_RDY,
  PLL_CLK,
  RST,
  EN_VTC,
  RIU_ADDR,
  RIU_CLK,
  RIU_NIBBLE_SEL_LOWER,
  RIU_NIBBLE_SEL_UPPER,
  RIU_WR_DATA,
  RIU_WR_EN
)
;
output [319:0] RX_BIT_CTRL_OUT0 ;
output [319:0] RX_BIT_CTRL_OUT1 ;
output [319:0] RX_BIT_CTRL_OUT2 ;
output [319:0] RX_BIT_CTRL_OUT3 ;
output [319:0] RX_BIT_CTRL_OUT4 ;
output [319:0] RX_BIT_CTRL_OUT5 ;
output [319:0] RX_BIT_CTRL_OUT6 ;
output [319:0] TX_BIT_CTRL_OUT0 ;
output [319:0] TX_BIT_CTRL_OUT1 ;
output [319:0] TX_BIT_CTRL_OUT2 ;
output [319:0] TX_BIT_CTRL_OUT3 ;
output [319:0] TX_BIT_CTRL_OUT4 ;
output [319:0] TX_BIT_CTRL_OUT5 ;
output [319:0] TX_BIT_CTRL_OUT6 ;
input [319:0] RX_BIT_CTRL_IN0 ;
input [319:0] RX_BIT_CTRL_IN1 ;
input [319:0] RX_BIT_CTRL_IN2 ;
input [319:0] RX_BIT_CTRL_IN3 ;
input [319:0] RX_BIT_CTRL_IN4 ;
input [319:0] RX_BIT_CTRL_IN5 ;
input [319:0] RX_BIT_CTRL_IN6 ;
input [319:0] TX_BIT_CTRL_IN0 ;
input [319:0] TX_BIT_CTRL_IN1 ;
input [319:0] TX_BIT_CTRL_IN2 ;
input [319:0] TX_BIT_CTRL_IN3 ;
input [319:0] TX_BIT_CTRL_IN4 ;
input [319:0] TX_BIT_CTRL_IN5 ;
input [319:0] TX_BIT_CTRL_IN6 ;
output [7:0] DLY_RDY ;
output [7:0] VTC_RDY ;
input PLL_CLK ;
input RST ;
input EN_VTC ;
input [5:0] RIU_ADDR ;
input RIU_CLK ;
input RIU_NIBBLE_SEL_LOWER ;
input RIU_NIBBLE_SEL_UPPER ;
input [15:0] RIU_WR_DATA ;
input RIU_WR_EN ;
wire PLL_CLK ;
wire RST ;
wire EN_VTC ;
wire RIU_CLK ;
wire RIU_NIBBLE_SEL_LOWER ;
wire RIU_NIBBLE_SEL_UPPER ;
wire RIU_WR_EN ;
wire [79:40] RX_BIT_CTRL_OUT0_1;
wire [159:40] RX_BIT_CTRL_OUT1_1;
wire [159:120] RX_BIT_CTRL_OUT2_1;
wire [159:120] RX_BIT_CTRL_OUT3_1;
wire [79:40] RX_BIT_CTRL_OUT4_1;
wire [79:40] RX_BIT_CTRL_OUT5_1;
wire [159:40] RX_BIT_CTRL_OUT6_1;
wire [79:40] TX_BIT_CTRL_OUT0_1;
wire [159:40] TX_BIT_CTRL_OUT1_1;
wire [159:120] TX_BIT_CTRL_OUT2_1;
wire [159:120] TX_BIT_CTRL_OUT3_1;
wire [79:40] TX_BIT_CTRL_OUT4_1;
wire [79:40] TX_BIT_CTRL_OUT5_1;
wire [159:40] TX_BIT_CTRL_OUT6_1;
wire [3:1] DLY_RDY_1;
wire [3:1] VTC_RDY_1;
wire [6:0] \NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_2 ;
wire [15:0] \NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_3 ;
wire [39:0] \NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_7 ;
wire [6:0] \NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_1 ;
wire [15:0] \NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_2 ;
wire [39:0] \NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_7 ;
wire \NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_1  ;
wire \NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control  ;
wire \NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_5  ;
wire \NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_4  ;
wire \NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_6  ;
wire \NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control  ;
wire \NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_5  ;
wire \NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_4  ;
wire \NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_3  ;
wire \NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_6  ;
wire GND ;
wire VCC ;
  GND GND_cZ (
	.G(GND)
);
  VCC VCC_cZ (
	.P(VCC)
);
// @225:8066
(* haps_ip_type="hstdm_native_bitslice_ctrl" *)  BITSLICE_CONTROL \NIBBLE[3].BITSLICE_CTRL.bitslice_control  (
	.CLK_TO_EXT_NORTH(\NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_1 ),
	.CLK_TO_EXT_SOUTH(\NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control ),
	.DLY_RDY(DLY_RDY_1[3]),
	.DYN_DCI(\NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_2 [6:0]),
	.NCLK_NIBBLE_OUT(\NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_5 ),
	.PCLK_NIBBLE_OUT(\NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_4 ),
	.RIU_RD_DATA(\NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_3 [15:0]),
	.RIU_VALID(\NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_6 ),
	.RX_BIT_CTRL_OUT0(RX_BIT_CTRL_OUT0[159:120]),
	.RX_BIT_CTRL_OUT1(RX_BIT_CTRL_OUT1_1[159:120]),
	.RX_BIT_CTRL_OUT2(RX_BIT_CTRL_OUT2_1[159:120]),
	.RX_BIT_CTRL_OUT3(RX_BIT_CTRL_OUT3_1[159:120]),
	.RX_BIT_CTRL_OUT4(RX_BIT_CTRL_OUT4[159:120]),
	.RX_BIT_CTRL_OUT5(RX_BIT_CTRL_OUT5[159:120]),
	.RX_BIT_CTRL_OUT6(RX_BIT_CTRL_OUT6_1[159:120]),
	.TX_BIT_CTRL_OUT0(TX_BIT_CTRL_OUT0[159:120]),
	.TX_BIT_CTRL_OUT1(TX_BIT_CTRL_OUT1_1[159:120]),
	.TX_BIT_CTRL_OUT2(TX_BIT_CTRL_OUT2_1[159:120]),
	.TX_BIT_CTRL_OUT3(TX_BIT_CTRL_OUT3_1[159:120]),
	.TX_BIT_CTRL_OUT4(TX_BIT_CTRL_OUT4[159:120]),
	.TX_BIT_CTRL_OUT5(TX_BIT_CTRL_OUT5[159:120]),
	.TX_BIT_CTRL_OUT6(TX_BIT_CTRL_OUT6_1[159:120]),
	.TX_BIT_CTRL_OUT_TRI(\NIBBLE[3].BITSLICE_CTRL.un1_bitslice_control_7 [39:0]),
	.VTC_RDY(VTC_RDY_1[3]),
	.CLK_FROM_EXT(VCC),
	.EN_VTC(GND),
	.NCLK_NIBBLE_IN(GND),
	.PCLK_NIBBLE_IN(GND),
	.PHY_RDEN({GND, GND, GND, GND}),
	.PLL_CLK(PLL_CLK),
	.REFCLK(GND),
	.RIU_ADDR({GND, GND, GND, GND, GND, GND}),
	.RIU_CLK(RIU_CLK),
	.RIU_NIBBLE_SEL(GND),
	.RIU_WR_DATA({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RIU_WR_EN(GND),
	.RST(RST),
	.RX_BIT_CTRL_IN0(RX_BIT_CTRL_IN0[159:120]),
	.RX_BIT_CTRL_IN1({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN2({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN3({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN4(RX_BIT_CTRL_IN4[159:120]),
	.RX_BIT_CTRL_IN5(RX_BIT_CTRL_IN5[159:120]),
	.RX_BIT_CTRL_IN6({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TBYTE_IN({GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN0(TX_BIT_CTRL_IN0[159:120]),
	.TX_BIT_CTRL_IN1({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN2({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN3({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN4(TX_BIT_CTRL_IN4[159:120]),
	.TX_BIT_CTRL_IN5(TX_BIT_CTRL_IN5[159:120]),
	.TX_BIT_CTRL_IN6({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN_TRI({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND})
);
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .CTRL_CLK="EXTERNAL";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .DIV_MODE="DIV2";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .EN_CLK_TO_EXT_NORTH="DISABLE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .EN_CLK_TO_EXT_SOUTH="DISABLE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .EN_OTHER_NCLK="FALSE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .EN_OTHER_PCLK="FALSE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .IDLY_VT_TRACK="FALSE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .ODLY_VT_TRACK="FALSE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .QDLY_VT_TRACK="FALSE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .REFCLK_SRC="PLLCLK";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .RX_GATING="DISABLE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .SELF_CALIBRATE="DISABLE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .SERIAL_MODE="FALSE";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .SIM_VERSION=2.0;
defparam \NIBBLE[3].BITSLICE_CTRL.bitslice_control .TX_GATING="DISABLE";
// @225:8066
(* haps_ip_type="hstdm_native_bitslice_ctrl" *)  BITSLICE_CONTROL \NIBBLE[1].BITSLICE_CTRL.bitslice_control  (
	.CLK_TO_EXT_NORTH(\NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control ),
	.CLK_TO_EXT_SOUTH(\NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_5 ),
	.DLY_RDY(DLY_RDY_1[1]),
	.DYN_DCI(\NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_1 [6:0]),
	.NCLK_NIBBLE_OUT(\NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_4 ),
	.PCLK_NIBBLE_OUT(\NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_3 ),
	.RIU_RD_DATA(\NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_2 [15:0]),
	.RIU_VALID(\NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_6 ),
	.RX_BIT_CTRL_OUT0(RX_BIT_CTRL_OUT0_1[79:40]),
	.RX_BIT_CTRL_OUT1(RX_BIT_CTRL_OUT1_1[79:40]),
	.RX_BIT_CTRL_OUT2(RX_BIT_CTRL_OUT2[79:40]),
	.RX_BIT_CTRL_OUT3(RX_BIT_CTRL_OUT3[79:40]),
	.RX_BIT_CTRL_OUT4(RX_BIT_CTRL_OUT4_1[79:40]),
	.RX_BIT_CTRL_OUT5(RX_BIT_CTRL_OUT5_1[79:40]),
	.RX_BIT_CTRL_OUT6(RX_BIT_CTRL_OUT6_1[79:40]),
	.TX_BIT_CTRL_OUT0(TX_BIT_CTRL_OUT0_1[79:40]),
	.TX_BIT_CTRL_OUT1(TX_BIT_CTRL_OUT1_1[79:40]),
	.TX_BIT_CTRL_OUT2(TX_BIT_CTRL_OUT2[79:40]),
	.TX_BIT_CTRL_OUT3(TX_BIT_CTRL_OUT3[79:40]),
	.TX_BIT_CTRL_OUT4(TX_BIT_CTRL_OUT4_1[79:40]),
	.TX_BIT_CTRL_OUT5(TX_BIT_CTRL_OUT5_1[79:40]),
	.TX_BIT_CTRL_OUT6(TX_BIT_CTRL_OUT6_1[79:40]),
	.TX_BIT_CTRL_OUT_TRI(\NIBBLE[1].BITSLICE_CTRL.un1_bitslice_control_7 [39:0]),
	.VTC_RDY(VTC_RDY_1[1]),
	.CLK_FROM_EXT(VCC),
	.EN_VTC(GND),
	.NCLK_NIBBLE_IN(GND),
	.PCLK_NIBBLE_IN(GND),
	.PHY_RDEN({GND, GND, GND, GND}),
	.PLL_CLK(PLL_CLK),
	.REFCLK(GND),
	.RIU_ADDR({GND, GND, GND, GND, GND, GND}),
	.RIU_CLK(RIU_CLK),
	.RIU_NIBBLE_SEL(GND),
	.RIU_WR_DATA({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RIU_WR_EN(GND),
	.RST(RST),
	.RX_BIT_CTRL_IN0({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN1({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN2(RX_BIT_CTRL_IN2[79:40]),
	.RX_BIT_CTRL_IN3(RX_BIT_CTRL_IN3[79:40]),
	.RX_BIT_CTRL_IN4({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN5({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN6({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TBYTE_IN({GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN0({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN1({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN2(TX_BIT_CTRL_IN2[79:40]),
	.TX_BIT_CTRL_IN3(TX_BIT_CTRL_IN3[79:40]),
	.TX_BIT_CTRL_IN4({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN5({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN6({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN_TRI({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND})
);
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .CTRL_CLK="EXTERNAL";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .DIV_MODE="DIV2";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .EN_CLK_TO_EXT_NORTH="DISABLE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .EN_CLK_TO_EXT_SOUTH="DISABLE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .EN_OTHER_NCLK="FALSE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .EN_OTHER_PCLK="FALSE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .IDLY_VT_TRACK="FALSE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .ODLY_VT_TRACK="FALSE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .QDLY_VT_TRACK="FALSE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .REFCLK_SRC="PLLCLK";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .RX_GATING="DISABLE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .SELF_CALIBRATE="DISABLE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .SERIAL_MODE="FALSE";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \NIBBLE[1].BITSLICE_CTRL.bitslice_control .TX_GATING="DISABLE";
assign RX_BIT_CTRL_OUT0[0] = GND;
assign RX_BIT_CTRL_OUT0[1] = GND;
assign RX_BIT_CTRL_OUT0[2] = GND;
assign RX_BIT_CTRL_OUT0[3] = GND;
assign RX_BIT_CTRL_OUT0[4] = GND;
assign RX_BIT_CTRL_OUT0[5] = GND;
assign RX_BIT_CTRL_OUT0[6] = GND;
assign RX_BIT_CTRL_OUT0[7] = GND;
assign RX_BIT_CTRL_OUT0[8] = GND;
assign RX_BIT_CTRL_OUT0[9] = GND;
assign RX_BIT_CTRL_OUT0[10] = GND;
assign RX_BIT_CTRL_OUT0[11] = GND;
assign RX_BIT_CTRL_OUT0[12] = GND;
assign RX_BIT_CTRL_OUT0[13] = GND;
assign RX_BIT_CTRL_OUT0[14] = GND;
assign RX_BIT_CTRL_OUT0[15] = GND;
assign RX_BIT_CTRL_OUT0[16] = GND;
assign RX_BIT_CTRL_OUT0[17] = GND;
assign RX_BIT_CTRL_OUT0[18] = GND;
assign RX_BIT_CTRL_OUT0[19] = GND;
assign RX_BIT_CTRL_OUT0[20] = GND;
assign RX_BIT_CTRL_OUT0[21] = GND;
assign RX_BIT_CTRL_OUT0[22] = GND;
assign RX_BIT_CTRL_OUT0[23] = GND;
assign RX_BIT_CTRL_OUT0[24] = GND;
assign RX_BIT_CTRL_OUT0[25] = GND;
assign RX_BIT_CTRL_OUT0[26] = GND;
assign RX_BIT_CTRL_OUT0[27] = GND;
assign RX_BIT_CTRL_OUT0[28] = GND;
assign RX_BIT_CTRL_OUT0[29] = GND;
assign RX_BIT_CTRL_OUT0[30] = GND;
assign RX_BIT_CTRL_OUT0[31] = GND;
assign RX_BIT_CTRL_OUT0[32] = GND;
assign RX_BIT_CTRL_OUT0[33] = GND;
assign RX_BIT_CTRL_OUT0[34] = GND;
assign RX_BIT_CTRL_OUT0[35] = GND;
assign RX_BIT_CTRL_OUT0[36] = GND;
assign RX_BIT_CTRL_OUT0[37] = GND;
assign RX_BIT_CTRL_OUT0[38] = GND;
assign RX_BIT_CTRL_OUT0[39] = GND;
assign RX_BIT_CTRL_OUT0[40] = GND;
assign RX_BIT_CTRL_OUT0[41] = GND;
assign RX_BIT_CTRL_OUT0[42] = GND;
assign RX_BIT_CTRL_OUT0[43] = GND;
assign RX_BIT_CTRL_OUT0[44] = GND;
assign RX_BIT_CTRL_OUT0[45] = GND;
assign RX_BIT_CTRL_OUT0[46] = GND;
assign RX_BIT_CTRL_OUT0[47] = GND;
assign RX_BIT_CTRL_OUT0[48] = GND;
assign RX_BIT_CTRL_OUT0[49] = GND;
assign RX_BIT_CTRL_OUT0[50] = GND;
assign RX_BIT_CTRL_OUT0[51] = GND;
assign RX_BIT_CTRL_OUT0[52] = GND;
assign RX_BIT_CTRL_OUT0[53] = GND;
assign RX_BIT_CTRL_OUT0[54] = GND;
assign RX_BIT_CTRL_OUT0[55] = GND;
assign RX_BIT_CTRL_OUT0[56] = GND;
assign RX_BIT_CTRL_OUT0[57] = GND;
assign RX_BIT_CTRL_OUT0[58] = GND;
assign RX_BIT_CTRL_OUT0[59] = GND;
assign RX_BIT_CTRL_OUT0[60] = GND;
assign RX_BIT_CTRL_OUT0[61] = GND;
assign RX_BIT_CTRL_OUT0[62] = GND;
assign RX_BIT_CTRL_OUT0[63] = GND;
assign RX_BIT_CTRL_OUT0[64] = GND;
assign RX_BIT_CTRL_OUT0[65] = GND;
assign RX_BIT_CTRL_OUT0[66] = GND;
assign RX_BIT_CTRL_OUT0[67] = GND;
assign RX_BIT_CTRL_OUT0[68] = GND;
assign RX_BIT_CTRL_OUT0[69] = GND;
assign RX_BIT_CTRL_OUT0[70] = GND;
assign RX_BIT_CTRL_OUT0[71] = GND;
assign RX_BIT_CTRL_OUT0[72] = GND;
assign RX_BIT_CTRL_OUT0[73] = GND;
assign RX_BIT_CTRL_OUT0[74] = GND;
assign RX_BIT_CTRL_OUT0[75] = GND;
assign RX_BIT_CTRL_OUT0[76] = GND;
assign RX_BIT_CTRL_OUT0[77] = GND;
assign RX_BIT_CTRL_OUT0[78] = GND;
assign RX_BIT_CTRL_OUT0[79] = GND;
assign RX_BIT_CTRL_OUT0[80] = GND;
assign RX_BIT_CTRL_OUT0[81] = GND;
assign RX_BIT_CTRL_OUT0[82] = GND;
assign RX_BIT_CTRL_OUT0[83] = GND;
assign RX_BIT_CTRL_OUT0[84] = GND;
assign RX_BIT_CTRL_OUT0[85] = GND;
assign RX_BIT_CTRL_OUT0[86] = GND;
assign RX_BIT_CTRL_OUT0[87] = GND;
assign RX_BIT_CTRL_OUT0[88] = GND;
assign RX_BIT_CTRL_OUT0[89] = GND;
assign RX_BIT_CTRL_OUT0[90] = GND;
assign RX_BIT_CTRL_OUT0[91] = GND;
assign RX_BIT_CTRL_OUT0[92] = GND;
assign RX_BIT_CTRL_OUT0[93] = GND;
assign RX_BIT_CTRL_OUT0[94] = GND;
assign RX_BIT_CTRL_OUT0[95] = GND;
assign RX_BIT_CTRL_OUT0[96] = GND;
assign RX_BIT_CTRL_OUT0[97] = GND;
assign RX_BIT_CTRL_OUT0[98] = GND;
assign RX_BIT_CTRL_OUT0[99] = GND;
assign RX_BIT_CTRL_OUT0[100] = GND;
assign RX_BIT_CTRL_OUT0[101] = GND;
assign RX_BIT_CTRL_OUT0[102] = GND;
assign RX_BIT_CTRL_OUT0[103] = GND;
assign RX_BIT_CTRL_OUT0[104] = GND;
assign RX_BIT_CTRL_OUT0[105] = GND;
assign RX_BIT_CTRL_OUT0[106] = GND;
assign RX_BIT_CTRL_OUT0[107] = GND;
assign RX_BIT_CTRL_OUT0[108] = GND;
assign RX_BIT_CTRL_OUT0[109] = GND;
assign RX_BIT_CTRL_OUT0[110] = GND;
assign RX_BIT_CTRL_OUT0[111] = GND;
assign RX_BIT_CTRL_OUT0[112] = GND;
assign RX_BIT_CTRL_OUT0[113] = GND;
assign RX_BIT_CTRL_OUT0[114] = GND;
assign RX_BIT_CTRL_OUT0[115] = GND;
assign RX_BIT_CTRL_OUT0[116] = GND;
assign RX_BIT_CTRL_OUT0[117] = GND;
assign RX_BIT_CTRL_OUT0[118] = GND;
assign RX_BIT_CTRL_OUT0[119] = GND;
assign RX_BIT_CTRL_OUT0[160] = GND;
assign RX_BIT_CTRL_OUT0[161] = GND;
assign RX_BIT_CTRL_OUT0[162] = GND;
assign RX_BIT_CTRL_OUT0[163] = GND;
assign RX_BIT_CTRL_OUT0[164] = GND;
assign RX_BIT_CTRL_OUT0[165] = GND;
assign RX_BIT_CTRL_OUT0[166] = GND;
assign RX_BIT_CTRL_OUT0[167] = GND;
assign RX_BIT_CTRL_OUT0[168] = GND;
assign RX_BIT_CTRL_OUT0[169] = GND;
assign RX_BIT_CTRL_OUT0[170] = GND;
assign RX_BIT_CTRL_OUT0[171] = GND;
assign RX_BIT_CTRL_OUT0[172] = GND;
assign RX_BIT_CTRL_OUT0[173] = GND;
assign RX_BIT_CTRL_OUT0[174] = GND;
assign RX_BIT_CTRL_OUT0[175] = GND;
assign RX_BIT_CTRL_OUT0[176] = GND;
assign RX_BIT_CTRL_OUT0[177] = GND;
assign RX_BIT_CTRL_OUT0[178] = GND;
assign RX_BIT_CTRL_OUT0[179] = GND;
assign RX_BIT_CTRL_OUT0[180] = GND;
assign RX_BIT_CTRL_OUT0[181] = GND;
assign RX_BIT_CTRL_OUT0[182] = GND;
assign RX_BIT_CTRL_OUT0[183] = GND;
assign RX_BIT_CTRL_OUT0[184] = GND;
assign RX_BIT_CTRL_OUT0[185] = GND;
assign RX_BIT_CTRL_OUT0[186] = GND;
assign RX_BIT_CTRL_OUT0[187] = GND;
assign RX_BIT_CTRL_OUT0[188] = GND;
assign RX_BIT_CTRL_OUT0[189] = GND;
assign RX_BIT_CTRL_OUT0[190] = GND;
assign RX_BIT_CTRL_OUT0[191] = GND;
assign RX_BIT_CTRL_OUT0[192] = GND;
assign RX_BIT_CTRL_OUT0[193] = GND;
assign RX_BIT_CTRL_OUT0[194] = GND;
assign RX_BIT_CTRL_OUT0[195] = GND;
assign RX_BIT_CTRL_OUT0[196] = GND;
assign RX_BIT_CTRL_OUT0[197] = GND;
assign RX_BIT_CTRL_OUT0[198] = GND;
assign RX_BIT_CTRL_OUT0[199] = GND;
assign RX_BIT_CTRL_OUT0[200] = GND;
assign RX_BIT_CTRL_OUT0[201] = GND;
assign RX_BIT_CTRL_OUT0[202] = GND;
assign RX_BIT_CTRL_OUT0[203] = GND;
assign RX_BIT_CTRL_OUT0[204] = GND;
assign RX_BIT_CTRL_OUT0[205] = GND;
assign RX_BIT_CTRL_OUT0[206] = GND;
assign RX_BIT_CTRL_OUT0[207] = GND;
assign RX_BIT_CTRL_OUT0[208] = GND;
assign RX_BIT_CTRL_OUT0[209] = GND;
assign RX_BIT_CTRL_OUT0[210] = GND;
assign RX_BIT_CTRL_OUT0[211] = GND;
assign RX_BIT_CTRL_OUT0[212] = GND;
assign RX_BIT_CTRL_OUT0[213] = GND;
assign RX_BIT_CTRL_OUT0[214] = GND;
assign RX_BIT_CTRL_OUT0[215] = GND;
assign RX_BIT_CTRL_OUT0[216] = GND;
assign RX_BIT_CTRL_OUT0[217] = GND;
assign RX_BIT_CTRL_OUT0[218] = GND;
assign RX_BIT_CTRL_OUT0[219] = GND;
assign RX_BIT_CTRL_OUT0[220] = GND;
assign RX_BIT_CTRL_OUT0[221] = GND;
assign RX_BIT_CTRL_OUT0[222] = GND;
assign RX_BIT_CTRL_OUT0[223] = GND;
assign RX_BIT_CTRL_OUT0[224] = GND;
assign RX_BIT_CTRL_OUT0[225] = GND;
assign RX_BIT_CTRL_OUT0[226] = GND;
assign RX_BIT_CTRL_OUT0[227] = GND;
assign RX_BIT_CTRL_OUT0[228] = GND;
assign RX_BIT_CTRL_OUT0[229] = GND;
assign RX_BIT_CTRL_OUT0[230] = GND;
assign RX_BIT_CTRL_OUT0[231] = GND;
assign RX_BIT_CTRL_OUT0[232] = GND;
assign RX_BIT_CTRL_OUT0[233] = GND;
assign RX_BIT_CTRL_OUT0[234] = GND;
assign RX_BIT_CTRL_OUT0[235] = GND;
assign RX_BIT_CTRL_OUT0[236] = GND;
assign RX_BIT_CTRL_OUT0[237] = GND;
assign RX_BIT_CTRL_OUT0[238] = GND;
assign RX_BIT_CTRL_OUT0[239] = GND;
assign RX_BIT_CTRL_OUT0[240] = GND;
assign RX_BIT_CTRL_OUT0[241] = GND;
assign RX_BIT_CTRL_OUT0[242] = GND;
assign RX_BIT_CTRL_OUT0[243] = GND;
assign RX_BIT_CTRL_OUT0[244] = GND;
assign RX_BIT_CTRL_OUT0[245] = GND;
assign RX_BIT_CTRL_OUT0[246] = GND;
assign RX_BIT_CTRL_OUT0[247] = GND;
assign RX_BIT_CTRL_OUT0[248] = GND;
assign RX_BIT_CTRL_OUT0[249] = GND;
assign RX_BIT_CTRL_OUT0[250] = GND;
assign RX_BIT_CTRL_OUT0[251] = GND;
assign RX_BIT_CTRL_OUT0[252] = GND;
assign RX_BIT_CTRL_OUT0[253] = GND;
assign RX_BIT_CTRL_OUT0[254] = GND;
assign RX_BIT_CTRL_OUT0[255] = GND;
assign RX_BIT_CTRL_OUT0[256] = GND;
assign RX_BIT_CTRL_OUT0[257] = GND;
assign RX_BIT_CTRL_OUT0[258] = GND;
assign RX_BIT_CTRL_OUT0[259] = GND;
assign RX_BIT_CTRL_OUT0[260] = GND;
assign RX_BIT_CTRL_OUT0[261] = GND;
assign RX_BIT_CTRL_OUT0[262] = GND;
assign RX_BIT_CTRL_OUT0[263] = GND;
assign RX_BIT_CTRL_OUT0[264] = GND;
assign RX_BIT_CTRL_OUT0[265] = GND;
assign RX_BIT_CTRL_OUT0[266] = GND;
assign RX_BIT_CTRL_OUT0[267] = GND;
assign RX_BIT_CTRL_OUT0[268] = GND;
assign RX_BIT_CTRL_OUT0[269] = GND;
assign RX_BIT_CTRL_OUT0[270] = GND;
assign RX_BIT_CTRL_OUT0[271] = GND;
assign RX_BIT_CTRL_OUT0[272] = GND;
assign RX_BIT_CTRL_OUT0[273] = GND;
assign RX_BIT_CTRL_OUT0[274] = GND;
assign RX_BIT_CTRL_OUT0[275] = GND;
assign RX_BIT_CTRL_OUT0[276] = GND;
assign RX_BIT_CTRL_OUT0[277] = GND;
assign RX_BIT_CTRL_OUT0[278] = GND;
assign RX_BIT_CTRL_OUT0[279] = GND;
assign RX_BIT_CTRL_OUT0[280] = GND;
assign RX_BIT_CTRL_OUT0[281] = GND;
assign RX_BIT_CTRL_OUT0[282] = GND;
assign RX_BIT_CTRL_OUT0[283] = GND;
assign RX_BIT_CTRL_OUT0[284] = GND;
assign RX_BIT_CTRL_OUT0[285] = GND;
assign RX_BIT_CTRL_OUT0[286] = GND;
assign RX_BIT_CTRL_OUT0[287] = GND;
assign RX_BIT_CTRL_OUT0[288] = GND;
assign RX_BIT_CTRL_OUT0[289] = GND;
assign RX_BIT_CTRL_OUT0[290] = GND;
assign RX_BIT_CTRL_OUT0[291] = GND;
assign RX_BIT_CTRL_OUT0[292] = GND;
assign RX_BIT_CTRL_OUT0[293] = GND;
assign RX_BIT_CTRL_OUT0[294] = GND;
assign RX_BIT_CTRL_OUT0[295] = GND;
assign RX_BIT_CTRL_OUT0[296] = GND;
assign RX_BIT_CTRL_OUT0[297] = GND;
assign RX_BIT_CTRL_OUT0[298] = GND;
assign RX_BIT_CTRL_OUT0[299] = GND;
assign RX_BIT_CTRL_OUT0[300] = GND;
assign RX_BIT_CTRL_OUT0[301] = GND;
assign RX_BIT_CTRL_OUT0[302] = GND;
assign RX_BIT_CTRL_OUT0[303] = GND;
assign RX_BIT_CTRL_OUT0[304] = GND;
assign RX_BIT_CTRL_OUT0[305] = GND;
assign RX_BIT_CTRL_OUT0[306] = GND;
assign RX_BIT_CTRL_OUT0[307] = GND;
assign RX_BIT_CTRL_OUT0[308] = GND;
assign RX_BIT_CTRL_OUT0[309] = GND;
assign RX_BIT_CTRL_OUT0[310] = GND;
assign RX_BIT_CTRL_OUT0[311] = GND;
assign RX_BIT_CTRL_OUT0[312] = GND;
assign RX_BIT_CTRL_OUT0[313] = GND;
assign RX_BIT_CTRL_OUT0[314] = GND;
assign RX_BIT_CTRL_OUT0[315] = GND;
assign RX_BIT_CTRL_OUT0[316] = GND;
assign RX_BIT_CTRL_OUT0[317] = GND;
assign RX_BIT_CTRL_OUT0[318] = GND;
assign RX_BIT_CTRL_OUT0[319] = GND;
assign RX_BIT_CTRL_OUT1[0] = GND;
assign RX_BIT_CTRL_OUT1[1] = GND;
assign RX_BIT_CTRL_OUT1[2] = GND;
assign RX_BIT_CTRL_OUT1[3] = GND;
assign RX_BIT_CTRL_OUT1[4] = GND;
assign RX_BIT_CTRL_OUT1[5] = GND;
assign RX_BIT_CTRL_OUT1[6] = GND;
assign RX_BIT_CTRL_OUT1[7] = GND;
assign RX_BIT_CTRL_OUT1[8] = GND;
assign RX_BIT_CTRL_OUT1[9] = GND;
assign RX_BIT_CTRL_OUT1[10] = GND;
assign RX_BIT_CTRL_OUT1[11] = GND;
assign RX_BIT_CTRL_OUT1[12] = GND;
assign RX_BIT_CTRL_OUT1[13] = GND;
assign RX_BIT_CTRL_OUT1[14] = GND;
assign RX_BIT_CTRL_OUT1[15] = GND;
assign RX_BIT_CTRL_OUT1[16] = GND;
assign RX_BIT_CTRL_OUT1[17] = GND;
assign RX_BIT_CTRL_OUT1[18] = GND;
assign RX_BIT_CTRL_OUT1[19] = GND;
assign RX_BIT_CTRL_OUT1[20] = GND;
assign RX_BIT_CTRL_OUT1[21] = GND;
assign RX_BIT_CTRL_OUT1[22] = GND;
assign RX_BIT_CTRL_OUT1[23] = GND;
assign RX_BIT_CTRL_OUT1[24] = GND;
assign RX_BIT_CTRL_OUT1[25] = GND;
assign RX_BIT_CTRL_OUT1[26] = GND;
assign RX_BIT_CTRL_OUT1[27] = GND;
assign RX_BIT_CTRL_OUT1[28] = GND;
assign RX_BIT_CTRL_OUT1[29] = GND;
assign RX_BIT_CTRL_OUT1[30] = GND;
assign RX_BIT_CTRL_OUT1[31] = GND;
assign RX_BIT_CTRL_OUT1[32] = GND;
assign RX_BIT_CTRL_OUT1[33] = GND;
assign RX_BIT_CTRL_OUT1[34] = GND;
assign RX_BIT_CTRL_OUT1[35] = GND;
assign RX_BIT_CTRL_OUT1[36] = GND;
assign RX_BIT_CTRL_OUT1[37] = GND;
assign RX_BIT_CTRL_OUT1[38] = GND;
assign RX_BIT_CTRL_OUT1[39] = GND;
assign RX_BIT_CTRL_OUT1[40] = GND;
assign RX_BIT_CTRL_OUT1[41] = GND;
assign RX_BIT_CTRL_OUT1[42] = GND;
assign RX_BIT_CTRL_OUT1[43] = GND;
assign RX_BIT_CTRL_OUT1[44] = GND;
assign RX_BIT_CTRL_OUT1[45] = GND;
assign RX_BIT_CTRL_OUT1[46] = GND;
assign RX_BIT_CTRL_OUT1[47] = GND;
assign RX_BIT_CTRL_OUT1[48] = GND;
assign RX_BIT_CTRL_OUT1[49] = GND;
assign RX_BIT_CTRL_OUT1[50] = GND;
assign RX_BIT_CTRL_OUT1[51] = GND;
assign RX_BIT_CTRL_OUT1[52] = GND;
assign RX_BIT_CTRL_OUT1[53] = GND;
assign RX_BIT_CTRL_OUT1[54] = GND;
assign RX_BIT_CTRL_OUT1[55] = GND;
assign RX_BIT_CTRL_OUT1[56] = GND;
assign RX_BIT_CTRL_OUT1[57] = GND;
assign RX_BIT_CTRL_OUT1[58] = GND;
assign RX_BIT_CTRL_OUT1[59] = GND;
assign RX_BIT_CTRL_OUT1[60] = GND;
assign RX_BIT_CTRL_OUT1[61] = GND;
assign RX_BIT_CTRL_OUT1[62] = GND;
assign RX_BIT_CTRL_OUT1[63] = GND;
assign RX_BIT_CTRL_OUT1[64] = GND;
assign RX_BIT_CTRL_OUT1[65] = GND;
assign RX_BIT_CTRL_OUT1[66] = GND;
assign RX_BIT_CTRL_OUT1[67] = GND;
assign RX_BIT_CTRL_OUT1[68] = GND;
assign RX_BIT_CTRL_OUT1[69] = GND;
assign RX_BIT_CTRL_OUT1[70] = GND;
assign RX_BIT_CTRL_OUT1[71] = GND;
assign RX_BIT_CTRL_OUT1[72] = GND;
assign RX_BIT_CTRL_OUT1[73] = GND;
assign RX_BIT_CTRL_OUT1[74] = GND;
assign RX_BIT_CTRL_OUT1[75] = GND;
assign RX_BIT_CTRL_OUT1[76] = GND;
assign RX_BIT_CTRL_OUT1[77] = GND;
assign RX_BIT_CTRL_OUT1[78] = GND;
assign RX_BIT_CTRL_OUT1[79] = GND;
assign RX_BIT_CTRL_OUT1[80] = GND;
assign RX_BIT_CTRL_OUT1[81] = GND;
assign RX_BIT_CTRL_OUT1[82] = GND;
assign RX_BIT_CTRL_OUT1[83] = GND;
assign RX_BIT_CTRL_OUT1[84] = GND;
assign RX_BIT_CTRL_OUT1[85] = GND;
assign RX_BIT_CTRL_OUT1[86] = GND;
assign RX_BIT_CTRL_OUT1[87] = GND;
assign RX_BIT_CTRL_OUT1[88] = GND;
assign RX_BIT_CTRL_OUT1[89] = GND;
assign RX_BIT_CTRL_OUT1[90] = GND;
assign RX_BIT_CTRL_OUT1[91] = GND;
assign RX_BIT_CTRL_OUT1[92] = GND;
assign RX_BIT_CTRL_OUT1[93] = GND;
assign RX_BIT_CTRL_OUT1[94] = GND;
assign RX_BIT_CTRL_OUT1[95] = GND;
assign RX_BIT_CTRL_OUT1[96] = GND;
assign RX_BIT_CTRL_OUT1[97] = GND;
assign RX_BIT_CTRL_OUT1[98] = GND;
assign RX_BIT_CTRL_OUT1[99] = GND;
assign RX_BIT_CTRL_OUT1[100] = GND;
assign RX_BIT_CTRL_OUT1[101] = GND;
assign RX_BIT_CTRL_OUT1[102] = GND;
assign RX_BIT_CTRL_OUT1[103] = GND;
assign RX_BIT_CTRL_OUT1[104] = GND;
assign RX_BIT_CTRL_OUT1[105] = GND;
assign RX_BIT_CTRL_OUT1[106] = GND;
assign RX_BIT_CTRL_OUT1[107] = GND;
assign RX_BIT_CTRL_OUT1[108] = GND;
assign RX_BIT_CTRL_OUT1[109] = GND;
assign RX_BIT_CTRL_OUT1[110] = GND;
assign RX_BIT_CTRL_OUT1[111] = GND;
assign RX_BIT_CTRL_OUT1[112] = GND;
assign RX_BIT_CTRL_OUT1[113] = GND;
assign RX_BIT_CTRL_OUT1[114] = GND;
assign RX_BIT_CTRL_OUT1[115] = GND;
assign RX_BIT_CTRL_OUT1[116] = GND;
assign RX_BIT_CTRL_OUT1[117] = GND;
assign RX_BIT_CTRL_OUT1[118] = GND;
assign RX_BIT_CTRL_OUT1[119] = GND;
assign RX_BIT_CTRL_OUT1[120] = GND;
assign RX_BIT_CTRL_OUT1[121] = GND;
assign RX_BIT_CTRL_OUT1[122] = GND;
assign RX_BIT_CTRL_OUT1[123] = GND;
assign RX_BIT_CTRL_OUT1[124] = GND;
assign RX_BIT_CTRL_OUT1[125] = GND;
assign RX_BIT_CTRL_OUT1[126] = GND;
assign RX_BIT_CTRL_OUT1[127] = GND;
assign RX_BIT_CTRL_OUT1[128] = GND;
assign RX_BIT_CTRL_OUT1[129] = GND;
assign RX_BIT_CTRL_OUT1[130] = GND;
assign RX_BIT_CTRL_OUT1[131] = GND;
assign RX_BIT_CTRL_OUT1[132] = GND;
assign RX_BIT_CTRL_OUT1[133] = GND;
assign RX_BIT_CTRL_OUT1[134] = GND;
assign RX_BIT_CTRL_OUT1[135] = GND;
assign RX_BIT_CTRL_OUT1[136] = GND;
assign RX_BIT_CTRL_OUT1[137] = GND;
assign RX_BIT_CTRL_OUT1[138] = GND;
assign RX_BIT_CTRL_OUT1[139] = GND;
assign RX_BIT_CTRL_OUT1[140] = GND;
assign RX_BIT_CTRL_OUT1[141] = GND;
assign RX_BIT_CTRL_OUT1[142] = GND;
assign RX_BIT_CTRL_OUT1[143] = GND;
assign RX_BIT_CTRL_OUT1[144] = GND;
assign RX_BIT_CTRL_OUT1[145] = GND;
assign RX_BIT_CTRL_OUT1[146] = GND;
assign RX_BIT_CTRL_OUT1[147] = GND;
assign RX_BIT_CTRL_OUT1[148] = GND;
assign RX_BIT_CTRL_OUT1[149] = GND;
assign RX_BIT_CTRL_OUT1[150] = GND;
assign RX_BIT_CTRL_OUT1[151] = GND;
assign RX_BIT_CTRL_OUT1[152] = GND;
assign RX_BIT_CTRL_OUT1[153] = GND;
assign RX_BIT_CTRL_OUT1[154] = GND;
assign RX_BIT_CTRL_OUT1[155] = GND;
assign RX_BIT_CTRL_OUT1[156] = GND;
assign RX_BIT_CTRL_OUT1[157] = GND;
assign RX_BIT_CTRL_OUT1[158] = GND;
assign RX_BIT_CTRL_OUT1[159] = GND;
assign RX_BIT_CTRL_OUT1[160] = GND;
assign RX_BIT_CTRL_OUT1[161] = GND;
assign RX_BIT_CTRL_OUT1[162] = GND;
assign RX_BIT_CTRL_OUT1[163] = GND;
assign RX_BIT_CTRL_OUT1[164] = GND;
assign RX_BIT_CTRL_OUT1[165] = GND;
assign RX_BIT_CTRL_OUT1[166] = GND;
assign RX_BIT_CTRL_OUT1[167] = GND;
assign RX_BIT_CTRL_OUT1[168] = GND;
assign RX_BIT_CTRL_OUT1[169] = GND;
assign RX_BIT_CTRL_OUT1[170] = GND;
assign RX_BIT_CTRL_OUT1[171] = GND;
assign RX_BIT_CTRL_OUT1[172] = GND;
assign RX_BIT_CTRL_OUT1[173] = GND;
assign RX_BIT_CTRL_OUT1[174] = GND;
assign RX_BIT_CTRL_OUT1[175] = GND;
assign RX_BIT_CTRL_OUT1[176] = GND;
assign RX_BIT_CTRL_OUT1[177] = GND;
assign RX_BIT_CTRL_OUT1[178] = GND;
assign RX_BIT_CTRL_OUT1[179] = GND;
assign RX_BIT_CTRL_OUT1[180] = GND;
assign RX_BIT_CTRL_OUT1[181] = GND;
assign RX_BIT_CTRL_OUT1[182] = GND;
assign RX_BIT_CTRL_OUT1[183] = GND;
assign RX_BIT_CTRL_OUT1[184] = GND;
assign RX_BIT_CTRL_OUT1[185] = GND;
assign RX_BIT_CTRL_OUT1[186] = GND;
assign RX_BIT_CTRL_OUT1[187] = GND;
assign RX_BIT_CTRL_OUT1[188] = GND;
assign RX_BIT_CTRL_OUT1[189] = GND;
assign RX_BIT_CTRL_OUT1[190] = GND;
assign RX_BIT_CTRL_OUT1[191] = GND;
assign RX_BIT_CTRL_OUT1[192] = GND;
assign RX_BIT_CTRL_OUT1[193] = GND;
assign RX_BIT_CTRL_OUT1[194] = GND;
assign RX_BIT_CTRL_OUT1[195] = GND;
assign RX_BIT_CTRL_OUT1[196] = GND;
assign RX_BIT_CTRL_OUT1[197] = GND;
assign RX_BIT_CTRL_OUT1[198] = GND;
assign RX_BIT_CTRL_OUT1[199] = GND;
assign RX_BIT_CTRL_OUT1[200] = GND;
assign RX_BIT_CTRL_OUT1[201] = GND;
assign RX_BIT_CTRL_OUT1[202] = GND;
assign RX_BIT_CTRL_OUT1[203] = GND;
assign RX_BIT_CTRL_OUT1[204] = GND;
assign RX_BIT_CTRL_OUT1[205] = GND;
assign RX_BIT_CTRL_OUT1[206] = GND;
assign RX_BIT_CTRL_OUT1[207] = GND;
assign RX_BIT_CTRL_OUT1[208] = GND;
assign RX_BIT_CTRL_OUT1[209] = GND;
assign RX_BIT_CTRL_OUT1[210] = GND;
assign RX_BIT_CTRL_OUT1[211] = GND;
assign RX_BIT_CTRL_OUT1[212] = GND;
assign RX_BIT_CTRL_OUT1[213] = GND;
assign RX_BIT_CTRL_OUT1[214] = GND;
assign RX_BIT_CTRL_OUT1[215] = GND;
assign RX_BIT_CTRL_OUT1[216] = GND;
assign RX_BIT_CTRL_OUT1[217] = GND;
assign RX_BIT_CTRL_OUT1[218] = GND;
assign RX_BIT_CTRL_OUT1[219] = GND;
assign RX_BIT_CTRL_OUT1[220] = GND;
assign RX_BIT_CTRL_OUT1[221] = GND;
assign RX_BIT_CTRL_OUT1[222] = GND;
assign RX_BIT_CTRL_OUT1[223] = GND;
assign RX_BIT_CTRL_OUT1[224] = GND;
assign RX_BIT_CTRL_OUT1[225] = GND;
assign RX_BIT_CTRL_OUT1[226] = GND;
assign RX_BIT_CTRL_OUT1[227] = GND;
assign RX_BIT_CTRL_OUT1[228] = GND;
assign RX_BIT_CTRL_OUT1[229] = GND;
assign RX_BIT_CTRL_OUT1[230] = GND;
assign RX_BIT_CTRL_OUT1[231] = GND;
assign RX_BIT_CTRL_OUT1[232] = GND;
assign RX_BIT_CTRL_OUT1[233] = GND;
assign RX_BIT_CTRL_OUT1[234] = GND;
assign RX_BIT_CTRL_OUT1[235] = GND;
assign RX_BIT_CTRL_OUT1[236] = GND;
assign RX_BIT_CTRL_OUT1[237] = GND;
assign RX_BIT_CTRL_OUT1[238] = GND;
assign RX_BIT_CTRL_OUT1[239] = GND;
assign RX_BIT_CTRL_OUT1[240] = GND;
assign RX_BIT_CTRL_OUT1[241] = GND;
assign RX_BIT_CTRL_OUT1[242] = GND;
assign RX_BIT_CTRL_OUT1[243] = GND;
assign RX_BIT_CTRL_OUT1[244] = GND;
assign RX_BIT_CTRL_OUT1[245] = GND;
assign RX_BIT_CTRL_OUT1[246] = GND;
assign RX_BIT_CTRL_OUT1[247] = GND;
assign RX_BIT_CTRL_OUT1[248] = GND;
assign RX_BIT_CTRL_OUT1[249] = GND;
assign RX_BIT_CTRL_OUT1[250] = GND;
assign RX_BIT_CTRL_OUT1[251] = GND;
assign RX_BIT_CTRL_OUT1[252] = GND;
assign RX_BIT_CTRL_OUT1[253] = GND;
assign RX_BIT_CTRL_OUT1[254] = GND;
assign RX_BIT_CTRL_OUT1[255] = GND;
assign RX_BIT_CTRL_OUT1[256] = GND;
assign RX_BIT_CTRL_OUT1[257] = GND;
assign RX_BIT_CTRL_OUT1[258] = GND;
assign RX_BIT_CTRL_OUT1[259] = GND;
assign RX_BIT_CTRL_OUT1[260] = GND;
assign RX_BIT_CTRL_OUT1[261] = GND;
assign RX_BIT_CTRL_OUT1[262] = GND;
assign RX_BIT_CTRL_OUT1[263] = GND;
assign RX_BIT_CTRL_OUT1[264] = GND;
assign RX_BIT_CTRL_OUT1[265] = GND;
assign RX_BIT_CTRL_OUT1[266] = GND;
assign RX_BIT_CTRL_OUT1[267] = GND;
assign RX_BIT_CTRL_OUT1[268] = GND;
assign RX_BIT_CTRL_OUT1[269] = GND;
assign RX_BIT_CTRL_OUT1[270] = GND;
assign RX_BIT_CTRL_OUT1[271] = GND;
assign RX_BIT_CTRL_OUT1[272] = GND;
assign RX_BIT_CTRL_OUT1[273] = GND;
assign RX_BIT_CTRL_OUT1[274] = GND;
assign RX_BIT_CTRL_OUT1[275] = GND;
assign RX_BIT_CTRL_OUT1[276] = GND;
assign RX_BIT_CTRL_OUT1[277] = GND;
assign RX_BIT_CTRL_OUT1[278] = GND;
assign RX_BIT_CTRL_OUT1[279] = GND;
assign RX_BIT_CTRL_OUT1[280] = GND;
assign RX_BIT_CTRL_OUT1[281] = GND;
assign RX_BIT_CTRL_OUT1[282] = GND;
assign RX_BIT_CTRL_OUT1[283] = GND;
assign RX_BIT_CTRL_OUT1[284] = GND;
assign RX_BIT_CTRL_OUT1[285] = GND;
assign RX_BIT_CTRL_OUT1[286] = GND;
assign RX_BIT_CTRL_OUT1[287] = GND;
assign RX_BIT_CTRL_OUT1[288] = GND;
assign RX_BIT_CTRL_OUT1[289] = GND;
assign RX_BIT_CTRL_OUT1[290] = GND;
assign RX_BIT_CTRL_OUT1[291] = GND;
assign RX_BIT_CTRL_OUT1[292] = GND;
assign RX_BIT_CTRL_OUT1[293] = GND;
assign RX_BIT_CTRL_OUT1[294] = GND;
assign RX_BIT_CTRL_OUT1[295] = GND;
assign RX_BIT_CTRL_OUT1[296] = GND;
assign RX_BIT_CTRL_OUT1[297] = GND;
assign RX_BIT_CTRL_OUT1[298] = GND;
assign RX_BIT_CTRL_OUT1[299] = GND;
assign RX_BIT_CTRL_OUT1[300] = GND;
assign RX_BIT_CTRL_OUT1[301] = GND;
assign RX_BIT_CTRL_OUT1[302] = GND;
assign RX_BIT_CTRL_OUT1[303] = GND;
assign RX_BIT_CTRL_OUT1[304] = GND;
assign RX_BIT_CTRL_OUT1[305] = GND;
assign RX_BIT_CTRL_OUT1[306] = GND;
assign RX_BIT_CTRL_OUT1[307] = GND;
assign RX_BIT_CTRL_OUT1[308] = GND;
assign RX_BIT_CTRL_OUT1[309] = GND;
assign RX_BIT_CTRL_OUT1[310] = GND;
assign RX_BIT_CTRL_OUT1[311] = GND;
assign RX_BIT_CTRL_OUT1[312] = GND;
assign RX_BIT_CTRL_OUT1[313] = GND;
assign RX_BIT_CTRL_OUT1[314] = GND;
assign RX_BIT_CTRL_OUT1[315] = GND;
assign RX_BIT_CTRL_OUT1[316] = GND;
assign RX_BIT_CTRL_OUT1[317] = GND;
assign RX_BIT_CTRL_OUT1[318] = GND;
assign RX_BIT_CTRL_OUT1[319] = GND;
assign RX_BIT_CTRL_OUT2[0] = GND;
assign RX_BIT_CTRL_OUT2[1] = GND;
assign RX_BIT_CTRL_OUT2[2] = GND;
assign RX_BIT_CTRL_OUT2[3] = GND;
assign RX_BIT_CTRL_OUT2[4] = GND;
assign RX_BIT_CTRL_OUT2[5] = GND;
assign RX_BIT_CTRL_OUT2[6] = GND;
assign RX_BIT_CTRL_OUT2[7] = GND;
assign RX_BIT_CTRL_OUT2[8] = GND;
assign RX_BIT_CTRL_OUT2[9] = GND;
assign RX_BIT_CTRL_OUT2[10] = GND;
assign RX_BIT_CTRL_OUT2[11] = GND;
assign RX_BIT_CTRL_OUT2[12] = GND;
assign RX_BIT_CTRL_OUT2[13] = GND;
assign RX_BIT_CTRL_OUT2[14] = GND;
assign RX_BIT_CTRL_OUT2[15] = GND;
assign RX_BIT_CTRL_OUT2[16] = GND;
assign RX_BIT_CTRL_OUT2[17] = GND;
assign RX_BIT_CTRL_OUT2[18] = GND;
assign RX_BIT_CTRL_OUT2[19] = GND;
assign RX_BIT_CTRL_OUT2[20] = GND;
assign RX_BIT_CTRL_OUT2[21] = GND;
assign RX_BIT_CTRL_OUT2[22] = GND;
assign RX_BIT_CTRL_OUT2[23] = GND;
assign RX_BIT_CTRL_OUT2[24] = GND;
assign RX_BIT_CTRL_OUT2[25] = GND;
assign RX_BIT_CTRL_OUT2[26] = GND;
assign RX_BIT_CTRL_OUT2[27] = GND;
assign RX_BIT_CTRL_OUT2[28] = GND;
assign RX_BIT_CTRL_OUT2[29] = GND;
assign RX_BIT_CTRL_OUT2[30] = GND;
assign RX_BIT_CTRL_OUT2[31] = GND;
assign RX_BIT_CTRL_OUT2[32] = GND;
assign RX_BIT_CTRL_OUT2[33] = GND;
assign RX_BIT_CTRL_OUT2[34] = GND;
assign RX_BIT_CTRL_OUT2[35] = GND;
assign RX_BIT_CTRL_OUT2[36] = GND;
assign RX_BIT_CTRL_OUT2[37] = GND;
assign RX_BIT_CTRL_OUT2[38] = GND;
assign RX_BIT_CTRL_OUT2[39] = GND;
assign RX_BIT_CTRL_OUT2[80] = GND;
assign RX_BIT_CTRL_OUT2[81] = GND;
assign RX_BIT_CTRL_OUT2[82] = GND;
assign RX_BIT_CTRL_OUT2[83] = GND;
assign RX_BIT_CTRL_OUT2[84] = GND;
assign RX_BIT_CTRL_OUT2[85] = GND;
assign RX_BIT_CTRL_OUT2[86] = GND;
assign RX_BIT_CTRL_OUT2[87] = GND;
assign RX_BIT_CTRL_OUT2[88] = GND;
assign RX_BIT_CTRL_OUT2[89] = GND;
assign RX_BIT_CTRL_OUT2[90] = GND;
assign RX_BIT_CTRL_OUT2[91] = GND;
assign RX_BIT_CTRL_OUT2[92] = GND;
assign RX_BIT_CTRL_OUT2[93] = GND;
assign RX_BIT_CTRL_OUT2[94] = GND;
assign RX_BIT_CTRL_OUT2[95] = GND;
assign RX_BIT_CTRL_OUT2[96] = GND;
assign RX_BIT_CTRL_OUT2[97] = GND;
assign RX_BIT_CTRL_OUT2[98] = GND;
assign RX_BIT_CTRL_OUT2[99] = GND;
assign RX_BIT_CTRL_OUT2[100] = GND;
assign RX_BIT_CTRL_OUT2[101] = GND;
assign RX_BIT_CTRL_OUT2[102] = GND;
assign RX_BIT_CTRL_OUT2[103] = GND;
assign RX_BIT_CTRL_OUT2[104] = GND;
assign RX_BIT_CTRL_OUT2[105] = GND;
assign RX_BIT_CTRL_OUT2[106] = GND;
assign RX_BIT_CTRL_OUT2[107] = GND;
assign RX_BIT_CTRL_OUT2[108] = GND;
assign RX_BIT_CTRL_OUT2[109] = GND;
assign RX_BIT_CTRL_OUT2[110] = GND;
assign RX_BIT_CTRL_OUT2[111] = GND;
assign RX_BIT_CTRL_OUT2[112] = GND;
assign RX_BIT_CTRL_OUT2[113] = GND;
assign RX_BIT_CTRL_OUT2[114] = GND;
assign RX_BIT_CTRL_OUT2[115] = GND;
assign RX_BIT_CTRL_OUT2[116] = GND;
assign RX_BIT_CTRL_OUT2[117] = GND;
assign RX_BIT_CTRL_OUT2[118] = GND;
assign RX_BIT_CTRL_OUT2[119] = GND;
assign RX_BIT_CTRL_OUT2[120] = GND;
assign RX_BIT_CTRL_OUT2[121] = GND;
assign RX_BIT_CTRL_OUT2[122] = GND;
assign RX_BIT_CTRL_OUT2[123] = GND;
assign RX_BIT_CTRL_OUT2[124] = GND;
assign RX_BIT_CTRL_OUT2[125] = GND;
assign RX_BIT_CTRL_OUT2[126] = GND;
assign RX_BIT_CTRL_OUT2[127] = GND;
assign RX_BIT_CTRL_OUT2[128] = GND;
assign RX_BIT_CTRL_OUT2[129] = GND;
assign RX_BIT_CTRL_OUT2[130] = GND;
assign RX_BIT_CTRL_OUT2[131] = GND;
assign RX_BIT_CTRL_OUT2[132] = GND;
assign RX_BIT_CTRL_OUT2[133] = GND;
assign RX_BIT_CTRL_OUT2[134] = GND;
assign RX_BIT_CTRL_OUT2[135] = GND;
assign RX_BIT_CTRL_OUT2[136] = GND;
assign RX_BIT_CTRL_OUT2[137] = GND;
assign RX_BIT_CTRL_OUT2[138] = GND;
assign RX_BIT_CTRL_OUT2[139] = GND;
assign RX_BIT_CTRL_OUT2[140] = GND;
assign RX_BIT_CTRL_OUT2[141] = GND;
assign RX_BIT_CTRL_OUT2[142] = GND;
assign RX_BIT_CTRL_OUT2[143] = GND;
assign RX_BIT_CTRL_OUT2[144] = GND;
assign RX_BIT_CTRL_OUT2[145] = GND;
assign RX_BIT_CTRL_OUT2[146] = GND;
assign RX_BIT_CTRL_OUT2[147] = GND;
assign RX_BIT_CTRL_OUT2[148] = GND;
assign RX_BIT_CTRL_OUT2[149] = GND;
assign RX_BIT_CTRL_OUT2[150] = GND;
assign RX_BIT_CTRL_OUT2[151] = GND;
assign RX_BIT_CTRL_OUT2[152] = GND;
assign RX_BIT_CTRL_OUT2[153] = GND;
assign RX_BIT_CTRL_OUT2[154] = GND;
assign RX_BIT_CTRL_OUT2[155] = GND;
assign RX_BIT_CTRL_OUT2[156] = GND;
assign RX_BIT_CTRL_OUT2[157] = GND;
assign RX_BIT_CTRL_OUT2[158] = GND;
assign RX_BIT_CTRL_OUT2[159] = GND;
assign RX_BIT_CTRL_OUT2[160] = GND;
assign RX_BIT_CTRL_OUT2[161] = GND;
assign RX_BIT_CTRL_OUT2[162] = GND;
assign RX_BIT_CTRL_OUT2[163] = GND;
assign RX_BIT_CTRL_OUT2[164] = GND;
assign RX_BIT_CTRL_OUT2[165] = GND;
assign RX_BIT_CTRL_OUT2[166] = GND;
assign RX_BIT_CTRL_OUT2[167] = GND;
assign RX_BIT_CTRL_OUT2[168] = GND;
assign RX_BIT_CTRL_OUT2[169] = GND;
assign RX_BIT_CTRL_OUT2[170] = GND;
assign RX_BIT_CTRL_OUT2[171] = GND;
assign RX_BIT_CTRL_OUT2[172] = GND;
assign RX_BIT_CTRL_OUT2[173] = GND;
assign RX_BIT_CTRL_OUT2[174] = GND;
assign RX_BIT_CTRL_OUT2[175] = GND;
assign RX_BIT_CTRL_OUT2[176] = GND;
assign RX_BIT_CTRL_OUT2[177] = GND;
assign RX_BIT_CTRL_OUT2[178] = GND;
assign RX_BIT_CTRL_OUT2[179] = GND;
assign RX_BIT_CTRL_OUT2[180] = GND;
assign RX_BIT_CTRL_OUT2[181] = GND;
assign RX_BIT_CTRL_OUT2[182] = GND;
assign RX_BIT_CTRL_OUT2[183] = GND;
assign RX_BIT_CTRL_OUT2[184] = GND;
assign RX_BIT_CTRL_OUT2[185] = GND;
assign RX_BIT_CTRL_OUT2[186] = GND;
assign RX_BIT_CTRL_OUT2[187] = GND;
assign RX_BIT_CTRL_OUT2[188] = GND;
assign RX_BIT_CTRL_OUT2[189] = GND;
assign RX_BIT_CTRL_OUT2[190] = GND;
assign RX_BIT_CTRL_OUT2[191] = GND;
assign RX_BIT_CTRL_OUT2[192] = GND;
assign RX_BIT_CTRL_OUT2[193] = GND;
assign RX_BIT_CTRL_OUT2[194] = GND;
assign RX_BIT_CTRL_OUT2[195] = GND;
assign RX_BIT_CTRL_OUT2[196] = GND;
assign RX_BIT_CTRL_OUT2[197] = GND;
assign RX_BIT_CTRL_OUT2[198] = GND;
assign RX_BIT_CTRL_OUT2[199] = GND;
assign RX_BIT_CTRL_OUT2[200] = GND;
assign RX_BIT_CTRL_OUT2[201] = GND;
assign RX_BIT_CTRL_OUT2[202] = GND;
assign RX_BIT_CTRL_OUT2[203] = GND;
assign RX_BIT_CTRL_OUT2[204] = GND;
assign RX_BIT_CTRL_OUT2[205] = GND;
assign RX_BIT_CTRL_OUT2[206] = GND;
assign RX_BIT_CTRL_OUT2[207] = GND;
assign RX_BIT_CTRL_OUT2[208] = GND;
assign RX_BIT_CTRL_OUT2[209] = GND;
assign RX_BIT_CTRL_OUT2[210] = GND;
assign RX_BIT_CTRL_OUT2[211] = GND;
assign RX_BIT_CTRL_OUT2[212] = GND;
assign RX_BIT_CTRL_OUT2[213] = GND;
assign RX_BIT_CTRL_OUT2[214] = GND;
assign RX_BIT_CTRL_OUT2[215] = GND;
assign RX_BIT_CTRL_OUT2[216] = GND;
assign RX_BIT_CTRL_OUT2[217] = GND;
assign RX_BIT_CTRL_OUT2[218] = GND;
assign RX_BIT_CTRL_OUT2[219] = GND;
assign RX_BIT_CTRL_OUT2[220] = GND;
assign RX_BIT_CTRL_OUT2[221] = GND;
assign RX_BIT_CTRL_OUT2[222] = GND;
assign RX_BIT_CTRL_OUT2[223] = GND;
assign RX_BIT_CTRL_OUT2[224] = GND;
assign RX_BIT_CTRL_OUT2[225] = GND;
assign RX_BIT_CTRL_OUT2[226] = GND;
assign RX_BIT_CTRL_OUT2[227] = GND;
assign RX_BIT_CTRL_OUT2[228] = GND;
assign RX_BIT_CTRL_OUT2[229] = GND;
assign RX_BIT_CTRL_OUT2[230] = GND;
assign RX_BIT_CTRL_OUT2[231] = GND;
assign RX_BIT_CTRL_OUT2[232] = GND;
assign RX_BIT_CTRL_OUT2[233] = GND;
assign RX_BIT_CTRL_OUT2[234] = GND;
assign RX_BIT_CTRL_OUT2[235] = GND;
assign RX_BIT_CTRL_OUT2[236] = GND;
assign RX_BIT_CTRL_OUT2[237] = GND;
assign RX_BIT_CTRL_OUT2[238] = GND;
assign RX_BIT_CTRL_OUT2[239] = GND;
assign RX_BIT_CTRL_OUT2[240] = GND;
assign RX_BIT_CTRL_OUT2[241] = GND;
assign RX_BIT_CTRL_OUT2[242] = GND;
assign RX_BIT_CTRL_OUT2[243] = GND;
assign RX_BIT_CTRL_OUT2[244] = GND;
assign RX_BIT_CTRL_OUT2[245] = GND;
assign RX_BIT_CTRL_OUT2[246] = GND;
assign RX_BIT_CTRL_OUT2[247] = GND;
assign RX_BIT_CTRL_OUT2[248] = GND;
assign RX_BIT_CTRL_OUT2[249] = GND;
assign RX_BIT_CTRL_OUT2[250] = GND;
assign RX_BIT_CTRL_OUT2[251] = GND;
assign RX_BIT_CTRL_OUT2[252] = GND;
assign RX_BIT_CTRL_OUT2[253] = GND;
assign RX_BIT_CTRL_OUT2[254] = GND;
assign RX_BIT_CTRL_OUT2[255] = GND;
assign RX_BIT_CTRL_OUT2[256] = GND;
assign RX_BIT_CTRL_OUT2[257] = GND;
assign RX_BIT_CTRL_OUT2[258] = GND;
assign RX_BIT_CTRL_OUT2[259] = GND;
assign RX_BIT_CTRL_OUT2[260] = GND;
assign RX_BIT_CTRL_OUT2[261] = GND;
assign RX_BIT_CTRL_OUT2[262] = GND;
assign RX_BIT_CTRL_OUT2[263] = GND;
assign RX_BIT_CTRL_OUT2[264] = GND;
assign RX_BIT_CTRL_OUT2[265] = GND;
assign RX_BIT_CTRL_OUT2[266] = GND;
assign RX_BIT_CTRL_OUT2[267] = GND;
assign RX_BIT_CTRL_OUT2[268] = GND;
assign RX_BIT_CTRL_OUT2[269] = GND;
assign RX_BIT_CTRL_OUT2[270] = GND;
assign RX_BIT_CTRL_OUT2[271] = GND;
assign RX_BIT_CTRL_OUT2[272] = GND;
assign RX_BIT_CTRL_OUT2[273] = GND;
assign RX_BIT_CTRL_OUT2[274] = GND;
assign RX_BIT_CTRL_OUT2[275] = GND;
assign RX_BIT_CTRL_OUT2[276] = GND;
assign RX_BIT_CTRL_OUT2[277] = GND;
assign RX_BIT_CTRL_OUT2[278] = GND;
assign RX_BIT_CTRL_OUT2[279] = GND;
assign RX_BIT_CTRL_OUT2[280] = GND;
assign RX_BIT_CTRL_OUT2[281] = GND;
assign RX_BIT_CTRL_OUT2[282] = GND;
assign RX_BIT_CTRL_OUT2[283] = GND;
assign RX_BIT_CTRL_OUT2[284] = GND;
assign RX_BIT_CTRL_OUT2[285] = GND;
assign RX_BIT_CTRL_OUT2[286] = GND;
assign RX_BIT_CTRL_OUT2[287] = GND;
assign RX_BIT_CTRL_OUT2[288] = GND;
assign RX_BIT_CTRL_OUT2[289] = GND;
assign RX_BIT_CTRL_OUT2[290] = GND;
assign RX_BIT_CTRL_OUT2[291] = GND;
assign RX_BIT_CTRL_OUT2[292] = GND;
assign RX_BIT_CTRL_OUT2[293] = GND;
assign RX_BIT_CTRL_OUT2[294] = GND;
assign RX_BIT_CTRL_OUT2[295] = GND;
assign RX_BIT_CTRL_OUT2[296] = GND;
assign RX_BIT_CTRL_OUT2[297] = GND;
assign RX_BIT_CTRL_OUT2[298] = GND;
assign RX_BIT_CTRL_OUT2[299] = GND;
assign RX_BIT_CTRL_OUT2[300] = GND;
assign RX_BIT_CTRL_OUT2[301] = GND;
assign RX_BIT_CTRL_OUT2[302] = GND;
assign RX_BIT_CTRL_OUT2[303] = GND;
assign RX_BIT_CTRL_OUT2[304] = GND;
assign RX_BIT_CTRL_OUT2[305] = GND;
assign RX_BIT_CTRL_OUT2[306] = GND;
assign RX_BIT_CTRL_OUT2[307] = GND;
assign RX_BIT_CTRL_OUT2[308] = GND;
assign RX_BIT_CTRL_OUT2[309] = GND;
assign RX_BIT_CTRL_OUT2[310] = GND;
assign RX_BIT_CTRL_OUT2[311] = GND;
assign RX_BIT_CTRL_OUT2[312] = GND;
assign RX_BIT_CTRL_OUT2[313] = GND;
assign RX_BIT_CTRL_OUT2[314] = GND;
assign RX_BIT_CTRL_OUT2[315] = GND;
assign RX_BIT_CTRL_OUT2[316] = GND;
assign RX_BIT_CTRL_OUT2[317] = GND;
assign RX_BIT_CTRL_OUT2[318] = GND;
assign RX_BIT_CTRL_OUT2[319] = GND;
assign RX_BIT_CTRL_OUT3[0] = GND;
assign RX_BIT_CTRL_OUT3[1] = GND;
assign RX_BIT_CTRL_OUT3[2] = GND;
assign RX_BIT_CTRL_OUT3[3] = GND;
assign RX_BIT_CTRL_OUT3[4] = GND;
assign RX_BIT_CTRL_OUT3[5] = GND;
assign RX_BIT_CTRL_OUT3[6] = GND;
assign RX_BIT_CTRL_OUT3[7] = GND;
assign RX_BIT_CTRL_OUT3[8] = GND;
assign RX_BIT_CTRL_OUT3[9] = GND;
assign RX_BIT_CTRL_OUT3[10] = GND;
assign RX_BIT_CTRL_OUT3[11] = GND;
assign RX_BIT_CTRL_OUT3[12] = GND;
assign RX_BIT_CTRL_OUT3[13] = GND;
assign RX_BIT_CTRL_OUT3[14] = GND;
assign RX_BIT_CTRL_OUT3[15] = GND;
assign RX_BIT_CTRL_OUT3[16] = GND;
assign RX_BIT_CTRL_OUT3[17] = GND;
assign RX_BIT_CTRL_OUT3[18] = GND;
assign RX_BIT_CTRL_OUT3[19] = GND;
assign RX_BIT_CTRL_OUT3[20] = GND;
assign RX_BIT_CTRL_OUT3[21] = GND;
assign RX_BIT_CTRL_OUT3[22] = GND;
assign RX_BIT_CTRL_OUT3[23] = GND;
assign RX_BIT_CTRL_OUT3[24] = GND;
assign RX_BIT_CTRL_OUT3[25] = GND;
assign RX_BIT_CTRL_OUT3[26] = GND;
assign RX_BIT_CTRL_OUT3[27] = GND;
assign RX_BIT_CTRL_OUT3[28] = GND;
assign RX_BIT_CTRL_OUT3[29] = GND;
assign RX_BIT_CTRL_OUT3[30] = GND;
assign RX_BIT_CTRL_OUT3[31] = GND;
assign RX_BIT_CTRL_OUT3[32] = GND;
assign RX_BIT_CTRL_OUT3[33] = GND;
assign RX_BIT_CTRL_OUT3[34] = GND;
assign RX_BIT_CTRL_OUT3[35] = GND;
assign RX_BIT_CTRL_OUT3[36] = GND;
assign RX_BIT_CTRL_OUT3[37] = GND;
assign RX_BIT_CTRL_OUT3[38] = GND;
assign RX_BIT_CTRL_OUT3[39] = GND;
assign RX_BIT_CTRL_OUT3[80] = GND;
assign RX_BIT_CTRL_OUT3[81] = GND;
assign RX_BIT_CTRL_OUT3[82] = GND;
assign RX_BIT_CTRL_OUT3[83] = GND;
assign RX_BIT_CTRL_OUT3[84] = GND;
assign RX_BIT_CTRL_OUT3[85] = GND;
assign RX_BIT_CTRL_OUT3[86] = GND;
assign RX_BIT_CTRL_OUT3[87] = GND;
assign RX_BIT_CTRL_OUT3[88] = GND;
assign RX_BIT_CTRL_OUT3[89] = GND;
assign RX_BIT_CTRL_OUT3[90] = GND;
assign RX_BIT_CTRL_OUT3[91] = GND;
assign RX_BIT_CTRL_OUT3[92] = GND;
assign RX_BIT_CTRL_OUT3[93] = GND;
assign RX_BIT_CTRL_OUT3[94] = GND;
assign RX_BIT_CTRL_OUT3[95] = GND;
assign RX_BIT_CTRL_OUT3[96] = GND;
assign RX_BIT_CTRL_OUT3[97] = GND;
assign RX_BIT_CTRL_OUT3[98] = GND;
assign RX_BIT_CTRL_OUT3[99] = GND;
assign RX_BIT_CTRL_OUT3[100] = GND;
assign RX_BIT_CTRL_OUT3[101] = GND;
assign RX_BIT_CTRL_OUT3[102] = GND;
assign RX_BIT_CTRL_OUT3[103] = GND;
assign RX_BIT_CTRL_OUT3[104] = GND;
assign RX_BIT_CTRL_OUT3[105] = GND;
assign RX_BIT_CTRL_OUT3[106] = GND;
assign RX_BIT_CTRL_OUT3[107] = GND;
assign RX_BIT_CTRL_OUT3[108] = GND;
assign RX_BIT_CTRL_OUT3[109] = GND;
assign RX_BIT_CTRL_OUT3[110] = GND;
assign RX_BIT_CTRL_OUT3[111] = GND;
assign RX_BIT_CTRL_OUT3[112] = GND;
assign RX_BIT_CTRL_OUT3[113] = GND;
assign RX_BIT_CTRL_OUT3[114] = GND;
assign RX_BIT_CTRL_OUT3[115] = GND;
assign RX_BIT_CTRL_OUT3[116] = GND;
assign RX_BIT_CTRL_OUT3[117] = GND;
assign RX_BIT_CTRL_OUT3[118] = GND;
assign RX_BIT_CTRL_OUT3[119] = GND;
assign RX_BIT_CTRL_OUT3[120] = GND;
assign RX_BIT_CTRL_OUT3[121] = GND;
assign RX_BIT_CTRL_OUT3[122] = GND;
assign RX_BIT_CTRL_OUT3[123] = GND;
assign RX_BIT_CTRL_OUT3[124] = GND;
assign RX_BIT_CTRL_OUT3[125] = GND;
assign RX_BIT_CTRL_OUT3[126] = GND;
assign RX_BIT_CTRL_OUT3[127] = GND;
assign RX_BIT_CTRL_OUT3[128] = GND;
assign RX_BIT_CTRL_OUT3[129] = GND;
assign RX_BIT_CTRL_OUT3[130] = GND;
assign RX_BIT_CTRL_OUT3[131] = GND;
assign RX_BIT_CTRL_OUT3[132] = GND;
assign RX_BIT_CTRL_OUT3[133] = GND;
assign RX_BIT_CTRL_OUT3[134] = GND;
assign RX_BIT_CTRL_OUT3[135] = GND;
assign RX_BIT_CTRL_OUT3[136] = GND;
assign RX_BIT_CTRL_OUT3[137] = GND;
assign RX_BIT_CTRL_OUT3[138] = GND;
assign RX_BIT_CTRL_OUT3[139] = GND;
assign RX_BIT_CTRL_OUT3[140] = GND;
assign RX_BIT_CTRL_OUT3[141] = GND;
assign RX_BIT_CTRL_OUT3[142] = GND;
assign RX_BIT_CTRL_OUT3[143] = GND;
assign RX_BIT_CTRL_OUT3[144] = GND;
assign RX_BIT_CTRL_OUT3[145] = GND;
assign RX_BIT_CTRL_OUT3[146] = GND;
assign RX_BIT_CTRL_OUT3[147] = GND;
assign RX_BIT_CTRL_OUT3[148] = GND;
assign RX_BIT_CTRL_OUT3[149] = GND;
assign RX_BIT_CTRL_OUT3[150] = GND;
assign RX_BIT_CTRL_OUT3[151] = GND;
assign RX_BIT_CTRL_OUT3[152] = GND;
assign RX_BIT_CTRL_OUT3[153] = GND;
assign RX_BIT_CTRL_OUT3[154] = GND;
assign RX_BIT_CTRL_OUT3[155] = GND;
assign RX_BIT_CTRL_OUT3[156] = GND;
assign RX_BIT_CTRL_OUT3[157] = GND;
assign RX_BIT_CTRL_OUT3[158] = GND;
assign RX_BIT_CTRL_OUT3[159] = GND;
assign RX_BIT_CTRL_OUT3[160] = GND;
assign RX_BIT_CTRL_OUT3[161] = GND;
assign RX_BIT_CTRL_OUT3[162] = GND;
assign RX_BIT_CTRL_OUT3[163] = GND;
assign RX_BIT_CTRL_OUT3[164] = GND;
assign RX_BIT_CTRL_OUT3[165] = GND;
assign RX_BIT_CTRL_OUT3[166] = GND;
assign RX_BIT_CTRL_OUT3[167] = GND;
assign RX_BIT_CTRL_OUT3[168] = GND;
assign RX_BIT_CTRL_OUT3[169] = GND;
assign RX_BIT_CTRL_OUT3[170] = GND;
assign RX_BIT_CTRL_OUT3[171] = GND;
assign RX_BIT_CTRL_OUT3[172] = GND;
assign RX_BIT_CTRL_OUT3[173] = GND;
assign RX_BIT_CTRL_OUT3[174] = GND;
assign RX_BIT_CTRL_OUT3[175] = GND;
assign RX_BIT_CTRL_OUT3[176] = GND;
assign RX_BIT_CTRL_OUT3[177] = GND;
assign RX_BIT_CTRL_OUT3[178] = GND;
assign RX_BIT_CTRL_OUT3[179] = GND;
assign RX_BIT_CTRL_OUT3[180] = GND;
assign RX_BIT_CTRL_OUT3[181] = GND;
assign RX_BIT_CTRL_OUT3[182] = GND;
assign RX_BIT_CTRL_OUT3[183] = GND;
assign RX_BIT_CTRL_OUT3[184] = GND;
assign RX_BIT_CTRL_OUT3[185] = GND;
assign RX_BIT_CTRL_OUT3[186] = GND;
assign RX_BIT_CTRL_OUT3[187] = GND;
assign RX_BIT_CTRL_OUT3[188] = GND;
assign RX_BIT_CTRL_OUT3[189] = GND;
assign RX_BIT_CTRL_OUT3[190] = GND;
assign RX_BIT_CTRL_OUT3[191] = GND;
assign RX_BIT_CTRL_OUT3[192] = GND;
assign RX_BIT_CTRL_OUT3[193] = GND;
assign RX_BIT_CTRL_OUT3[194] = GND;
assign RX_BIT_CTRL_OUT3[195] = GND;
assign RX_BIT_CTRL_OUT3[196] = GND;
assign RX_BIT_CTRL_OUT3[197] = GND;
assign RX_BIT_CTRL_OUT3[198] = GND;
assign RX_BIT_CTRL_OUT3[199] = GND;
assign RX_BIT_CTRL_OUT3[200] = GND;
assign RX_BIT_CTRL_OUT3[201] = GND;
assign RX_BIT_CTRL_OUT3[202] = GND;
assign RX_BIT_CTRL_OUT3[203] = GND;
assign RX_BIT_CTRL_OUT3[204] = GND;
assign RX_BIT_CTRL_OUT3[205] = GND;
assign RX_BIT_CTRL_OUT3[206] = GND;
assign RX_BIT_CTRL_OUT3[207] = GND;
assign RX_BIT_CTRL_OUT3[208] = GND;
assign RX_BIT_CTRL_OUT3[209] = GND;
assign RX_BIT_CTRL_OUT3[210] = GND;
assign RX_BIT_CTRL_OUT3[211] = GND;
assign RX_BIT_CTRL_OUT3[212] = GND;
assign RX_BIT_CTRL_OUT3[213] = GND;
assign RX_BIT_CTRL_OUT3[214] = GND;
assign RX_BIT_CTRL_OUT3[215] = GND;
assign RX_BIT_CTRL_OUT3[216] = GND;
assign RX_BIT_CTRL_OUT3[217] = GND;
assign RX_BIT_CTRL_OUT3[218] = GND;
assign RX_BIT_CTRL_OUT3[219] = GND;
assign RX_BIT_CTRL_OUT3[220] = GND;
assign RX_BIT_CTRL_OUT3[221] = GND;
assign RX_BIT_CTRL_OUT3[222] = GND;
assign RX_BIT_CTRL_OUT3[223] = GND;
assign RX_BIT_CTRL_OUT3[224] = GND;
assign RX_BIT_CTRL_OUT3[225] = GND;
assign RX_BIT_CTRL_OUT3[226] = GND;
assign RX_BIT_CTRL_OUT3[227] = GND;
assign RX_BIT_CTRL_OUT3[228] = GND;
assign RX_BIT_CTRL_OUT3[229] = GND;
assign RX_BIT_CTRL_OUT3[230] = GND;
assign RX_BIT_CTRL_OUT3[231] = GND;
assign RX_BIT_CTRL_OUT3[232] = GND;
assign RX_BIT_CTRL_OUT3[233] = GND;
assign RX_BIT_CTRL_OUT3[234] = GND;
assign RX_BIT_CTRL_OUT3[235] = GND;
assign RX_BIT_CTRL_OUT3[236] = GND;
assign RX_BIT_CTRL_OUT3[237] = GND;
assign RX_BIT_CTRL_OUT3[238] = GND;
assign RX_BIT_CTRL_OUT3[239] = GND;
assign RX_BIT_CTRL_OUT3[240] = GND;
assign RX_BIT_CTRL_OUT3[241] = GND;
assign RX_BIT_CTRL_OUT3[242] = GND;
assign RX_BIT_CTRL_OUT3[243] = GND;
assign RX_BIT_CTRL_OUT3[244] = GND;
assign RX_BIT_CTRL_OUT3[245] = GND;
assign RX_BIT_CTRL_OUT3[246] = GND;
assign RX_BIT_CTRL_OUT3[247] = GND;
assign RX_BIT_CTRL_OUT3[248] = GND;
assign RX_BIT_CTRL_OUT3[249] = GND;
assign RX_BIT_CTRL_OUT3[250] = GND;
assign RX_BIT_CTRL_OUT3[251] = GND;
assign RX_BIT_CTRL_OUT3[252] = GND;
assign RX_BIT_CTRL_OUT3[253] = GND;
assign RX_BIT_CTRL_OUT3[254] = GND;
assign RX_BIT_CTRL_OUT3[255] = GND;
assign RX_BIT_CTRL_OUT3[256] = GND;
assign RX_BIT_CTRL_OUT3[257] = GND;
assign RX_BIT_CTRL_OUT3[258] = GND;
assign RX_BIT_CTRL_OUT3[259] = GND;
assign RX_BIT_CTRL_OUT3[260] = GND;
assign RX_BIT_CTRL_OUT3[261] = GND;
assign RX_BIT_CTRL_OUT3[262] = GND;
assign RX_BIT_CTRL_OUT3[263] = GND;
assign RX_BIT_CTRL_OUT3[264] = GND;
assign RX_BIT_CTRL_OUT3[265] = GND;
assign RX_BIT_CTRL_OUT3[266] = GND;
assign RX_BIT_CTRL_OUT3[267] = GND;
assign RX_BIT_CTRL_OUT3[268] = GND;
assign RX_BIT_CTRL_OUT3[269] = GND;
assign RX_BIT_CTRL_OUT3[270] = GND;
assign RX_BIT_CTRL_OUT3[271] = GND;
assign RX_BIT_CTRL_OUT3[272] = GND;
assign RX_BIT_CTRL_OUT3[273] = GND;
assign RX_BIT_CTRL_OUT3[274] = GND;
assign RX_BIT_CTRL_OUT3[275] = GND;
assign RX_BIT_CTRL_OUT3[276] = GND;
assign RX_BIT_CTRL_OUT3[277] = GND;
assign RX_BIT_CTRL_OUT3[278] = GND;
assign RX_BIT_CTRL_OUT3[279] = GND;
assign RX_BIT_CTRL_OUT3[280] = GND;
assign RX_BIT_CTRL_OUT3[281] = GND;
assign RX_BIT_CTRL_OUT3[282] = GND;
assign RX_BIT_CTRL_OUT3[283] = GND;
assign RX_BIT_CTRL_OUT3[284] = GND;
assign RX_BIT_CTRL_OUT3[285] = GND;
assign RX_BIT_CTRL_OUT3[286] = GND;
assign RX_BIT_CTRL_OUT3[287] = GND;
assign RX_BIT_CTRL_OUT3[288] = GND;
assign RX_BIT_CTRL_OUT3[289] = GND;
assign RX_BIT_CTRL_OUT3[290] = GND;
assign RX_BIT_CTRL_OUT3[291] = GND;
assign RX_BIT_CTRL_OUT3[292] = GND;
assign RX_BIT_CTRL_OUT3[293] = GND;
assign RX_BIT_CTRL_OUT3[294] = GND;
assign RX_BIT_CTRL_OUT3[295] = GND;
assign RX_BIT_CTRL_OUT3[296] = GND;
assign RX_BIT_CTRL_OUT3[297] = GND;
assign RX_BIT_CTRL_OUT3[298] = GND;
assign RX_BIT_CTRL_OUT3[299] = GND;
assign RX_BIT_CTRL_OUT3[300] = GND;
assign RX_BIT_CTRL_OUT3[301] = GND;
assign RX_BIT_CTRL_OUT3[302] = GND;
assign RX_BIT_CTRL_OUT3[303] = GND;
assign RX_BIT_CTRL_OUT3[304] = GND;
assign RX_BIT_CTRL_OUT3[305] = GND;
assign RX_BIT_CTRL_OUT3[306] = GND;
assign RX_BIT_CTRL_OUT3[307] = GND;
assign RX_BIT_CTRL_OUT3[308] = GND;
assign RX_BIT_CTRL_OUT3[309] = GND;
assign RX_BIT_CTRL_OUT3[310] = GND;
assign RX_BIT_CTRL_OUT3[311] = GND;
assign RX_BIT_CTRL_OUT3[312] = GND;
assign RX_BIT_CTRL_OUT3[313] = GND;
assign RX_BIT_CTRL_OUT3[314] = GND;
assign RX_BIT_CTRL_OUT3[315] = GND;
assign RX_BIT_CTRL_OUT3[316] = GND;
assign RX_BIT_CTRL_OUT3[317] = GND;
assign RX_BIT_CTRL_OUT3[318] = GND;
assign RX_BIT_CTRL_OUT3[319] = GND;
assign RX_BIT_CTRL_OUT4[0] = GND;
assign RX_BIT_CTRL_OUT4[1] = GND;
assign RX_BIT_CTRL_OUT4[2] = GND;
assign RX_BIT_CTRL_OUT4[3] = GND;
assign RX_BIT_CTRL_OUT4[4] = GND;
assign RX_BIT_CTRL_OUT4[5] = GND;
assign RX_BIT_CTRL_OUT4[6] = GND;
assign RX_BIT_CTRL_OUT4[7] = GND;
assign RX_BIT_CTRL_OUT4[8] = GND;
assign RX_BIT_CTRL_OUT4[9] = GND;
assign RX_BIT_CTRL_OUT4[10] = GND;
assign RX_BIT_CTRL_OUT4[11] = GND;
assign RX_BIT_CTRL_OUT4[12] = GND;
assign RX_BIT_CTRL_OUT4[13] = GND;
assign RX_BIT_CTRL_OUT4[14] = GND;
assign RX_BIT_CTRL_OUT4[15] = GND;
assign RX_BIT_CTRL_OUT4[16] = GND;
assign RX_BIT_CTRL_OUT4[17] = GND;
assign RX_BIT_CTRL_OUT4[18] = GND;
assign RX_BIT_CTRL_OUT4[19] = GND;
assign RX_BIT_CTRL_OUT4[20] = GND;
assign RX_BIT_CTRL_OUT4[21] = GND;
assign RX_BIT_CTRL_OUT4[22] = GND;
assign RX_BIT_CTRL_OUT4[23] = GND;
assign RX_BIT_CTRL_OUT4[24] = GND;
assign RX_BIT_CTRL_OUT4[25] = GND;
assign RX_BIT_CTRL_OUT4[26] = GND;
assign RX_BIT_CTRL_OUT4[27] = GND;
assign RX_BIT_CTRL_OUT4[28] = GND;
assign RX_BIT_CTRL_OUT4[29] = GND;
assign RX_BIT_CTRL_OUT4[30] = GND;
assign RX_BIT_CTRL_OUT4[31] = GND;
assign RX_BIT_CTRL_OUT4[32] = GND;
assign RX_BIT_CTRL_OUT4[33] = GND;
assign RX_BIT_CTRL_OUT4[34] = GND;
assign RX_BIT_CTRL_OUT4[35] = GND;
assign RX_BIT_CTRL_OUT4[36] = GND;
assign RX_BIT_CTRL_OUT4[37] = GND;
assign RX_BIT_CTRL_OUT4[38] = GND;
assign RX_BIT_CTRL_OUT4[39] = GND;
assign RX_BIT_CTRL_OUT4[40] = GND;
assign RX_BIT_CTRL_OUT4[41] = GND;
assign RX_BIT_CTRL_OUT4[42] = GND;
assign RX_BIT_CTRL_OUT4[43] = GND;
assign RX_BIT_CTRL_OUT4[44] = GND;
assign RX_BIT_CTRL_OUT4[45] = GND;
assign RX_BIT_CTRL_OUT4[46] = GND;
assign RX_BIT_CTRL_OUT4[47] = GND;
assign RX_BIT_CTRL_OUT4[48] = GND;
assign RX_BIT_CTRL_OUT4[49] = GND;
assign RX_BIT_CTRL_OUT4[50] = GND;
assign RX_BIT_CTRL_OUT4[51] = GND;
assign RX_BIT_CTRL_OUT4[52] = GND;
assign RX_BIT_CTRL_OUT4[53] = GND;
assign RX_BIT_CTRL_OUT4[54] = GND;
assign RX_BIT_CTRL_OUT4[55] = GND;
assign RX_BIT_CTRL_OUT4[56] = GND;
assign RX_BIT_CTRL_OUT4[57] = GND;
assign RX_BIT_CTRL_OUT4[58] = GND;
assign RX_BIT_CTRL_OUT4[59] = GND;
assign RX_BIT_CTRL_OUT4[60] = GND;
assign RX_BIT_CTRL_OUT4[61] = GND;
assign RX_BIT_CTRL_OUT4[62] = GND;
assign RX_BIT_CTRL_OUT4[63] = GND;
assign RX_BIT_CTRL_OUT4[64] = GND;
assign RX_BIT_CTRL_OUT4[65] = GND;
assign RX_BIT_CTRL_OUT4[66] = GND;
assign RX_BIT_CTRL_OUT4[67] = GND;
assign RX_BIT_CTRL_OUT4[68] = GND;
assign RX_BIT_CTRL_OUT4[69] = GND;
assign RX_BIT_CTRL_OUT4[70] = GND;
assign RX_BIT_CTRL_OUT4[71] = GND;
assign RX_BIT_CTRL_OUT4[72] = GND;
assign RX_BIT_CTRL_OUT4[73] = GND;
assign RX_BIT_CTRL_OUT4[74] = GND;
assign RX_BIT_CTRL_OUT4[75] = GND;
assign RX_BIT_CTRL_OUT4[76] = GND;
assign RX_BIT_CTRL_OUT4[77] = GND;
assign RX_BIT_CTRL_OUT4[78] = GND;
assign RX_BIT_CTRL_OUT4[79] = GND;
assign RX_BIT_CTRL_OUT4[80] = GND;
assign RX_BIT_CTRL_OUT4[81] = GND;
assign RX_BIT_CTRL_OUT4[82] = GND;
assign RX_BIT_CTRL_OUT4[83] = GND;
assign RX_BIT_CTRL_OUT4[84] = GND;
assign RX_BIT_CTRL_OUT4[85] = GND;
assign RX_BIT_CTRL_OUT4[86] = GND;
assign RX_BIT_CTRL_OUT4[87] = GND;
assign RX_BIT_CTRL_OUT4[88] = GND;
assign RX_BIT_CTRL_OUT4[89] = GND;
assign RX_BIT_CTRL_OUT4[90] = GND;
assign RX_BIT_CTRL_OUT4[91] = GND;
assign RX_BIT_CTRL_OUT4[92] = GND;
assign RX_BIT_CTRL_OUT4[93] = GND;
assign RX_BIT_CTRL_OUT4[94] = GND;
assign RX_BIT_CTRL_OUT4[95] = GND;
assign RX_BIT_CTRL_OUT4[96] = GND;
assign RX_BIT_CTRL_OUT4[97] = GND;
assign RX_BIT_CTRL_OUT4[98] = GND;
assign RX_BIT_CTRL_OUT4[99] = GND;
assign RX_BIT_CTRL_OUT4[100] = GND;
assign RX_BIT_CTRL_OUT4[101] = GND;
assign RX_BIT_CTRL_OUT4[102] = GND;
assign RX_BIT_CTRL_OUT4[103] = GND;
assign RX_BIT_CTRL_OUT4[104] = GND;
assign RX_BIT_CTRL_OUT4[105] = GND;
assign RX_BIT_CTRL_OUT4[106] = GND;
assign RX_BIT_CTRL_OUT4[107] = GND;
assign RX_BIT_CTRL_OUT4[108] = GND;
assign RX_BIT_CTRL_OUT4[109] = GND;
assign RX_BIT_CTRL_OUT4[110] = GND;
assign RX_BIT_CTRL_OUT4[111] = GND;
assign RX_BIT_CTRL_OUT4[112] = GND;
assign RX_BIT_CTRL_OUT4[113] = GND;
assign RX_BIT_CTRL_OUT4[114] = GND;
assign RX_BIT_CTRL_OUT4[115] = GND;
assign RX_BIT_CTRL_OUT4[116] = GND;
assign RX_BIT_CTRL_OUT4[117] = GND;
assign RX_BIT_CTRL_OUT4[118] = GND;
assign RX_BIT_CTRL_OUT4[119] = GND;
assign RX_BIT_CTRL_OUT4[160] = GND;
assign RX_BIT_CTRL_OUT4[161] = GND;
assign RX_BIT_CTRL_OUT4[162] = GND;
assign RX_BIT_CTRL_OUT4[163] = GND;
assign RX_BIT_CTRL_OUT4[164] = GND;
assign RX_BIT_CTRL_OUT4[165] = GND;
assign RX_BIT_CTRL_OUT4[166] = GND;
assign RX_BIT_CTRL_OUT4[167] = GND;
assign RX_BIT_CTRL_OUT4[168] = GND;
assign RX_BIT_CTRL_OUT4[169] = GND;
assign RX_BIT_CTRL_OUT4[170] = GND;
assign RX_BIT_CTRL_OUT4[171] = GND;
assign RX_BIT_CTRL_OUT4[172] = GND;
assign RX_BIT_CTRL_OUT4[173] = GND;
assign RX_BIT_CTRL_OUT4[174] = GND;
assign RX_BIT_CTRL_OUT4[175] = GND;
assign RX_BIT_CTRL_OUT4[176] = GND;
assign RX_BIT_CTRL_OUT4[177] = GND;
assign RX_BIT_CTRL_OUT4[178] = GND;
assign RX_BIT_CTRL_OUT4[179] = GND;
assign RX_BIT_CTRL_OUT4[180] = GND;
assign RX_BIT_CTRL_OUT4[181] = GND;
assign RX_BIT_CTRL_OUT4[182] = GND;
assign RX_BIT_CTRL_OUT4[183] = GND;
assign RX_BIT_CTRL_OUT4[184] = GND;
assign RX_BIT_CTRL_OUT4[185] = GND;
assign RX_BIT_CTRL_OUT4[186] = GND;
assign RX_BIT_CTRL_OUT4[187] = GND;
assign RX_BIT_CTRL_OUT4[188] = GND;
assign RX_BIT_CTRL_OUT4[189] = GND;
assign RX_BIT_CTRL_OUT4[190] = GND;
assign RX_BIT_CTRL_OUT4[191] = GND;
assign RX_BIT_CTRL_OUT4[192] = GND;
assign RX_BIT_CTRL_OUT4[193] = GND;
assign RX_BIT_CTRL_OUT4[194] = GND;
assign RX_BIT_CTRL_OUT4[195] = GND;
assign RX_BIT_CTRL_OUT4[196] = GND;
assign RX_BIT_CTRL_OUT4[197] = GND;
assign RX_BIT_CTRL_OUT4[198] = GND;
assign RX_BIT_CTRL_OUT4[199] = GND;
assign RX_BIT_CTRL_OUT4[200] = GND;
assign RX_BIT_CTRL_OUT4[201] = GND;
assign RX_BIT_CTRL_OUT4[202] = GND;
assign RX_BIT_CTRL_OUT4[203] = GND;
assign RX_BIT_CTRL_OUT4[204] = GND;
assign RX_BIT_CTRL_OUT4[205] = GND;
assign RX_BIT_CTRL_OUT4[206] = GND;
assign RX_BIT_CTRL_OUT4[207] = GND;
assign RX_BIT_CTRL_OUT4[208] = GND;
assign RX_BIT_CTRL_OUT4[209] = GND;
assign RX_BIT_CTRL_OUT4[210] = GND;
assign RX_BIT_CTRL_OUT4[211] = GND;
assign RX_BIT_CTRL_OUT4[212] = GND;
assign RX_BIT_CTRL_OUT4[213] = GND;
assign RX_BIT_CTRL_OUT4[214] = GND;
assign RX_BIT_CTRL_OUT4[215] = GND;
assign RX_BIT_CTRL_OUT4[216] = GND;
assign RX_BIT_CTRL_OUT4[217] = GND;
assign RX_BIT_CTRL_OUT4[218] = GND;
assign RX_BIT_CTRL_OUT4[219] = GND;
assign RX_BIT_CTRL_OUT4[220] = GND;
assign RX_BIT_CTRL_OUT4[221] = GND;
assign RX_BIT_CTRL_OUT4[222] = GND;
assign RX_BIT_CTRL_OUT4[223] = GND;
assign RX_BIT_CTRL_OUT4[224] = GND;
assign RX_BIT_CTRL_OUT4[225] = GND;
assign RX_BIT_CTRL_OUT4[226] = GND;
assign RX_BIT_CTRL_OUT4[227] = GND;
assign RX_BIT_CTRL_OUT4[228] = GND;
assign RX_BIT_CTRL_OUT4[229] = GND;
assign RX_BIT_CTRL_OUT4[230] = GND;
assign RX_BIT_CTRL_OUT4[231] = GND;
assign RX_BIT_CTRL_OUT4[232] = GND;
assign RX_BIT_CTRL_OUT4[233] = GND;
assign RX_BIT_CTRL_OUT4[234] = GND;
assign RX_BIT_CTRL_OUT4[235] = GND;
assign RX_BIT_CTRL_OUT4[236] = GND;
assign RX_BIT_CTRL_OUT4[237] = GND;
assign RX_BIT_CTRL_OUT4[238] = GND;
assign RX_BIT_CTRL_OUT4[239] = GND;
assign RX_BIT_CTRL_OUT4[240] = GND;
assign RX_BIT_CTRL_OUT4[241] = GND;
assign RX_BIT_CTRL_OUT4[242] = GND;
assign RX_BIT_CTRL_OUT4[243] = GND;
assign RX_BIT_CTRL_OUT4[244] = GND;
assign RX_BIT_CTRL_OUT4[245] = GND;
assign RX_BIT_CTRL_OUT4[246] = GND;
assign RX_BIT_CTRL_OUT4[247] = GND;
assign RX_BIT_CTRL_OUT4[248] = GND;
assign RX_BIT_CTRL_OUT4[249] = GND;
assign RX_BIT_CTRL_OUT4[250] = GND;
assign RX_BIT_CTRL_OUT4[251] = GND;
assign RX_BIT_CTRL_OUT4[252] = GND;
assign RX_BIT_CTRL_OUT4[253] = GND;
assign RX_BIT_CTRL_OUT4[254] = GND;
assign RX_BIT_CTRL_OUT4[255] = GND;
assign RX_BIT_CTRL_OUT4[256] = GND;
assign RX_BIT_CTRL_OUT4[257] = GND;
assign RX_BIT_CTRL_OUT4[258] = GND;
assign RX_BIT_CTRL_OUT4[259] = GND;
assign RX_BIT_CTRL_OUT4[260] = GND;
assign RX_BIT_CTRL_OUT4[261] = GND;
assign RX_BIT_CTRL_OUT4[262] = GND;
assign RX_BIT_CTRL_OUT4[263] = GND;
assign RX_BIT_CTRL_OUT4[264] = GND;
assign RX_BIT_CTRL_OUT4[265] = GND;
assign RX_BIT_CTRL_OUT4[266] = GND;
assign RX_BIT_CTRL_OUT4[267] = GND;
assign RX_BIT_CTRL_OUT4[268] = GND;
assign RX_BIT_CTRL_OUT4[269] = GND;
assign RX_BIT_CTRL_OUT4[270] = GND;
assign RX_BIT_CTRL_OUT4[271] = GND;
assign RX_BIT_CTRL_OUT4[272] = GND;
assign RX_BIT_CTRL_OUT4[273] = GND;
assign RX_BIT_CTRL_OUT4[274] = GND;
assign RX_BIT_CTRL_OUT4[275] = GND;
assign RX_BIT_CTRL_OUT4[276] = GND;
assign RX_BIT_CTRL_OUT4[277] = GND;
assign RX_BIT_CTRL_OUT4[278] = GND;
assign RX_BIT_CTRL_OUT4[279] = GND;
assign RX_BIT_CTRL_OUT4[280] = GND;
assign RX_BIT_CTRL_OUT4[281] = GND;
assign RX_BIT_CTRL_OUT4[282] = GND;
assign RX_BIT_CTRL_OUT4[283] = GND;
assign RX_BIT_CTRL_OUT4[284] = GND;
assign RX_BIT_CTRL_OUT4[285] = GND;
assign RX_BIT_CTRL_OUT4[286] = GND;
assign RX_BIT_CTRL_OUT4[287] = GND;
assign RX_BIT_CTRL_OUT4[288] = GND;
assign RX_BIT_CTRL_OUT4[289] = GND;
assign RX_BIT_CTRL_OUT4[290] = GND;
assign RX_BIT_CTRL_OUT4[291] = GND;
assign RX_BIT_CTRL_OUT4[292] = GND;
assign RX_BIT_CTRL_OUT4[293] = GND;
assign RX_BIT_CTRL_OUT4[294] = GND;
assign RX_BIT_CTRL_OUT4[295] = GND;
assign RX_BIT_CTRL_OUT4[296] = GND;
assign RX_BIT_CTRL_OUT4[297] = GND;
assign RX_BIT_CTRL_OUT4[298] = GND;
assign RX_BIT_CTRL_OUT4[299] = GND;
assign RX_BIT_CTRL_OUT4[300] = GND;
assign RX_BIT_CTRL_OUT4[301] = GND;
assign RX_BIT_CTRL_OUT4[302] = GND;
assign RX_BIT_CTRL_OUT4[303] = GND;
assign RX_BIT_CTRL_OUT4[304] = GND;
assign RX_BIT_CTRL_OUT4[305] = GND;
assign RX_BIT_CTRL_OUT4[306] = GND;
assign RX_BIT_CTRL_OUT4[307] = GND;
assign RX_BIT_CTRL_OUT4[308] = GND;
assign RX_BIT_CTRL_OUT4[309] = GND;
assign RX_BIT_CTRL_OUT4[310] = GND;
assign RX_BIT_CTRL_OUT4[311] = GND;
assign RX_BIT_CTRL_OUT4[312] = GND;
assign RX_BIT_CTRL_OUT4[313] = GND;
assign RX_BIT_CTRL_OUT4[314] = GND;
assign RX_BIT_CTRL_OUT4[315] = GND;
assign RX_BIT_CTRL_OUT4[316] = GND;
assign RX_BIT_CTRL_OUT4[317] = GND;
assign RX_BIT_CTRL_OUT4[318] = GND;
assign RX_BIT_CTRL_OUT4[319] = GND;
assign RX_BIT_CTRL_OUT5[0] = GND;
assign RX_BIT_CTRL_OUT5[1] = GND;
assign RX_BIT_CTRL_OUT5[2] = GND;
assign RX_BIT_CTRL_OUT5[3] = GND;
assign RX_BIT_CTRL_OUT5[4] = GND;
assign RX_BIT_CTRL_OUT5[5] = GND;
assign RX_BIT_CTRL_OUT5[6] = GND;
assign RX_BIT_CTRL_OUT5[7] = GND;
assign RX_BIT_CTRL_OUT5[8] = GND;
assign RX_BIT_CTRL_OUT5[9] = GND;
assign RX_BIT_CTRL_OUT5[10] = GND;
assign RX_BIT_CTRL_OUT5[11] = GND;
assign RX_BIT_CTRL_OUT5[12] = GND;
assign RX_BIT_CTRL_OUT5[13] = GND;
assign RX_BIT_CTRL_OUT5[14] = GND;
assign RX_BIT_CTRL_OUT5[15] = GND;
assign RX_BIT_CTRL_OUT5[16] = GND;
assign RX_BIT_CTRL_OUT5[17] = GND;
assign RX_BIT_CTRL_OUT5[18] = GND;
assign RX_BIT_CTRL_OUT5[19] = GND;
assign RX_BIT_CTRL_OUT5[20] = GND;
assign RX_BIT_CTRL_OUT5[21] = GND;
assign RX_BIT_CTRL_OUT5[22] = GND;
assign RX_BIT_CTRL_OUT5[23] = GND;
assign RX_BIT_CTRL_OUT5[24] = GND;
assign RX_BIT_CTRL_OUT5[25] = GND;
assign RX_BIT_CTRL_OUT5[26] = GND;
assign RX_BIT_CTRL_OUT5[27] = GND;
assign RX_BIT_CTRL_OUT5[28] = GND;
assign RX_BIT_CTRL_OUT5[29] = GND;
assign RX_BIT_CTRL_OUT5[30] = GND;
assign RX_BIT_CTRL_OUT5[31] = GND;
assign RX_BIT_CTRL_OUT5[32] = GND;
assign RX_BIT_CTRL_OUT5[33] = GND;
assign RX_BIT_CTRL_OUT5[34] = GND;
assign RX_BIT_CTRL_OUT5[35] = GND;
assign RX_BIT_CTRL_OUT5[36] = GND;
assign RX_BIT_CTRL_OUT5[37] = GND;
assign RX_BIT_CTRL_OUT5[38] = GND;
assign RX_BIT_CTRL_OUT5[39] = GND;
assign RX_BIT_CTRL_OUT5[40] = GND;
assign RX_BIT_CTRL_OUT5[41] = GND;
assign RX_BIT_CTRL_OUT5[42] = GND;
assign RX_BIT_CTRL_OUT5[43] = GND;
assign RX_BIT_CTRL_OUT5[44] = GND;
assign RX_BIT_CTRL_OUT5[45] = GND;
assign RX_BIT_CTRL_OUT5[46] = GND;
assign RX_BIT_CTRL_OUT5[47] = GND;
assign RX_BIT_CTRL_OUT5[48] = GND;
assign RX_BIT_CTRL_OUT5[49] = GND;
assign RX_BIT_CTRL_OUT5[50] = GND;
assign RX_BIT_CTRL_OUT5[51] = GND;
assign RX_BIT_CTRL_OUT5[52] = GND;
assign RX_BIT_CTRL_OUT5[53] = GND;
assign RX_BIT_CTRL_OUT5[54] = GND;
assign RX_BIT_CTRL_OUT5[55] = GND;
assign RX_BIT_CTRL_OUT5[56] = GND;
assign RX_BIT_CTRL_OUT5[57] = GND;
assign RX_BIT_CTRL_OUT5[58] = GND;
assign RX_BIT_CTRL_OUT5[59] = GND;
assign RX_BIT_CTRL_OUT5[60] = GND;
assign RX_BIT_CTRL_OUT5[61] = GND;
assign RX_BIT_CTRL_OUT5[62] = GND;
assign RX_BIT_CTRL_OUT5[63] = GND;
assign RX_BIT_CTRL_OUT5[64] = GND;
assign RX_BIT_CTRL_OUT5[65] = GND;
assign RX_BIT_CTRL_OUT5[66] = GND;
assign RX_BIT_CTRL_OUT5[67] = GND;
assign RX_BIT_CTRL_OUT5[68] = GND;
assign RX_BIT_CTRL_OUT5[69] = GND;
assign RX_BIT_CTRL_OUT5[70] = GND;
assign RX_BIT_CTRL_OUT5[71] = GND;
assign RX_BIT_CTRL_OUT5[72] = GND;
assign RX_BIT_CTRL_OUT5[73] = GND;
assign RX_BIT_CTRL_OUT5[74] = GND;
assign RX_BIT_CTRL_OUT5[75] = GND;
assign RX_BIT_CTRL_OUT5[76] = GND;
assign RX_BIT_CTRL_OUT5[77] = GND;
assign RX_BIT_CTRL_OUT5[78] = GND;
assign RX_BIT_CTRL_OUT5[79] = GND;
assign RX_BIT_CTRL_OUT5[80] = GND;
assign RX_BIT_CTRL_OUT5[81] = GND;
assign RX_BIT_CTRL_OUT5[82] = GND;
assign RX_BIT_CTRL_OUT5[83] = GND;
assign RX_BIT_CTRL_OUT5[84] = GND;
assign RX_BIT_CTRL_OUT5[85] = GND;
assign RX_BIT_CTRL_OUT5[86] = GND;
assign RX_BIT_CTRL_OUT5[87] = GND;
assign RX_BIT_CTRL_OUT5[88] = GND;
assign RX_BIT_CTRL_OUT5[89] = GND;
assign RX_BIT_CTRL_OUT5[90] = GND;
assign RX_BIT_CTRL_OUT5[91] = GND;
assign RX_BIT_CTRL_OUT5[92] = GND;
assign RX_BIT_CTRL_OUT5[93] = GND;
assign RX_BIT_CTRL_OUT5[94] = GND;
assign RX_BIT_CTRL_OUT5[95] = GND;
assign RX_BIT_CTRL_OUT5[96] = GND;
assign RX_BIT_CTRL_OUT5[97] = GND;
assign RX_BIT_CTRL_OUT5[98] = GND;
assign RX_BIT_CTRL_OUT5[99] = GND;
assign RX_BIT_CTRL_OUT5[100] = GND;
assign RX_BIT_CTRL_OUT5[101] = GND;
assign RX_BIT_CTRL_OUT5[102] = GND;
assign RX_BIT_CTRL_OUT5[103] = GND;
assign RX_BIT_CTRL_OUT5[104] = GND;
assign RX_BIT_CTRL_OUT5[105] = GND;
assign RX_BIT_CTRL_OUT5[106] = GND;
assign RX_BIT_CTRL_OUT5[107] = GND;
assign RX_BIT_CTRL_OUT5[108] = GND;
assign RX_BIT_CTRL_OUT5[109] = GND;
assign RX_BIT_CTRL_OUT5[110] = GND;
assign RX_BIT_CTRL_OUT5[111] = GND;
assign RX_BIT_CTRL_OUT5[112] = GND;
assign RX_BIT_CTRL_OUT5[113] = GND;
assign RX_BIT_CTRL_OUT5[114] = GND;
assign RX_BIT_CTRL_OUT5[115] = GND;
assign RX_BIT_CTRL_OUT5[116] = GND;
assign RX_BIT_CTRL_OUT5[117] = GND;
assign RX_BIT_CTRL_OUT5[118] = GND;
assign RX_BIT_CTRL_OUT5[119] = GND;
assign RX_BIT_CTRL_OUT5[160] = GND;
assign RX_BIT_CTRL_OUT5[161] = GND;
assign RX_BIT_CTRL_OUT5[162] = GND;
assign RX_BIT_CTRL_OUT5[163] = GND;
assign RX_BIT_CTRL_OUT5[164] = GND;
assign RX_BIT_CTRL_OUT5[165] = GND;
assign RX_BIT_CTRL_OUT5[166] = GND;
assign RX_BIT_CTRL_OUT5[167] = GND;
assign RX_BIT_CTRL_OUT5[168] = GND;
assign RX_BIT_CTRL_OUT5[169] = GND;
assign RX_BIT_CTRL_OUT5[170] = GND;
assign RX_BIT_CTRL_OUT5[171] = GND;
assign RX_BIT_CTRL_OUT5[172] = GND;
assign RX_BIT_CTRL_OUT5[173] = GND;
assign RX_BIT_CTRL_OUT5[174] = GND;
assign RX_BIT_CTRL_OUT5[175] = GND;
assign RX_BIT_CTRL_OUT5[176] = GND;
assign RX_BIT_CTRL_OUT5[177] = GND;
assign RX_BIT_CTRL_OUT5[178] = GND;
assign RX_BIT_CTRL_OUT5[179] = GND;
assign RX_BIT_CTRL_OUT5[180] = GND;
assign RX_BIT_CTRL_OUT5[181] = GND;
assign RX_BIT_CTRL_OUT5[182] = GND;
assign RX_BIT_CTRL_OUT5[183] = GND;
assign RX_BIT_CTRL_OUT5[184] = GND;
assign RX_BIT_CTRL_OUT5[185] = GND;
assign RX_BIT_CTRL_OUT5[186] = GND;
assign RX_BIT_CTRL_OUT5[187] = GND;
assign RX_BIT_CTRL_OUT5[188] = GND;
assign RX_BIT_CTRL_OUT5[189] = GND;
assign RX_BIT_CTRL_OUT5[190] = GND;
assign RX_BIT_CTRL_OUT5[191] = GND;
assign RX_BIT_CTRL_OUT5[192] = GND;
assign RX_BIT_CTRL_OUT5[193] = GND;
assign RX_BIT_CTRL_OUT5[194] = GND;
assign RX_BIT_CTRL_OUT5[195] = GND;
assign RX_BIT_CTRL_OUT5[196] = GND;
assign RX_BIT_CTRL_OUT5[197] = GND;
assign RX_BIT_CTRL_OUT5[198] = GND;
assign RX_BIT_CTRL_OUT5[199] = GND;
assign RX_BIT_CTRL_OUT5[200] = GND;
assign RX_BIT_CTRL_OUT5[201] = GND;
assign RX_BIT_CTRL_OUT5[202] = GND;
assign RX_BIT_CTRL_OUT5[203] = GND;
assign RX_BIT_CTRL_OUT5[204] = GND;
assign RX_BIT_CTRL_OUT5[205] = GND;
assign RX_BIT_CTRL_OUT5[206] = GND;
assign RX_BIT_CTRL_OUT5[207] = GND;
assign RX_BIT_CTRL_OUT5[208] = GND;
assign RX_BIT_CTRL_OUT5[209] = GND;
assign RX_BIT_CTRL_OUT5[210] = GND;
assign RX_BIT_CTRL_OUT5[211] = GND;
assign RX_BIT_CTRL_OUT5[212] = GND;
assign RX_BIT_CTRL_OUT5[213] = GND;
assign RX_BIT_CTRL_OUT5[214] = GND;
assign RX_BIT_CTRL_OUT5[215] = GND;
assign RX_BIT_CTRL_OUT5[216] = GND;
assign RX_BIT_CTRL_OUT5[217] = GND;
assign RX_BIT_CTRL_OUT5[218] = GND;
assign RX_BIT_CTRL_OUT5[219] = GND;
assign RX_BIT_CTRL_OUT5[220] = GND;
assign RX_BIT_CTRL_OUT5[221] = GND;
assign RX_BIT_CTRL_OUT5[222] = GND;
assign RX_BIT_CTRL_OUT5[223] = GND;
assign RX_BIT_CTRL_OUT5[224] = GND;
assign RX_BIT_CTRL_OUT5[225] = GND;
assign RX_BIT_CTRL_OUT5[226] = GND;
assign RX_BIT_CTRL_OUT5[227] = GND;
assign RX_BIT_CTRL_OUT5[228] = GND;
assign RX_BIT_CTRL_OUT5[229] = GND;
assign RX_BIT_CTRL_OUT5[230] = GND;
assign RX_BIT_CTRL_OUT5[231] = GND;
assign RX_BIT_CTRL_OUT5[232] = GND;
assign RX_BIT_CTRL_OUT5[233] = GND;
assign RX_BIT_CTRL_OUT5[234] = GND;
assign RX_BIT_CTRL_OUT5[235] = GND;
assign RX_BIT_CTRL_OUT5[236] = GND;
assign RX_BIT_CTRL_OUT5[237] = GND;
assign RX_BIT_CTRL_OUT5[238] = GND;
assign RX_BIT_CTRL_OUT5[239] = GND;
assign RX_BIT_CTRL_OUT5[240] = GND;
assign RX_BIT_CTRL_OUT5[241] = GND;
assign RX_BIT_CTRL_OUT5[242] = GND;
assign RX_BIT_CTRL_OUT5[243] = GND;
assign RX_BIT_CTRL_OUT5[244] = GND;
assign RX_BIT_CTRL_OUT5[245] = GND;
assign RX_BIT_CTRL_OUT5[246] = GND;
assign RX_BIT_CTRL_OUT5[247] = GND;
assign RX_BIT_CTRL_OUT5[248] = GND;
assign RX_BIT_CTRL_OUT5[249] = GND;
assign RX_BIT_CTRL_OUT5[250] = GND;
assign RX_BIT_CTRL_OUT5[251] = GND;
assign RX_BIT_CTRL_OUT5[252] = GND;
assign RX_BIT_CTRL_OUT5[253] = GND;
assign RX_BIT_CTRL_OUT5[254] = GND;
assign RX_BIT_CTRL_OUT5[255] = GND;
assign RX_BIT_CTRL_OUT5[256] = GND;
assign RX_BIT_CTRL_OUT5[257] = GND;
assign RX_BIT_CTRL_OUT5[258] = GND;
assign RX_BIT_CTRL_OUT5[259] = GND;
assign RX_BIT_CTRL_OUT5[260] = GND;
assign RX_BIT_CTRL_OUT5[261] = GND;
assign RX_BIT_CTRL_OUT5[262] = GND;
assign RX_BIT_CTRL_OUT5[263] = GND;
assign RX_BIT_CTRL_OUT5[264] = GND;
assign RX_BIT_CTRL_OUT5[265] = GND;
assign RX_BIT_CTRL_OUT5[266] = GND;
assign RX_BIT_CTRL_OUT5[267] = GND;
assign RX_BIT_CTRL_OUT5[268] = GND;
assign RX_BIT_CTRL_OUT5[269] = GND;
assign RX_BIT_CTRL_OUT5[270] = GND;
assign RX_BIT_CTRL_OUT5[271] = GND;
assign RX_BIT_CTRL_OUT5[272] = GND;
assign RX_BIT_CTRL_OUT5[273] = GND;
assign RX_BIT_CTRL_OUT5[274] = GND;
assign RX_BIT_CTRL_OUT5[275] = GND;
assign RX_BIT_CTRL_OUT5[276] = GND;
assign RX_BIT_CTRL_OUT5[277] = GND;
assign RX_BIT_CTRL_OUT5[278] = GND;
assign RX_BIT_CTRL_OUT5[279] = GND;
assign RX_BIT_CTRL_OUT5[280] = GND;
assign RX_BIT_CTRL_OUT5[281] = GND;
assign RX_BIT_CTRL_OUT5[282] = GND;
assign RX_BIT_CTRL_OUT5[283] = GND;
assign RX_BIT_CTRL_OUT5[284] = GND;
assign RX_BIT_CTRL_OUT5[285] = GND;
assign RX_BIT_CTRL_OUT5[286] = GND;
assign RX_BIT_CTRL_OUT5[287] = GND;
assign RX_BIT_CTRL_OUT5[288] = GND;
assign RX_BIT_CTRL_OUT5[289] = GND;
assign RX_BIT_CTRL_OUT5[290] = GND;
assign RX_BIT_CTRL_OUT5[291] = GND;
assign RX_BIT_CTRL_OUT5[292] = GND;
assign RX_BIT_CTRL_OUT5[293] = GND;
assign RX_BIT_CTRL_OUT5[294] = GND;
assign RX_BIT_CTRL_OUT5[295] = GND;
assign RX_BIT_CTRL_OUT5[296] = GND;
assign RX_BIT_CTRL_OUT5[297] = GND;
assign RX_BIT_CTRL_OUT5[298] = GND;
assign RX_BIT_CTRL_OUT5[299] = GND;
assign RX_BIT_CTRL_OUT5[300] = GND;
assign RX_BIT_CTRL_OUT5[301] = GND;
assign RX_BIT_CTRL_OUT5[302] = GND;
assign RX_BIT_CTRL_OUT5[303] = GND;
assign RX_BIT_CTRL_OUT5[304] = GND;
assign RX_BIT_CTRL_OUT5[305] = GND;
assign RX_BIT_CTRL_OUT5[306] = GND;
assign RX_BIT_CTRL_OUT5[307] = GND;
assign RX_BIT_CTRL_OUT5[308] = GND;
assign RX_BIT_CTRL_OUT5[309] = GND;
assign RX_BIT_CTRL_OUT5[310] = GND;
assign RX_BIT_CTRL_OUT5[311] = GND;
assign RX_BIT_CTRL_OUT5[312] = GND;
assign RX_BIT_CTRL_OUT5[313] = GND;
assign RX_BIT_CTRL_OUT5[314] = GND;
assign RX_BIT_CTRL_OUT5[315] = GND;
assign RX_BIT_CTRL_OUT5[316] = GND;
assign RX_BIT_CTRL_OUT5[317] = GND;
assign RX_BIT_CTRL_OUT5[318] = GND;
assign RX_BIT_CTRL_OUT5[319] = GND;
assign RX_BIT_CTRL_OUT6[0] = GND;
assign RX_BIT_CTRL_OUT6[1] = GND;
assign RX_BIT_CTRL_OUT6[2] = GND;
assign RX_BIT_CTRL_OUT6[3] = GND;
assign RX_BIT_CTRL_OUT6[4] = GND;
assign RX_BIT_CTRL_OUT6[5] = GND;
assign RX_BIT_CTRL_OUT6[6] = GND;
assign RX_BIT_CTRL_OUT6[7] = GND;
assign RX_BIT_CTRL_OUT6[8] = GND;
assign RX_BIT_CTRL_OUT6[9] = GND;
assign RX_BIT_CTRL_OUT6[10] = GND;
assign RX_BIT_CTRL_OUT6[11] = GND;
assign RX_BIT_CTRL_OUT6[12] = GND;
assign RX_BIT_CTRL_OUT6[13] = GND;
assign RX_BIT_CTRL_OUT6[14] = GND;
assign RX_BIT_CTRL_OUT6[15] = GND;
assign RX_BIT_CTRL_OUT6[16] = GND;
assign RX_BIT_CTRL_OUT6[17] = GND;
assign RX_BIT_CTRL_OUT6[18] = GND;
assign RX_BIT_CTRL_OUT6[19] = GND;
assign RX_BIT_CTRL_OUT6[20] = GND;
assign RX_BIT_CTRL_OUT6[21] = GND;
assign RX_BIT_CTRL_OUT6[22] = GND;
assign RX_BIT_CTRL_OUT6[23] = GND;
assign RX_BIT_CTRL_OUT6[24] = GND;
assign RX_BIT_CTRL_OUT6[25] = GND;
assign RX_BIT_CTRL_OUT6[26] = GND;
assign RX_BIT_CTRL_OUT6[27] = GND;
assign RX_BIT_CTRL_OUT6[28] = GND;
assign RX_BIT_CTRL_OUT6[29] = GND;
assign RX_BIT_CTRL_OUT6[30] = GND;
assign RX_BIT_CTRL_OUT6[31] = GND;
assign RX_BIT_CTRL_OUT6[32] = GND;
assign RX_BIT_CTRL_OUT6[33] = GND;
assign RX_BIT_CTRL_OUT6[34] = GND;
assign RX_BIT_CTRL_OUT6[35] = GND;
assign RX_BIT_CTRL_OUT6[36] = GND;
assign RX_BIT_CTRL_OUT6[37] = GND;
assign RX_BIT_CTRL_OUT6[38] = GND;
assign RX_BIT_CTRL_OUT6[39] = GND;
assign RX_BIT_CTRL_OUT6[40] = GND;
assign RX_BIT_CTRL_OUT6[41] = GND;
assign RX_BIT_CTRL_OUT6[42] = GND;
assign RX_BIT_CTRL_OUT6[43] = GND;
assign RX_BIT_CTRL_OUT6[44] = GND;
assign RX_BIT_CTRL_OUT6[45] = GND;
assign RX_BIT_CTRL_OUT6[46] = GND;
assign RX_BIT_CTRL_OUT6[47] = GND;
assign RX_BIT_CTRL_OUT6[48] = GND;
assign RX_BIT_CTRL_OUT6[49] = GND;
assign RX_BIT_CTRL_OUT6[50] = GND;
assign RX_BIT_CTRL_OUT6[51] = GND;
assign RX_BIT_CTRL_OUT6[52] = GND;
assign RX_BIT_CTRL_OUT6[53] = GND;
assign RX_BIT_CTRL_OUT6[54] = GND;
assign RX_BIT_CTRL_OUT6[55] = GND;
assign RX_BIT_CTRL_OUT6[56] = GND;
assign RX_BIT_CTRL_OUT6[57] = GND;
assign RX_BIT_CTRL_OUT6[58] = GND;
assign RX_BIT_CTRL_OUT6[59] = GND;
assign RX_BIT_CTRL_OUT6[60] = GND;
assign RX_BIT_CTRL_OUT6[61] = GND;
assign RX_BIT_CTRL_OUT6[62] = GND;
assign RX_BIT_CTRL_OUT6[63] = GND;
assign RX_BIT_CTRL_OUT6[64] = GND;
assign RX_BIT_CTRL_OUT6[65] = GND;
assign RX_BIT_CTRL_OUT6[66] = GND;
assign RX_BIT_CTRL_OUT6[67] = GND;
assign RX_BIT_CTRL_OUT6[68] = GND;
assign RX_BIT_CTRL_OUT6[69] = GND;
assign RX_BIT_CTRL_OUT6[70] = GND;
assign RX_BIT_CTRL_OUT6[71] = GND;
assign RX_BIT_CTRL_OUT6[72] = GND;
assign RX_BIT_CTRL_OUT6[73] = GND;
assign RX_BIT_CTRL_OUT6[74] = GND;
assign RX_BIT_CTRL_OUT6[75] = GND;
assign RX_BIT_CTRL_OUT6[76] = GND;
assign RX_BIT_CTRL_OUT6[77] = GND;
assign RX_BIT_CTRL_OUT6[78] = GND;
assign RX_BIT_CTRL_OUT6[79] = GND;
assign RX_BIT_CTRL_OUT6[80] = GND;
assign RX_BIT_CTRL_OUT6[81] = GND;
assign RX_BIT_CTRL_OUT6[82] = GND;
assign RX_BIT_CTRL_OUT6[83] = GND;
assign RX_BIT_CTRL_OUT6[84] = GND;
assign RX_BIT_CTRL_OUT6[85] = GND;
assign RX_BIT_CTRL_OUT6[86] = GND;
assign RX_BIT_CTRL_OUT6[87] = GND;
assign RX_BIT_CTRL_OUT6[88] = GND;
assign RX_BIT_CTRL_OUT6[89] = GND;
assign RX_BIT_CTRL_OUT6[90] = GND;
assign RX_BIT_CTRL_OUT6[91] = GND;
assign RX_BIT_CTRL_OUT6[92] = GND;
assign RX_BIT_CTRL_OUT6[93] = GND;
assign RX_BIT_CTRL_OUT6[94] = GND;
assign RX_BIT_CTRL_OUT6[95] = GND;
assign RX_BIT_CTRL_OUT6[96] = GND;
assign RX_BIT_CTRL_OUT6[97] = GND;
assign RX_BIT_CTRL_OUT6[98] = GND;
assign RX_BIT_CTRL_OUT6[99] = GND;
assign RX_BIT_CTRL_OUT6[100] = GND;
assign RX_BIT_CTRL_OUT6[101] = GND;
assign RX_BIT_CTRL_OUT6[102] = GND;
assign RX_BIT_CTRL_OUT6[103] = GND;
assign RX_BIT_CTRL_OUT6[104] = GND;
assign RX_BIT_CTRL_OUT6[105] = GND;
assign RX_BIT_CTRL_OUT6[106] = GND;
assign RX_BIT_CTRL_OUT6[107] = GND;
assign RX_BIT_CTRL_OUT6[108] = GND;
assign RX_BIT_CTRL_OUT6[109] = GND;
assign RX_BIT_CTRL_OUT6[110] = GND;
assign RX_BIT_CTRL_OUT6[111] = GND;
assign RX_BIT_CTRL_OUT6[112] = GND;
assign RX_BIT_CTRL_OUT6[113] = GND;
assign RX_BIT_CTRL_OUT6[114] = GND;
assign RX_BIT_CTRL_OUT6[115] = GND;
assign RX_BIT_CTRL_OUT6[116] = GND;
assign RX_BIT_CTRL_OUT6[117] = GND;
assign RX_BIT_CTRL_OUT6[118] = GND;
assign RX_BIT_CTRL_OUT6[119] = GND;
assign RX_BIT_CTRL_OUT6[120] = GND;
assign RX_BIT_CTRL_OUT6[121] = GND;
assign RX_BIT_CTRL_OUT6[122] = GND;
assign RX_BIT_CTRL_OUT6[123] = GND;
assign RX_BIT_CTRL_OUT6[124] = GND;
assign RX_BIT_CTRL_OUT6[125] = GND;
assign RX_BIT_CTRL_OUT6[126] = GND;
assign RX_BIT_CTRL_OUT6[127] = GND;
assign RX_BIT_CTRL_OUT6[128] = GND;
assign RX_BIT_CTRL_OUT6[129] = GND;
assign RX_BIT_CTRL_OUT6[130] = GND;
assign RX_BIT_CTRL_OUT6[131] = GND;
assign RX_BIT_CTRL_OUT6[132] = GND;
assign RX_BIT_CTRL_OUT6[133] = GND;
assign RX_BIT_CTRL_OUT6[134] = GND;
assign RX_BIT_CTRL_OUT6[135] = GND;
assign RX_BIT_CTRL_OUT6[136] = GND;
assign RX_BIT_CTRL_OUT6[137] = GND;
assign RX_BIT_CTRL_OUT6[138] = GND;
assign RX_BIT_CTRL_OUT6[139] = GND;
assign RX_BIT_CTRL_OUT6[140] = GND;
assign RX_BIT_CTRL_OUT6[141] = GND;
assign RX_BIT_CTRL_OUT6[142] = GND;
assign RX_BIT_CTRL_OUT6[143] = GND;
assign RX_BIT_CTRL_OUT6[144] = GND;
assign RX_BIT_CTRL_OUT6[145] = GND;
assign RX_BIT_CTRL_OUT6[146] = GND;
assign RX_BIT_CTRL_OUT6[147] = GND;
assign RX_BIT_CTRL_OUT6[148] = GND;
assign RX_BIT_CTRL_OUT6[149] = GND;
assign RX_BIT_CTRL_OUT6[150] = GND;
assign RX_BIT_CTRL_OUT6[151] = GND;
assign RX_BIT_CTRL_OUT6[152] = GND;
assign RX_BIT_CTRL_OUT6[153] = GND;
assign RX_BIT_CTRL_OUT6[154] = GND;
assign RX_BIT_CTRL_OUT6[155] = GND;
assign RX_BIT_CTRL_OUT6[156] = GND;
assign RX_BIT_CTRL_OUT6[157] = GND;
assign RX_BIT_CTRL_OUT6[158] = GND;
assign RX_BIT_CTRL_OUT6[159] = GND;
assign RX_BIT_CTRL_OUT6[160] = GND;
assign RX_BIT_CTRL_OUT6[161] = GND;
assign RX_BIT_CTRL_OUT6[162] = GND;
assign RX_BIT_CTRL_OUT6[163] = GND;
assign RX_BIT_CTRL_OUT6[164] = GND;
assign RX_BIT_CTRL_OUT6[165] = GND;
assign RX_BIT_CTRL_OUT6[166] = GND;
assign RX_BIT_CTRL_OUT6[167] = GND;
assign RX_BIT_CTRL_OUT6[168] = GND;
assign RX_BIT_CTRL_OUT6[169] = GND;
assign RX_BIT_CTRL_OUT6[170] = GND;
assign RX_BIT_CTRL_OUT6[171] = GND;
assign RX_BIT_CTRL_OUT6[172] = GND;
assign RX_BIT_CTRL_OUT6[173] = GND;
assign RX_BIT_CTRL_OUT6[174] = GND;
assign RX_BIT_CTRL_OUT6[175] = GND;
assign RX_BIT_CTRL_OUT6[176] = GND;
assign RX_BIT_CTRL_OUT6[177] = GND;
assign RX_BIT_CTRL_OUT6[178] = GND;
assign RX_BIT_CTRL_OUT6[179] = GND;
assign RX_BIT_CTRL_OUT6[180] = GND;
assign RX_BIT_CTRL_OUT6[181] = GND;
assign RX_BIT_CTRL_OUT6[182] = GND;
assign RX_BIT_CTRL_OUT6[183] = GND;
assign RX_BIT_CTRL_OUT6[184] = GND;
assign RX_BIT_CTRL_OUT6[185] = GND;
assign RX_BIT_CTRL_OUT6[186] = GND;
assign RX_BIT_CTRL_OUT6[187] = GND;
assign RX_BIT_CTRL_OUT6[188] = GND;
assign RX_BIT_CTRL_OUT6[189] = GND;
assign RX_BIT_CTRL_OUT6[190] = GND;
assign RX_BIT_CTRL_OUT6[191] = GND;
assign RX_BIT_CTRL_OUT6[192] = GND;
assign RX_BIT_CTRL_OUT6[193] = GND;
assign RX_BIT_CTRL_OUT6[194] = GND;
assign RX_BIT_CTRL_OUT6[195] = GND;
assign RX_BIT_CTRL_OUT6[196] = GND;
assign RX_BIT_CTRL_OUT6[197] = GND;
assign RX_BIT_CTRL_OUT6[198] = GND;
assign RX_BIT_CTRL_OUT6[199] = GND;
assign RX_BIT_CTRL_OUT6[200] = GND;
assign RX_BIT_CTRL_OUT6[201] = GND;
assign RX_BIT_CTRL_OUT6[202] = GND;
assign RX_BIT_CTRL_OUT6[203] = GND;
assign RX_BIT_CTRL_OUT6[204] = GND;
assign RX_BIT_CTRL_OUT6[205] = GND;
assign RX_BIT_CTRL_OUT6[206] = GND;
assign RX_BIT_CTRL_OUT6[207] = GND;
assign RX_BIT_CTRL_OUT6[208] = GND;
assign RX_BIT_CTRL_OUT6[209] = GND;
assign RX_BIT_CTRL_OUT6[210] = GND;
assign RX_BIT_CTRL_OUT6[211] = GND;
assign RX_BIT_CTRL_OUT6[212] = GND;
assign RX_BIT_CTRL_OUT6[213] = GND;
assign RX_BIT_CTRL_OUT6[214] = GND;
assign RX_BIT_CTRL_OUT6[215] = GND;
assign RX_BIT_CTRL_OUT6[216] = GND;
assign RX_BIT_CTRL_OUT6[217] = GND;
assign RX_BIT_CTRL_OUT6[218] = GND;
assign RX_BIT_CTRL_OUT6[219] = GND;
assign RX_BIT_CTRL_OUT6[220] = GND;
assign RX_BIT_CTRL_OUT6[221] = GND;
assign RX_BIT_CTRL_OUT6[222] = GND;
assign RX_BIT_CTRL_OUT6[223] = GND;
assign RX_BIT_CTRL_OUT6[224] = GND;
assign RX_BIT_CTRL_OUT6[225] = GND;
assign RX_BIT_CTRL_OUT6[226] = GND;
assign RX_BIT_CTRL_OUT6[227] = GND;
assign RX_BIT_CTRL_OUT6[228] = GND;
assign RX_BIT_CTRL_OUT6[229] = GND;
assign RX_BIT_CTRL_OUT6[230] = GND;
assign RX_BIT_CTRL_OUT6[231] = GND;
assign RX_BIT_CTRL_OUT6[232] = GND;
assign RX_BIT_CTRL_OUT6[233] = GND;
assign RX_BIT_CTRL_OUT6[234] = GND;
assign RX_BIT_CTRL_OUT6[235] = GND;
assign RX_BIT_CTRL_OUT6[236] = GND;
assign RX_BIT_CTRL_OUT6[237] = GND;
assign RX_BIT_CTRL_OUT6[238] = GND;
assign RX_BIT_CTRL_OUT6[239] = GND;
assign RX_BIT_CTRL_OUT6[240] = GND;
assign RX_BIT_CTRL_OUT6[241] = GND;
assign RX_BIT_CTRL_OUT6[242] = GND;
assign RX_BIT_CTRL_OUT6[243] = GND;
assign RX_BIT_CTRL_OUT6[244] = GND;
assign RX_BIT_CTRL_OUT6[245] = GND;
assign RX_BIT_CTRL_OUT6[246] = GND;
assign RX_BIT_CTRL_OUT6[247] = GND;
assign RX_BIT_CTRL_OUT6[248] = GND;
assign RX_BIT_CTRL_OUT6[249] = GND;
assign RX_BIT_CTRL_OUT6[250] = GND;
assign RX_BIT_CTRL_OUT6[251] = GND;
assign RX_BIT_CTRL_OUT6[252] = GND;
assign RX_BIT_CTRL_OUT6[253] = GND;
assign RX_BIT_CTRL_OUT6[254] = GND;
assign RX_BIT_CTRL_OUT6[255] = GND;
assign RX_BIT_CTRL_OUT6[256] = GND;
assign RX_BIT_CTRL_OUT6[257] = GND;
assign RX_BIT_CTRL_OUT6[258] = GND;
assign RX_BIT_CTRL_OUT6[259] = GND;
assign RX_BIT_CTRL_OUT6[260] = GND;
assign RX_BIT_CTRL_OUT6[261] = GND;
assign RX_BIT_CTRL_OUT6[262] = GND;
assign RX_BIT_CTRL_OUT6[263] = GND;
assign RX_BIT_CTRL_OUT6[264] = GND;
assign RX_BIT_CTRL_OUT6[265] = GND;
assign RX_BIT_CTRL_OUT6[266] = GND;
assign RX_BIT_CTRL_OUT6[267] = GND;
assign RX_BIT_CTRL_OUT6[268] = GND;
assign RX_BIT_CTRL_OUT6[269] = GND;
assign RX_BIT_CTRL_OUT6[270] = GND;
assign RX_BIT_CTRL_OUT6[271] = GND;
assign RX_BIT_CTRL_OUT6[272] = GND;
assign RX_BIT_CTRL_OUT6[273] = GND;
assign RX_BIT_CTRL_OUT6[274] = GND;
assign RX_BIT_CTRL_OUT6[275] = GND;
assign RX_BIT_CTRL_OUT6[276] = GND;
assign RX_BIT_CTRL_OUT6[277] = GND;
assign RX_BIT_CTRL_OUT6[278] = GND;
assign RX_BIT_CTRL_OUT6[279] = GND;
assign RX_BIT_CTRL_OUT6[280] = GND;
assign RX_BIT_CTRL_OUT6[281] = GND;
assign RX_BIT_CTRL_OUT6[282] = GND;
assign RX_BIT_CTRL_OUT6[283] = GND;
assign RX_BIT_CTRL_OUT6[284] = GND;
assign RX_BIT_CTRL_OUT6[285] = GND;
assign RX_BIT_CTRL_OUT6[286] = GND;
assign RX_BIT_CTRL_OUT6[287] = GND;
assign RX_BIT_CTRL_OUT6[288] = GND;
assign RX_BIT_CTRL_OUT6[289] = GND;
assign RX_BIT_CTRL_OUT6[290] = GND;
assign RX_BIT_CTRL_OUT6[291] = GND;
assign RX_BIT_CTRL_OUT6[292] = GND;
assign RX_BIT_CTRL_OUT6[293] = GND;
assign RX_BIT_CTRL_OUT6[294] = GND;
assign RX_BIT_CTRL_OUT6[295] = GND;
assign RX_BIT_CTRL_OUT6[296] = GND;
assign RX_BIT_CTRL_OUT6[297] = GND;
assign RX_BIT_CTRL_OUT6[298] = GND;
assign RX_BIT_CTRL_OUT6[299] = GND;
assign RX_BIT_CTRL_OUT6[300] = GND;
assign RX_BIT_CTRL_OUT6[301] = GND;
assign RX_BIT_CTRL_OUT6[302] = GND;
assign RX_BIT_CTRL_OUT6[303] = GND;
assign RX_BIT_CTRL_OUT6[304] = GND;
assign RX_BIT_CTRL_OUT6[305] = GND;
assign RX_BIT_CTRL_OUT6[306] = GND;
assign RX_BIT_CTRL_OUT6[307] = GND;
assign RX_BIT_CTRL_OUT6[308] = GND;
assign RX_BIT_CTRL_OUT6[309] = GND;
assign RX_BIT_CTRL_OUT6[310] = GND;
assign RX_BIT_CTRL_OUT6[311] = GND;
assign RX_BIT_CTRL_OUT6[312] = GND;
assign RX_BIT_CTRL_OUT6[313] = GND;
assign RX_BIT_CTRL_OUT6[314] = GND;
assign RX_BIT_CTRL_OUT6[315] = GND;
assign RX_BIT_CTRL_OUT6[316] = GND;
assign RX_BIT_CTRL_OUT6[317] = GND;
assign RX_BIT_CTRL_OUT6[318] = GND;
assign RX_BIT_CTRL_OUT6[319] = GND;
assign TX_BIT_CTRL_OUT0[0] = GND;
assign TX_BIT_CTRL_OUT0[1] = GND;
assign TX_BIT_CTRL_OUT0[2] = GND;
assign TX_BIT_CTRL_OUT0[3] = GND;
assign TX_BIT_CTRL_OUT0[4] = GND;
assign TX_BIT_CTRL_OUT0[5] = GND;
assign TX_BIT_CTRL_OUT0[6] = GND;
assign TX_BIT_CTRL_OUT0[7] = GND;
assign TX_BIT_CTRL_OUT0[8] = GND;
assign TX_BIT_CTRL_OUT0[9] = GND;
assign TX_BIT_CTRL_OUT0[10] = GND;
assign TX_BIT_CTRL_OUT0[11] = GND;
assign TX_BIT_CTRL_OUT0[12] = GND;
assign TX_BIT_CTRL_OUT0[13] = GND;
assign TX_BIT_CTRL_OUT0[14] = GND;
assign TX_BIT_CTRL_OUT0[15] = GND;
assign TX_BIT_CTRL_OUT0[16] = GND;
assign TX_BIT_CTRL_OUT0[17] = GND;
assign TX_BIT_CTRL_OUT0[18] = GND;
assign TX_BIT_CTRL_OUT0[19] = GND;
assign TX_BIT_CTRL_OUT0[20] = GND;
assign TX_BIT_CTRL_OUT0[21] = GND;
assign TX_BIT_CTRL_OUT0[22] = GND;
assign TX_BIT_CTRL_OUT0[23] = GND;
assign TX_BIT_CTRL_OUT0[24] = GND;
assign TX_BIT_CTRL_OUT0[25] = GND;
assign TX_BIT_CTRL_OUT0[26] = GND;
assign TX_BIT_CTRL_OUT0[27] = GND;
assign TX_BIT_CTRL_OUT0[28] = GND;
assign TX_BIT_CTRL_OUT0[29] = GND;
assign TX_BIT_CTRL_OUT0[30] = GND;
assign TX_BIT_CTRL_OUT0[31] = GND;
assign TX_BIT_CTRL_OUT0[32] = GND;
assign TX_BIT_CTRL_OUT0[33] = GND;
assign TX_BIT_CTRL_OUT0[34] = GND;
assign TX_BIT_CTRL_OUT0[35] = GND;
assign TX_BIT_CTRL_OUT0[36] = GND;
assign TX_BIT_CTRL_OUT0[37] = GND;
assign TX_BIT_CTRL_OUT0[38] = GND;
assign TX_BIT_CTRL_OUT0[39] = GND;
assign TX_BIT_CTRL_OUT0[40] = GND;
assign TX_BIT_CTRL_OUT0[41] = GND;
assign TX_BIT_CTRL_OUT0[42] = GND;
assign TX_BIT_CTRL_OUT0[43] = GND;
assign TX_BIT_CTRL_OUT0[44] = GND;
assign TX_BIT_CTRL_OUT0[45] = GND;
assign TX_BIT_CTRL_OUT0[46] = GND;
assign TX_BIT_CTRL_OUT0[47] = GND;
assign TX_BIT_CTRL_OUT0[48] = GND;
assign TX_BIT_CTRL_OUT0[49] = GND;
assign TX_BIT_CTRL_OUT0[50] = GND;
assign TX_BIT_CTRL_OUT0[51] = GND;
assign TX_BIT_CTRL_OUT0[52] = GND;
assign TX_BIT_CTRL_OUT0[53] = GND;
assign TX_BIT_CTRL_OUT0[54] = GND;
assign TX_BIT_CTRL_OUT0[55] = GND;
assign TX_BIT_CTRL_OUT0[56] = GND;
assign TX_BIT_CTRL_OUT0[57] = GND;
assign TX_BIT_CTRL_OUT0[58] = GND;
assign TX_BIT_CTRL_OUT0[59] = GND;
assign TX_BIT_CTRL_OUT0[60] = GND;
assign TX_BIT_CTRL_OUT0[61] = GND;
assign TX_BIT_CTRL_OUT0[62] = GND;
assign TX_BIT_CTRL_OUT0[63] = GND;
assign TX_BIT_CTRL_OUT0[64] = GND;
assign TX_BIT_CTRL_OUT0[65] = GND;
assign TX_BIT_CTRL_OUT0[66] = GND;
assign TX_BIT_CTRL_OUT0[67] = GND;
assign TX_BIT_CTRL_OUT0[68] = GND;
assign TX_BIT_CTRL_OUT0[69] = GND;
assign TX_BIT_CTRL_OUT0[70] = GND;
assign TX_BIT_CTRL_OUT0[71] = GND;
assign TX_BIT_CTRL_OUT0[72] = GND;
assign TX_BIT_CTRL_OUT0[73] = GND;
assign TX_BIT_CTRL_OUT0[74] = GND;
assign TX_BIT_CTRL_OUT0[75] = GND;
assign TX_BIT_CTRL_OUT0[76] = GND;
assign TX_BIT_CTRL_OUT0[77] = GND;
assign TX_BIT_CTRL_OUT0[78] = GND;
assign TX_BIT_CTRL_OUT0[79] = GND;
assign TX_BIT_CTRL_OUT0[80] = GND;
assign TX_BIT_CTRL_OUT0[81] = GND;
assign TX_BIT_CTRL_OUT0[82] = GND;
assign TX_BIT_CTRL_OUT0[83] = GND;
assign TX_BIT_CTRL_OUT0[84] = GND;
assign TX_BIT_CTRL_OUT0[85] = GND;
assign TX_BIT_CTRL_OUT0[86] = GND;
assign TX_BIT_CTRL_OUT0[87] = GND;
assign TX_BIT_CTRL_OUT0[88] = GND;
assign TX_BIT_CTRL_OUT0[89] = GND;
assign TX_BIT_CTRL_OUT0[90] = GND;
assign TX_BIT_CTRL_OUT0[91] = GND;
assign TX_BIT_CTRL_OUT0[92] = GND;
assign TX_BIT_CTRL_OUT0[93] = GND;
assign TX_BIT_CTRL_OUT0[94] = GND;
assign TX_BIT_CTRL_OUT0[95] = GND;
assign TX_BIT_CTRL_OUT0[96] = GND;
assign TX_BIT_CTRL_OUT0[97] = GND;
assign TX_BIT_CTRL_OUT0[98] = GND;
assign TX_BIT_CTRL_OUT0[99] = GND;
assign TX_BIT_CTRL_OUT0[100] = GND;
assign TX_BIT_CTRL_OUT0[101] = GND;
assign TX_BIT_CTRL_OUT0[102] = GND;
assign TX_BIT_CTRL_OUT0[103] = GND;
assign TX_BIT_CTRL_OUT0[104] = GND;
assign TX_BIT_CTRL_OUT0[105] = GND;
assign TX_BIT_CTRL_OUT0[106] = GND;
assign TX_BIT_CTRL_OUT0[107] = GND;
assign TX_BIT_CTRL_OUT0[108] = GND;
assign TX_BIT_CTRL_OUT0[109] = GND;
assign TX_BIT_CTRL_OUT0[110] = GND;
assign TX_BIT_CTRL_OUT0[111] = GND;
assign TX_BIT_CTRL_OUT0[112] = GND;
assign TX_BIT_CTRL_OUT0[113] = GND;
assign TX_BIT_CTRL_OUT0[114] = GND;
assign TX_BIT_CTRL_OUT0[115] = GND;
assign TX_BIT_CTRL_OUT0[116] = GND;
assign TX_BIT_CTRL_OUT0[117] = GND;
assign TX_BIT_CTRL_OUT0[118] = GND;
assign TX_BIT_CTRL_OUT0[119] = GND;
assign TX_BIT_CTRL_OUT0[160] = GND;
assign TX_BIT_CTRL_OUT0[161] = GND;
assign TX_BIT_CTRL_OUT0[162] = GND;
assign TX_BIT_CTRL_OUT0[163] = GND;
assign TX_BIT_CTRL_OUT0[164] = GND;
assign TX_BIT_CTRL_OUT0[165] = GND;
assign TX_BIT_CTRL_OUT0[166] = GND;
assign TX_BIT_CTRL_OUT0[167] = GND;
assign TX_BIT_CTRL_OUT0[168] = GND;
assign TX_BIT_CTRL_OUT0[169] = GND;
assign TX_BIT_CTRL_OUT0[170] = GND;
assign TX_BIT_CTRL_OUT0[171] = GND;
assign TX_BIT_CTRL_OUT0[172] = GND;
assign TX_BIT_CTRL_OUT0[173] = GND;
assign TX_BIT_CTRL_OUT0[174] = GND;
assign TX_BIT_CTRL_OUT0[175] = GND;
assign TX_BIT_CTRL_OUT0[176] = GND;
assign TX_BIT_CTRL_OUT0[177] = GND;
assign TX_BIT_CTRL_OUT0[178] = GND;
assign TX_BIT_CTRL_OUT0[179] = GND;
assign TX_BIT_CTRL_OUT0[180] = GND;
assign TX_BIT_CTRL_OUT0[181] = GND;
assign TX_BIT_CTRL_OUT0[182] = GND;
assign TX_BIT_CTRL_OUT0[183] = GND;
assign TX_BIT_CTRL_OUT0[184] = GND;
assign TX_BIT_CTRL_OUT0[185] = GND;
assign TX_BIT_CTRL_OUT0[186] = GND;
assign TX_BIT_CTRL_OUT0[187] = GND;
assign TX_BIT_CTRL_OUT0[188] = GND;
assign TX_BIT_CTRL_OUT0[189] = GND;
assign TX_BIT_CTRL_OUT0[190] = GND;
assign TX_BIT_CTRL_OUT0[191] = GND;
assign TX_BIT_CTRL_OUT0[192] = GND;
assign TX_BIT_CTRL_OUT0[193] = GND;
assign TX_BIT_CTRL_OUT0[194] = GND;
assign TX_BIT_CTRL_OUT0[195] = GND;
assign TX_BIT_CTRL_OUT0[196] = GND;
assign TX_BIT_CTRL_OUT0[197] = GND;
assign TX_BIT_CTRL_OUT0[198] = GND;
assign TX_BIT_CTRL_OUT0[199] = GND;
assign TX_BIT_CTRL_OUT0[200] = GND;
assign TX_BIT_CTRL_OUT0[201] = GND;
assign TX_BIT_CTRL_OUT0[202] = GND;
assign TX_BIT_CTRL_OUT0[203] = GND;
assign TX_BIT_CTRL_OUT0[204] = GND;
assign TX_BIT_CTRL_OUT0[205] = GND;
assign TX_BIT_CTRL_OUT0[206] = GND;
assign TX_BIT_CTRL_OUT0[207] = GND;
assign TX_BIT_CTRL_OUT0[208] = GND;
assign TX_BIT_CTRL_OUT0[209] = GND;
assign TX_BIT_CTRL_OUT0[210] = GND;
assign TX_BIT_CTRL_OUT0[211] = GND;
assign TX_BIT_CTRL_OUT0[212] = GND;
assign TX_BIT_CTRL_OUT0[213] = GND;
assign TX_BIT_CTRL_OUT0[214] = GND;
assign TX_BIT_CTRL_OUT0[215] = GND;
assign TX_BIT_CTRL_OUT0[216] = GND;
assign TX_BIT_CTRL_OUT0[217] = GND;
assign TX_BIT_CTRL_OUT0[218] = GND;
assign TX_BIT_CTRL_OUT0[219] = GND;
assign TX_BIT_CTRL_OUT0[220] = GND;
assign TX_BIT_CTRL_OUT0[221] = GND;
assign TX_BIT_CTRL_OUT0[222] = GND;
assign TX_BIT_CTRL_OUT0[223] = GND;
assign TX_BIT_CTRL_OUT0[224] = GND;
assign TX_BIT_CTRL_OUT0[225] = GND;
assign TX_BIT_CTRL_OUT0[226] = GND;
assign TX_BIT_CTRL_OUT0[227] = GND;
assign TX_BIT_CTRL_OUT0[228] = GND;
assign TX_BIT_CTRL_OUT0[229] = GND;
assign TX_BIT_CTRL_OUT0[230] = GND;
assign TX_BIT_CTRL_OUT0[231] = GND;
assign TX_BIT_CTRL_OUT0[232] = GND;
assign TX_BIT_CTRL_OUT0[233] = GND;
assign TX_BIT_CTRL_OUT0[234] = GND;
assign TX_BIT_CTRL_OUT0[235] = GND;
assign TX_BIT_CTRL_OUT0[236] = GND;
assign TX_BIT_CTRL_OUT0[237] = GND;
assign TX_BIT_CTRL_OUT0[238] = GND;
assign TX_BIT_CTRL_OUT0[239] = GND;
assign TX_BIT_CTRL_OUT0[240] = GND;
assign TX_BIT_CTRL_OUT0[241] = GND;
assign TX_BIT_CTRL_OUT0[242] = GND;
assign TX_BIT_CTRL_OUT0[243] = GND;
assign TX_BIT_CTRL_OUT0[244] = GND;
assign TX_BIT_CTRL_OUT0[245] = GND;
assign TX_BIT_CTRL_OUT0[246] = GND;
assign TX_BIT_CTRL_OUT0[247] = GND;
assign TX_BIT_CTRL_OUT0[248] = GND;
assign TX_BIT_CTRL_OUT0[249] = GND;
assign TX_BIT_CTRL_OUT0[250] = GND;
assign TX_BIT_CTRL_OUT0[251] = GND;
assign TX_BIT_CTRL_OUT0[252] = GND;
assign TX_BIT_CTRL_OUT0[253] = GND;
assign TX_BIT_CTRL_OUT0[254] = GND;
assign TX_BIT_CTRL_OUT0[255] = GND;
assign TX_BIT_CTRL_OUT0[256] = GND;
assign TX_BIT_CTRL_OUT0[257] = GND;
assign TX_BIT_CTRL_OUT0[258] = GND;
assign TX_BIT_CTRL_OUT0[259] = GND;
assign TX_BIT_CTRL_OUT0[260] = GND;
assign TX_BIT_CTRL_OUT0[261] = GND;
assign TX_BIT_CTRL_OUT0[262] = GND;
assign TX_BIT_CTRL_OUT0[263] = GND;
assign TX_BIT_CTRL_OUT0[264] = GND;
assign TX_BIT_CTRL_OUT0[265] = GND;
assign TX_BIT_CTRL_OUT0[266] = GND;
assign TX_BIT_CTRL_OUT0[267] = GND;
assign TX_BIT_CTRL_OUT0[268] = GND;
assign TX_BIT_CTRL_OUT0[269] = GND;
assign TX_BIT_CTRL_OUT0[270] = GND;
assign TX_BIT_CTRL_OUT0[271] = GND;
assign TX_BIT_CTRL_OUT0[272] = GND;
assign TX_BIT_CTRL_OUT0[273] = GND;
assign TX_BIT_CTRL_OUT0[274] = GND;
assign TX_BIT_CTRL_OUT0[275] = GND;
assign TX_BIT_CTRL_OUT0[276] = GND;
assign TX_BIT_CTRL_OUT0[277] = GND;
assign TX_BIT_CTRL_OUT0[278] = GND;
assign TX_BIT_CTRL_OUT0[279] = GND;
assign TX_BIT_CTRL_OUT0[280] = GND;
assign TX_BIT_CTRL_OUT0[281] = GND;
assign TX_BIT_CTRL_OUT0[282] = GND;
assign TX_BIT_CTRL_OUT0[283] = GND;
assign TX_BIT_CTRL_OUT0[284] = GND;
assign TX_BIT_CTRL_OUT0[285] = GND;
assign TX_BIT_CTRL_OUT0[286] = GND;
assign TX_BIT_CTRL_OUT0[287] = GND;
assign TX_BIT_CTRL_OUT0[288] = GND;
assign TX_BIT_CTRL_OUT0[289] = GND;
assign TX_BIT_CTRL_OUT0[290] = GND;
assign TX_BIT_CTRL_OUT0[291] = GND;
assign TX_BIT_CTRL_OUT0[292] = GND;
assign TX_BIT_CTRL_OUT0[293] = GND;
assign TX_BIT_CTRL_OUT0[294] = GND;
assign TX_BIT_CTRL_OUT0[295] = GND;
assign TX_BIT_CTRL_OUT0[296] = GND;
assign TX_BIT_CTRL_OUT0[297] = GND;
assign TX_BIT_CTRL_OUT0[298] = GND;
assign TX_BIT_CTRL_OUT0[299] = GND;
assign TX_BIT_CTRL_OUT0[300] = GND;
assign TX_BIT_CTRL_OUT0[301] = GND;
assign TX_BIT_CTRL_OUT0[302] = GND;
assign TX_BIT_CTRL_OUT0[303] = GND;
assign TX_BIT_CTRL_OUT0[304] = GND;
assign TX_BIT_CTRL_OUT0[305] = GND;
assign TX_BIT_CTRL_OUT0[306] = GND;
assign TX_BIT_CTRL_OUT0[307] = GND;
assign TX_BIT_CTRL_OUT0[308] = GND;
assign TX_BIT_CTRL_OUT0[309] = GND;
assign TX_BIT_CTRL_OUT0[310] = GND;
assign TX_BIT_CTRL_OUT0[311] = GND;
assign TX_BIT_CTRL_OUT0[312] = GND;
assign TX_BIT_CTRL_OUT0[313] = GND;
assign TX_BIT_CTRL_OUT0[314] = GND;
assign TX_BIT_CTRL_OUT0[315] = GND;
assign TX_BIT_CTRL_OUT0[316] = GND;
assign TX_BIT_CTRL_OUT0[317] = GND;
assign TX_BIT_CTRL_OUT0[318] = GND;
assign TX_BIT_CTRL_OUT0[319] = GND;
assign TX_BIT_CTRL_OUT1[0] = GND;
assign TX_BIT_CTRL_OUT1[1] = GND;
assign TX_BIT_CTRL_OUT1[2] = GND;
assign TX_BIT_CTRL_OUT1[3] = GND;
assign TX_BIT_CTRL_OUT1[4] = GND;
assign TX_BIT_CTRL_OUT1[5] = GND;
assign TX_BIT_CTRL_OUT1[6] = GND;
assign TX_BIT_CTRL_OUT1[7] = GND;
assign TX_BIT_CTRL_OUT1[8] = GND;
assign TX_BIT_CTRL_OUT1[9] = GND;
assign TX_BIT_CTRL_OUT1[10] = GND;
assign TX_BIT_CTRL_OUT1[11] = GND;
assign TX_BIT_CTRL_OUT1[12] = GND;
assign TX_BIT_CTRL_OUT1[13] = GND;
assign TX_BIT_CTRL_OUT1[14] = GND;
assign TX_BIT_CTRL_OUT1[15] = GND;
assign TX_BIT_CTRL_OUT1[16] = GND;
assign TX_BIT_CTRL_OUT1[17] = GND;
assign TX_BIT_CTRL_OUT1[18] = GND;
assign TX_BIT_CTRL_OUT1[19] = GND;
assign TX_BIT_CTRL_OUT1[20] = GND;
assign TX_BIT_CTRL_OUT1[21] = GND;
assign TX_BIT_CTRL_OUT1[22] = GND;
assign TX_BIT_CTRL_OUT1[23] = GND;
assign TX_BIT_CTRL_OUT1[24] = GND;
assign TX_BIT_CTRL_OUT1[25] = GND;
assign TX_BIT_CTRL_OUT1[26] = GND;
assign TX_BIT_CTRL_OUT1[27] = GND;
assign TX_BIT_CTRL_OUT1[28] = GND;
assign TX_BIT_CTRL_OUT1[29] = GND;
assign TX_BIT_CTRL_OUT1[30] = GND;
assign TX_BIT_CTRL_OUT1[31] = GND;
assign TX_BIT_CTRL_OUT1[32] = GND;
assign TX_BIT_CTRL_OUT1[33] = GND;
assign TX_BIT_CTRL_OUT1[34] = GND;
assign TX_BIT_CTRL_OUT1[35] = GND;
assign TX_BIT_CTRL_OUT1[36] = GND;
assign TX_BIT_CTRL_OUT1[37] = GND;
assign TX_BIT_CTRL_OUT1[38] = GND;
assign TX_BIT_CTRL_OUT1[39] = GND;
assign TX_BIT_CTRL_OUT1[40] = GND;
assign TX_BIT_CTRL_OUT1[41] = GND;
assign TX_BIT_CTRL_OUT1[42] = GND;
assign TX_BIT_CTRL_OUT1[43] = GND;
assign TX_BIT_CTRL_OUT1[44] = GND;
assign TX_BIT_CTRL_OUT1[45] = GND;
assign TX_BIT_CTRL_OUT1[46] = GND;
assign TX_BIT_CTRL_OUT1[47] = GND;
assign TX_BIT_CTRL_OUT1[48] = GND;
assign TX_BIT_CTRL_OUT1[49] = GND;
assign TX_BIT_CTRL_OUT1[50] = GND;
assign TX_BIT_CTRL_OUT1[51] = GND;
assign TX_BIT_CTRL_OUT1[52] = GND;
assign TX_BIT_CTRL_OUT1[53] = GND;
assign TX_BIT_CTRL_OUT1[54] = GND;
assign TX_BIT_CTRL_OUT1[55] = GND;
assign TX_BIT_CTRL_OUT1[56] = GND;
assign TX_BIT_CTRL_OUT1[57] = GND;
assign TX_BIT_CTRL_OUT1[58] = GND;
assign TX_BIT_CTRL_OUT1[59] = GND;
assign TX_BIT_CTRL_OUT1[60] = GND;
assign TX_BIT_CTRL_OUT1[61] = GND;
assign TX_BIT_CTRL_OUT1[62] = GND;
assign TX_BIT_CTRL_OUT1[63] = GND;
assign TX_BIT_CTRL_OUT1[64] = GND;
assign TX_BIT_CTRL_OUT1[65] = GND;
assign TX_BIT_CTRL_OUT1[66] = GND;
assign TX_BIT_CTRL_OUT1[67] = GND;
assign TX_BIT_CTRL_OUT1[68] = GND;
assign TX_BIT_CTRL_OUT1[69] = GND;
assign TX_BIT_CTRL_OUT1[70] = GND;
assign TX_BIT_CTRL_OUT1[71] = GND;
assign TX_BIT_CTRL_OUT1[72] = GND;
assign TX_BIT_CTRL_OUT1[73] = GND;
assign TX_BIT_CTRL_OUT1[74] = GND;
assign TX_BIT_CTRL_OUT1[75] = GND;
assign TX_BIT_CTRL_OUT1[76] = GND;
assign TX_BIT_CTRL_OUT1[77] = GND;
assign TX_BIT_CTRL_OUT1[78] = GND;
assign TX_BIT_CTRL_OUT1[79] = GND;
assign TX_BIT_CTRL_OUT1[80] = GND;
assign TX_BIT_CTRL_OUT1[81] = GND;
assign TX_BIT_CTRL_OUT1[82] = GND;
assign TX_BIT_CTRL_OUT1[83] = GND;
assign TX_BIT_CTRL_OUT1[84] = GND;
assign TX_BIT_CTRL_OUT1[85] = GND;
assign TX_BIT_CTRL_OUT1[86] = GND;
assign TX_BIT_CTRL_OUT1[87] = GND;
assign TX_BIT_CTRL_OUT1[88] = GND;
assign TX_BIT_CTRL_OUT1[89] = GND;
assign TX_BIT_CTRL_OUT1[90] = GND;
assign TX_BIT_CTRL_OUT1[91] = GND;
assign TX_BIT_CTRL_OUT1[92] = GND;
assign TX_BIT_CTRL_OUT1[93] = GND;
assign TX_BIT_CTRL_OUT1[94] = GND;
assign TX_BIT_CTRL_OUT1[95] = GND;
assign TX_BIT_CTRL_OUT1[96] = GND;
assign TX_BIT_CTRL_OUT1[97] = GND;
assign TX_BIT_CTRL_OUT1[98] = GND;
assign TX_BIT_CTRL_OUT1[99] = GND;
assign TX_BIT_CTRL_OUT1[100] = GND;
assign TX_BIT_CTRL_OUT1[101] = GND;
assign TX_BIT_CTRL_OUT1[102] = GND;
assign TX_BIT_CTRL_OUT1[103] = GND;
assign TX_BIT_CTRL_OUT1[104] = GND;
assign TX_BIT_CTRL_OUT1[105] = GND;
assign TX_BIT_CTRL_OUT1[106] = GND;
assign TX_BIT_CTRL_OUT1[107] = GND;
assign TX_BIT_CTRL_OUT1[108] = GND;
assign TX_BIT_CTRL_OUT1[109] = GND;
assign TX_BIT_CTRL_OUT1[110] = GND;
assign TX_BIT_CTRL_OUT1[111] = GND;
assign TX_BIT_CTRL_OUT1[112] = GND;
assign TX_BIT_CTRL_OUT1[113] = GND;
assign TX_BIT_CTRL_OUT1[114] = GND;
assign TX_BIT_CTRL_OUT1[115] = GND;
assign TX_BIT_CTRL_OUT1[116] = GND;
assign TX_BIT_CTRL_OUT1[117] = GND;
assign TX_BIT_CTRL_OUT1[118] = GND;
assign TX_BIT_CTRL_OUT1[119] = GND;
assign TX_BIT_CTRL_OUT1[120] = GND;
assign TX_BIT_CTRL_OUT1[121] = GND;
assign TX_BIT_CTRL_OUT1[122] = GND;
assign TX_BIT_CTRL_OUT1[123] = GND;
assign TX_BIT_CTRL_OUT1[124] = GND;
assign TX_BIT_CTRL_OUT1[125] = GND;
assign TX_BIT_CTRL_OUT1[126] = GND;
assign TX_BIT_CTRL_OUT1[127] = GND;
assign TX_BIT_CTRL_OUT1[128] = GND;
assign TX_BIT_CTRL_OUT1[129] = GND;
assign TX_BIT_CTRL_OUT1[130] = GND;
assign TX_BIT_CTRL_OUT1[131] = GND;
assign TX_BIT_CTRL_OUT1[132] = GND;
assign TX_BIT_CTRL_OUT1[133] = GND;
assign TX_BIT_CTRL_OUT1[134] = GND;
assign TX_BIT_CTRL_OUT1[135] = GND;
assign TX_BIT_CTRL_OUT1[136] = GND;
assign TX_BIT_CTRL_OUT1[137] = GND;
assign TX_BIT_CTRL_OUT1[138] = GND;
assign TX_BIT_CTRL_OUT1[139] = GND;
assign TX_BIT_CTRL_OUT1[140] = GND;
assign TX_BIT_CTRL_OUT1[141] = GND;
assign TX_BIT_CTRL_OUT1[142] = GND;
assign TX_BIT_CTRL_OUT1[143] = GND;
assign TX_BIT_CTRL_OUT1[144] = GND;
assign TX_BIT_CTRL_OUT1[145] = GND;
assign TX_BIT_CTRL_OUT1[146] = GND;
assign TX_BIT_CTRL_OUT1[147] = GND;
assign TX_BIT_CTRL_OUT1[148] = GND;
assign TX_BIT_CTRL_OUT1[149] = GND;
assign TX_BIT_CTRL_OUT1[150] = GND;
assign TX_BIT_CTRL_OUT1[151] = GND;
assign TX_BIT_CTRL_OUT1[152] = GND;
assign TX_BIT_CTRL_OUT1[153] = GND;
assign TX_BIT_CTRL_OUT1[154] = GND;
assign TX_BIT_CTRL_OUT1[155] = GND;
assign TX_BIT_CTRL_OUT1[156] = GND;
assign TX_BIT_CTRL_OUT1[157] = GND;
assign TX_BIT_CTRL_OUT1[158] = GND;
assign TX_BIT_CTRL_OUT1[159] = GND;
assign TX_BIT_CTRL_OUT1[160] = GND;
assign TX_BIT_CTRL_OUT1[161] = GND;
assign TX_BIT_CTRL_OUT1[162] = GND;
assign TX_BIT_CTRL_OUT1[163] = GND;
assign TX_BIT_CTRL_OUT1[164] = GND;
assign TX_BIT_CTRL_OUT1[165] = GND;
assign TX_BIT_CTRL_OUT1[166] = GND;
assign TX_BIT_CTRL_OUT1[167] = GND;
assign TX_BIT_CTRL_OUT1[168] = GND;
assign TX_BIT_CTRL_OUT1[169] = GND;
assign TX_BIT_CTRL_OUT1[170] = GND;
assign TX_BIT_CTRL_OUT1[171] = GND;
assign TX_BIT_CTRL_OUT1[172] = GND;
assign TX_BIT_CTRL_OUT1[173] = GND;
assign TX_BIT_CTRL_OUT1[174] = GND;
assign TX_BIT_CTRL_OUT1[175] = GND;
assign TX_BIT_CTRL_OUT1[176] = GND;
assign TX_BIT_CTRL_OUT1[177] = GND;
assign TX_BIT_CTRL_OUT1[178] = GND;
assign TX_BIT_CTRL_OUT1[179] = GND;
assign TX_BIT_CTRL_OUT1[180] = GND;
assign TX_BIT_CTRL_OUT1[181] = GND;
assign TX_BIT_CTRL_OUT1[182] = GND;
assign TX_BIT_CTRL_OUT1[183] = GND;
assign TX_BIT_CTRL_OUT1[184] = GND;
assign TX_BIT_CTRL_OUT1[185] = GND;
assign TX_BIT_CTRL_OUT1[186] = GND;
assign TX_BIT_CTRL_OUT1[187] = GND;
assign TX_BIT_CTRL_OUT1[188] = GND;
assign TX_BIT_CTRL_OUT1[189] = GND;
assign TX_BIT_CTRL_OUT1[190] = GND;
assign TX_BIT_CTRL_OUT1[191] = GND;
assign TX_BIT_CTRL_OUT1[192] = GND;
assign TX_BIT_CTRL_OUT1[193] = GND;
assign TX_BIT_CTRL_OUT1[194] = GND;
assign TX_BIT_CTRL_OUT1[195] = GND;
assign TX_BIT_CTRL_OUT1[196] = GND;
assign TX_BIT_CTRL_OUT1[197] = GND;
assign TX_BIT_CTRL_OUT1[198] = GND;
assign TX_BIT_CTRL_OUT1[199] = GND;
assign TX_BIT_CTRL_OUT1[200] = GND;
assign TX_BIT_CTRL_OUT1[201] = GND;
assign TX_BIT_CTRL_OUT1[202] = GND;
assign TX_BIT_CTRL_OUT1[203] = GND;
assign TX_BIT_CTRL_OUT1[204] = GND;
assign TX_BIT_CTRL_OUT1[205] = GND;
assign TX_BIT_CTRL_OUT1[206] = GND;
assign TX_BIT_CTRL_OUT1[207] = GND;
assign TX_BIT_CTRL_OUT1[208] = GND;
assign TX_BIT_CTRL_OUT1[209] = GND;
assign TX_BIT_CTRL_OUT1[210] = GND;
assign TX_BIT_CTRL_OUT1[211] = GND;
assign TX_BIT_CTRL_OUT1[212] = GND;
assign TX_BIT_CTRL_OUT1[213] = GND;
assign TX_BIT_CTRL_OUT1[214] = GND;
assign TX_BIT_CTRL_OUT1[215] = GND;
assign TX_BIT_CTRL_OUT1[216] = GND;
assign TX_BIT_CTRL_OUT1[217] = GND;
assign TX_BIT_CTRL_OUT1[218] = GND;
assign TX_BIT_CTRL_OUT1[219] = GND;
assign TX_BIT_CTRL_OUT1[220] = GND;
assign TX_BIT_CTRL_OUT1[221] = GND;
assign TX_BIT_CTRL_OUT1[222] = GND;
assign TX_BIT_CTRL_OUT1[223] = GND;
assign TX_BIT_CTRL_OUT1[224] = GND;
assign TX_BIT_CTRL_OUT1[225] = GND;
assign TX_BIT_CTRL_OUT1[226] = GND;
assign TX_BIT_CTRL_OUT1[227] = GND;
assign TX_BIT_CTRL_OUT1[228] = GND;
assign TX_BIT_CTRL_OUT1[229] = GND;
assign TX_BIT_CTRL_OUT1[230] = GND;
assign TX_BIT_CTRL_OUT1[231] = GND;
assign TX_BIT_CTRL_OUT1[232] = GND;
assign TX_BIT_CTRL_OUT1[233] = GND;
assign TX_BIT_CTRL_OUT1[234] = GND;
assign TX_BIT_CTRL_OUT1[235] = GND;
assign TX_BIT_CTRL_OUT1[236] = GND;
assign TX_BIT_CTRL_OUT1[237] = GND;
assign TX_BIT_CTRL_OUT1[238] = GND;
assign TX_BIT_CTRL_OUT1[239] = GND;
assign TX_BIT_CTRL_OUT1[240] = GND;
assign TX_BIT_CTRL_OUT1[241] = GND;
assign TX_BIT_CTRL_OUT1[242] = GND;
assign TX_BIT_CTRL_OUT1[243] = GND;
assign TX_BIT_CTRL_OUT1[244] = GND;
assign TX_BIT_CTRL_OUT1[245] = GND;
assign TX_BIT_CTRL_OUT1[246] = GND;
assign TX_BIT_CTRL_OUT1[247] = GND;
assign TX_BIT_CTRL_OUT1[248] = GND;
assign TX_BIT_CTRL_OUT1[249] = GND;
assign TX_BIT_CTRL_OUT1[250] = GND;
assign TX_BIT_CTRL_OUT1[251] = GND;
assign TX_BIT_CTRL_OUT1[252] = GND;
assign TX_BIT_CTRL_OUT1[253] = GND;
assign TX_BIT_CTRL_OUT1[254] = GND;
assign TX_BIT_CTRL_OUT1[255] = GND;
assign TX_BIT_CTRL_OUT1[256] = GND;
assign TX_BIT_CTRL_OUT1[257] = GND;
assign TX_BIT_CTRL_OUT1[258] = GND;
assign TX_BIT_CTRL_OUT1[259] = GND;
assign TX_BIT_CTRL_OUT1[260] = GND;
assign TX_BIT_CTRL_OUT1[261] = GND;
assign TX_BIT_CTRL_OUT1[262] = GND;
assign TX_BIT_CTRL_OUT1[263] = GND;
assign TX_BIT_CTRL_OUT1[264] = GND;
assign TX_BIT_CTRL_OUT1[265] = GND;
assign TX_BIT_CTRL_OUT1[266] = GND;
assign TX_BIT_CTRL_OUT1[267] = GND;
assign TX_BIT_CTRL_OUT1[268] = GND;
assign TX_BIT_CTRL_OUT1[269] = GND;
assign TX_BIT_CTRL_OUT1[270] = GND;
assign TX_BIT_CTRL_OUT1[271] = GND;
assign TX_BIT_CTRL_OUT1[272] = GND;
assign TX_BIT_CTRL_OUT1[273] = GND;
assign TX_BIT_CTRL_OUT1[274] = GND;
assign TX_BIT_CTRL_OUT1[275] = GND;
assign TX_BIT_CTRL_OUT1[276] = GND;
assign TX_BIT_CTRL_OUT1[277] = GND;
assign TX_BIT_CTRL_OUT1[278] = GND;
assign TX_BIT_CTRL_OUT1[279] = GND;
assign TX_BIT_CTRL_OUT1[280] = GND;
assign TX_BIT_CTRL_OUT1[281] = GND;
assign TX_BIT_CTRL_OUT1[282] = GND;
assign TX_BIT_CTRL_OUT1[283] = GND;
assign TX_BIT_CTRL_OUT1[284] = GND;
assign TX_BIT_CTRL_OUT1[285] = GND;
assign TX_BIT_CTRL_OUT1[286] = GND;
assign TX_BIT_CTRL_OUT1[287] = GND;
assign TX_BIT_CTRL_OUT1[288] = GND;
assign TX_BIT_CTRL_OUT1[289] = GND;
assign TX_BIT_CTRL_OUT1[290] = GND;
assign TX_BIT_CTRL_OUT1[291] = GND;
assign TX_BIT_CTRL_OUT1[292] = GND;
assign TX_BIT_CTRL_OUT1[293] = GND;
assign TX_BIT_CTRL_OUT1[294] = GND;
assign TX_BIT_CTRL_OUT1[295] = GND;
assign TX_BIT_CTRL_OUT1[296] = GND;
assign TX_BIT_CTRL_OUT1[297] = GND;
assign TX_BIT_CTRL_OUT1[298] = GND;
assign TX_BIT_CTRL_OUT1[299] = GND;
assign TX_BIT_CTRL_OUT1[300] = GND;
assign TX_BIT_CTRL_OUT1[301] = GND;
assign TX_BIT_CTRL_OUT1[302] = GND;
assign TX_BIT_CTRL_OUT1[303] = GND;
assign TX_BIT_CTRL_OUT1[304] = GND;
assign TX_BIT_CTRL_OUT1[305] = GND;
assign TX_BIT_CTRL_OUT1[306] = GND;
assign TX_BIT_CTRL_OUT1[307] = GND;
assign TX_BIT_CTRL_OUT1[308] = GND;
assign TX_BIT_CTRL_OUT1[309] = GND;
assign TX_BIT_CTRL_OUT1[310] = GND;
assign TX_BIT_CTRL_OUT1[311] = GND;
assign TX_BIT_CTRL_OUT1[312] = GND;
assign TX_BIT_CTRL_OUT1[313] = GND;
assign TX_BIT_CTRL_OUT1[314] = GND;
assign TX_BIT_CTRL_OUT1[315] = GND;
assign TX_BIT_CTRL_OUT1[316] = GND;
assign TX_BIT_CTRL_OUT1[317] = GND;
assign TX_BIT_CTRL_OUT1[318] = GND;
assign TX_BIT_CTRL_OUT1[319] = GND;
assign TX_BIT_CTRL_OUT2[0] = GND;
assign TX_BIT_CTRL_OUT2[1] = GND;
assign TX_BIT_CTRL_OUT2[2] = GND;
assign TX_BIT_CTRL_OUT2[3] = GND;
assign TX_BIT_CTRL_OUT2[4] = GND;
assign TX_BIT_CTRL_OUT2[5] = GND;
assign TX_BIT_CTRL_OUT2[6] = GND;
assign TX_BIT_CTRL_OUT2[7] = GND;
assign TX_BIT_CTRL_OUT2[8] = GND;
assign TX_BIT_CTRL_OUT2[9] = GND;
assign TX_BIT_CTRL_OUT2[10] = GND;
assign TX_BIT_CTRL_OUT2[11] = GND;
assign TX_BIT_CTRL_OUT2[12] = GND;
assign TX_BIT_CTRL_OUT2[13] = GND;
assign TX_BIT_CTRL_OUT2[14] = GND;
assign TX_BIT_CTRL_OUT2[15] = GND;
assign TX_BIT_CTRL_OUT2[16] = GND;
assign TX_BIT_CTRL_OUT2[17] = GND;
assign TX_BIT_CTRL_OUT2[18] = GND;
assign TX_BIT_CTRL_OUT2[19] = GND;
assign TX_BIT_CTRL_OUT2[20] = GND;
assign TX_BIT_CTRL_OUT2[21] = GND;
assign TX_BIT_CTRL_OUT2[22] = GND;
assign TX_BIT_CTRL_OUT2[23] = GND;
assign TX_BIT_CTRL_OUT2[24] = GND;
assign TX_BIT_CTRL_OUT2[25] = GND;
assign TX_BIT_CTRL_OUT2[26] = GND;
assign TX_BIT_CTRL_OUT2[27] = GND;
assign TX_BIT_CTRL_OUT2[28] = GND;
assign TX_BIT_CTRL_OUT2[29] = GND;
assign TX_BIT_CTRL_OUT2[30] = GND;
assign TX_BIT_CTRL_OUT2[31] = GND;
assign TX_BIT_CTRL_OUT2[32] = GND;
assign TX_BIT_CTRL_OUT2[33] = GND;
assign TX_BIT_CTRL_OUT2[34] = GND;
assign TX_BIT_CTRL_OUT2[35] = GND;
assign TX_BIT_CTRL_OUT2[36] = GND;
assign TX_BIT_CTRL_OUT2[37] = GND;
assign TX_BIT_CTRL_OUT2[38] = GND;
assign TX_BIT_CTRL_OUT2[39] = GND;
assign TX_BIT_CTRL_OUT2[80] = GND;
assign TX_BIT_CTRL_OUT2[81] = GND;
assign TX_BIT_CTRL_OUT2[82] = GND;
assign TX_BIT_CTRL_OUT2[83] = GND;
assign TX_BIT_CTRL_OUT2[84] = GND;
assign TX_BIT_CTRL_OUT2[85] = GND;
assign TX_BIT_CTRL_OUT2[86] = GND;
assign TX_BIT_CTRL_OUT2[87] = GND;
assign TX_BIT_CTRL_OUT2[88] = GND;
assign TX_BIT_CTRL_OUT2[89] = GND;
assign TX_BIT_CTRL_OUT2[90] = GND;
assign TX_BIT_CTRL_OUT2[91] = GND;
assign TX_BIT_CTRL_OUT2[92] = GND;
assign TX_BIT_CTRL_OUT2[93] = GND;
assign TX_BIT_CTRL_OUT2[94] = GND;
assign TX_BIT_CTRL_OUT2[95] = GND;
assign TX_BIT_CTRL_OUT2[96] = GND;
assign TX_BIT_CTRL_OUT2[97] = GND;
assign TX_BIT_CTRL_OUT2[98] = GND;
assign TX_BIT_CTRL_OUT2[99] = GND;
assign TX_BIT_CTRL_OUT2[100] = GND;
assign TX_BIT_CTRL_OUT2[101] = GND;
assign TX_BIT_CTRL_OUT2[102] = GND;
assign TX_BIT_CTRL_OUT2[103] = GND;
assign TX_BIT_CTRL_OUT2[104] = GND;
assign TX_BIT_CTRL_OUT2[105] = GND;
assign TX_BIT_CTRL_OUT2[106] = GND;
assign TX_BIT_CTRL_OUT2[107] = GND;
assign TX_BIT_CTRL_OUT2[108] = GND;
assign TX_BIT_CTRL_OUT2[109] = GND;
assign TX_BIT_CTRL_OUT2[110] = GND;
assign TX_BIT_CTRL_OUT2[111] = GND;
assign TX_BIT_CTRL_OUT2[112] = GND;
assign TX_BIT_CTRL_OUT2[113] = GND;
assign TX_BIT_CTRL_OUT2[114] = GND;
assign TX_BIT_CTRL_OUT2[115] = GND;
assign TX_BIT_CTRL_OUT2[116] = GND;
assign TX_BIT_CTRL_OUT2[117] = GND;
assign TX_BIT_CTRL_OUT2[118] = GND;
assign TX_BIT_CTRL_OUT2[119] = GND;
assign TX_BIT_CTRL_OUT2[120] = GND;
assign TX_BIT_CTRL_OUT2[121] = GND;
assign TX_BIT_CTRL_OUT2[122] = GND;
assign TX_BIT_CTRL_OUT2[123] = GND;
assign TX_BIT_CTRL_OUT2[124] = GND;
assign TX_BIT_CTRL_OUT2[125] = GND;
assign TX_BIT_CTRL_OUT2[126] = GND;
assign TX_BIT_CTRL_OUT2[127] = GND;
assign TX_BIT_CTRL_OUT2[128] = GND;
assign TX_BIT_CTRL_OUT2[129] = GND;
assign TX_BIT_CTRL_OUT2[130] = GND;
assign TX_BIT_CTRL_OUT2[131] = GND;
assign TX_BIT_CTRL_OUT2[132] = GND;
assign TX_BIT_CTRL_OUT2[133] = GND;
assign TX_BIT_CTRL_OUT2[134] = GND;
assign TX_BIT_CTRL_OUT2[135] = GND;
assign TX_BIT_CTRL_OUT2[136] = GND;
assign TX_BIT_CTRL_OUT2[137] = GND;
assign TX_BIT_CTRL_OUT2[138] = GND;
assign TX_BIT_CTRL_OUT2[139] = GND;
assign TX_BIT_CTRL_OUT2[140] = GND;
assign TX_BIT_CTRL_OUT2[141] = GND;
assign TX_BIT_CTRL_OUT2[142] = GND;
assign TX_BIT_CTRL_OUT2[143] = GND;
assign TX_BIT_CTRL_OUT2[144] = GND;
assign TX_BIT_CTRL_OUT2[145] = GND;
assign TX_BIT_CTRL_OUT2[146] = GND;
assign TX_BIT_CTRL_OUT2[147] = GND;
assign TX_BIT_CTRL_OUT2[148] = GND;
assign TX_BIT_CTRL_OUT2[149] = GND;
assign TX_BIT_CTRL_OUT2[150] = GND;
assign TX_BIT_CTRL_OUT2[151] = GND;
assign TX_BIT_CTRL_OUT2[152] = GND;
assign TX_BIT_CTRL_OUT2[153] = GND;
assign TX_BIT_CTRL_OUT2[154] = GND;
assign TX_BIT_CTRL_OUT2[155] = GND;
assign TX_BIT_CTRL_OUT2[156] = GND;
assign TX_BIT_CTRL_OUT2[157] = GND;
assign TX_BIT_CTRL_OUT2[158] = GND;
assign TX_BIT_CTRL_OUT2[159] = GND;
assign TX_BIT_CTRL_OUT2[160] = GND;
assign TX_BIT_CTRL_OUT2[161] = GND;
assign TX_BIT_CTRL_OUT2[162] = GND;
assign TX_BIT_CTRL_OUT2[163] = GND;
assign TX_BIT_CTRL_OUT2[164] = GND;
assign TX_BIT_CTRL_OUT2[165] = GND;
assign TX_BIT_CTRL_OUT2[166] = GND;
assign TX_BIT_CTRL_OUT2[167] = GND;
assign TX_BIT_CTRL_OUT2[168] = GND;
assign TX_BIT_CTRL_OUT2[169] = GND;
assign TX_BIT_CTRL_OUT2[170] = GND;
assign TX_BIT_CTRL_OUT2[171] = GND;
assign TX_BIT_CTRL_OUT2[172] = GND;
assign TX_BIT_CTRL_OUT2[173] = GND;
assign TX_BIT_CTRL_OUT2[174] = GND;
assign TX_BIT_CTRL_OUT2[175] = GND;
assign TX_BIT_CTRL_OUT2[176] = GND;
assign TX_BIT_CTRL_OUT2[177] = GND;
assign TX_BIT_CTRL_OUT2[178] = GND;
assign TX_BIT_CTRL_OUT2[179] = GND;
assign TX_BIT_CTRL_OUT2[180] = GND;
assign TX_BIT_CTRL_OUT2[181] = GND;
assign TX_BIT_CTRL_OUT2[182] = GND;
assign TX_BIT_CTRL_OUT2[183] = GND;
assign TX_BIT_CTRL_OUT2[184] = GND;
assign TX_BIT_CTRL_OUT2[185] = GND;
assign TX_BIT_CTRL_OUT2[186] = GND;
assign TX_BIT_CTRL_OUT2[187] = GND;
assign TX_BIT_CTRL_OUT2[188] = GND;
assign TX_BIT_CTRL_OUT2[189] = GND;
assign TX_BIT_CTRL_OUT2[190] = GND;
assign TX_BIT_CTRL_OUT2[191] = GND;
assign TX_BIT_CTRL_OUT2[192] = GND;
assign TX_BIT_CTRL_OUT2[193] = GND;
assign TX_BIT_CTRL_OUT2[194] = GND;
assign TX_BIT_CTRL_OUT2[195] = GND;
assign TX_BIT_CTRL_OUT2[196] = GND;
assign TX_BIT_CTRL_OUT2[197] = GND;
assign TX_BIT_CTRL_OUT2[198] = GND;
assign TX_BIT_CTRL_OUT2[199] = GND;
assign TX_BIT_CTRL_OUT2[200] = GND;
assign TX_BIT_CTRL_OUT2[201] = GND;
assign TX_BIT_CTRL_OUT2[202] = GND;
assign TX_BIT_CTRL_OUT2[203] = GND;
assign TX_BIT_CTRL_OUT2[204] = GND;
assign TX_BIT_CTRL_OUT2[205] = GND;
assign TX_BIT_CTRL_OUT2[206] = GND;
assign TX_BIT_CTRL_OUT2[207] = GND;
assign TX_BIT_CTRL_OUT2[208] = GND;
assign TX_BIT_CTRL_OUT2[209] = GND;
assign TX_BIT_CTRL_OUT2[210] = GND;
assign TX_BIT_CTRL_OUT2[211] = GND;
assign TX_BIT_CTRL_OUT2[212] = GND;
assign TX_BIT_CTRL_OUT2[213] = GND;
assign TX_BIT_CTRL_OUT2[214] = GND;
assign TX_BIT_CTRL_OUT2[215] = GND;
assign TX_BIT_CTRL_OUT2[216] = GND;
assign TX_BIT_CTRL_OUT2[217] = GND;
assign TX_BIT_CTRL_OUT2[218] = GND;
assign TX_BIT_CTRL_OUT2[219] = GND;
assign TX_BIT_CTRL_OUT2[220] = GND;
assign TX_BIT_CTRL_OUT2[221] = GND;
assign TX_BIT_CTRL_OUT2[222] = GND;
assign TX_BIT_CTRL_OUT2[223] = GND;
assign TX_BIT_CTRL_OUT2[224] = GND;
assign TX_BIT_CTRL_OUT2[225] = GND;
assign TX_BIT_CTRL_OUT2[226] = GND;
assign TX_BIT_CTRL_OUT2[227] = GND;
assign TX_BIT_CTRL_OUT2[228] = GND;
assign TX_BIT_CTRL_OUT2[229] = GND;
assign TX_BIT_CTRL_OUT2[230] = GND;
assign TX_BIT_CTRL_OUT2[231] = GND;
assign TX_BIT_CTRL_OUT2[232] = GND;
assign TX_BIT_CTRL_OUT2[233] = GND;
assign TX_BIT_CTRL_OUT2[234] = GND;
assign TX_BIT_CTRL_OUT2[235] = GND;
assign TX_BIT_CTRL_OUT2[236] = GND;
assign TX_BIT_CTRL_OUT2[237] = GND;
assign TX_BIT_CTRL_OUT2[238] = GND;
assign TX_BIT_CTRL_OUT2[239] = GND;
assign TX_BIT_CTRL_OUT2[240] = GND;
assign TX_BIT_CTRL_OUT2[241] = GND;
assign TX_BIT_CTRL_OUT2[242] = GND;
assign TX_BIT_CTRL_OUT2[243] = GND;
assign TX_BIT_CTRL_OUT2[244] = GND;
assign TX_BIT_CTRL_OUT2[245] = GND;
assign TX_BIT_CTRL_OUT2[246] = GND;
assign TX_BIT_CTRL_OUT2[247] = GND;
assign TX_BIT_CTRL_OUT2[248] = GND;
assign TX_BIT_CTRL_OUT2[249] = GND;
assign TX_BIT_CTRL_OUT2[250] = GND;
assign TX_BIT_CTRL_OUT2[251] = GND;
assign TX_BIT_CTRL_OUT2[252] = GND;
assign TX_BIT_CTRL_OUT2[253] = GND;
assign TX_BIT_CTRL_OUT2[254] = GND;
assign TX_BIT_CTRL_OUT2[255] = GND;
assign TX_BIT_CTRL_OUT2[256] = GND;
assign TX_BIT_CTRL_OUT2[257] = GND;
assign TX_BIT_CTRL_OUT2[258] = GND;
assign TX_BIT_CTRL_OUT2[259] = GND;
assign TX_BIT_CTRL_OUT2[260] = GND;
assign TX_BIT_CTRL_OUT2[261] = GND;
assign TX_BIT_CTRL_OUT2[262] = GND;
assign TX_BIT_CTRL_OUT2[263] = GND;
assign TX_BIT_CTRL_OUT2[264] = GND;
assign TX_BIT_CTRL_OUT2[265] = GND;
assign TX_BIT_CTRL_OUT2[266] = GND;
assign TX_BIT_CTRL_OUT2[267] = GND;
assign TX_BIT_CTRL_OUT2[268] = GND;
assign TX_BIT_CTRL_OUT2[269] = GND;
assign TX_BIT_CTRL_OUT2[270] = GND;
assign TX_BIT_CTRL_OUT2[271] = GND;
assign TX_BIT_CTRL_OUT2[272] = GND;
assign TX_BIT_CTRL_OUT2[273] = GND;
assign TX_BIT_CTRL_OUT2[274] = GND;
assign TX_BIT_CTRL_OUT2[275] = GND;
assign TX_BIT_CTRL_OUT2[276] = GND;
assign TX_BIT_CTRL_OUT2[277] = GND;
assign TX_BIT_CTRL_OUT2[278] = GND;
assign TX_BIT_CTRL_OUT2[279] = GND;
assign TX_BIT_CTRL_OUT2[280] = GND;
assign TX_BIT_CTRL_OUT2[281] = GND;
assign TX_BIT_CTRL_OUT2[282] = GND;
assign TX_BIT_CTRL_OUT2[283] = GND;
assign TX_BIT_CTRL_OUT2[284] = GND;
assign TX_BIT_CTRL_OUT2[285] = GND;
assign TX_BIT_CTRL_OUT2[286] = GND;
assign TX_BIT_CTRL_OUT2[287] = GND;
assign TX_BIT_CTRL_OUT2[288] = GND;
assign TX_BIT_CTRL_OUT2[289] = GND;
assign TX_BIT_CTRL_OUT2[290] = GND;
assign TX_BIT_CTRL_OUT2[291] = GND;
assign TX_BIT_CTRL_OUT2[292] = GND;
assign TX_BIT_CTRL_OUT2[293] = GND;
assign TX_BIT_CTRL_OUT2[294] = GND;
assign TX_BIT_CTRL_OUT2[295] = GND;
assign TX_BIT_CTRL_OUT2[296] = GND;
assign TX_BIT_CTRL_OUT2[297] = GND;
assign TX_BIT_CTRL_OUT2[298] = GND;
assign TX_BIT_CTRL_OUT2[299] = GND;
assign TX_BIT_CTRL_OUT2[300] = GND;
assign TX_BIT_CTRL_OUT2[301] = GND;
assign TX_BIT_CTRL_OUT2[302] = GND;
assign TX_BIT_CTRL_OUT2[303] = GND;
assign TX_BIT_CTRL_OUT2[304] = GND;
assign TX_BIT_CTRL_OUT2[305] = GND;
assign TX_BIT_CTRL_OUT2[306] = GND;
assign TX_BIT_CTRL_OUT2[307] = GND;
assign TX_BIT_CTRL_OUT2[308] = GND;
assign TX_BIT_CTRL_OUT2[309] = GND;
assign TX_BIT_CTRL_OUT2[310] = GND;
assign TX_BIT_CTRL_OUT2[311] = GND;
assign TX_BIT_CTRL_OUT2[312] = GND;
assign TX_BIT_CTRL_OUT2[313] = GND;
assign TX_BIT_CTRL_OUT2[314] = GND;
assign TX_BIT_CTRL_OUT2[315] = GND;
assign TX_BIT_CTRL_OUT2[316] = GND;
assign TX_BIT_CTRL_OUT2[317] = GND;
assign TX_BIT_CTRL_OUT2[318] = GND;
assign TX_BIT_CTRL_OUT2[319] = GND;
assign TX_BIT_CTRL_OUT3[0] = GND;
assign TX_BIT_CTRL_OUT3[1] = GND;
assign TX_BIT_CTRL_OUT3[2] = GND;
assign TX_BIT_CTRL_OUT3[3] = GND;
assign TX_BIT_CTRL_OUT3[4] = GND;
assign TX_BIT_CTRL_OUT3[5] = GND;
assign TX_BIT_CTRL_OUT3[6] = GND;
assign TX_BIT_CTRL_OUT3[7] = GND;
assign TX_BIT_CTRL_OUT3[8] = GND;
assign TX_BIT_CTRL_OUT3[9] = GND;
assign TX_BIT_CTRL_OUT3[10] = GND;
assign TX_BIT_CTRL_OUT3[11] = GND;
assign TX_BIT_CTRL_OUT3[12] = GND;
assign TX_BIT_CTRL_OUT3[13] = GND;
assign TX_BIT_CTRL_OUT3[14] = GND;
assign TX_BIT_CTRL_OUT3[15] = GND;
assign TX_BIT_CTRL_OUT3[16] = GND;
assign TX_BIT_CTRL_OUT3[17] = GND;
assign TX_BIT_CTRL_OUT3[18] = GND;
assign TX_BIT_CTRL_OUT3[19] = GND;
assign TX_BIT_CTRL_OUT3[20] = GND;
assign TX_BIT_CTRL_OUT3[21] = GND;
assign TX_BIT_CTRL_OUT3[22] = GND;
assign TX_BIT_CTRL_OUT3[23] = GND;
assign TX_BIT_CTRL_OUT3[24] = GND;
assign TX_BIT_CTRL_OUT3[25] = GND;
assign TX_BIT_CTRL_OUT3[26] = GND;
assign TX_BIT_CTRL_OUT3[27] = GND;
assign TX_BIT_CTRL_OUT3[28] = GND;
assign TX_BIT_CTRL_OUT3[29] = GND;
assign TX_BIT_CTRL_OUT3[30] = GND;
assign TX_BIT_CTRL_OUT3[31] = GND;
assign TX_BIT_CTRL_OUT3[32] = GND;
assign TX_BIT_CTRL_OUT3[33] = GND;
assign TX_BIT_CTRL_OUT3[34] = GND;
assign TX_BIT_CTRL_OUT3[35] = GND;
assign TX_BIT_CTRL_OUT3[36] = GND;
assign TX_BIT_CTRL_OUT3[37] = GND;
assign TX_BIT_CTRL_OUT3[38] = GND;
assign TX_BIT_CTRL_OUT3[39] = GND;
assign TX_BIT_CTRL_OUT3[80] = GND;
assign TX_BIT_CTRL_OUT3[81] = GND;
assign TX_BIT_CTRL_OUT3[82] = GND;
assign TX_BIT_CTRL_OUT3[83] = GND;
assign TX_BIT_CTRL_OUT3[84] = GND;
assign TX_BIT_CTRL_OUT3[85] = GND;
assign TX_BIT_CTRL_OUT3[86] = GND;
assign TX_BIT_CTRL_OUT3[87] = GND;
assign TX_BIT_CTRL_OUT3[88] = GND;
assign TX_BIT_CTRL_OUT3[89] = GND;
assign TX_BIT_CTRL_OUT3[90] = GND;
assign TX_BIT_CTRL_OUT3[91] = GND;
assign TX_BIT_CTRL_OUT3[92] = GND;
assign TX_BIT_CTRL_OUT3[93] = GND;
assign TX_BIT_CTRL_OUT3[94] = GND;
assign TX_BIT_CTRL_OUT3[95] = GND;
assign TX_BIT_CTRL_OUT3[96] = GND;
assign TX_BIT_CTRL_OUT3[97] = GND;
assign TX_BIT_CTRL_OUT3[98] = GND;
assign TX_BIT_CTRL_OUT3[99] = GND;
assign TX_BIT_CTRL_OUT3[100] = GND;
assign TX_BIT_CTRL_OUT3[101] = GND;
assign TX_BIT_CTRL_OUT3[102] = GND;
assign TX_BIT_CTRL_OUT3[103] = GND;
assign TX_BIT_CTRL_OUT3[104] = GND;
assign TX_BIT_CTRL_OUT3[105] = GND;
assign TX_BIT_CTRL_OUT3[106] = GND;
assign TX_BIT_CTRL_OUT3[107] = GND;
assign TX_BIT_CTRL_OUT3[108] = GND;
assign TX_BIT_CTRL_OUT3[109] = GND;
assign TX_BIT_CTRL_OUT3[110] = GND;
assign TX_BIT_CTRL_OUT3[111] = GND;
assign TX_BIT_CTRL_OUT3[112] = GND;
assign TX_BIT_CTRL_OUT3[113] = GND;
assign TX_BIT_CTRL_OUT3[114] = GND;
assign TX_BIT_CTRL_OUT3[115] = GND;
assign TX_BIT_CTRL_OUT3[116] = GND;
assign TX_BIT_CTRL_OUT3[117] = GND;
assign TX_BIT_CTRL_OUT3[118] = GND;
assign TX_BIT_CTRL_OUT3[119] = GND;
assign TX_BIT_CTRL_OUT3[120] = GND;
assign TX_BIT_CTRL_OUT3[121] = GND;
assign TX_BIT_CTRL_OUT3[122] = GND;
assign TX_BIT_CTRL_OUT3[123] = GND;
assign TX_BIT_CTRL_OUT3[124] = GND;
assign TX_BIT_CTRL_OUT3[125] = GND;
assign TX_BIT_CTRL_OUT3[126] = GND;
assign TX_BIT_CTRL_OUT3[127] = GND;
assign TX_BIT_CTRL_OUT3[128] = GND;
assign TX_BIT_CTRL_OUT3[129] = GND;
assign TX_BIT_CTRL_OUT3[130] = GND;
assign TX_BIT_CTRL_OUT3[131] = GND;
assign TX_BIT_CTRL_OUT3[132] = GND;
assign TX_BIT_CTRL_OUT3[133] = GND;
assign TX_BIT_CTRL_OUT3[134] = GND;
assign TX_BIT_CTRL_OUT3[135] = GND;
assign TX_BIT_CTRL_OUT3[136] = GND;
assign TX_BIT_CTRL_OUT3[137] = GND;
assign TX_BIT_CTRL_OUT3[138] = GND;
assign TX_BIT_CTRL_OUT3[139] = GND;
assign TX_BIT_CTRL_OUT3[140] = GND;
assign TX_BIT_CTRL_OUT3[141] = GND;
assign TX_BIT_CTRL_OUT3[142] = GND;
assign TX_BIT_CTRL_OUT3[143] = GND;
assign TX_BIT_CTRL_OUT3[144] = GND;
assign TX_BIT_CTRL_OUT3[145] = GND;
assign TX_BIT_CTRL_OUT3[146] = GND;
assign TX_BIT_CTRL_OUT3[147] = GND;
assign TX_BIT_CTRL_OUT3[148] = GND;
assign TX_BIT_CTRL_OUT3[149] = GND;
assign TX_BIT_CTRL_OUT3[150] = GND;
assign TX_BIT_CTRL_OUT3[151] = GND;
assign TX_BIT_CTRL_OUT3[152] = GND;
assign TX_BIT_CTRL_OUT3[153] = GND;
assign TX_BIT_CTRL_OUT3[154] = GND;
assign TX_BIT_CTRL_OUT3[155] = GND;
assign TX_BIT_CTRL_OUT3[156] = GND;
assign TX_BIT_CTRL_OUT3[157] = GND;
assign TX_BIT_CTRL_OUT3[158] = GND;
assign TX_BIT_CTRL_OUT3[159] = GND;
assign TX_BIT_CTRL_OUT3[160] = GND;
assign TX_BIT_CTRL_OUT3[161] = GND;
assign TX_BIT_CTRL_OUT3[162] = GND;
assign TX_BIT_CTRL_OUT3[163] = GND;
assign TX_BIT_CTRL_OUT3[164] = GND;
assign TX_BIT_CTRL_OUT3[165] = GND;
assign TX_BIT_CTRL_OUT3[166] = GND;
assign TX_BIT_CTRL_OUT3[167] = GND;
assign TX_BIT_CTRL_OUT3[168] = GND;
assign TX_BIT_CTRL_OUT3[169] = GND;
assign TX_BIT_CTRL_OUT3[170] = GND;
assign TX_BIT_CTRL_OUT3[171] = GND;
assign TX_BIT_CTRL_OUT3[172] = GND;
assign TX_BIT_CTRL_OUT3[173] = GND;
assign TX_BIT_CTRL_OUT3[174] = GND;
assign TX_BIT_CTRL_OUT3[175] = GND;
assign TX_BIT_CTRL_OUT3[176] = GND;
assign TX_BIT_CTRL_OUT3[177] = GND;
assign TX_BIT_CTRL_OUT3[178] = GND;
assign TX_BIT_CTRL_OUT3[179] = GND;
assign TX_BIT_CTRL_OUT3[180] = GND;
assign TX_BIT_CTRL_OUT3[181] = GND;
assign TX_BIT_CTRL_OUT3[182] = GND;
assign TX_BIT_CTRL_OUT3[183] = GND;
assign TX_BIT_CTRL_OUT3[184] = GND;
assign TX_BIT_CTRL_OUT3[185] = GND;
assign TX_BIT_CTRL_OUT3[186] = GND;
assign TX_BIT_CTRL_OUT3[187] = GND;
assign TX_BIT_CTRL_OUT3[188] = GND;
assign TX_BIT_CTRL_OUT3[189] = GND;
assign TX_BIT_CTRL_OUT3[190] = GND;
assign TX_BIT_CTRL_OUT3[191] = GND;
assign TX_BIT_CTRL_OUT3[192] = GND;
assign TX_BIT_CTRL_OUT3[193] = GND;
assign TX_BIT_CTRL_OUT3[194] = GND;
assign TX_BIT_CTRL_OUT3[195] = GND;
assign TX_BIT_CTRL_OUT3[196] = GND;
assign TX_BIT_CTRL_OUT3[197] = GND;
assign TX_BIT_CTRL_OUT3[198] = GND;
assign TX_BIT_CTRL_OUT3[199] = GND;
assign TX_BIT_CTRL_OUT3[200] = GND;
assign TX_BIT_CTRL_OUT3[201] = GND;
assign TX_BIT_CTRL_OUT3[202] = GND;
assign TX_BIT_CTRL_OUT3[203] = GND;
assign TX_BIT_CTRL_OUT3[204] = GND;
assign TX_BIT_CTRL_OUT3[205] = GND;
assign TX_BIT_CTRL_OUT3[206] = GND;
assign TX_BIT_CTRL_OUT3[207] = GND;
assign TX_BIT_CTRL_OUT3[208] = GND;
assign TX_BIT_CTRL_OUT3[209] = GND;
assign TX_BIT_CTRL_OUT3[210] = GND;
assign TX_BIT_CTRL_OUT3[211] = GND;
assign TX_BIT_CTRL_OUT3[212] = GND;
assign TX_BIT_CTRL_OUT3[213] = GND;
assign TX_BIT_CTRL_OUT3[214] = GND;
assign TX_BIT_CTRL_OUT3[215] = GND;
assign TX_BIT_CTRL_OUT3[216] = GND;
assign TX_BIT_CTRL_OUT3[217] = GND;
assign TX_BIT_CTRL_OUT3[218] = GND;
assign TX_BIT_CTRL_OUT3[219] = GND;
assign TX_BIT_CTRL_OUT3[220] = GND;
assign TX_BIT_CTRL_OUT3[221] = GND;
assign TX_BIT_CTRL_OUT3[222] = GND;
assign TX_BIT_CTRL_OUT3[223] = GND;
assign TX_BIT_CTRL_OUT3[224] = GND;
assign TX_BIT_CTRL_OUT3[225] = GND;
assign TX_BIT_CTRL_OUT3[226] = GND;
assign TX_BIT_CTRL_OUT3[227] = GND;
assign TX_BIT_CTRL_OUT3[228] = GND;
assign TX_BIT_CTRL_OUT3[229] = GND;
assign TX_BIT_CTRL_OUT3[230] = GND;
assign TX_BIT_CTRL_OUT3[231] = GND;
assign TX_BIT_CTRL_OUT3[232] = GND;
assign TX_BIT_CTRL_OUT3[233] = GND;
assign TX_BIT_CTRL_OUT3[234] = GND;
assign TX_BIT_CTRL_OUT3[235] = GND;
assign TX_BIT_CTRL_OUT3[236] = GND;
assign TX_BIT_CTRL_OUT3[237] = GND;
assign TX_BIT_CTRL_OUT3[238] = GND;
assign TX_BIT_CTRL_OUT3[239] = GND;
assign TX_BIT_CTRL_OUT3[240] = GND;
assign TX_BIT_CTRL_OUT3[241] = GND;
assign TX_BIT_CTRL_OUT3[242] = GND;
assign TX_BIT_CTRL_OUT3[243] = GND;
assign TX_BIT_CTRL_OUT3[244] = GND;
assign TX_BIT_CTRL_OUT3[245] = GND;
assign TX_BIT_CTRL_OUT3[246] = GND;
assign TX_BIT_CTRL_OUT3[247] = GND;
assign TX_BIT_CTRL_OUT3[248] = GND;
assign TX_BIT_CTRL_OUT3[249] = GND;
assign TX_BIT_CTRL_OUT3[250] = GND;
assign TX_BIT_CTRL_OUT3[251] = GND;
assign TX_BIT_CTRL_OUT3[252] = GND;
assign TX_BIT_CTRL_OUT3[253] = GND;
assign TX_BIT_CTRL_OUT3[254] = GND;
assign TX_BIT_CTRL_OUT3[255] = GND;
assign TX_BIT_CTRL_OUT3[256] = GND;
assign TX_BIT_CTRL_OUT3[257] = GND;
assign TX_BIT_CTRL_OUT3[258] = GND;
assign TX_BIT_CTRL_OUT3[259] = GND;
assign TX_BIT_CTRL_OUT3[260] = GND;
assign TX_BIT_CTRL_OUT3[261] = GND;
assign TX_BIT_CTRL_OUT3[262] = GND;
assign TX_BIT_CTRL_OUT3[263] = GND;
assign TX_BIT_CTRL_OUT3[264] = GND;
assign TX_BIT_CTRL_OUT3[265] = GND;
assign TX_BIT_CTRL_OUT3[266] = GND;
assign TX_BIT_CTRL_OUT3[267] = GND;
assign TX_BIT_CTRL_OUT3[268] = GND;
assign TX_BIT_CTRL_OUT3[269] = GND;
assign TX_BIT_CTRL_OUT3[270] = GND;
assign TX_BIT_CTRL_OUT3[271] = GND;
assign TX_BIT_CTRL_OUT3[272] = GND;
assign TX_BIT_CTRL_OUT3[273] = GND;
assign TX_BIT_CTRL_OUT3[274] = GND;
assign TX_BIT_CTRL_OUT3[275] = GND;
assign TX_BIT_CTRL_OUT3[276] = GND;
assign TX_BIT_CTRL_OUT3[277] = GND;
assign TX_BIT_CTRL_OUT3[278] = GND;
assign TX_BIT_CTRL_OUT3[279] = GND;
assign TX_BIT_CTRL_OUT3[280] = GND;
assign TX_BIT_CTRL_OUT3[281] = GND;
assign TX_BIT_CTRL_OUT3[282] = GND;
assign TX_BIT_CTRL_OUT3[283] = GND;
assign TX_BIT_CTRL_OUT3[284] = GND;
assign TX_BIT_CTRL_OUT3[285] = GND;
assign TX_BIT_CTRL_OUT3[286] = GND;
assign TX_BIT_CTRL_OUT3[287] = GND;
assign TX_BIT_CTRL_OUT3[288] = GND;
assign TX_BIT_CTRL_OUT3[289] = GND;
assign TX_BIT_CTRL_OUT3[290] = GND;
assign TX_BIT_CTRL_OUT3[291] = GND;
assign TX_BIT_CTRL_OUT3[292] = GND;
assign TX_BIT_CTRL_OUT3[293] = GND;
assign TX_BIT_CTRL_OUT3[294] = GND;
assign TX_BIT_CTRL_OUT3[295] = GND;
assign TX_BIT_CTRL_OUT3[296] = GND;
assign TX_BIT_CTRL_OUT3[297] = GND;
assign TX_BIT_CTRL_OUT3[298] = GND;
assign TX_BIT_CTRL_OUT3[299] = GND;
assign TX_BIT_CTRL_OUT3[300] = GND;
assign TX_BIT_CTRL_OUT3[301] = GND;
assign TX_BIT_CTRL_OUT3[302] = GND;
assign TX_BIT_CTRL_OUT3[303] = GND;
assign TX_BIT_CTRL_OUT3[304] = GND;
assign TX_BIT_CTRL_OUT3[305] = GND;
assign TX_BIT_CTRL_OUT3[306] = GND;
assign TX_BIT_CTRL_OUT3[307] = GND;
assign TX_BIT_CTRL_OUT3[308] = GND;
assign TX_BIT_CTRL_OUT3[309] = GND;
assign TX_BIT_CTRL_OUT3[310] = GND;
assign TX_BIT_CTRL_OUT3[311] = GND;
assign TX_BIT_CTRL_OUT3[312] = GND;
assign TX_BIT_CTRL_OUT3[313] = GND;
assign TX_BIT_CTRL_OUT3[314] = GND;
assign TX_BIT_CTRL_OUT3[315] = GND;
assign TX_BIT_CTRL_OUT3[316] = GND;
assign TX_BIT_CTRL_OUT3[317] = GND;
assign TX_BIT_CTRL_OUT3[318] = GND;
assign TX_BIT_CTRL_OUT3[319] = GND;
assign TX_BIT_CTRL_OUT4[0] = GND;
assign TX_BIT_CTRL_OUT4[1] = GND;
assign TX_BIT_CTRL_OUT4[2] = GND;
assign TX_BIT_CTRL_OUT4[3] = GND;
assign TX_BIT_CTRL_OUT4[4] = GND;
assign TX_BIT_CTRL_OUT4[5] = GND;
assign TX_BIT_CTRL_OUT4[6] = GND;
assign TX_BIT_CTRL_OUT4[7] = GND;
assign TX_BIT_CTRL_OUT4[8] = GND;
assign TX_BIT_CTRL_OUT4[9] = GND;
assign TX_BIT_CTRL_OUT4[10] = GND;
assign TX_BIT_CTRL_OUT4[11] = GND;
assign TX_BIT_CTRL_OUT4[12] = GND;
assign TX_BIT_CTRL_OUT4[13] = GND;
assign TX_BIT_CTRL_OUT4[14] = GND;
assign TX_BIT_CTRL_OUT4[15] = GND;
assign TX_BIT_CTRL_OUT4[16] = GND;
assign TX_BIT_CTRL_OUT4[17] = GND;
assign TX_BIT_CTRL_OUT4[18] = GND;
assign TX_BIT_CTRL_OUT4[19] = GND;
assign TX_BIT_CTRL_OUT4[20] = GND;
assign TX_BIT_CTRL_OUT4[21] = GND;
assign TX_BIT_CTRL_OUT4[22] = GND;
assign TX_BIT_CTRL_OUT4[23] = GND;
assign TX_BIT_CTRL_OUT4[24] = GND;
assign TX_BIT_CTRL_OUT4[25] = GND;
assign TX_BIT_CTRL_OUT4[26] = GND;
assign TX_BIT_CTRL_OUT4[27] = GND;
assign TX_BIT_CTRL_OUT4[28] = GND;
assign TX_BIT_CTRL_OUT4[29] = GND;
assign TX_BIT_CTRL_OUT4[30] = GND;
assign TX_BIT_CTRL_OUT4[31] = GND;
assign TX_BIT_CTRL_OUT4[32] = GND;
assign TX_BIT_CTRL_OUT4[33] = GND;
assign TX_BIT_CTRL_OUT4[34] = GND;
assign TX_BIT_CTRL_OUT4[35] = GND;
assign TX_BIT_CTRL_OUT4[36] = GND;
assign TX_BIT_CTRL_OUT4[37] = GND;
assign TX_BIT_CTRL_OUT4[38] = GND;
assign TX_BIT_CTRL_OUT4[39] = GND;
assign TX_BIT_CTRL_OUT4[40] = GND;
assign TX_BIT_CTRL_OUT4[41] = GND;
assign TX_BIT_CTRL_OUT4[42] = GND;
assign TX_BIT_CTRL_OUT4[43] = GND;
assign TX_BIT_CTRL_OUT4[44] = GND;
assign TX_BIT_CTRL_OUT4[45] = GND;
assign TX_BIT_CTRL_OUT4[46] = GND;
assign TX_BIT_CTRL_OUT4[47] = GND;
assign TX_BIT_CTRL_OUT4[48] = GND;
assign TX_BIT_CTRL_OUT4[49] = GND;
assign TX_BIT_CTRL_OUT4[50] = GND;
assign TX_BIT_CTRL_OUT4[51] = GND;
assign TX_BIT_CTRL_OUT4[52] = GND;
assign TX_BIT_CTRL_OUT4[53] = GND;
assign TX_BIT_CTRL_OUT4[54] = GND;
assign TX_BIT_CTRL_OUT4[55] = GND;
assign TX_BIT_CTRL_OUT4[56] = GND;
assign TX_BIT_CTRL_OUT4[57] = GND;
assign TX_BIT_CTRL_OUT4[58] = GND;
assign TX_BIT_CTRL_OUT4[59] = GND;
assign TX_BIT_CTRL_OUT4[60] = GND;
assign TX_BIT_CTRL_OUT4[61] = GND;
assign TX_BIT_CTRL_OUT4[62] = GND;
assign TX_BIT_CTRL_OUT4[63] = GND;
assign TX_BIT_CTRL_OUT4[64] = GND;
assign TX_BIT_CTRL_OUT4[65] = GND;
assign TX_BIT_CTRL_OUT4[66] = GND;
assign TX_BIT_CTRL_OUT4[67] = GND;
assign TX_BIT_CTRL_OUT4[68] = GND;
assign TX_BIT_CTRL_OUT4[69] = GND;
assign TX_BIT_CTRL_OUT4[70] = GND;
assign TX_BIT_CTRL_OUT4[71] = GND;
assign TX_BIT_CTRL_OUT4[72] = GND;
assign TX_BIT_CTRL_OUT4[73] = GND;
assign TX_BIT_CTRL_OUT4[74] = GND;
assign TX_BIT_CTRL_OUT4[75] = GND;
assign TX_BIT_CTRL_OUT4[76] = GND;
assign TX_BIT_CTRL_OUT4[77] = GND;
assign TX_BIT_CTRL_OUT4[78] = GND;
assign TX_BIT_CTRL_OUT4[79] = GND;
assign TX_BIT_CTRL_OUT4[80] = GND;
assign TX_BIT_CTRL_OUT4[81] = GND;
assign TX_BIT_CTRL_OUT4[82] = GND;
assign TX_BIT_CTRL_OUT4[83] = GND;
assign TX_BIT_CTRL_OUT4[84] = GND;
assign TX_BIT_CTRL_OUT4[85] = GND;
assign TX_BIT_CTRL_OUT4[86] = GND;
assign TX_BIT_CTRL_OUT4[87] = GND;
assign TX_BIT_CTRL_OUT4[88] = GND;
assign TX_BIT_CTRL_OUT4[89] = GND;
assign TX_BIT_CTRL_OUT4[90] = GND;
assign TX_BIT_CTRL_OUT4[91] = GND;
assign TX_BIT_CTRL_OUT4[92] = GND;
assign TX_BIT_CTRL_OUT4[93] = GND;
assign TX_BIT_CTRL_OUT4[94] = GND;
assign TX_BIT_CTRL_OUT4[95] = GND;
assign TX_BIT_CTRL_OUT4[96] = GND;
assign TX_BIT_CTRL_OUT4[97] = GND;
assign TX_BIT_CTRL_OUT4[98] = GND;
assign TX_BIT_CTRL_OUT4[99] = GND;
assign TX_BIT_CTRL_OUT4[100] = GND;
assign TX_BIT_CTRL_OUT4[101] = GND;
assign TX_BIT_CTRL_OUT4[102] = GND;
assign TX_BIT_CTRL_OUT4[103] = GND;
assign TX_BIT_CTRL_OUT4[104] = GND;
assign TX_BIT_CTRL_OUT4[105] = GND;
assign TX_BIT_CTRL_OUT4[106] = GND;
assign TX_BIT_CTRL_OUT4[107] = GND;
assign TX_BIT_CTRL_OUT4[108] = GND;
assign TX_BIT_CTRL_OUT4[109] = GND;
assign TX_BIT_CTRL_OUT4[110] = GND;
assign TX_BIT_CTRL_OUT4[111] = GND;
assign TX_BIT_CTRL_OUT4[112] = GND;
assign TX_BIT_CTRL_OUT4[113] = GND;
assign TX_BIT_CTRL_OUT4[114] = GND;
assign TX_BIT_CTRL_OUT4[115] = GND;
assign TX_BIT_CTRL_OUT4[116] = GND;
assign TX_BIT_CTRL_OUT4[117] = GND;
assign TX_BIT_CTRL_OUT4[118] = GND;
assign TX_BIT_CTRL_OUT4[119] = GND;
assign TX_BIT_CTRL_OUT4[160] = GND;
assign TX_BIT_CTRL_OUT4[161] = GND;
assign TX_BIT_CTRL_OUT4[162] = GND;
assign TX_BIT_CTRL_OUT4[163] = GND;
assign TX_BIT_CTRL_OUT4[164] = GND;
assign TX_BIT_CTRL_OUT4[165] = GND;
assign TX_BIT_CTRL_OUT4[166] = GND;
assign TX_BIT_CTRL_OUT4[167] = GND;
assign TX_BIT_CTRL_OUT4[168] = GND;
assign TX_BIT_CTRL_OUT4[169] = GND;
assign TX_BIT_CTRL_OUT4[170] = GND;
assign TX_BIT_CTRL_OUT4[171] = GND;
assign TX_BIT_CTRL_OUT4[172] = GND;
assign TX_BIT_CTRL_OUT4[173] = GND;
assign TX_BIT_CTRL_OUT4[174] = GND;
assign TX_BIT_CTRL_OUT4[175] = GND;
assign TX_BIT_CTRL_OUT4[176] = GND;
assign TX_BIT_CTRL_OUT4[177] = GND;
assign TX_BIT_CTRL_OUT4[178] = GND;
assign TX_BIT_CTRL_OUT4[179] = GND;
assign TX_BIT_CTRL_OUT4[180] = GND;
assign TX_BIT_CTRL_OUT4[181] = GND;
assign TX_BIT_CTRL_OUT4[182] = GND;
assign TX_BIT_CTRL_OUT4[183] = GND;
assign TX_BIT_CTRL_OUT4[184] = GND;
assign TX_BIT_CTRL_OUT4[185] = GND;
assign TX_BIT_CTRL_OUT4[186] = GND;
assign TX_BIT_CTRL_OUT4[187] = GND;
assign TX_BIT_CTRL_OUT4[188] = GND;
assign TX_BIT_CTRL_OUT4[189] = GND;
assign TX_BIT_CTRL_OUT4[190] = GND;
assign TX_BIT_CTRL_OUT4[191] = GND;
assign TX_BIT_CTRL_OUT4[192] = GND;
assign TX_BIT_CTRL_OUT4[193] = GND;
assign TX_BIT_CTRL_OUT4[194] = GND;
assign TX_BIT_CTRL_OUT4[195] = GND;
assign TX_BIT_CTRL_OUT4[196] = GND;
assign TX_BIT_CTRL_OUT4[197] = GND;
assign TX_BIT_CTRL_OUT4[198] = GND;
assign TX_BIT_CTRL_OUT4[199] = GND;
assign TX_BIT_CTRL_OUT4[200] = GND;
assign TX_BIT_CTRL_OUT4[201] = GND;
assign TX_BIT_CTRL_OUT4[202] = GND;
assign TX_BIT_CTRL_OUT4[203] = GND;
assign TX_BIT_CTRL_OUT4[204] = GND;
assign TX_BIT_CTRL_OUT4[205] = GND;
assign TX_BIT_CTRL_OUT4[206] = GND;
assign TX_BIT_CTRL_OUT4[207] = GND;
assign TX_BIT_CTRL_OUT4[208] = GND;
assign TX_BIT_CTRL_OUT4[209] = GND;
assign TX_BIT_CTRL_OUT4[210] = GND;
assign TX_BIT_CTRL_OUT4[211] = GND;
assign TX_BIT_CTRL_OUT4[212] = GND;
assign TX_BIT_CTRL_OUT4[213] = GND;
assign TX_BIT_CTRL_OUT4[214] = GND;
assign TX_BIT_CTRL_OUT4[215] = GND;
assign TX_BIT_CTRL_OUT4[216] = GND;
assign TX_BIT_CTRL_OUT4[217] = GND;
assign TX_BIT_CTRL_OUT4[218] = GND;
assign TX_BIT_CTRL_OUT4[219] = GND;
assign TX_BIT_CTRL_OUT4[220] = GND;
assign TX_BIT_CTRL_OUT4[221] = GND;
assign TX_BIT_CTRL_OUT4[222] = GND;
assign TX_BIT_CTRL_OUT4[223] = GND;
assign TX_BIT_CTRL_OUT4[224] = GND;
assign TX_BIT_CTRL_OUT4[225] = GND;
assign TX_BIT_CTRL_OUT4[226] = GND;
assign TX_BIT_CTRL_OUT4[227] = GND;
assign TX_BIT_CTRL_OUT4[228] = GND;
assign TX_BIT_CTRL_OUT4[229] = GND;
assign TX_BIT_CTRL_OUT4[230] = GND;
assign TX_BIT_CTRL_OUT4[231] = GND;
assign TX_BIT_CTRL_OUT4[232] = GND;
assign TX_BIT_CTRL_OUT4[233] = GND;
assign TX_BIT_CTRL_OUT4[234] = GND;
assign TX_BIT_CTRL_OUT4[235] = GND;
assign TX_BIT_CTRL_OUT4[236] = GND;
assign TX_BIT_CTRL_OUT4[237] = GND;
assign TX_BIT_CTRL_OUT4[238] = GND;
assign TX_BIT_CTRL_OUT4[239] = GND;
assign TX_BIT_CTRL_OUT4[240] = GND;
assign TX_BIT_CTRL_OUT4[241] = GND;
assign TX_BIT_CTRL_OUT4[242] = GND;
assign TX_BIT_CTRL_OUT4[243] = GND;
assign TX_BIT_CTRL_OUT4[244] = GND;
assign TX_BIT_CTRL_OUT4[245] = GND;
assign TX_BIT_CTRL_OUT4[246] = GND;
assign TX_BIT_CTRL_OUT4[247] = GND;
assign TX_BIT_CTRL_OUT4[248] = GND;
assign TX_BIT_CTRL_OUT4[249] = GND;
assign TX_BIT_CTRL_OUT4[250] = GND;
assign TX_BIT_CTRL_OUT4[251] = GND;
assign TX_BIT_CTRL_OUT4[252] = GND;
assign TX_BIT_CTRL_OUT4[253] = GND;
assign TX_BIT_CTRL_OUT4[254] = GND;
assign TX_BIT_CTRL_OUT4[255] = GND;
assign TX_BIT_CTRL_OUT4[256] = GND;
assign TX_BIT_CTRL_OUT4[257] = GND;
assign TX_BIT_CTRL_OUT4[258] = GND;
assign TX_BIT_CTRL_OUT4[259] = GND;
assign TX_BIT_CTRL_OUT4[260] = GND;
assign TX_BIT_CTRL_OUT4[261] = GND;
assign TX_BIT_CTRL_OUT4[262] = GND;
assign TX_BIT_CTRL_OUT4[263] = GND;
assign TX_BIT_CTRL_OUT4[264] = GND;
assign TX_BIT_CTRL_OUT4[265] = GND;
assign TX_BIT_CTRL_OUT4[266] = GND;
assign TX_BIT_CTRL_OUT4[267] = GND;
assign TX_BIT_CTRL_OUT4[268] = GND;
assign TX_BIT_CTRL_OUT4[269] = GND;
assign TX_BIT_CTRL_OUT4[270] = GND;
assign TX_BIT_CTRL_OUT4[271] = GND;
assign TX_BIT_CTRL_OUT4[272] = GND;
assign TX_BIT_CTRL_OUT4[273] = GND;
assign TX_BIT_CTRL_OUT4[274] = GND;
assign TX_BIT_CTRL_OUT4[275] = GND;
assign TX_BIT_CTRL_OUT4[276] = GND;
assign TX_BIT_CTRL_OUT4[277] = GND;
assign TX_BIT_CTRL_OUT4[278] = GND;
assign TX_BIT_CTRL_OUT4[279] = GND;
assign TX_BIT_CTRL_OUT4[280] = GND;
assign TX_BIT_CTRL_OUT4[281] = GND;
assign TX_BIT_CTRL_OUT4[282] = GND;
assign TX_BIT_CTRL_OUT4[283] = GND;
assign TX_BIT_CTRL_OUT4[284] = GND;
assign TX_BIT_CTRL_OUT4[285] = GND;
assign TX_BIT_CTRL_OUT4[286] = GND;
assign TX_BIT_CTRL_OUT4[287] = GND;
assign TX_BIT_CTRL_OUT4[288] = GND;
assign TX_BIT_CTRL_OUT4[289] = GND;
assign TX_BIT_CTRL_OUT4[290] = GND;
assign TX_BIT_CTRL_OUT4[291] = GND;
assign TX_BIT_CTRL_OUT4[292] = GND;
assign TX_BIT_CTRL_OUT4[293] = GND;
assign TX_BIT_CTRL_OUT4[294] = GND;
assign TX_BIT_CTRL_OUT4[295] = GND;
assign TX_BIT_CTRL_OUT4[296] = GND;
assign TX_BIT_CTRL_OUT4[297] = GND;
assign TX_BIT_CTRL_OUT4[298] = GND;
assign TX_BIT_CTRL_OUT4[299] = GND;
assign TX_BIT_CTRL_OUT4[300] = GND;
assign TX_BIT_CTRL_OUT4[301] = GND;
assign TX_BIT_CTRL_OUT4[302] = GND;
assign TX_BIT_CTRL_OUT4[303] = GND;
assign TX_BIT_CTRL_OUT4[304] = GND;
assign TX_BIT_CTRL_OUT4[305] = GND;
assign TX_BIT_CTRL_OUT4[306] = GND;
assign TX_BIT_CTRL_OUT4[307] = GND;
assign TX_BIT_CTRL_OUT4[308] = GND;
assign TX_BIT_CTRL_OUT4[309] = GND;
assign TX_BIT_CTRL_OUT4[310] = GND;
assign TX_BIT_CTRL_OUT4[311] = GND;
assign TX_BIT_CTRL_OUT4[312] = GND;
assign TX_BIT_CTRL_OUT4[313] = GND;
assign TX_BIT_CTRL_OUT4[314] = GND;
assign TX_BIT_CTRL_OUT4[315] = GND;
assign TX_BIT_CTRL_OUT4[316] = GND;
assign TX_BIT_CTRL_OUT4[317] = GND;
assign TX_BIT_CTRL_OUT4[318] = GND;
assign TX_BIT_CTRL_OUT4[319] = GND;
assign TX_BIT_CTRL_OUT5[0] = GND;
assign TX_BIT_CTRL_OUT5[1] = GND;
assign TX_BIT_CTRL_OUT5[2] = GND;
assign TX_BIT_CTRL_OUT5[3] = GND;
assign TX_BIT_CTRL_OUT5[4] = GND;
assign TX_BIT_CTRL_OUT5[5] = GND;
assign TX_BIT_CTRL_OUT5[6] = GND;
assign TX_BIT_CTRL_OUT5[7] = GND;
assign TX_BIT_CTRL_OUT5[8] = GND;
assign TX_BIT_CTRL_OUT5[9] = GND;
assign TX_BIT_CTRL_OUT5[10] = GND;
assign TX_BIT_CTRL_OUT5[11] = GND;
assign TX_BIT_CTRL_OUT5[12] = GND;
assign TX_BIT_CTRL_OUT5[13] = GND;
assign TX_BIT_CTRL_OUT5[14] = GND;
assign TX_BIT_CTRL_OUT5[15] = GND;
assign TX_BIT_CTRL_OUT5[16] = GND;
assign TX_BIT_CTRL_OUT5[17] = GND;
assign TX_BIT_CTRL_OUT5[18] = GND;
assign TX_BIT_CTRL_OUT5[19] = GND;
assign TX_BIT_CTRL_OUT5[20] = GND;
assign TX_BIT_CTRL_OUT5[21] = GND;
assign TX_BIT_CTRL_OUT5[22] = GND;
assign TX_BIT_CTRL_OUT5[23] = GND;
assign TX_BIT_CTRL_OUT5[24] = GND;
assign TX_BIT_CTRL_OUT5[25] = GND;
assign TX_BIT_CTRL_OUT5[26] = GND;
assign TX_BIT_CTRL_OUT5[27] = GND;
assign TX_BIT_CTRL_OUT5[28] = GND;
assign TX_BIT_CTRL_OUT5[29] = GND;
assign TX_BIT_CTRL_OUT5[30] = GND;
assign TX_BIT_CTRL_OUT5[31] = GND;
assign TX_BIT_CTRL_OUT5[32] = GND;
assign TX_BIT_CTRL_OUT5[33] = GND;
assign TX_BIT_CTRL_OUT5[34] = GND;
assign TX_BIT_CTRL_OUT5[35] = GND;
assign TX_BIT_CTRL_OUT5[36] = GND;
assign TX_BIT_CTRL_OUT5[37] = GND;
assign TX_BIT_CTRL_OUT5[38] = GND;
assign TX_BIT_CTRL_OUT5[39] = GND;
assign TX_BIT_CTRL_OUT5[40] = GND;
assign TX_BIT_CTRL_OUT5[41] = GND;
assign TX_BIT_CTRL_OUT5[42] = GND;
assign TX_BIT_CTRL_OUT5[43] = GND;
assign TX_BIT_CTRL_OUT5[44] = GND;
assign TX_BIT_CTRL_OUT5[45] = GND;
assign TX_BIT_CTRL_OUT5[46] = GND;
assign TX_BIT_CTRL_OUT5[47] = GND;
assign TX_BIT_CTRL_OUT5[48] = GND;
assign TX_BIT_CTRL_OUT5[49] = GND;
assign TX_BIT_CTRL_OUT5[50] = GND;
assign TX_BIT_CTRL_OUT5[51] = GND;
assign TX_BIT_CTRL_OUT5[52] = GND;
assign TX_BIT_CTRL_OUT5[53] = GND;
assign TX_BIT_CTRL_OUT5[54] = GND;
assign TX_BIT_CTRL_OUT5[55] = GND;
assign TX_BIT_CTRL_OUT5[56] = GND;
assign TX_BIT_CTRL_OUT5[57] = GND;
assign TX_BIT_CTRL_OUT5[58] = GND;
assign TX_BIT_CTRL_OUT5[59] = GND;
assign TX_BIT_CTRL_OUT5[60] = GND;
assign TX_BIT_CTRL_OUT5[61] = GND;
assign TX_BIT_CTRL_OUT5[62] = GND;
assign TX_BIT_CTRL_OUT5[63] = GND;
assign TX_BIT_CTRL_OUT5[64] = GND;
assign TX_BIT_CTRL_OUT5[65] = GND;
assign TX_BIT_CTRL_OUT5[66] = GND;
assign TX_BIT_CTRL_OUT5[67] = GND;
assign TX_BIT_CTRL_OUT5[68] = GND;
assign TX_BIT_CTRL_OUT5[69] = GND;
assign TX_BIT_CTRL_OUT5[70] = GND;
assign TX_BIT_CTRL_OUT5[71] = GND;
assign TX_BIT_CTRL_OUT5[72] = GND;
assign TX_BIT_CTRL_OUT5[73] = GND;
assign TX_BIT_CTRL_OUT5[74] = GND;
assign TX_BIT_CTRL_OUT5[75] = GND;
assign TX_BIT_CTRL_OUT5[76] = GND;
assign TX_BIT_CTRL_OUT5[77] = GND;
assign TX_BIT_CTRL_OUT5[78] = GND;
assign TX_BIT_CTRL_OUT5[79] = GND;
assign TX_BIT_CTRL_OUT5[80] = GND;
assign TX_BIT_CTRL_OUT5[81] = GND;
assign TX_BIT_CTRL_OUT5[82] = GND;
assign TX_BIT_CTRL_OUT5[83] = GND;
assign TX_BIT_CTRL_OUT5[84] = GND;
assign TX_BIT_CTRL_OUT5[85] = GND;
assign TX_BIT_CTRL_OUT5[86] = GND;
assign TX_BIT_CTRL_OUT5[87] = GND;
assign TX_BIT_CTRL_OUT5[88] = GND;
assign TX_BIT_CTRL_OUT5[89] = GND;
assign TX_BIT_CTRL_OUT5[90] = GND;
assign TX_BIT_CTRL_OUT5[91] = GND;
assign TX_BIT_CTRL_OUT5[92] = GND;
assign TX_BIT_CTRL_OUT5[93] = GND;
assign TX_BIT_CTRL_OUT5[94] = GND;
assign TX_BIT_CTRL_OUT5[95] = GND;
assign TX_BIT_CTRL_OUT5[96] = GND;
assign TX_BIT_CTRL_OUT5[97] = GND;
assign TX_BIT_CTRL_OUT5[98] = GND;
assign TX_BIT_CTRL_OUT5[99] = GND;
assign TX_BIT_CTRL_OUT5[100] = GND;
assign TX_BIT_CTRL_OUT5[101] = GND;
assign TX_BIT_CTRL_OUT5[102] = GND;
assign TX_BIT_CTRL_OUT5[103] = GND;
assign TX_BIT_CTRL_OUT5[104] = GND;
assign TX_BIT_CTRL_OUT5[105] = GND;
assign TX_BIT_CTRL_OUT5[106] = GND;
assign TX_BIT_CTRL_OUT5[107] = GND;
assign TX_BIT_CTRL_OUT5[108] = GND;
assign TX_BIT_CTRL_OUT5[109] = GND;
assign TX_BIT_CTRL_OUT5[110] = GND;
assign TX_BIT_CTRL_OUT5[111] = GND;
assign TX_BIT_CTRL_OUT5[112] = GND;
assign TX_BIT_CTRL_OUT5[113] = GND;
assign TX_BIT_CTRL_OUT5[114] = GND;
assign TX_BIT_CTRL_OUT5[115] = GND;
assign TX_BIT_CTRL_OUT5[116] = GND;
assign TX_BIT_CTRL_OUT5[117] = GND;
assign TX_BIT_CTRL_OUT5[118] = GND;
assign TX_BIT_CTRL_OUT5[119] = GND;
assign TX_BIT_CTRL_OUT5[160] = GND;
assign TX_BIT_CTRL_OUT5[161] = GND;
assign TX_BIT_CTRL_OUT5[162] = GND;
assign TX_BIT_CTRL_OUT5[163] = GND;
assign TX_BIT_CTRL_OUT5[164] = GND;
assign TX_BIT_CTRL_OUT5[165] = GND;
assign TX_BIT_CTRL_OUT5[166] = GND;
assign TX_BIT_CTRL_OUT5[167] = GND;
assign TX_BIT_CTRL_OUT5[168] = GND;
assign TX_BIT_CTRL_OUT5[169] = GND;
assign TX_BIT_CTRL_OUT5[170] = GND;
assign TX_BIT_CTRL_OUT5[171] = GND;
assign TX_BIT_CTRL_OUT5[172] = GND;
assign TX_BIT_CTRL_OUT5[173] = GND;
assign TX_BIT_CTRL_OUT5[174] = GND;
assign TX_BIT_CTRL_OUT5[175] = GND;
assign TX_BIT_CTRL_OUT5[176] = GND;
assign TX_BIT_CTRL_OUT5[177] = GND;
assign TX_BIT_CTRL_OUT5[178] = GND;
assign TX_BIT_CTRL_OUT5[179] = GND;
assign TX_BIT_CTRL_OUT5[180] = GND;
assign TX_BIT_CTRL_OUT5[181] = GND;
assign TX_BIT_CTRL_OUT5[182] = GND;
assign TX_BIT_CTRL_OUT5[183] = GND;
assign TX_BIT_CTRL_OUT5[184] = GND;
assign TX_BIT_CTRL_OUT5[185] = GND;
assign TX_BIT_CTRL_OUT5[186] = GND;
assign TX_BIT_CTRL_OUT5[187] = GND;
assign TX_BIT_CTRL_OUT5[188] = GND;
assign TX_BIT_CTRL_OUT5[189] = GND;
assign TX_BIT_CTRL_OUT5[190] = GND;
assign TX_BIT_CTRL_OUT5[191] = GND;
assign TX_BIT_CTRL_OUT5[192] = GND;
assign TX_BIT_CTRL_OUT5[193] = GND;
assign TX_BIT_CTRL_OUT5[194] = GND;
assign TX_BIT_CTRL_OUT5[195] = GND;
assign TX_BIT_CTRL_OUT5[196] = GND;
assign TX_BIT_CTRL_OUT5[197] = GND;
assign TX_BIT_CTRL_OUT5[198] = GND;
assign TX_BIT_CTRL_OUT5[199] = GND;
assign TX_BIT_CTRL_OUT5[200] = GND;
assign TX_BIT_CTRL_OUT5[201] = GND;
assign TX_BIT_CTRL_OUT5[202] = GND;
assign TX_BIT_CTRL_OUT5[203] = GND;
assign TX_BIT_CTRL_OUT5[204] = GND;
assign TX_BIT_CTRL_OUT5[205] = GND;
assign TX_BIT_CTRL_OUT5[206] = GND;
assign TX_BIT_CTRL_OUT5[207] = GND;
assign TX_BIT_CTRL_OUT5[208] = GND;
assign TX_BIT_CTRL_OUT5[209] = GND;
assign TX_BIT_CTRL_OUT5[210] = GND;
assign TX_BIT_CTRL_OUT5[211] = GND;
assign TX_BIT_CTRL_OUT5[212] = GND;
assign TX_BIT_CTRL_OUT5[213] = GND;
assign TX_BIT_CTRL_OUT5[214] = GND;
assign TX_BIT_CTRL_OUT5[215] = GND;
assign TX_BIT_CTRL_OUT5[216] = GND;
assign TX_BIT_CTRL_OUT5[217] = GND;
assign TX_BIT_CTRL_OUT5[218] = GND;
assign TX_BIT_CTRL_OUT5[219] = GND;
assign TX_BIT_CTRL_OUT5[220] = GND;
assign TX_BIT_CTRL_OUT5[221] = GND;
assign TX_BIT_CTRL_OUT5[222] = GND;
assign TX_BIT_CTRL_OUT5[223] = GND;
assign TX_BIT_CTRL_OUT5[224] = GND;
assign TX_BIT_CTRL_OUT5[225] = GND;
assign TX_BIT_CTRL_OUT5[226] = GND;
assign TX_BIT_CTRL_OUT5[227] = GND;
assign TX_BIT_CTRL_OUT5[228] = GND;
assign TX_BIT_CTRL_OUT5[229] = GND;
assign TX_BIT_CTRL_OUT5[230] = GND;
assign TX_BIT_CTRL_OUT5[231] = GND;
assign TX_BIT_CTRL_OUT5[232] = GND;
assign TX_BIT_CTRL_OUT5[233] = GND;
assign TX_BIT_CTRL_OUT5[234] = GND;
assign TX_BIT_CTRL_OUT5[235] = GND;
assign TX_BIT_CTRL_OUT5[236] = GND;
assign TX_BIT_CTRL_OUT5[237] = GND;
assign TX_BIT_CTRL_OUT5[238] = GND;
assign TX_BIT_CTRL_OUT5[239] = GND;
assign TX_BIT_CTRL_OUT5[240] = GND;
assign TX_BIT_CTRL_OUT5[241] = GND;
assign TX_BIT_CTRL_OUT5[242] = GND;
assign TX_BIT_CTRL_OUT5[243] = GND;
assign TX_BIT_CTRL_OUT5[244] = GND;
assign TX_BIT_CTRL_OUT5[245] = GND;
assign TX_BIT_CTRL_OUT5[246] = GND;
assign TX_BIT_CTRL_OUT5[247] = GND;
assign TX_BIT_CTRL_OUT5[248] = GND;
assign TX_BIT_CTRL_OUT5[249] = GND;
assign TX_BIT_CTRL_OUT5[250] = GND;
assign TX_BIT_CTRL_OUT5[251] = GND;
assign TX_BIT_CTRL_OUT5[252] = GND;
assign TX_BIT_CTRL_OUT5[253] = GND;
assign TX_BIT_CTRL_OUT5[254] = GND;
assign TX_BIT_CTRL_OUT5[255] = GND;
assign TX_BIT_CTRL_OUT5[256] = GND;
assign TX_BIT_CTRL_OUT5[257] = GND;
assign TX_BIT_CTRL_OUT5[258] = GND;
assign TX_BIT_CTRL_OUT5[259] = GND;
assign TX_BIT_CTRL_OUT5[260] = GND;
assign TX_BIT_CTRL_OUT5[261] = GND;
assign TX_BIT_CTRL_OUT5[262] = GND;
assign TX_BIT_CTRL_OUT5[263] = GND;
assign TX_BIT_CTRL_OUT5[264] = GND;
assign TX_BIT_CTRL_OUT5[265] = GND;
assign TX_BIT_CTRL_OUT5[266] = GND;
assign TX_BIT_CTRL_OUT5[267] = GND;
assign TX_BIT_CTRL_OUT5[268] = GND;
assign TX_BIT_CTRL_OUT5[269] = GND;
assign TX_BIT_CTRL_OUT5[270] = GND;
assign TX_BIT_CTRL_OUT5[271] = GND;
assign TX_BIT_CTRL_OUT5[272] = GND;
assign TX_BIT_CTRL_OUT5[273] = GND;
assign TX_BIT_CTRL_OUT5[274] = GND;
assign TX_BIT_CTRL_OUT5[275] = GND;
assign TX_BIT_CTRL_OUT5[276] = GND;
assign TX_BIT_CTRL_OUT5[277] = GND;
assign TX_BIT_CTRL_OUT5[278] = GND;
assign TX_BIT_CTRL_OUT5[279] = GND;
assign TX_BIT_CTRL_OUT5[280] = GND;
assign TX_BIT_CTRL_OUT5[281] = GND;
assign TX_BIT_CTRL_OUT5[282] = GND;
assign TX_BIT_CTRL_OUT5[283] = GND;
assign TX_BIT_CTRL_OUT5[284] = GND;
assign TX_BIT_CTRL_OUT5[285] = GND;
assign TX_BIT_CTRL_OUT5[286] = GND;
assign TX_BIT_CTRL_OUT5[287] = GND;
assign TX_BIT_CTRL_OUT5[288] = GND;
assign TX_BIT_CTRL_OUT5[289] = GND;
assign TX_BIT_CTRL_OUT5[290] = GND;
assign TX_BIT_CTRL_OUT5[291] = GND;
assign TX_BIT_CTRL_OUT5[292] = GND;
assign TX_BIT_CTRL_OUT5[293] = GND;
assign TX_BIT_CTRL_OUT5[294] = GND;
assign TX_BIT_CTRL_OUT5[295] = GND;
assign TX_BIT_CTRL_OUT5[296] = GND;
assign TX_BIT_CTRL_OUT5[297] = GND;
assign TX_BIT_CTRL_OUT5[298] = GND;
assign TX_BIT_CTRL_OUT5[299] = GND;
assign TX_BIT_CTRL_OUT5[300] = GND;
assign TX_BIT_CTRL_OUT5[301] = GND;
assign TX_BIT_CTRL_OUT5[302] = GND;
assign TX_BIT_CTRL_OUT5[303] = GND;
assign TX_BIT_CTRL_OUT5[304] = GND;
assign TX_BIT_CTRL_OUT5[305] = GND;
assign TX_BIT_CTRL_OUT5[306] = GND;
assign TX_BIT_CTRL_OUT5[307] = GND;
assign TX_BIT_CTRL_OUT5[308] = GND;
assign TX_BIT_CTRL_OUT5[309] = GND;
assign TX_BIT_CTRL_OUT5[310] = GND;
assign TX_BIT_CTRL_OUT5[311] = GND;
assign TX_BIT_CTRL_OUT5[312] = GND;
assign TX_BIT_CTRL_OUT5[313] = GND;
assign TX_BIT_CTRL_OUT5[314] = GND;
assign TX_BIT_CTRL_OUT5[315] = GND;
assign TX_BIT_CTRL_OUT5[316] = GND;
assign TX_BIT_CTRL_OUT5[317] = GND;
assign TX_BIT_CTRL_OUT5[318] = GND;
assign TX_BIT_CTRL_OUT5[319] = GND;
assign TX_BIT_CTRL_OUT6[0] = GND;
assign TX_BIT_CTRL_OUT6[1] = GND;
assign TX_BIT_CTRL_OUT6[2] = GND;
assign TX_BIT_CTRL_OUT6[3] = GND;
assign TX_BIT_CTRL_OUT6[4] = GND;
assign TX_BIT_CTRL_OUT6[5] = GND;
assign TX_BIT_CTRL_OUT6[6] = GND;
assign TX_BIT_CTRL_OUT6[7] = GND;
assign TX_BIT_CTRL_OUT6[8] = GND;
assign TX_BIT_CTRL_OUT6[9] = GND;
assign TX_BIT_CTRL_OUT6[10] = GND;
assign TX_BIT_CTRL_OUT6[11] = GND;
assign TX_BIT_CTRL_OUT6[12] = GND;
assign TX_BIT_CTRL_OUT6[13] = GND;
assign TX_BIT_CTRL_OUT6[14] = GND;
assign TX_BIT_CTRL_OUT6[15] = GND;
assign TX_BIT_CTRL_OUT6[16] = GND;
assign TX_BIT_CTRL_OUT6[17] = GND;
assign TX_BIT_CTRL_OUT6[18] = GND;
assign TX_BIT_CTRL_OUT6[19] = GND;
assign TX_BIT_CTRL_OUT6[20] = GND;
assign TX_BIT_CTRL_OUT6[21] = GND;
assign TX_BIT_CTRL_OUT6[22] = GND;
assign TX_BIT_CTRL_OUT6[23] = GND;
assign TX_BIT_CTRL_OUT6[24] = GND;
assign TX_BIT_CTRL_OUT6[25] = GND;
assign TX_BIT_CTRL_OUT6[26] = GND;
assign TX_BIT_CTRL_OUT6[27] = GND;
assign TX_BIT_CTRL_OUT6[28] = GND;
assign TX_BIT_CTRL_OUT6[29] = GND;
assign TX_BIT_CTRL_OUT6[30] = GND;
assign TX_BIT_CTRL_OUT6[31] = GND;
assign TX_BIT_CTRL_OUT6[32] = GND;
assign TX_BIT_CTRL_OUT6[33] = GND;
assign TX_BIT_CTRL_OUT6[34] = GND;
assign TX_BIT_CTRL_OUT6[35] = GND;
assign TX_BIT_CTRL_OUT6[36] = GND;
assign TX_BIT_CTRL_OUT6[37] = GND;
assign TX_BIT_CTRL_OUT6[38] = GND;
assign TX_BIT_CTRL_OUT6[39] = GND;
assign TX_BIT_CTRL_OUT6[40] = GND;
assign TX_BIT_CTRL_OUT6[41] = GND;
assign TX_BIT_CTRL_OUT6[42] = GND;
assign TX_BIT_CTRL_OUT6[43] = GND;
assign TX_BIT_CTRL_OUT6[44] = GND;
assign TX_BIT_CTRL_OUT6[45] = GND;
assign TX_BIT_CTRL_OUT6[46] = GND;
assign TX_BIT_CTRL_OUT6[47] = GND;
assign TX_BIT_CTRL_OUT6[48] = GND;
assign TX_BIT_CTRL_OUT6[49] = GND;
assign TX_BIT_CTRL_OUT6[50] = GND;
assign TX_BIT_CTRL_OUT6[51] = GND;
assign TX_BIT_CTRL_OUT6[52] = GND;
assign TX_BIT_CTRL_OUT6[53] = GND;
assign TX_BIT_CTRL_OUT6[54] = GND;
assign TX_BIT_CTRL_OUT6[55] = GND;
assign TX_BIT_CTRL_OUT6[56] = GND;
assign TX_BIT_CTRL_OUT6[57] = GND;
assign TX_BIT_CTRL_OUT6[58] = GND;
assign TX_BIT_CTRL_OUT6[59] = GND;
assign TX_BIT_CTRL_OUT6[60] = GND;
assign TX_BIT_CTRL_OUT6[61] = GND;
assign TX_BIT_CTRL_OUT6[62] = GND;
assign TX_BIT_CTRL_OUT6[63] = GND;
assign TX_BIT_CTRL_OUT6[64] = GND;
assign TX_BIT_CTRL_OUT6[65] = GND;
assign TX_BIT_CTRL_OUT6[66] = GND;
assign TX_BIT_CTRL_OUT6[67] = GND;
assign TX_BIT_CTRL_OUT6[68] = GND;
assign TX_BIT_CTRL_OUT6[69] = GND;
assign TX_BIT_CTRL_OUT6[70] = GND;
assign TX_BIT_CTRL_OUT6[71] = GND;
assign TX_BIT_CTRL_OUT6[72] = GND;
assign TX_BIT_CTRL_OUT6[73] = GND;
assign TX_BIT_CTRL_OUT6[74] = GND;
assign TX_BIT_CTRL_OUT6[75] = GND;
assign TX_BIT_CTRL_OUT6[76] = GND;
assign TX_BIT_CTRL_OUT6[77] = GND;
assign TX_BIT_CTRL_OUT6[78] = GND;
assign TX_BIT_CTRL_OUT6[79] = GND;
assign TX_BIT_CTRL_OUT6[80] = GND;
assign TX_BIT_CTRL_OUT6[81] = GND;
assign TX_BIT_CTRL_OUT6[82] = GND;
assign TX_BIT_CTRL_OUT6[83] = GND;
assign TX_BIT_CTRL_OUT6[84] = GND;
assign TX_BIT_CTRL_OUT6[85] = GND;
assign TX_BIT_CTRL_OUT6[86] = GND;
assign TX_BIT_CTRL_OUT6[87] = GND;
assign TX_BIT_CTRL_OUT6[88] = GND;
assign TX_BIT_CTRL_OUT6[89] = GND;
assign TX_BIT_CTRL_OUT6[90] = GND;
assign TX_BIT_CTRL_OUT6[91] = GND;
assign TX_BIT_CTRL_OUT6[92] = GND;
assign TX_BIT_CTRL_OUT6[93] = GND;
assign TX_BIT_CTRL_OUT6[94] = GND;
assign TX_BIT_CTRL_OUT6[95] = GND;
assign TX_BIT_CTRL_OUT6[96] = GND;
assign TX_BIT_CTRL_OUT6[97] = GND;
assign TX_BIT_CTRL_OUT6[98] = GND;
assign TX_BIT_CTRL_OUT6[99] = GND;
assign TX_BIT_CTRL_OUT6[100] = GND;
assign TX_BIT_CTRL_OUT6[101] = GND;
assign TX_BIT_CTRL_OUT6[102] = GND;
assign TX_BIT_CTRL_OUT6[103] = GND;
assign TX_BIT_CTRL_OUT6[104] = GND;
assign TX_BIT_CTRL_OUT6[105] = GND;
assign TX_BIT_CTRL_OUT6[106] = GND;
assign TX_BIT_CTRL_OUT6[107] = GND;
assign TX_BIT_CTRL_OUT6[108] = GND;
assign TX_BIT_CTRL_OUT6[109] = GND;
assign TX_BIT_CTRL_OUT6[110] = GND;
assign TX_BIT_CTRL_OUT6[111] = GND;
assign TX_BIT_CTRL_OUT6[112] = GND;
assign TX_BIT_CTRL_OUT6[113] = GND;
assign TX_BIT_CTRL_OUT6[114] = GND;
assign TX_BIT_CTRL_OUT6[115] = GND;
assign TX_BIT_CTRL_OUT6[116] = GND;
assign TX_BIT_CTRL_OUT6[117] = GND;
assign TX_BIT_CTRL_OUT6[118] = GND;
assign TX_BIT_CTRL_OUT6[119] = GND;
assign TX_BIT_CTRL_OUT6[120] = GND;
assign TX_BIT_CTRL_OUT6[121] = GND;
assign TX_BIT_CTRL_OUT6[122] = GND;
assign TX_BIT_CTRL_OUT6[123] = GND;
assign TX_BIT_CTRL_OUT6[124] = GND;
assign TX_BIT_CTRL_OUT6[125] = GND;
assign TX_BIT_CTRL_OUT6[126] = GND;
assign TX_BIT_CTRL_OUT6[127] = GND;
assign TX_BIT_CTRL_OUT6[128] = GND;
assign TX_BIT_CTRL_OUT6[129] = GND;
assign TX_BIT_CTRL_OUT6[130] = GND;
assign TX_BIT_CTRL_OUT6[131] = GND;
assign TX_BIT_CTRL_OUT6[132] = GND;
assign TX_BIT_CTRL_OUT6[133] = GND;
assign TX_BIT_CTRL_OUT6[134] = GND;
assign TX_BIT_CTRL_OUT6[135] = GND;
assign TX_BIT_CTRL_OUT6[136] = GND;
assign TX_BIT_CTRL_OUT6[137] = GND;
assign TX_BIT_CTRL_OUT6[138] = GND;
assign TX_BIT_CTRL_OUT6[139] = GND;
assign TX_BIT_CTRL_OUT6[140] = GND;
assign TX_BIT_CTRL_OUT6[141] = GND;
assign TX_BIT_CTRL_OUT6[142] = GND;
assign TX_BIT_CTRL_OUT6[143] = GND;
assign TX_BIT_CTRL_OUT6[144] = GND;
assign TX_BIT_CTRL_OUT6[145] = GND;
assign TX_BIT_CTRL_OUT6[146] = GND;
assign TX_BIT_CTRL_OUT6[147] = GND;
assign TX_BIT_CTRL_OUT6[148] = GND;
assign TX_BIT_CTRL_OUT6[149] = GND;
assign TX_BIT_CTRL_OUT6[150] = GND;
assign TX_BIT_CTRL_OUT6[151] = GND;
assign TX_BIT_CTRL_OUT6[152] = GND;
assign TX_BIT_CTRL_OUT6[153] = GND;
assign TX_BIT_CTRL_OUT6[154] = GND;
assign TX_BIT_CTRL_OUT6[155] = GND;
assign TX_BIT_CTRL_OUT6[156] = GND;
assign TX_BIT_CTRL_OUT6[157] = GND;
assign TX_BIT_CTRL_OUT6[158] = GND;
assign TX_BIT_CTRL_OUT6[159] = GND;
assign TX_BIT_CTRL_OUT6[160] = GND;
assign TX_BIT_CTRL_OUT6[161] = GND;
assign TX_BIT_CTRL_OUT6[162] = GND;
assign TX_BIT_CTRL_OUT6[163] = GND;
assign TX_BIT_CTRL_OUT6[164] = GND;
assign TX_BIT_CTRL_OUT6[165] = GND;
assign TX_BIT_CTRL_OUT6[166] = GND;
assign TX_BIT_CTRL_OUT6[167] = GND;
assign TX_BIT_CTRL_OUT6[168] = GND;
assign TX_BIT_CTRL_OUT6[169] = GND;
assign TX_BIT_CTRL_OUT6[170] = GND;
assign TX_BIT_CTRL_OUT6[171] = GND;
assign TX_BIT_CTRL_OUT6[172] = GND;
assign TX_BIT_CTRL_OUT6[173] = GND;
assign TX_BIT_CTRL_OUT6[174] = GND;
assign TX_BIT_CTRL_OUT6[175] = GND;
assign TX_BIT_CTRL_OUT6[176] = GND;
assign TX_BIT_CTRL_OUT6[177] = GND;
assign TX_BIT_CTRL_OUT6[178] = GND;
assign TX_BIT_CTRL_OUT6[179] = GND;
assign TX_BIT_CTRL_OUT6[180] = GND;
assign TX_BIT_CTRL_OUT6[181] = GND;
assign TX_BIT_CTRL_OUT6[182] = GND;
assign TX_BIT_CTRL_OUT6[183] = GND;
assign TX_BIT_CTRL_OUT6[184] = GND;
assign TX_BIT_CTRL_OUT6[185] = GND;
assign TX_BIT_CTRL_OUT6[186] = GND;
assign TX_BIT_CTRL_OUT6[187] = GND;
assign TX_BIT_CTRL_OUT6[188] = GND;
assign TX_BIT_CTRL_OUT6[189] = GND;
assign TX_BIT_CTRL_OUT6[190] = GND;
assign TX_BIT_CTRL_OUT6[191] = GND;
assign TX_BIT_CTRL_OUT6[192] = GND;
assign TX_BIT_CTRL_OUT6[193] = GND;
assign TX_BIT_CTRL_OUT6[194] = GND;
assign TX_BIT_CTRL_OUT6[195] = GND;
assign TX_BIT_CTRL_OUT6[196] = GND;
assign TX_BIT_CTRL_OUT6[197] = GND;
assign TX_BIT_CTRL_OUT6[198] = GND;
assign TX_BIT_CTRL_OUT6[199] = GND;
assign TX_BIT_CTRL_OUT6[200] = GND;
assign TX_BIT_CTRL_OUT6[201] = GND;
assign TX_BIT_CTRL_OUT6[202] = GND;
assign TX_BIT_CTRL_OUT6[203] = GND;
assign TX_BIT_CTRL_OUT6[204] = GND;
assign TX_BIT_CTRL_OUT6[205] = GND;
assign TX_BIT_CTRL_OUT6[206] = GND;
assign TX_BIT_CTRL_OUT6[207] = GND;
assign TX_BIT_CTRL_OUT6[208] = GND;
assign TX_BIT_CTRL_OUT6[209] = GND;
assign TX_BIT_CTRL_OUT6[210] = GND;
assign TX_BIT_CTRL_OUT6[211] = GND;
assign TX_BIT_CTRL_OUT6[212] = GND;
assign TX_BIT_CTRL_OUT6[213] = GND;
assign TX_BIT_CTRL_OUT6[214] = GND;
assign TX_BIT_CTRL_OUT6[215] = GND;
assign TX_BIT_CTRL_OUT6[216] = GND;
assign TX_BIT_CTRL_OUT6[217] = GND;
assign TX_BIT_CTRL_OUT6[218] = GND;
assign TX_BIT_CTRL_OUT6[219] = GND;
assign TX_BIT_CTRL_OUT6[220] = GND;
assign TX_BIT_CTRL_OUT6[221] = GND;
assign TX_BIT_CTRL_OUT6[222] = GND;
assign TX_BIT_CTRL_OUT6[223] = GND;
assign TX_BIT_CTRL_OUT6[224] = GND;
assign TX_BIT_CTRL_OUT6[225] = GND;
assign TX_BIT_CTRL_OUT6[226] = GND;
assign TX_BIT_CTRL_OUT6[227] = GND;
assign TX_BIT_CTRL_OUT6[228] = GND;
assign TX_BIT_CTRL_OUT6[229] = GND;
assign TX_BIT_CTRL_OUT6[230] = GND;
assign TX_BIT_CTRL_OUT6[231] = GND;
assign TX_BIT_CTRL_OUT6[232] = GND;
assign TX_BIT_CTRL_OUT6[233] = GND;
assign TX_BIT_CTRL_OUT6[234] = GND;
assign TX_BIT_CTRL_OUT6[235] = GND;
assign TX_BIT_CTRL_OUT6[236] = GND;
assign TX_BIT_CTRL_OUT6[237] = GND;
assign TX_BIT_CTRL_OUT6[238] = GND;
assign TX_BIT_CTRL_OUT6[239] = GND;
assign TX_BIT_CTRL_OUT6[240] = GND;
assign TX_BIT_CTRL_OUT6[241] = GND;
assign TX_BIT_CTRL_OUT6[242] = GND;
assign TX_BIT_CTRL_OUT6[243] = GND;
assign TX_BIT_CTRL_OUT6[244] = GND;
assign TX_BIT_CTRL_OUT6[245] = GND;
assign TX_BIT_CTRL_OUT6[246] = GND;
assign TX_BIT_CTRL_OUT6[247] = GND;
assign TX_BIT_CTRL_OUT6[248] = GND;
assign TX_BIT_CTRL_OUT6[249] = GND;
assign TX_BIT_CTRL_OUT6[250] = GND;
assign TX_BIT_CTRL_OUT6[251] = GND;
assign TX_BIT_CTRL_OUT6[252] = GND;
assign TX_BIT_CTRL_OUT6[253] = GND;
assign TX_BIT_CTRL_OUT6[254] = GND;
assign TX_BIT_CTRL_OUT6[255] = GND;
assign TX_BIT_CTRL_OUT6[256] = GND;
assign TX_BIT_CTRL_OUT6[257] = GND;
assign TX_BIT_CTRL_OUT6[258] = GND;
assign TX_BIT_CTRL_OUT6[259] = GND;
assign TX_BIT_CTRL_OUT6[260] = GND;
assign TX_BIT_CTRL_OUT6[261] = GND;
assign TX_BIT_CTRL_OUT6[262] = GND;
assign TX_BIT_CTRL_OUT6[263] = GND;
assign TX_BIT_CTRL_OUT6[264] = GND;
assign TX_BIT_CTRL_OUT6[265] = GND;
assign TX_BIT_CTRL_OUT6[266] = GND;
assign TX_BIT_CTRL_OUT6[267] = GND;
assign TX_BIT_CTRL_OUT6[268] = GND;
assign TX_BIT_CTRL_OUT6[269] = GND;
assign TX_BIT_CTRL_OUT6[270] = GND;
assign TX_BIT_CTRL_OUT6[271] = GND;
assign TX_BIT_CTRL_OUT6[272] = GND;
assign TX_BIT_CTRL_OUT6[273] = GND;
assign TX_BIT_CTRL_OUT6[274] = GND;
assign TX_BIT_CTRL_OUT6[275] = GND;
assign TX_BIT_CTRL_OUT6[276] = GND;
assign TX_BIT_CTRL_OUT6[277] = GND;
assign TX_BIT_CTRL_OUT6[278] = GND;
assign TX_BIT_CTRL_OUT6[279] = GND;
assign TX_BIT_CTRL_OUT6[280] = GND;
assign TX_BIT_CTRL_OUT6[281] = GND;
assign TX_BIT_CTRL_OUT6[282] = GND;
assign TX_BIT_CTRL_OUT6[283] = GND;
assign TX_BIT_CTRL_OUT6[284] = GND;
assign TX_BIT_CTRL_OUT6[285] = GND;
assign TX_BIT_CTRL_OUT6[286] = GND;
assign TX_BIT_CTRL_OUT6[287] = GND;
assign TX_BIT_CTRL_OUT6[288] = GND;
assign TX_BIT_CTRL_OUT6[289] = GND;
assign TX_BIT_CTRL_OUT6[290] = GND;
assign TX_BIT_CTRL_OUT6[291] = GND;
assign TX_BIT_CTRL_OUT6[292] = GND;
assign TX_BIT_CTRL_OUT6[293] = GND;
assign TX_BIT_CTRL_OUT6[294] = GND;
assign TX_BIT_CTRL_OUT6[295] = GND;
assign TX_BIT_CTRL_OUT6[296] = GND;
assign TX_BIT_CTRL_OUT6[297] = GND;
assign TX_BIT_CTRL_OUT6[298] = GND;
assign TX_BIT_CTRL_OUT6[299] = GND;
assign TX_BIT_CTRL_OUT6[300] = GND;
assign TX_BIT_CTRL_OUT6[301] = GND;
assign TX_BIT_CTRL_OUT6[302] = GND;
assign TX_BIT_CTRL_OUT6[303] = GND;
assign TX_BIT_CTRL_OUT6[304] = GND;
assign TX_BIT_CTRL_OUT6[305] = GND;
assign TX_BIT_CTRL_OUT6[306] = GND;
assign TX_BIT_CTRL_OUT6[307] = GND;
assign TX_BIT_CTRL_OUT6[308] = GND;
assign TX_BIT_CTRL_OUT6[309] = GND;
assign TX_BIT_CTRL_OUT6[310] = GND;
assign TX_BIT_CTRL_OUT6[311] = GND;
assign TX_BIT_CTRL_OUT6[312] = GND;
assign TX_BIT_CTRL_OUT6[313] = GND;
assign TX_BIT_CTRL_OUT6[314] = GND;
assign TX_BIT_CTRL_OUT6[315] = GND;
assign TX_BIT_CTRL_OUT6[316] = GND;
assign TX_BIT_CTRL_OUT6[317] = GND;
assign TX_BIT_CTRL_OUT6[318] = GND;
assign TX_BIT_CTRL_OUT6[319] = GND;
assign DLY_RDY[0] = VCC;
assign DLY_RDY[1] = GND;
assign DLY_RDY[2] = VCC;
assign DLY_RDY[3] = GND;
assign DLY_RDY[4] = VCC;
assign DLY_RDY[5] = VCC;
assign DLY_RDY[6] = VCC;
assign DLY_RDY[7] = VCC;
assign VTC_RDY[0] = VCC;
assign VTC_RDY[1] = GND;
assign VTC_RDY[2] = VCC;
assign VTC_RDY[3] = GND;
assign VTC_RDY[4] = VCC;
assign VTC_RDY[5] = VCC;
assign VTC_RDY[6] = VCC;
assign VTC_RDY[7] = VCC;
endmodule /* hstdm_ultrascale_bitslice_control_8s_40s_DIV2_10s_10s_0s_0s_0s_0s_ULTRASCALE_PLUS_Z1_1_FB1_uA */

(* haps_ip_type="hstdm" *)module hstdm_ultrascale_bitslice_control_8s_40s_DIV2_96s_96s_0s_0s_0s_0s_ULTRASCALE_PLUS_Z1_FB1_uA (
  RX_BIT_CTRL_OUT0,
  RX_BIT_CTRL_OUT1,
  RX_BIT_CTRL_OUT2,
  RX_BIT_CTRL_OUT3,
  RX_BIT_CTRL_OUT4,
  RX_BIT_CTRL_OUT5,
  RX_BIT_CTRL_OUT6,
  TX_BIT_CTRL_OUT0,
  TX_BIT_CTRL_OUT1,
  TX_BIT_CTRL_OUT2,
  TX_BIT_CTRL_OUT3,
  TX_BIT_CTRL_OUT4,
  TX_BIT_CTRL_OUT5,
  TX_BIT_CTRL_OUT6,
  RX_BIT_CTRL_IN0,
  RX_BIT_CTRL_IN1,
  RX_BIT_CTRL_IN2,
  RX_BIT_CTRL_IN3,
  RX_BIT_CTRL_IN4,
  RX_BIT_CTRL_IN5,
  RX_BIT_CTRL_IN6,
  TX_BIT_CTRL_IN0,
  TX_BIT_CTRL_IN1,
  TX_BIT_CTRL_IN2,
  TX_BIT_CTRL_IN3,
  TX_BIT_CTRL_IN4,
  TX_BIT_CTRL_IN5,
  TX_BIT_CTRL_IN6,
  DLY_RDY,
  VTC_RDY,
  PLL_CLK,
  RST,
  EN_VTC,
  RIU_ADDR,
  RIU_CLK,
  RIU_NIBBLE_SEL_LOWER,
  RIU_NIBBLE_SEL_UPPER,
  RIU_WR_DATA,
  RIU_WR_EN
)
;
output [319:0] RX_BIT_CTRL_OUT0 ;
output [319:0] RX_BIT_CTRL_OUT1 ;
output [319:0] RX_BIT_CTRL_OUT2 ;
output [319:0] RX_BIT_CTRL_OUT3 ;
output [319:0] RX_BIT_CTRL_OUT4 ;
output [319:0] RX_BIT_CTRL_OUT5 ;
output [319:0] RX_BIT_CTRL_OUT6 ;
output [319:0] TX_BIT_CTRL_OUT0 ;
output [319:0] TX_BIT_CTRL_OUT1 ;
output [319:0] TX_BIT_CTRL_OUT2 ;
output [319:0] TX_BIT_CTRL_OUT3 ;
output [319:0] TX_BIT_CTRL_OUT4 ;
output [319:0] TX_BIT_CTRL_OUT5 ;
output [319:0] TX_BIT_CTRL_OUT6 ;
input [319:0] RX_BIT_CTRL_IN0 ;
input [319:0] RX_BIT_CTRL_IN1 ;
input [319:0] RX_BIT_CTRL_IN2 ;
input [319:0] RX_BIT_CTRL_IN3 ;
input [319:0] RX_BIT_CTRL_IN4 ;
input [319:0] RX_BIT_CTRL_IN5 ;
input [319:0] RX_BIT_CTRL_IN6 ;
input [319:0] TX_BIT_CTRL_IN0 ;
input [319:0] TX_BIT_CTRL_IN1 ;
input [319:0] TX_BIT_CTRL_IN2 ;
input [319:0] TX_BIT_CTRL_IN3 ;
input [319:0] TX_BIT_CTRL_IN4 ;
input [319:0] TX_BIT_CTRL_IN5 ;
input [319:0] TX_BIT_CTRL_IN6 ;
output [7:0] DLY_RDY ;
output [7:0] VTC_RDY ;
input PLL_CLK ;
input RST ;
input EN_VTC ;
input [5:0] RIU_ADDR ;
input RIU_CLK ;
input RIU_NIBBLE_SEL_LOWER ;
input RIU_NIBBLE_SEL_UPPER ;
input [15:0] RIU_WR_DATA ;
input RIU_WR_EN ;
wire PLL_CLK ;
wire RST ;
wire EN_VTC ;
wire RIU_CLK ;
wire RIU_NIBBLE_SEL_LOWER ;
wire RIU_NIBBLE_SEL_UPPER ;
wire RIU_WR_EN ;
wire [239:200] RX_BIT_CTRL_OUT0_1;
wire [279:200] RX_BIT_CTRL_OUT1_1;
wire [279:200] RX_BIT_CTRL_OUT2_1;
wire [279:200] RX_BIT_CTRL_OUT3_1;
wire [279:240] RX_BIT_CTRL_OUT4_1;
wire [279:240] RX_BIT_CTRL_OUT5_1;
wire [279:200] RX_BIT_CTRL_OUT6_1;
wire [239:200] TX_BIT_CTRL_OUT0_1;
wire [279:200] TX_BIT_CTRL_OUT1_1;
wire [279:200] TX_BIT_CTRL_OUT2_1;
wire [279:200] TX_BIT_CTRL_OUT3_1;
wire [279:240] TX_BIT_CTRL_OUT4_1;
wire [279:240] TX_BIT_CTRL_OUT5_1;
wire [279:200] TX_BIT_CTRL_OUT6_1;
wire [6:5] DLY_RDY_1;
wire [6:5] VTC_RDY_1;
wire [6:0] \NIBBLE[6].BITSLICE_CTRL.un1_bitslice_control_2 ;
wire [15:0] \NIBBLE[6].BITSLICE_CTRL.un1_bitslice_control_3 ;
wire [39:0] \NIBBLE[6].BITSLICE_CTRL.un1_bitslice_control_7 ;
wire [6:0] \NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_1 ;
wire [15:0] \NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_2 ;
wire [39:0] \NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_7 ;
wire \NIBBLE[6].BITSLICE_CTRL.un1_bitslice_control_1  ;
wire \NIBBLE[6].BITSLICE_CTRL.un1_bitslice_control  ;
wire \NIBBLE[6].BITSLICE_CTRL.un1_bitslice_control_5  ;
wire \NIBBLE[6].BITSLICE_CTRL.un1_bitslice_control_4  ;
wire \NIBBLE[6].BITSLICE_CTRL.un1_bitslice_control_6  ;
wire \NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control  ;
wire \NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_5  ;
wire \NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_4  ;
wire \NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_3  ;
wire \NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_6  ;
wire GND ;
wire VCC ;
  GND GND_cZ (
	.G(GND)
);
  VCC VCC_cZ (
	.P(VCC)
);
// @225:8066
(* haps_ip_type="hstdm_native_bitslice_ctrl" *)  BITSLICE_CONTROL \NIBBLE[6].BITSLICE_CTRL.bitslice_control  (
	.CLK_TO_EXT_NORTH(\NIBBLE[6].BITSLICE_CTRL.un1_bitslice_control_1 ),
	.CLK_TO_EXT_SOUTH(\NIBBLE[6].BITSLICE_CTRL.un1_bitslice_control ),
	.DLY_RDY(DLY_RDY_1[6]),
	.DYN_DCI(\NIBBLE[6].BITSLICE_CTRL.un1_bitslice_control_2 [6:0]),
	.NCLK_NIBBLE_OUT(\NIBBLE[6].BITSLICE_CTRL.un1_bitslice_control_5 ),
	.PCLK_NIBBLE_OUT(\NIBBLE[6].BITSLICE_CTRL.un1_bitslice_control_4 ),
	.RIU_RD_DATA(\NIBBLE[6].BITSLICE_CTRL.un1_bitslice_control_3 [15:0]),
	.RIU_VALID(\NIBBLE[6].BITSLICE_CTRL.un1_bitslice_control_6 ),
	.RX_BIT_CTRL_OUT0(RX_BIT_CTRL_OUT0[279:240]),
	.RX_BIT_CTRL_OUT1(RX_BIT_CTRL_OUT1_1[279:240]),
	.RX_BIT_CTRL_OUT2(RX_BIT_CTRL_OUT2_1[279:240]),
	.RX_BIT_CTRL_OUT3(RX_BIT_CTRL_OUT3_1[279:240]),
	.RX_BIT_CTRL_OUT4(RX_BIT_CTRL_OUT4_1[279:240]),
	.RX_BIT_CTRL_OUT5(RX_BIT_CTRL_OUT5_1[279:240]),
	.RX_BIT_CTRL_OUT6(RX_BIT_CTRL_OUT6_1[279:240]),
	.TX_BIT_CTRL_OUT0(TX_BIT_CTRL_OUT0[279:240]),
	.TX_BIT_CTRL_OUT1(TX_BIT_CTRL_OUT1_1[279:240]),
	.TX_BIT_CTRL_OUT2(TX_BIT_CTRL_OUT2_1[279:240]),
	.TX_BIT_CTRL_OUT3(TX_BIT_CTRL_OUT3_1[279:240]),
	.TX_BIT_CTRL_OUT4(TX_BIT_CTRL_OUT4_1[279:240]),
	.TX_BIT_CTRL_OUT5(TX_BIT_CTRL_OUT5_1[279:240]),
	.TX_BIT_CTRL_OUT6(TX_BIT_CTRL_OUT6_1[279:240]),
	.TX_BIT_CTRL_OUT_TRI(\NIBBLE[6].BITSLICE_CTRL.un1_bitslice_control_7 [39:0]),
	.VTC_RDY(VTC_RDY_1[6]),
	.CLK_FROM_EXT(VCC),
	.EN_VTC(GND),
	.NCLK_NIBBLE_IN(GND),
	.PCLK_NIBBLE_IN(GND),
	.PHY_RDEN({GND, GND, GND, GND}),
	.PLL_CLK(PLL_CLK),
	.REFCLK(GND),
	.RIU_ADDR({GND, GND, GND, GND, GND, GND}),
	.RIU_CLK(RIU_CLK),
	.RIU_NIBBLE_SEL(GND),
	.RIU_WR_DATA({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RIU_WR_EN(GND),
	.RST(RST),
	.RX_BIT_CTRL_IN0(RX_BIT_CTRL_IN0[279:240]),
	.RX_BIT_CTRL_IN1({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN2({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN3({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN4({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN5({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN6({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TBYTE_IN({GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN0(TX_BIT_CTRL_IN0[279:240]),
	.TX_BIT_CTRL_IN1({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN2({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN3({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN4({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN5({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN6({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN_TRI({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND})
);
defparam \NIBBLE[6].BITSLICE_CTRL.bitslice_control .CTRL_CLK="EXTERNAL";
defparam \NIBBLE[6].BITSLICE_CTRL.bitslice_control .DIV_MODE="DIV2";
defparam \NIBBLE[6].BITSLICE_CTRL.bitslice_control .EN_CLK_TO_EXT_NORTH="DISABLE";
defparam \NIBBLE[6].BITSLICE_CTRL.bitslice_control .EN_CLK_TO_EXT_SOUTH="DISABLE";
defparam \NIBBLE[6].BITSLICE_CTRL.bitslice_control .EN_OTHER_NCLK="FALSE";
defparam \NIBBLE[6].BITSLICE_CTRL.bitslice_control .EN_OTHER_PCLK="FALSE";
defparam \NIBBLE[6].BITSLICE_CTRL.bitslice_control .IDLY_VT_TRACK="FALSE";
defparam \NIBBLE[6].BITSLICE_CTRL.bitslice_control .ODLY_VT_TRACK="FALSE";
defparam \NIBBLE[6].BITSLICE_CTRL.bitslice_control .QDLY_VT_TRACK="FALSE";
defparam \NIBBLE[6].BITSLICE_CTRL.bitslice_control .REFCLK_SRC="PLLCLK";
defparam \NIBBLE[6].BITSLICE_CTRL.bitslice_control .RX_GATING="DISABLE";
defparam \NIBBLE[6].BITSLICE_CTRL.bitslice_control .SELF_CALIBRATE="DISABLE";
defparam \NIBBLE[6].BITSLICE_CTRL.bitslice_control .SERIAL_MODE="FALSE";
defparam \NIBBLE[6].BITSLICE_CTRL.bitslice_control .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \NIBBLE[6].BITSLICE_CTRL.bitslice_control .SIM_VERSION=2.0;
defparam \NIBBLE[6].BITSLICE_CTRL.bitslice_control .TX_GATING="DISABLE";
// @225:8066
(* haps_ip_type="hstdm_native_bitslice_ctrl" *)  BITSLICE_CONTROL \NIBBLE[5].BITSLICE_CTRL.bitslice_control  (
	.CLK_TO_EXT_NORTH(\NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control ),
	.CLK_TO_EXT_SOUTH(\NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_5 ),
	.DLY_RDY(DLY_RDY_1[5]),
	.DYN_DCI(\NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_1 [6:0]),
	.NCLK_NIBBLE_OUT(\NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_4 ),
	.PCLK_NIBBLE_OUT(\NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_3 ),
	.RIU_RD_DATA(\NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_2 [15:0]),
	.RIU_VALID(\NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_6 ),
	.RX_BIT_CTRL_OUT0(RX_BIT_CTRL_OUT0_1[239:200]),
	.RX_BIT_CTRL_OUT1(RX_BIT_CTRL_OUT1_1[239:200]),
	.RX_BIT_CTRL_OUT2(RX_BIT_CTRL_OUT2_1[239:200]),
	.RX_BIT_CTRL_OUT3(RX_BIT_CTRL_OUT3_1[239:200]),
	.RX_BIT_CTRL_OUT4(RX_BIT_CTRL_OUT4[239:200]),
	.RX_BIT_CTRL_OUT5(RX_BIT_CTRL_OUT5[239:200]),
	.RX_BIT_CTRL_OUT6(RX_BIT_CTRL_OUT6_1[239:200]),
	.TX_BIT_CTRL_OUT0(TX_BIT_CTRL_OUT0_1[239:200]),
	.TX_BIT_CTRL_OUT1(TX_BIT_CTRL_OUT1_1[239:200]),
	.TX_BIT_CTRL_OUT2(TX_BIT_CTRL_OUT2_1[239:200]),
	.TX_BIT_CTRL_OUT3(TX_BIT_CTRL_OUT3_1[239:200]),
	.TX_BIT_CTRL_OUT4(TX_BIT_CTRL_OUT4[239:200]),
	.TX_BIT_CTRL_OUT5(TX_BIT_CTRL_OUT5[239:200]),
	.TX_BIT_CTRL_OUT6(TX_BIT_CTRL_OUT6_1[239:200]),
	.TX_BIT_CTRL_OUT_TRI(\NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_7 [39:0]),
	.VTC_RDY(VTC_RDY_1[5]),
	.CLK_FROM_EXT(VCC),
	.EN_VTC(GND),
	.NCLK_NIBBLE_IN(GND),
	.PCLK_NIBBLE_IN(GND),
	.PHY_RDEN({GND, GND, GND, GND}),
	.PLL_CLK(PLL_CLK),
	.REFCLK(GND),
	.RIU_ADDR({GND, GND, GND, GND, GND, GND}),
	.RIU_CLK(RIU_CLK),
	.RIU_NIBBLE_SEL(GND),
	.RIU_WR_DATA({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RIU_WR_EN(GND),
	.RST(RST),
	.RX_BIT_CTRL_IN0({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN1({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN2({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN3({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN4(RX_BIT_CTRL_IN4[239:200]),
	.RX_BIT_CTRL_IN5(RX_BIT_CTRL_IN5[239:200]),
	.RX_BIT_CTRL_IN6({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TBYTE_IN({GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN0({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN1({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN2({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN3({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN4(TX_BIT_CTRL_IN4[239:200]),
	.TX_BIT_CTRL_IN5(TX_BIT_CTRL_IN5[239:200]),
	.TX_BIT_CTRL_IN6({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN_TRI({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND})
);
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .CTRL_CLK="EXTERNAL";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .DIV_MODE="DIV2";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .EN_CLK_TO_EXT_NORTH="DISABLE";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .EN_CLK_TO_EXT_SOUTH="DISABLE";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .EN_OTHER_NCLK="FALSE";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .EN_OTHER_PCLK="FALSE";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .IDLY_VT_TRACK="FALSE";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .ODLY_VT_TRACK="FALSE";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .QDLY_VT_TRACK="FALSE";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .REFCLK_SRC="PLLCLK";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .RX_GATING="DISABLE";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .SELF_CALIBRATE="DISABLE";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .SERIAL_MODE="FALSE";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .TX_GATING="DISABLE";
assign RX_BIT_CTRL_OUT0[0] = GND;
assign RX_BIT_CTRL_OUT0[1] = GND;
assign RX_BIT_CTRL_OUT0[2] = GND;
assign RX_BIT_CTRL_OUT0[3] = GND;
assign RX_BIT_CTRL_OUT0[4] = GND;
assign RX_BIT_CTRL_OUT0[5] = GND;
assign RX_BIT_CTRL_OUT0[6] = GND;
assign RX_BIT_CTRL_OUT0[7] = GND;
assign RX_BIT_CTRL_OUT0[8] = GND;
assign RX_BIT_CTRL_OUT0[9] = GND;
assign RX_BIT_CTRL_OUT0[10] = GND;
assign RX_BIT_CTRL_OUT0[11] = GND;
assign RX_BIT_CTRL_OUT0[12] = GND;
assign RX_BIT_CTRL_OUT0[13] = GND;
assign RX_BIT_CTRL_OUT0[14] = GND;
assign RX_BIT_CTRL_OUT0[15] = GND;
assign RX_BIT_CTRL_OUT0[16] = GND;
assign RX_BIT_CTRL_OUT0[17] = GND;
assign RX_BIT_CTRL_OUT0[18] = GND;
assign RX_BIT_CTRL_OUT0[19] = GND;
assign RX_BIT_CTRL_OUT0[20] = GND;
assign RX_BIT_CTRL_OUT0[21] = GND;
assign RX_BIT_CTRL_OUT0[22] = GND;
assign RX_BIT_CTRL_OUT0[23] = GND;
assign RX_BIT_CTRL_OUT0[24] = GND;
assign RX_BIT_CTRL_OUT0[25] = GND;
assign RX_BIT_CTRL_OUT0[26] = GND;
assign RX_BIT_CTRL_OUT0[27] = GND;
assign RX_BIT_CTRL_OUT0[28] = GND;
assign RX_BIT_CTRL_OUT0[29] = GND;
assign RX_BIT_CTRL_OUT0[30] = GND;
assign RX_BIT_CTRL_OUT0[31] = GND;
assign RX_BIT_CTRL_OUT0[32] = GND;
assign RX_BIT_CTRL_OUT0[33] = GND;
assign RX_BIT_CTRL_OUT0[34] = GND;
assign RX_BIT_CTRL_OUT0[35] = GND;
assign RX_BIT_CTRL_OUT0[36] = GND;
assign RX_BIT_CTRL_OUT0[37] = GND;
assign RX_BIT_CTRL_OUT0[38] = GND;
assign RX_BIT_CTRL_OUT0[39] = GND;
assign RX_BIT_CTRL_OUT0[40] = GND;
assign RX_BIT_CTRL_OUT0[41] = GND;
assign RX_BIT_CTRL_OUT0[42] = GND;
assign RX_BIT_CTRL_OUT0[43] = GND;
assign RX_BIT_CTRL_OUT0[44] = GND;
assign RX_BIT_CTRL_OUT0[45] = GND;
assign RX_BIT_CTRL_OUT0[46] = GND;
assign RX_BIT_CTRL_OUT0[47] = GND;
assign RX_BIT_CTRL_OUT0[48] = GND;
assign RX_BIT_CTRL_OUT0[49] = GND;
assign RX_BIT_CTRL_OUT0[50] = GND;
assign RX_BIT_CTRL_OUT0[51] = GND;
assign RX_BIT_CTRL_OUT0[52] = GND;
assign RX_BIT_CTRL_OUT0[53] = GND;
assign RX_BIT_CTRL_OUT0[54] = GND;
assign RX_BIT_CTRL_OUT0[55] = GND;
assign RX_BIT_CTRL_OUT0[56] = GND;
assign RX_BIT_CTRL_OUT0[57] = GND;
assign RX_BIT_CTRL_OUT0[58] = GND;
assign RX_BIT_CTRL_OUT0[59] = GND;
assign RX_BIT_CTRL_OUT0[60] = GND;
assign RX_BIT_CTRL_OUT0[61] = GND;
assign RX_BIT_CTRL_OUT0[62] = GND;
assign RX_BIT_CTRL_OUT0[63] = GND;
assign RX_BIT_CTRL_OUT0[64] = GND;
assign RX_BIT_CTRL_OUT0[65] = GND;
assign RX_BIT_CTRL_OUT0[66] = GND;
assign RX_BIT_CTRL_OUT0[67] = GND;
assign RX_BIT_CTRL_OUT0[68] = GND;
assign RX_BIT_CTRL_OUT0[69] = GND;
assign RX_BIT_CTRL_OUT0[70] = GND;
assign RX_BIT_CTRL_OUT0[71] = GND;
assign RX_BIT_CTRL_OUT0[72] = GND;
assign RX_BIT_CTRL_OUT0[73] = GND;
assign RX_BIT_CTRL_OUT0[74] = GND;
assign RX_BIT_CTRL_OUT0[75] = GND;
assign RX_BIT_CTRL_OUT0[76] = GND;
assign RX_BIT_CTRL_OUT0[77] = GND;
assign RX_BIT_CTRL_OUT0[78] = GND;
assign RX_BIT_CTRL_OUT0[79] = GND;
assign RX_BIT_CTRL_OUT0[80] = GND;
assign RX_BIT_CTRL_OUT0[81] = GND;
assign RX_BIT_CTRL_OUT0[82] = GND;
assign RX_BIT_CTRL_OUT0[83] = GND;
assign RX_BIT_CTRL_OUT0[84] = GND;
assign RX_BIT_CTRL_OUT0[85] = GND;
assign RX_BIT_CTRL_OUT0[86] = GND;
assign RX_BIT_CTRL_OUT0[87] = GND;
assign RX_BIT_CTRL_OUT0[88] = GND;
assign RX_BIT_CTRL_OUT0[89] = GND;
assign RX_BIT_CTRL_OUT0[90] = GND;
assign RX_BIT_CTRL_OUT0[91] = GND;
assign RX_BIT_CTRL_OUT0[92] = GND;
assign RX_BIT_CTRL_OUT0[93] = GND;
assign RX_BIT_CTRL_OUT0[94] = GND;
assign RX_BIT_CTRL_OUT0[95] = GND;
assign RX_BIT_CTRL_OUT0[96] = GND;
assign RX_BIT_CTRL_OUT0[97] = GND;
assign RX_BIT_CTRL_OUT0[98] = GND;
assign RX_BIT_CTRL_OUT0[99] = GND;
assign RX_BIT_CTRL_OUT0[100] = GND;
assign RX_BIT_CTRL_OUT0[101] = GND;
assign RX_BIT_CTRL_OUT0[102] = GND;
assign RX_BIT_CTRL_OUT0[103] = GND;
assign RX_BIT_CTRL_OUT0[104] = GND;
assign RX_BIT_CTRL_OUT0[105] = GND;
assign RX_BIT_CTRL_OUT0[106] = GND;
assign RX_BIT_CTRL_OUT0[107] = GND;
assign RX_BIT_CTRL_OUT0[108] = GND;
assign RX_BIT_CTRL_OUT0[109] = GND;
assign RX_BIT_CTRL_OUT0[110] = GND;
assign RX_BIT_CTRL_OUT0[111] = GND;
assign RX_BIT_CTRL_OUT0[112] = GND;
assign RX_BIT_CTRL_OUT0[113] = GND;
assign RX_BIT_CTRL_OUT0[114] = GND;
assign RX_BIT_CTRL_OUT0[115] = GND;
assign RX_BIT_CTRL_OUT0[116] = GND;
assign RX_BIT_CTRL_OUT0[117] = GND;
assign RX_BIT_CTRL_OUT0[118] = GND;
assign RX_BIT_CTRL_OUT0[119] = GND;
assign RX_BIT_CTRL_OUT0[120] = GND;
assign RX_BIT_CTRL_OUT0[121] = GND;
assign RX_BIT_CTRL_OUT0[122] = GND;
assign RX_BIT_CTRL_OUT0[123] = GND;
assign RX_BIT_CTRL_OUT0[124] = GND;
assign RX_BIT_CTRL_OUT0[125] = GND;
assign RX_BIT_CTRL_OUT0[126] = GND;
assign RX_BIT_CTRL_OUT0[127] = GND;
assign RX_BIT_CTRL_OUT0[128] = GND;
assign RX_BIT_CTRL_OUT0[129] = GND;
assign RX_BIT_CTRL_OUT0[130] = GND;
assign RX_BIT_CTRL_OUT0[131] = GND;
assign RX_BIT_CTRL_OUT0[132] = GND;
assign RX_BIT_CTRL_OUT0[133] = GND;
assign RX_BIT_CTRL_OUT0[134] = GND;
assign RX_BIT_CTRL_OUT0[135] = GND;
assign RX_BIT_CTRL_OUT0[136] = GND;
assign RX_BIT_CTRL_OUT0[137] = GND;
assign RX_BIT_CTRL_OUT0[138] = GND;
assign RX_BIT_CTRL_OUT0[139] = GND;
assign RX_BIT_CTRL_OUT0[140] = GND;
assign RX_BIT_CTRL_OUT0[141] = GND;
assign RX_BIT_CTRL_OUT0[142] = GND;
assign RX_BIT_CTRL_OUT0[143] = GND;
assign RX_BIT_CTRL_OUT0[144] = GND;
assign RX_BIT_CTRL_OUT0[145] = GND;
assign RX_BIT_CTRL_OUT0[146] = GND;
assign RX_BIT_CTRL_OUT0[147] = GND;
assign RX_BIT_CTRL_OUT0[148] = GND;
assign RX_BIT_CTRL_OUT0[149] = GND;
assign RX_BIT_CTRL_OUT0[150] = GND;
assign RX_BIT_CTRL_OUT0[151] = GND;
assign RX_BIT_CTRL_OUT0[152] = GND;
assign RX_BIT_CTRL_OUT0[153] = GND;
assign RX_BIT_CTRL_OUT0[154] = GND;
assign RX_BIT_CTRL_OUT0[155] = GND;
assign RX_BIT_CTRL_OUT0[156] = GND;
assign RX_BIT_CTRL_OUT0[157] = GND;
assign RX_BIT_CTRL_OUT0[158] = GND;
assign RX_BIT_CTRL_OUT0[159] = GND;
assign RX_BIT_CTRL_OUT0[160] = GND;
assign RX_BIT_CTRL_OUT0[161] = GND;
assign RX_BIT_CTRL_OUT0[162] = GND;
assign RX_BIT_CTRL_OUT0[163] = GND;
assign RX_BIT_CTRL_OUT0[164] = GND;
assign RX_BIT_CTRL_OUT0[165] = GND;
assign RX_BIT_CTRL_OUT0[166] = GND;
assign RX_BIT_CTRL_OUT0[167] = GND;
assign RX_BIT_CTRL_OUT0[168] = GND;
assign RX_BIT_CTRL_OUT0[169] = GND;
assign RX_BIT_CTRL_OUT0[170] = GND;
assign RX_BIT_CTRL_OUT0[171] = GND;
assign RX_BIT_CTRL_OUT0[172] = GND;
assign RX_BIT_CTRL_OUT0[173] = GND;
assign RX_BIT_CTRL_OUT0[174] = GND;
assign RX_BIT_CTRL_OUT0[175] = GND;
assign RX_BIT_CTRL_OUT0[176] = GND;
assign RX_BIT_CTRL_OUT0[177] = GND;
assign RX_BIT_CTRL_OUT0[178] = GND;
assign RX_BIT_CTRL_OUT0[179] = GND;
assign RX_BIT_CTRL_OUT0[180] = GND;
assign RX_BIT_CTRL_OUT0[181] = GND;
assign RX_BIT_CTRL_OUT0[182] = GND;
assign RX_BIT_CTRL_OUT0[183] = GND;
assign RX_BIT_CTRL_OUT0[184] = GND;
assign RX_BIT_CTRL_OUT0[185] = GND;
assign RX_BIT_CTRL_OUT0[186] = GND;
assign RX_BIT_CTRL_OUT0[187] = GND;
assign RX_BIT_CTRL_OUT0[188] = GND;
assign RX_BIT_CTRL_OUT0[189] = GND;
assign RX_BIT_CTRL_OUT0[190] = GND;
assign RX_BIT_CTRL_OUT0[191] = GND;
assign RX_BIT_CTRL_OUT0[192] = GND;
assign RX_BIT_CTRL_OUT0[193] = GND;
assign RX_BIT_CTRL_OUT0[194] = GND;
assign RX_BIT_CTRL_OUT0[195] = GND;
assign RX_BIT_CTRL_OUT0[196] = GND;
assign RX_BIT_CTRL_OUT0[197] = GND;
assign RX_BIT_CTRL_OUT0[198] = GND;
assign RX_BIT_CTRL_OUT0[199] = GND;
assign RX_BIT_CTRL_OUT0[200] = GND;
assign RX_BIT_CTRL_OUT0[201] = GND;
assign RX_BIT_CTRL_OUT0[202] = GND;
assign RX_BIT_CTRL_OUT0[203] = GND;
assign RX_BIT_CTRL_OUT0[204] = GND;
assign RX_BIT_CTRL_OUT0[205] = GND;
assign RX_BIT_CTRL_OUT0[206] = GND;
assign RX_BIT_CTRL_OUT0[207] = GND;
assign RX_BIT_CTRL_OUT0[208] = GND;
assign RX_BIT_CTRL_OUT0[209] = GND;
assign RX_BIT_CTRL_OUT0[210] = GND;
assign RX_BIT_CTRL_OUT0[211] = GND;
assign RX_BIT_CTRL_OUT0[212] = GND;
assign RX_BIT_CTRL_OUT0[213] = GND;
assign RX_BIT_CTRL_OUT0[214] = GND;
assign RX_BIT_CTRL_OUT0[215] = GND;
assign RX_BIT_CTRL_OUT0[216] = GND;
assign RX_BIT_CTRL_OUT0[217] = GND;
assign RX_BIT_CTRL_OUT0[218] = GND;
assign RX_BIT_CTRL_OUT0[219] = GND;
assign RX_BIT_CTRL_OUT0[220] = GND;
assign RX_BIT_CTRL_OUT0[221] = GND;
assign RX_BIT_CTRL_OUT0[222] = GND;
assign RX_BIT_CTRL_OUT0[223] = GND;
assign RX_BIT_CTRL_OUT0[224] = GND;
assign RX_BIT_CTRL_OUT0[225] = GND;
assign RX_BIT_CTRL_OUT0[226] = GND;
assign RX_BIT_CTRL_OUT0[227] = GND;
assign RX_BIT_CTRL_OUT0[228] = GND;
assign RX_BIT_CTRL_OUT0[229] = GND;
assign RX_BIT_CTRL_OUT0[230] = GND;
assign RX_BIT_CTRL_OUT0[231] = GND;
assign RX_BIT_CTRL_OUT0[232] = GND;
assign RX_BIT_CTRL_OUT0[233] = GND;
assign RX_BIT_CTRL_OUT0[234] = GND;
assign RX_BIT_CTRL_OUT0[235] = GND;
assign RX_BIT_CTRL_OUT0[236] = GND;
assign RX_BIT_CTRL_OUT0[237] = GND;
assign RX_BIT_CTRL_OUT0[238] = GND;
assign RX_BIT_CTRL_OUT0[239] = GND;
assign RX_BIT_CTRL_OUT0[280] = GND;
assign RX_BIT_CTRL_OUT0[281] = GND;
assign RX_BIT_CTRL_OUT0[282] = GND;
assign RX_BIT_CTRL_OUT0[283] = GND;
assign RX_BIT_CTRL_OUT0[284] = GND;
assign RX_BIT_CTRL_OUT0[285] = GND;
assign RX_BIT_CTRL_OUT0[286] = GND;
assign RX_BIT_CTRL_OUT0[287] = GND;
assign RX_BIT_CTRL_OUT0[288] = GND;
assign RX_BIT_CTRL_OUT0[289] = GND;
assign RX_BIT_CTRL_OUT0[290] = GND;
assign RX_BIT_CTRL_OUT0[291] = GND;
assign RX_BIT_CTRL_OUT0[292] = GND;
assign RX_BIT_CTRL_OUT0[293] = GND;
assign RX_BIT_CTRL_OUT0[294] = GND;
assign RX_BIT_CTRL_OUT0[295] = GND;
assign RX_BIT_CTRL_OUT0[296] = GND;
assign RX_BIT_CTRL_OUT0[297] = GND;
assign RX_BIT_CTRL_OUT0[298] = GND;
assign RX_BIT_CTRL_OUT0[299] = GND;
assign RX_BIT_CTRL_OUT0[300] = GND;
assign RX_BIT_CTRL_OUT0[301] = GND;
assign RX_BIT_CTRL_OUT0[302] = GND;
assign RX_BIT_CTRL_OUT0[303] = GND;
assign RX_BIT_CTRL_OUT0[304] = GND;
assign RX_BIT_CTRL_OUT0[305] = GND;
assign RX_BIT_CTRL_OUT0[306] = GND;
assign RX_BIT_CTRL_OUT0[307] = GND;
assign RX_BIT_CTRL_OUT0[308] = GND;
assign RX_BIT_CTRL_OUT0[309] = GND;
assign RX_BIT_CTRL_OUT0[310] = GND;
assign RX_BIT_CTRL_OUT0[311] = GND;
assign RX_BIT_CTRL_OUT0[312] = GND;
assign RX_BIT_CTRL_OUT0[313] = GND;
assign RX_BIT_CTRL_OUT0[314] = GND;
assign RX_BIT_CTRL_OUT0[315] = GND;
assign RX_BIT_CTRL_OUT0[316] = GND;
assign RX_BIT_CTRL_OUT0[317] = GND;
assign RX_BIT_CTRL_OUT0[318] = GND;
assign RX_BIT_CTRL_OUT0[319] = GND;
assign RX_BIT_CTRL_OUT1[0] = GND;
assign RX_BIT_CTRL_OUT1[1] = GND;
assign RX_BIT_CTRL_OUT1[2] = GND;
assign RX_BIT_CTRL_OUT1[3] = GND;
assign RX_BIT_CTRL_OUT1[4] = GND;
assign RX_BIT_CTRL_OUT1[5] = GND;
assign RX_BIT_CTRL_OUT1[6] = GND;
assign RX_BIT_CTRL_OUT1[7] = GND;
assign RX_BIT_CTRL_OUT1[8] = GND;
assign RX_BIT_CTRL_OUT1[9] = GND;
assign RX_BIT_CTRL_OUT1[10] = GND;
assign RX_BIT_CTRL_OUT1[11] = GND;
assign RX_BIT_CTRL_OUT1[12] = GND;
assign RX_BIT_CTRL_OUT1[13] = GND;
assign RX_BIT_CTRL_OUT1[14] = GND;
assign RX_BIT_CTRL_OUT1[15] = GND;
assign RX_BIT_CTRL_OUT1[16] = GND;
assign RX_BIT_CTRL_OUT1[17] = GND;
assign RX_BIT_CTRL_OUT1[18] = GND;
assign RX_BIT_CTRL_OUT1[19] = GND;
assign RX_BIT_CTRL_OUT1[20] = GND;
assign RX_BIT_CTRL_OUT1[21] = GND;
assign RX_BIT_CTRL_OUT1[22] = GND;
assign RX_BIT_CTRL_OUT1[23] = GND;
assign RX_BIT_CTRL_OUT1[24] = GND;
assign RX_BIT_CTRL_OUT1[25] = GND;
assign RX_BIT_CTRL_OUT1[26] = GND;
assign RX_BIT_CTRL_OUT1[27] = GND;
assign RX_BIT_CTRL_OUT1[28] = GND;
assign RX_BIT_CTRL_OUT1[29] = GND;
assign RX_BIT_CTRL_OUT1[30] = GND;
assign RX_BIT_CTRL_OUT1[31] = GND;
assign RX_BIT_CTRL_OUT1[32] = GND;
assign RX_BIT_CTRL_OUT1[33] = GND;
assign RX_BIT_CTRL_OUT1[34] = GND;
assign RX_BIT_CTRL_OUT1[35] = GND;
assign RX_BIT_CTRL_OUT1[36] = GND;
assign RX_BIT_CTRL_OUT1[37] = GND;
assign RX_BIT_CTRL_OUT1[38] = GND;
assign RX_BIT_CTRL_OUT1[39] = GND;
assign RX_BIT_CTRL_OUT1[40] = GND;
assign RX_BIT_CTRL_OUT1[41] = GND;
assign RX_BIT_CTRL_OUT1[42] = GND;
assign RX_BIT_CTRL_OUT1[43] = GND;
assign RX_BIT_CTRL_OUT1[44] = GND;
assign RX_BIT_CTRL_OUT1[45] = GND;
assign RX_BIT_CTRL_OUT1[46] = GND;
assign RX_BIT_CTRL_OUT1[47] = GND;
assign RX_BIT_CTRL_OUT1[48] = GND;
assign RX_BIT_CTRL_OUT1[49] = GND;
assign RX_BIT_CTRL_OUT1[50] = GND;
assign RX_BIT_CTRL_OUT1[51] = GND;
assign RX_BIT_CTRL_OUT1[52] = GND;
assign RX_BIT_CTRL_OUT1[53] = GND;
assign RX_BIT_CTRL_OUT1[54] = GND;
assign RX_BIT_CTRL_OUT1[55] = GND;
assign RX_BIT_CTRL_OUT1[56] = GND;
assign RX_BIT_CTRL_OUT1[57] = GND;
assign RX_BIT_CTRL_OUT1[58] = GND;
assign RX_BIT_CTRL_OUT1[59] = GND;
assign RX_BIT_CTRL_OUT1[60] = GND;
assign RX_BIT_CTRL_OUT1[61] = GND;
assign RX_BIT_CTRL_OUT1[62] = GND;
assign RX_BIT_CTRL_OUT1[63] = GND;
assign RX_BIT_CTRL_OUT1[64] = GND;
assign RX_BIT_CTRL_OUT1[65] = GND;
assign RX_BIT_CTRL_OUT1[66] = GND;
assign RX_BIT_CTRL_OUT1[67] = GND;
assign RX_BIT_CTRL_OUT1[68] = GND;
assign RX_BIT_CTRL_OUT1[69] = GND;
assign RX_BIT_CTRL_OUT1[70] = GND;
assign RX_BIT_CTRL_OUT1[71] = GND;
assign RX_BIT_CTRL_OUT1[72] = GND;
assign RX_BIT_CTRL_OUT1[73] = GND;
assign RX_BIT_CTRL_OUT1[74] = GND;
assign RX_BIT_CTRL_OUT1[75] = GND;
assign RX_BIT_CTRL_OUT1[76] = GND;
assign RX_BIT_CTRL_OUT1[77] = GND;
assign RX_BIT_CTRL_OUT1[78] = GND;
assign RX_BIT_CTRL_OUT1[79] = GND;
assign RX_BIT_CTRL_OUT1[80] = GND;
assign RX_BIT_CTRL_OUT1[81] = GND;
assign RX_BIT_CTRL_OUT1[82] = GND;
assign RX_BIT_CTRL_OUT1[83] = GND;
assign RX_BIT_CTRL_OUT1[84] = GND;
assign RX_BIT_CTRL_OUT1[85] = GND;
assign RX_BIT_CTRL_OUT1[86] = GND;
assign RX_BIT_CTRL_OUT1[87] = GND;
assign RX_BIT_CTRL_OUT1[88] = GND;
assign RX_BIT_CTRL_OUT1[89] = GND;
assign RX_BIT_CTRL_OUT1[90] = GND;
assign RX_BIT_CTRL_OUT1[91] = GND;
assign RX_BIT_CTRL_OUT1[92] = GND;
assign RX_BIT_CTRL_OUT1[93] = GND;
assign RX_BIT_CTRL_OUT1[94] = GND;
assign RX_BIT_CTRL_OUT1[95] = GND;
assign RX_BIT_CTRL_OUT1[96] = GND;
assign RX_BIT_CTRL_OUT1[97] = GND;
assign RX_BIT_CTRL_OUT1[98] = GND;
assign RX_BIT_CTRL_OUT1[99] = GND;
assign RX_BIT_CTRL_OUT1[100] = GND;
assign RX_BIT_CTRL_OUT1[101] = GND;
assign RX_BIT_CTRL_OUT1[102] = GND;
assign RX_BIT_CTRL_OUT1[103] = GND;
assign RX_BIT_CTRL_OUT1[104] = GND;
assign RX_BIT_CTRL_OUT1[105] = GND;
assign RX_BIT_CTRL_OUT1[106] = GND;
assign RX_BIT_CTRL_OUT1[107] = GND;
assign RX_BIT_CTRL_OUT1[108] = GND;
assign RX_BIT_CTRL_OUT1[109] = GND;
assign RX_BIT_CTRL_OUT1[110] = GND;
assign RX_BIT_CTRL_OUT1[111] = GND;
assign RX_BIT_CTRL_OUT1[112] = GND;
assign RX_BIT_CTRL_OUT1[113] = GND;
assign RX_BIT_CTRL_OUT1[114] = GND;
assign RX_BIT_CTRL_OUT1[115] = GND;
assign RX_BIT_CTRL_OUT1[116] = GND;
assign RX_BIT_CTRL_OUT1[117] = GND;
assign RX_BIT_CTRL_OUT1[118] = GND;
assign RX_BIT_CTRL_OUT1[119] = GND;
assign RX_BIT_CTRL_OUT1[120] = GND;
assign RX_BIT_CTRL_OUT1[121] = GND;
assign RX_BIT_CTRL_OUT1[122] = GND;
assign RX_BIT_CTRL_OUT1[123] = GND;
assign RX_BIT_CTRL_OUT1[124] = GND;
assign RX_BIT_CTRL_OUT1[125] = GND;
assign RX_BIT_CTRL_OUT1[126] = GND;
assign RX_BIT_CTRL_OUT1[127] = GND;
assign RX_BIT_CTRL_OUT1[128] = GND;
assign RX_BIT_CTRL_OUT1[129] = GND;
assign RX_BIT_CTRL_OUT1[130] = GND;
assign RX_BIT_CTRL_OUT1[131] = GND;
assign RX_BIT_CTRL_OUT1[132] = GND;
assign RX_BIT_CTRL_OUT1[133] = GND;
assign RX_BIT_CTRL_OUT1[134] = GND;
assign RX_BIT_CTRL_OUT1[135] = GND;
assign RX_BIT_CTRL_OUT1[136] = GND;
assign RX_BIT_CTRL_OUT1[137] = GND;
assign RX_BIT_CTRL_OUT1[138] = GND;
assign RX_BIT_CTRL_OUT1[139] = GND;
assign RX_BIT_CTRL_OUT1[140] = GND;
assign RX_BIT_CTRL_OUT1[141] = GND;
assign RX_BIT_CTRL_OUT1[142] = GND;
assign RX_BIT_CTRL_OUT1[143] = GND;
assign RX_BIT_CTRL_OUT1[144] = GND;
assign RX_BIT_CTRL_OUT1[145] = GND;
assign RX_BIT_CTRL_OUT1[146] = GND;
assign RX_BIT_CTRL_OUT1[147] = GND;
assign RX_BIT_CTRL_OUT1[148] = GND;
assign RX_BIT_CTRL_OUT1[149] = GND;
assign RX_BIT_CTRL_OUT1[150] = GND;
assign RX_BIT_CTRL_OUT1[151] = GND;
assign RX_BIT_CTRL_OUT1[152] = GND;
assign RX_BIT_CTRL_OUT1[153] = GND;
assign RX_BIT_CTRL_OUT1[154] = GND;
assign RX_BIT_CTRL_OUT1[155] = GND;
assign RX_BIT_CTRL_OUT1[156] = GND;
assign RX_BIT_CTRL_OUT1[157] = GND;
assign RX_BIT_CTRL_OUT1[158] = GND;
assign RX_BIT_CTRL_OUT1[159] = GND;
assign RX_BIT_CTRL_OUT1[160] = GND;
assign RX_BIT_CTRL_OUT1[161] = GND;
assign RX_BIT_CTRL_OUT1[162] = GND;
assign RX_BIT_CTRL_OUT1[163] = GND;
assign RX_BIT_CTRL_OUT1[164] = GND;
assign RX_BIT_CTRL_OUT1[165] = GND;
assign RX_BIT_CTRL_OUT1[166] = GND;
assign RX_BIT_CTRL_OUT1[167] = GND;
assign RX_BIT_CTRL_OUT1[168] = GND;
assign RX_BIT_CTRL_OUT1[169] = GND;
assign RX_BIT_CTRL_OUT1[170] = GND;
assign RX_BIT_CTRL_OUT1[171] = GND;
assign RX_BIT_CTRL_OUT1[172] = GND;
assign RX_BIT_CTRL_OUT1[173] = GND;
assign RX_BIT_CTRL_OUT1[174] = GND;
assign RX_BIT_CTRL_OUT1[175] = GND;
assign RX_BIT_CTRL_OUT1[176] = GND;
assign RX_BIT_CTRL_OUT1[177] = GND;
assign RX_BIT_CTRL_OUT1[178] = GND;
assign RX_BIT_CTRL_OUT1[179] = GND;
assign RX_BIT_CTRL_OUT1[180] = GND;
assign RX_BIT_CTRL_OUT1[181] = GND;
assign RX_BIT_CTRL_OUT1[182] = GND;
assign RX_BIT_CTRL_OUT1[183] = GND;
assign RX_BIT_CTRL_OUT1[184] = GND;
assign RX_BIT_CTRL_OUT1[185] = GND;
assign RX_BIT_CTRL_OUT1[186] = GND;
assign RX_BIT_CTRL_OUT1[187] = GND;
assign RX_BIT_CTRL_OUT1[188] = GND;
assign RX_BIT_CTRL_OUT1[189] = GND;
assign RX_BIT_CTRL_OUT1[190] = GND;
assign RX_BIT_CTRL_OUT1[191] = GND;
assign RX_BIT_CTRL_OUT1[192] = GND;
assign RX_BIT_CTRL_OUT1[193] = GND;
assign RX_BIT_CTRL_OUT1[194] = GND;
assign RX_BIT_CTRL_OUT1[195] = GND;
assign RX_BIT_CTRL_OUT1[196] = GND;
assign RX_BIT_CTRL_OUT1[197] = GND;
assign RX_BIT_CTRL_OUT1[198] = GND;
assign RX_BIT_CTRL_OUT1[199] = GND;
assign RX_BIT_CTRL_OUT1[200] = GND;
assign RX_BIT_CTRL_OUT1[201] = GND;
assign RX_BIT_CTRL_OUT1[202] = GND;
assign RX_BIT_CTRL_OUT1[203] = GND;
assign RX_BIT_CTRL_OUT1[204] = GND;
assign RX_BIT_CTRL_OUT1[205] = GND;
assign RX_BIT_CTRL_OUT1[206] = GND;
assign RX_BIT_CTRL_OUT1[207] = GND;
assign RX_BIT_CTRL_OUT1[208] = GND;
assign RX_BIT_CTRL_OUT1[209] = GND;
assign RX_BIT_CTRL_OUT1[210] = GND;
assign RX_BIT_CTRL_OUT1[211] = GND;
assign RX_BIT_CTRL_OUT1[212] = GND;
assign RX_BIT_CTRL_OUT1[213] = GND;
assign RX_BIT_CTRL_OUT1[214] = GND;
assign RX_BIT_CTRL_OUT1[215] = GND;
assign RX_BIT_CTRL_OUT1[216] = GND;
assign RX_BIT_CTRL_OUT1[217] = GND;
assign RX_BIT_CTRL_OUT1[218] = GND;
assign RX_BIT_CTRL_OUT1[219] = GND;
assign RX_BIT_CTRL_OUT1[220] = GND;
assign RX_BIT_CTRL_OUT1[221] = GND;
assign RX_BIT_CTRL_OUT1[222] = GND;
assign RX_BIT_CTRL_OUT1[223] = GND;
assign RX_BIT_CTRL_OUT1[224] = GND;
assign RX_BIT_CTRL_OUT1[225] = GND;
assign RX_BIT_CTRL_OUT1[226] = GND;
assign RX_BIT_CTRL_OUT1[227] = GND;
assign RX_BIT_CTRL_OUT1[228] = GND;
assign RX_BIT_CTRL_OUT1[229] = GND;
assign RX_BIT_CTRL_OUT1[230] = GND;
assign RX_BIT_CTRL_OUT1[231] = GND;
assign RX_BIT_CTRL_OUT1[232] = GND;
assign RX_BIT_CTRL_OUT1[233] = GND;
assign RX_BIT_CTRL_OUT1[234] = GND;
assign RX_BIT_CTRL_OUT1[235] = GND;
assign RX_BIT_CTRL_OUT1[236] = GND;
assign RX_BIT_CTRL_OUT1[237] = GND;
assign RX_BIT_CTRL_OUT1[238] = GND;
assign RX_BIT_CTRL_OUT1[239] = GND;
assign RX_BIT_CTRL_OUT1[240] = GND;
assign RX_BIT_CTRL_OUT1[241] = GND;
assign RX_BIT_CTRL_OUT1[242] = GND;
assign RX_BIT_CTRL_OUT1[243] = GND;
assign RX_BIT_CTRL_OUT1[244] = GND;
assign RX_BIT_CTRL_OUT1[245] = GND;
assign RX_BIT_CTRL_OUT1[246] = GND;
assign RX_BIT_CTRL_OUT1[247] = GND;
assign RX_BIT_CTRL_OUT1[248] = GND;
assign RX_BIT_CTRL_OUT1[249] = GND;
assign RX_BIT_CTRL_OUT1[250] = GND;
assign RX_BIT_CTRL_OUT1[251] = GND;
assign RX_BIT_CTRL_OUT1[252] = GND;
assign RX_BIT_CTRL_OUT1[253] = GND;
assign RX_BIT_CTRL_OUT1[254] = GND;
assign RX_BIT_CTRL_OUT1[255] = GND;
assign RX_BIT_CTRL_OUT1[256] = GND;
assign RX_BIT_CTRL_OUT1[257] = GND;
assign RX_BIT_CTRL_OUT1[258] = GND;
assign RX_BIT_CTRL_OUT1[259] = GND;
assign RX_BIT_CTRL_OUT1[260] = GND;
assign RX_BIT_CTRL_OUT1[261] = GND;
assign RX_BIT_CTRL_OUT1[262] = GND;
assign RX_BIT_CTRL_OUT1[263] = GND;
assign RX_BIT_CTRL_OUT1[264] = GND;
assign RX_BIT_CTRL_OUT1[265] = GND;
assign RX_BIT_CTRL_OUT1[266] = GND;
assign RX_BIT_CTRL_OUT1[267] = GND;
assign RX_BIT_CTRL_OUT1[268] = GND;
assign RX_BIT_CTRL_OUT1[269] = GND;
assign RX_BIT_CTRL_OUT1[270] = GND;
assign RX_BIT_CTRL_OUT1[271] = GND;
assign RX_BIT_CTRL_OUT1[272] = GND;
assign RX_BIT_CTRL_OUT1[273] = GND;
assign RX_BIT_CTRL_OUT1[274] = GND;
assign RX_BIT_CTRL_OUT1[275] = GND;
assign RX_BIT_CTRL_OUT1[276] = GND;
assign RX_BIT_CTRL_OUT1[277] = GND;
assign RX_BIT_CTRL_OUT1[278] = GND;
assign RX_BIT_CTRL_OUT1[279] = GND;
assign RX_BIT_CTRL_OUT1[280] = GND;
assign RX_BIT_CTRL_OUT1[281] = GND;
assign RX_BIT_CTRL_OUT1[282] = GND;
assign RX_BIT_CTRL_OUT1[283] = GND;
assign RX_BIT_CTRL_OUT1[284] = GND;
assign RX_BIT_CTRL_OUT1[285] = GND;
assign RX_BIT_CTRL_OUT1[286] = GND;
assign RX_BIT_CTRL_OUT1[287] = GND;
assign RX_BIT_CTRL_OUT1[288] = GND;
assign RX_BIT_CTRL_OUT1[289] = GND;
assign RX_BIT_CTRL_OUT1[290] = GND;
assign RX_BIT_CTRL_OUT1[291] = GND;
assign RX_BIT_CTRL_OUT1[292] = GND;
assign RX_BIT_CTRL_OUT1[293] = GND;
assign RX_BIT_CTRL_OUT1[294] = GND;
assign RX_BIT_CTRL_OUT1[295] = GND;
assign RX_BIT_CTRL_OUT1[296] = GND;
assign RX_BIT_CTRL_OUT1[297] = GND;
assign RX_BIT_CTRL_OUT1[298] = GND;
assign RX_BIT_CTRL_OUT1[299] = GND;
assign RX_BIT_CTRL_OUT1[300] = GND;
assign RX_BIT_CTRL_OUT1[301] = GND;
assign RX_BIT_CTRL_OUT1[302] = GND;
assign RX_BIT_CTRL_OUT1[303] = GND;
assign RX_BIT_CTRL_OUT1[304] = GND;
assign RX_BIT_CTRL_OUT1[305] = GND;
assign RX_BIT_CTRL_OUT1[306] = GND;
assign RX_BIT_CTRL_OUT1[307] = GND;
assign RX_BIT_CTRL_OUT1[308] = GND;
assign RX_BIT_CTRL_OUT1[309] = GND;
assign RX_BIT_CTRL_OUT1[310] = GND;
assign RX_BIT_CTRL_OUT1[311] = GND;
assign RX_BIT_CTRL_OUT1[312] = GND;
assign RX_BIT_CTRL_OUT1[313] = GND;
assign RX_BIT_CTRL_OUT1[314] = GND;
assign RX_BIT_CTRL_OUT1[315] = GND;
assign RX_BIT_CTRL_OUT1[316] = GND;
assign RX_BIT_CTRL_OUT1[317] = GND;
assign RX_BIT_CTRL_OUT1[318] = GND;
assign RX_BIT_CTRL_OUT1[319] = GND;
assign RX_BIT_CTRL_OUT2[0] = GND;
assign RX_BIT_CTRL_OUT2[1] = GND;
assign RX_BIT_CTRL_OUT2[2] = GND;
assign RX_BIT_CTRL_OUT2[3] = GND;
assign RX_BIT_CTRL_OUT2[4] = GND;
assign RX_BIT_CTRL_OUT2[5] = GND;
assign RX_BIT_CTRL_OUT2[6] = GND;
assign RX_BIT_CTRL_OUT2[7] = GND;
assign RX_BIT_CTRL_OUT2[8] = GND;
assign RX_BIT_CTRL_OUT2[9] = GND;
assign RX_BIT_CTRL_OUT2[10] = GND;
assign RX_BIT_CTRL_OUT2[11] = GND;
assign RX_BIT_CTRL_OUT2[12] = GND;
assign RX_BIT_CTRL_OUT2[13] = GND;
assign RX_BIT_CTRL_OUT2[14] = GND;
assign RX_BIT_CTRL_OUT2[15] = GND;
assign RX_BIT_CTRL_OUT2[16] = GND;
assign RX_BIT_CTRL_OUT2[17] = GND;
assign RX_BIT_CTRL_OUT2[18] = GND;
assign RX_BIT_CTRL_OUT2[19] = GND;
assign RX_BIT_CTRL_OUT2[20] = GND;
assign RX_BIT_CTRL_OUT2[21] = GND;
assign RX_BIT_CTRL_OUT2[22] = GND;
assign RX_BIT_CTRL_OUT2[23] = GND;
assign RX_BIT_CTRL_OUT2[24] = GND;
assign RX_BIT_CTRL_OUT2[25] = GND;
assign RX_BIT_CTRL_OUT2[26] = GND;
assign RX_BIT_CTRL_OUT2[27] = GND;
assign RX_BIT_CTRL_OUT2[28] = GND;
assign RX_BIT_CTRL_OUT2[29] = GND;
assign RX_BIT_CTRL_OUT2[30] = GND;
assign RX_BIT_CTRL_OUT2[31] = GND;
assign RX_BIT_CTRL_OUT2[32] = GND;
assign RX_BIT_CTRL_OUT2[33] = GND;
assign RX_BIT_CTRL_OUT2[34] = GND;
assign RX_BIT_CTRL_OUT2[35] = GND;
assign RX_BIT_CTRL_OUT2[36] = GND;
assign RX_BIT_CTRL_OUT2[37] = GND;
assign RX_BIT_CTRL_OUT2[38] = GND;
assign RX_BIT_CTRL_OUT2[39] = GND;
assign RX_BIT_CTRL_OUT2[40] = GND;
assign RX_BIT_CTRL_OUT2[41] = GND;
assign RX_BIT_CTRL_OUT2[42] = GND;
assign RX_BIT_CTRL_OUT2[43] = GND;
assign RX_BIT_CTRL_OUT2[44] = GND;
assign RX_BIT_CTRL_OUT2[45] = GND;
assign RX_BIT_CTRL_OUT2[46] = GND;
assign RX_BIT_CTRL_OUT2[47] = GND;
assign RX_BIT_CTRL_OUT2[48] = GND;
assign RX_BIT_CTRL_OUT2[49] = GND;
assign RX_BIT_CTRL_OUT2[50] = GND;
assign RX_BIT_CTRL_OUT2[51] = GND;
assign RX_BIT_CTRL_OUT2[52] = GND;
assign RX_BIT_CTRL_OUT2[53] = GND;
assign RX_BIT_CTRL_OUT2[54] = GND;
assign RX_BIT_CTRL_OUT2[55] = GND;
assign RX_BIT_CTRL_OUT2[56] = GND;
assign RX_BIT_CTRL_OUT2[57] = GND;
assign RX_BIT_CTRL_OUT2[58] = GND;
assign RX_BIT_CTRL_OUT2[59] = GND;
assign RX_BIT_CTRL_OUT2[60] = GND;
assign RX_BIT_CTRL_OUT2[61] = GND;
assign RX_BIT_CTRL_OUT2[62] = GND;
assign RX_BIT_CTRL_OUT2[63] = GND;
assign RX_BIT_CTRL_OUT2[64] = GND;
assign RX_BIT_CTRL_OUT2[65] = GND;
assign RX_BIT_CTRL_OUT2[66] = GND;
assign RX_BIT_CTRL_OUT2[67] = GND;
assign RX_BIT_CTRL_OUT2[68] = GND;
assign RX_BIT_CTRL_OUT2[69] = GND;
assign RX_BIT_CTRL_OUT2[70] = GND;
assign RX_BIT_CTRL_OUT2[71] = GND;
assign RX_BIT_CTRL_OUT2[72] = GND;
assign RX_BIT_CTRL_OUT2[73] = GND;
assign RX_BIT_CTRL_OUT2[74] = GND;
assign RX_BIT_CTRL_OUT2[75] = GND;
assign RX_BIT_CTRL_OUT2[76] = GND;
assign RX_BIT_CTRL_OUT2[77] = GND;
assign RX_BIT_CTRL_OUT2[78] = GND;
assign RX_BIT_CTRL_OUT2[79] = GND;
assign RX_BIT_CTRL_OUT2[80] = GND;
assign RX_BIT_CTRL_OUT2[81] = GND;
assign RX_BIT_CTRL_OUT2[82] = GND;
assign RX_BIT_CTRL_OUT2[83] = GND;
assign RX_BIT_CTRL_OUT2[84] = GND;
assign RX_BIT_CTRL_OUT2[85] = GND;
assign RX_BIT_CTRL_OUT2[86] = GND;
assign RX_BIT_CTRL_OUT2[87] = GND;
assign RX_BIT_CTRL_OUT2[88] = GND;
assign RX_BIT_CTRL_OUT2[89] = GND;
assign RX_BIT_CTRL_OUT2[90] = GND;
assign RX_BIT_CTRL_OUT2[91] = GND;
assign RX_BIT_CTRL_OUT2[92] = GND;
assign RX_BIT_CTRL_OUT2[93] = GND;
assign RX_BIT_CTRL_OUT2[94] = GND;
assign RX_BIT_CTRL_OUT2[95] = GND;
assign RX_BIT_CTRL_OUT2[96] = GND;
assign RX_BIT_CTRL_OUT2[97] = GND;
assign RX_BIT_CTRL_OUT2[98] = GND;
assign RX_BIT_CTRL_OUT2[99] = GND;
assign RX_BIT_CTRL_OUT2[100] = GND;
assign RX_BIT_CTRL_OUT2[101] = GND;
assign RX_BIT_CTRL_OUT2[102] = GND;
assign RX_BIT_CTRL_OUT2[103] = GND;
assign RX_BIT_CTRL_OUT2[104] = GND;
assign RX_BIT_CTRL_OUT2[105] = GND;
assign RX_BIT_CTRL_OUT2[106] = GND;
assign RX_BIT_CTRL_OUT2[107] = GND;
assign RX_BIT_CTRL_OUT2[108] = GND;
assign RX_BIT_CTRL_OUT2[109] = GND;
assign RX_BIT_CTRL_OUT2[110] = GND;
assign RX_BIT_CTRL_OUT2[111] = GND;
assign RX_BIT_CTRL_OUT2[112] = GND;
assign RX_BIT_CTRL_OUT2[113] = GND;
assign RX_BIT_CTRL_OUT2[114] = GND;
assign RX_BIT_CTRL_OUT2[115] = GND;
assign RX_BIT_CTRL_OUT2[116] = GND;
assign RX_BIT_CTRL_OUT2[117] = GND;
assign RX_BIT_CTRL_OUT2[118] = GND;
assign RX_BIT_CTRL_OUT2[119] = GND;
assign RX_BIT_CTRL_OUT2[120] = GND;
assign RX_BIT_CTRL_OUT2[121] = GND;
assign RX_BIT_CTRL_OUT2[122] = GND;
assign RX_BIT_CTRL_OUT2[123] = GND;
assign RX_BIT_CTRL_OUT2[124] = GND;
assign RX_BIT_CTRL_OUT2[125] = GND;
assign RX_BIT_CTRL_OUT2[126] = GND;
assign RX_BIT_CTRL_OUT2[127] = GND;
assign RX_BIT_CTRL_OUT2[128] = GND;
assign RX_BIT_CTRL_OUT2[129] = GND;
assign RX_BIT_CTRL_OUT2[130] = GND;
assign RX_BIT_CTRL_OUT2[131] = GND;
assign RX_BIT_CTRL_OUT2[132] = GND;
assign RX_BIT_CTRL_OUT2[133] = GND;
assign RX_BIT_CTRL_OUT2[134] = GND;
assign RX_BIT_CTRL_OUT2[135] = GND;
assign RX_BIT_CTRL_OUT2[136] = GND;
assign RX_BIT_CTRL_OUT2[137] = GND;
assign RX_BIT_CTRL_OUT2[138] = GND;
assign RX_BIT_CTRL_OUT2[139] = GND;
assign RX_BIT_CTRL_OUT2[140] = GND;
assign RX_BIT_CTRL_OUT2[141] = GND;
assign RX_BIT_CTRL_OUT2[142] = GND;
assign RX_BIT_CTRL_OUT2[143] = GND;
assign RX_BIT_CTRL_OUT2[144] = GND;
assign RX_BIT_CTRL_OUT2[145] = GND;
assign RX_BIT_CTRL_OUT2[146] = GND;
assign RX_BIT_CTRL_OUT2[147] = GND;
assign RX_BIT_CTRL_OUT2[148] = GND;
assign RX_BIT_CTRL_OUT2[149] = GND;
assign RX_BIT_CTRL_OUT2[150] = GND;
assign RX_BIT_CTRL_OUT2[151] = GND;
assign RX_BIT_CTRL_OUT2[152] = GND;
assign RX_BIT_CTRL_OUT2[153] = GND;
assign RX_BIT_CTRL_OUT2[154] = GND;
assign RX_BIT_CTRL_OUT2[155] = GND;
assign RX_BIT_CTRL_OUT2[156] = GND;
assign RX_BIT_CTRL_OUT2[157] = GND;
assign RX_BIT_CTRL_OUT2[158] = GND;
assign RX_BIT_CTRL_OUT2[159] = GND;
assign RX_BIT_CTRL_OUT2[160] = GND;
assign RX_BIT_CTRL_OUT2[161] = GND;
assign RX_BIT_CTRL_OUT2[162] = GND;
assign RX_BIT_CTRL_OUT2[163] = GND;
assign RX_BIT_CTRL_OUT2[164] = GND;
assign RX_BIT_CTRL_OUT2[165] = GND;
assign RX_BIT_CTRL_OUT2[166] = GND;
assign RX_BIT_CTRL_OUT2[167] = GND;
assign RX_BIT_CTRL_OUT2[168] = GND;
assign RX_BIT_CTRL_OUT2[169] = GND;
assign RX_BIT_CTRL_OUT2[170] = GND;
assign RX_BIT_CTRL_OUT2[171] = GND;
assign RX_BIT_CTRL_OUT2[172] = GND;
assign RX_BIT_CTRL_OUT2[173] = GND;
assign RX_BIT_CTRL_OUT2[174] = GND;
assign RX_BIT_CTRL_OUT2[175] = GND;
assign RX_BIT_CTRL_OUT2[176] = GND;
assign RX_BIT_CTRL_OUT2[177] = GND;
assign RX_BIT_CTRL_OUT2[178] = GND;
assign RX_BIT_CTRL_OUT2[179] = GND;
assign RX_BIT_CTRL_OUT2[180] = GND;
assign RX_BIT_CTRL_OUT2[181] = GND;
assign RX_BIT_CTRL_OUT2[182] = GND;
assign RX_BIT_CTRL_OUT2[183] = GND;
assign RX_BIT_CTRL_OUT2[184] = GND;
assign RX_BIT_CTRL_OUT2[185] = GND;
assign RX_BIT_CTRL_OUT2[186] = GND;
assign RX_BIT_CTRL_OUT2[187] = GND;
assign RX_BIT_CTRL_OUT2[188] = GND;
assign RX_BIT_CTRL_OUT2[189] = GND;
assign RX_BIT_CTRL_OUT2[190] = GND;
assign RX_BIT_CTRL_OUT2[191] = GND;
assign RX_BIT_CTRL_OUT2[192] = GND;
assign RX_BIT_CTRL_OUT2[193] = GND;
assign RX_BIT_CTRL_OUT2[194] = GND;
assign RX_BIT_CTRL_OUT2[195] = GND;
assign RX_BIT_CTRL_OUT2[196] = GND;
assign RX_BIT_CTRL_OUT2[197] = GND;
assign RX_BIT_CTRL_OUT2[198] = GND;
assign RX_BIT_CTRL_OUT2[199] = GND;
assign RX_BIT_CTRL_OUT2[200] = GND;
assign RX_BIT_CTRL_OUT2[201] = GND;
assign RX_BIT_CTRL_OUT2[202] = GND;
assign RX_BIT_CTRL_OUT2[203] = GND;
assign RX_BIT_CTRL_OUT2[204] = GND;
assign RX_BIT_CTRL_OUT2[205] = GND;
assign RX_BIT_CTRL_OUT2[206] = GND;
assign RX_BIT_CTRL_OUT2[207] = GND;
assign RX_BIT_CTRL_OUT2[208] = GND;
assign RX_BIT_CTRL_OUT2[209] = GND;
assign RX_BIT_CTRL_OUT2[210] = GND;
assign RX_BIT_CTRL_OUT2[211] = GND;
assign RX_BIT_CTRL_OUT2[212] = GND;
assign RX_BIT_CTRL_OUT2[213] = GND;
assign RX_BIT_CTRL_OUT2[214] = GND;
assign RX_BIT_CTRL_OUT2[215] = GND;
assign RX_BIT_CTRL_OUT2[216] = GND;
assign RX_BIT_CTRL_OUT2[217] = GND;
assign RX_BIT_CTRL_OUT2[218] = GND;
assign RX_BIT_CTRL_OUT2[219] = GND;
assign RX_BIT_CTRL_OUT2[220] = GND;
assign RX_BIT_CTRL_OUT2[221] = GND;
assign RX_BIT_CTRL_OUT2[222] = GND;
assign RX_BIT_CTRL_OUT2[223] = GND;
assign RX_BIT_CTRL_OUT2[224] = GND;
assign RX_BIT_CTRL_OUT2[225] = GND;
assign RX_BIT_CTRL_OUT2[226] = GND;
assign RX_BIT_CTRL_OUT2[227] = GND;
assign RX_BIT_CTRL_OUT2[228] = GND;
assign RX_BIT_CTRL_OUT2[229] = GND;
assign RX_BIT_CTRL_OUT2[230] = GND;
assign RX_BIT_CTRL_OUT2[231] = GND;
assign RX_BIT_CTRL_OUT2[232] = GND;
assign RX_BIT_CTRL_OUT2[233] = GND;
assign RX_BIT_CTRL_OUT2[234] = GND;
assign RX_BIT_CTRL_OUT2[235] = GND;
assign RX_BIT_CTRL_OUT2[236] = GND;
assign RX_BIT_CTRL_OUT2[237] = GND;
assign RX_BIT_CTRL_OUT2[238] = GND;
assign RX_BIT_CTRL_OUT2[239] = GND;
assign RX_BIT_CTRL_OUT2[240] = GND;
assign RX_BIT_CTRL_OUT2[241] = GND;
assign RX_BIT_CTRL_OUT2[242] = GND;
assign RX_BIT_CTRL_OUT2[243] = GND;
assign RX_BIT_CTRL_OUT2[244] = GND;
assign RX_BIT_CTRL_OUT2[245] = GND;
assign RX_BIT_CTRL_OUT2[246] = GND;
assign RX_BIT_CTRL_OUT2[247] = GND;
assign RX_BIT_CTRL_OUT2[248] = GND;
assign RX_BIT_CTRL_OUT2[249] = GND;
assign RX_BIT_CTRL_OUT2[250] = GND;
assign RX_BIT_CTRL_OUT2[251] = GND;
assign RX_BIT_CTRL_OUT2[252] = GND;
assign RX_BIT_CTRL_OUT2[253] = GND;
assign RX_BIT_CTRL_OUT2[254] = GND;
assign RX_BIT_CTRL_OUT2[255] = GND;
assign RX_BIT_CTRL_OUT2[256] = GND;
assign RX_BIT_CTRL_OUT2[257] = GND;
assign RX_BIT_CTRL_OUT2[258] = GND;
assign RX_BIT_CTRL_OUT2[259] = GND;
assign RX_BIT_CTRL_OUT2[260] = GND;
assign RX_BIT_CTRL_OUT2[261] = GND;
assign RX_BIT_CTRL_OUT2[262] = GND;
assign RX_BIT_CTRL_OUT2[263] = GND;
assign RX_BIT_CTRL_OUT2[264] = GND;
assign RX_BIT_CTRL_OUT2[265] = GND;
assign RX_BIT_CTRL_OUT2[266] = GND;
assign RX_BIT_CTRL_OUT2[267] = GND;
assign RX_BIT_CTRL_OUT2[268] = GND;
assign RX_BIT_CTRL_OUT2[269] = GND;
assign RX_BIT_CTRL_OUT2[270] = GND;
assign RX_BIT_CTRL_OUT2[271] = GND;
assign RX_BIT_CTRL_OUT2[272] = GND;
assign RX_BIT_CTRL_OUT2[273] = GND;
assign RX_BIT_CTRL_OUT2[274] = GND;
assign RX_BIT_CTRL_OUT2[275] = GND;
assign RX_BIT_CTRL_OUT2[276] = GND;
assign RX_BIT_CTRL_OUT2[277] = GND;
assign RX_BIT_CTRL_OUT2[278] = GND;
assign RX_BIT_CTRL_OUT2[279] = GND;
assign RX_BIT_CTRL_OUT2[280] = GND;
assign RX_BIT_CTRL_OUT2[281] = GND;
assign RX_BIT_CTRL_OUT2[282] = GND;
assign RX_BIT_CTRL_OUT2[283] = GND;
assign RX_BIT_CTRL_OUT2[284] = GND;
assign RX_BIT_CTRL_OUT2[285] = GND;
assign RX_BIT_CTRL_OUT2[286] = GND;
assign RX_BIT_CTRL_OUT2[287] = GND;
assign RX_BIT_CTRL_OUT2[288] = GND;
assign RX_BIT_CTRL_OUT2[289] = GND;
assign RX_BIT_CTRL_OUT2[290] = GND;
assign RX_BIT_CTRL_OUT2[291] = GND;
assign RX_BIT_CTRL_OUT2[292] = GND;
assign RX_BIT_CTRL_OUT2[293] = GND;
assign RX_BIT_CTRL_OUT2[294] = GND;
assign RX_BIT_CTRL_OUT2[295] = GND;
assign RX_BIT_CTRL_OUT2[296] = GND;
assign RX_BIT_CTRL_OUT2[297] = GND;
assign RX_BIT_CTRL_OUT2[298] = GND;
assign RX_BIT_CTRL_OUT2[299] = GND;
assign RX_BIT_CTRL_OUT2[300] = GND;
assign RX_BIT_CTRL_OUT2[301] = GND;
assign RX_BIT_CTRL_OUT2[302] = GND;
assign RX_BIT_CTRL_OUT2[303] = GND;
assign RX_BIT_CTRL_OUT2[304] = GND;
assign RX_BIT_CTRL_OUT2[305] = GND;
assign RX_BIT_CTRL_OUT2[306] = GND;
assign RX_BIT_CTRL_OUT2[307] = GND;
assign RX_BIT_CTRL_OUT2[308] = GND;
assign RX_BIT_CTRL_OUT2[309] = GND;
assign RX_BIT_CTRL_OUT2[310] = GND;
assign RX_BIT_CTRL_OUT2[311] = GND;
assign RX_BIT_CTRL_OUT2[312] = GND;
assign RX_BIT_CTRL_OUT2[313] = GND;
assign RX_BIT_CTRL_OUT2[314] = GND;
assign RX_BIT_CTRL_OUT2[315] = GND;
assign RX_BIT_CTRL_OUT2[316] = GND;
assign RX_BIT_CTRL_OUT2[317] = GND;
assign RX_BIT_CTRL_OUT2[318] = GND;
assign RX_BIT_CTRL_OUT2[319] = GND;
assign RX_BIT_CTRL_OUT3[0] = GND;
assign RX_BIT_CTRL_OUT3[1] = GND;
assign RX_BIT_CTRL_OUT3[2] = GND;
assign RX_BIT_CTRL_OUT3[3] = GND;
assign RX_BIT_CTRL_OUT3[4] = GND;
assign RX_BIT_CTRL_OUT3[5] = GND;
assign RX_BIT_CTRL_OUT3[6] = GND;
assign RX_BIT_CTRL_OUT3[7] = GND;
assign RX_BIT_CTRL_OUT3[8] = GND;
assign RX_BIT_CTRL_OUT3[9] = GND;
assign RX_BIT_CTRL_OUT3[10] = GND;
assign RX_BIT_CTRL_OUT3[11] = GND;
assign RX_BIT_CTRL_OUT3[12] = GND;
assign RX_BIT_CTRL_OUT3[13] = GND;
assign RX_BIT_CTRL_OUT3[14] = GND;
assign RX_BIT_CTRL_OUT3[15] = GND;
assign RX_BIT_CTRL_OUT3[16] = GND;
assign RX_BIT_CTRL_OUT3[17] = GND;
assign RX_BIT_CTRL_OUT3[18] = GND;
assign RX_BIT_CTRL_OUT3[19] = GND;
assign RX_BIT_CTRL_OUT3[20] = GND;
assign RX_BIT_CTRL_OUT3[21] = GND;
assign RX_BIT_CTRL_OUT3[22] = GND;
assign RX_BIT_CTRL_OUT3[23] = GND;
assign RX_BIT_CTRL_OUT3[24] = GND;
assign RX_BIT_CTRL_OUT3[25] = GND;
assign RX_BIT_CTRL_OUT3[26] = GND;
assign RX_BIT_CTRL_OUT3[27] = GND;
assign RX_BIT_CTRL_OUT3[28] = GND;
assign RX_BIT_CTRL_OUT3[29] = GND;
assign RX_BIT_CTRL_OUT3[30] = GND;
assign RX_BIT_CTRL_OUT3[31] = GND;
assign RX_BIT_CTRL_OUT3[32] = GND;
assign RX_BIT_CTRL_OUT3[33] = GND;
assign RX_BIT_CTRL_OUT3[34] = GND;
assign RX_BIT_CTRL_OUT3[35] = GND;
assign RX_BIT_CTRL_OUT3[36] = GND;
assign RX_BIT_CTRL_OUT3[37] = GND;
assign RX_BIT_CTRL_OUT3[38] = GND;
assign RX_BIT_CTRL_OUT3[39] = GND;
assign RX_BIT_CTRL_OUT3[40] = GND;
assign RX_BIT_CTRL_OUT3[41] = GND;
assign RX_BIT_CTRL_OUT3[42] = GND;
assign RX_BIT_CTRL_OUT3[43] = GND;
assign RX_BIT_CTRL_OUT3[44] = GND;
assign RX_BIT_CTRL_OUT3[45] = GND;
assign RX_BIT_CTRL_OUT3[46] = GND;
assign RX_BIT_CTRL_OUT3[47] = GND;
assign RX_BIT_CTRL_OUT3[48] = GND;
assign RX_BIT_CTRL_OUT3[49] = GND;
assign RX_BIT_CTRL_OUT3[50] = GND;
assign RX_BIT_CTRL_OUT3[51] = GND;
assign RX_BIT_CTRL_OUT3[52] = GND;
assign RX_BIT_CTRL_OUT3[53] = GND;
assign RX_BIT_CTRL_OUT3[54] = GND;
assign RX_BIT_CTRL_OUT3[55] = GND;
assign RX_BIT_CTRL_OUT3[56] = GND;
assign RX_BIT_CTRL_OUT3[57] = GND;
assign RX_BIT_CTRL_OUT3[58] = GND;
assign RX_BIT_CTRL_OUT3[59] = GND;
assign RX_BIT_CTRL_OUT3[60] = GND;
assign RX_BIT_CTRL_OUT3[61] = GND;
assign RX_BIT_CTRL_OUT3[62] = GND;
assign RX_BIT_CTRL_OUT3[63] = GND;
assign RX_BIT_CTRL_OUT3[64] = GND;
assign RX_BIT_CTRL_OUT3[65] = GND;
assign RX_BIT_CTRL_OUT3[66] = GND;
assign RX_BIT_CTRL_OUT3[67] = GND;
assign RX_BIT_CTRL_OUT3[68] = GND;
assign RX_BIT_CTRL_OUT3[69] = GND;
assign RX_BIT_CTRL_OUT3[70] = GND;
assign RX_BIT_CTRL_OUT3[71] = GND;
assign RX_BIT_CTRL_OUT3[72] = GND;
assign RX_BIT_CTRL_OUT3[73] = GND;
assign RX_BIT_CTRL_OUT3[74] = GND;
assign RX_BIT_CTRL_OUT3[75] = GND;
assign RX_BIT_CTRL_OUT3[76] = GND;
assign RX_BIT_CTRL_OUT3[77] = GND;
assign RX_BIT_CTRL_OUT3[78] = GND;
assign RX_BIT_CTRL_OUT3[79] = GND;
assign RX_BIT_CTRL_OUT3[80] = GND;
assign RX_BIT_CTRL_OUT3[81] = GND;
assign RX_BIT_CTRL_OUT3[82] = GND;
assign RX_BIT_CTRL_OUT3[83] = GND;
assign RX_BIT_CTRL_OUT3[84] = GND;
assign RX_BIT_CTRL_OUT3[85] = GND;
assign RX_BIT_CTRL_OUT3[86] = GND;
assign RX_BIT_CTRL_OUT3[87] = GND;
assign RX_BIT_CTRL_OUT3[88] = GND;
assign RX_BIT_CTRL_OUT3[89] = GND;
assign RX_BIT_CTRL_OUT3[90] = GND;
assign RX_BIT_CTRL_OUT3[91] = GND;
assign RX_BIT_CTRL_OUT3[92] = GND;
assign RX_BIT_CTRL_OUT3[93] = GND;
assign RX_BIT_CTRL_OUT3[94] = GND;
assign RX_BIT_CTRL_OUT3[95] = GND;
assign RX_BIT_CTRL_OUT3[96] = GND;
assign RX_BIT_CTRL_OUT3[97] = GND;
assign RX_BIT_CTRL_OUT3[98] = GND;
assign RX_BIT_CTRL_OUT3[99] = GND;
assign RX_BIT_CTRL_OUT3[100] = GND;
assign RX_BIT_CTRL_OUT3[101] = GND;
assign RX_BIT_CTRL_OUT3[102] = GND;
assign RX_BIT_CTRL_OUT3[103] = GND;
assign RX_BIT_CTRL_OUT3[104] = GND;
assign RX_BIT_CTRL_OUT3[105] = GND;
assign RX_BIT_CTRL_OUT3[106] = GND;
assign RX_BIT_CTRL_OUT3[107] = GND;
assign RX_BIT_CTRL_OUT3[108] = GND;
assign RX_BIT_CTRL_OUT3[109] = GND;
assign RX_BIT_CTRL_OUT3[110] = GND;
assign RX_BIT_CTRL_OUT3[111] = GND;
assign RX_BIT_CTRL_OUT3[112] = GND;
assign RX_BIT_CTRL_OUT3[113] = GND;
assign RX_BIT_CTRL_OUT3[114] = GND;
assign RX_BIT_CTRL_OUT3[115] = GND;
assign RX_BIT_CTRL_OUT3[116] = GND;
assign RX_BIT_CTRL_OUT3[117] = GND;
assign RX_BIT_CTRL_OUT3[118] = GND;
assign RX_BIT_CTRL_OUT3[119] = GND;
assign RX_BIT_CTRL_OUT3[120] = GND;
assign RX_BIT_CTRL_OUT3[121] = GND;
assign RX_BIT_CTRL_OUT3[122] = GND;
assign RX_BIT_CTRL_OUT3[123] = GND;
assign RX_BIT_CTRL_OUT3[124] = GND;
assign RX_BIT_CTRL_OUT3[125] = GND;
assign RX_BIT_CTRL_OUT3[126] = GND;
assign RX_BIT_CTRL_OUT3[127] = GND;
assign RX_BIT_CTRL_OUT3[128] = GND;
assign RX_BIT_CTRL_OUT3[129] = GND;
assign RX_BIT_CTRL_OUT3[130] = GND;
assign RX_BIT_CTRL_OUT3[131] = GND;
assign RX_BIT_CTRL_OUT3[132] = GND;
assign RX_BIT_CTRL_OUT3[133] = GND;
assign RX_BIT_CTRL_OUT3[134] = GND;
assign RX_BIT_CTRL_OUT3[135] = GND;
assign RX_BIT_CTRL_OUT3[136] = GND;
assign RX_BIT_CTRL_OUT3[137] = GND;
assign RX_BIT_CTRL_OUT3[138] = GND;
assign RX_BIT_CTRL_OUT3[139] = GND;
assign RX_BIT_CTRL_OUT3[140] = GND;
assign RX_BIT_CTRL_OUT3[141] = GND;
assign RX_BIT_CTRL_OUT3[142] = GND;
assign RX_BIT_CTRL_OUT3[143] = GND;
assign RX_BIT_CTRL_OUT3[144] = GND;
assign RX_BIT_CTRL_OUT3[145] = GND;
assign RX_BIT_CTRL_OUT3[146] = GND;
assign RX_BIT_CTRL_OUT3[147] = GND;
assign RX_BIT_CTRL_OUT3[148] = GND;
assign RX_BIT_CTRL_OUT3[149] = GND;
assign RX_BIT_CTRL_OUT3[150] = GND;
assign RX_BIT_CTRL_OUT3[151] = GND;
assign RX_BIT_CTRL_OUT3[152] = GND;
assign RX_BIT_CTRL_OUT3[153] = GND;
assign RX_BIT_CTRL_OUT3[154] = GND;
assign RX_BIT_CTRL_OUT3[155] = GND;
assign RX_BIT_CTRL_OUT3[156] = GND;
assign RX_BIT_CTRL_OUT3[157] = GND;
assign RX_BIT_CTRL_OUT3[158] = GND;
assign RX_BIT_CTRL_OUT3[159] = GND;
assign RX_BIT_CTRL_OUT3[160] = GND;
assign RX_BIT_CTRL_OUT3[161] = GND;
assign RX_BIT_CTRL_OUT3[162] = GND;
assign RX_BIT_CTRL_OUT3[163] = GND;
assign RX_BIT_CTRL_OUT3[164] = GND;
assign RX_BIT_CTRL_OUT3[165] = GND;
assign RX_BIT_CTRL_OUT3[166] = GND;
assign RX_BIT_CTRL_OUT3[167] = GND;
assign RX_BIT_CTRL_OUT3[168] = GND;
assign RX_BIT_CTRL_OUT3[169] = GND;
assign RX_BIT_CTRL_OUT3[170] = GND;
assign RX_BIT_CTRL_OUT3[171] = GND;
assign RX_BIT_CTRL_OUT3[172] = GND;
assign RX_BIT_CTRL_OUT3[173] = GND;
assign RX_BIT_CTRL_OUT3[174] = GND;
assign RX_BIT_CTRL_OUT3[175] = GND;
assign RX_BIT_CTRL_OUT3[176] = GND;
assign RX_BIT_CTRL_OUT3[177] = GND;
assign RX_BIT_CTRL_OUT3[178] = GND;
assign RX_BIT_CTRL_OUT3[179] = GND;
assign RX_BIT_CTRL_OUT3[180] = GND;
assign RX_BIT_CTRL_OUT3[181] = GND;
assign RX_BIT_CTRL_OUT3[182] = GND;
assign RX_BIT_CTRL_OUT3[183] = GND;
assign RX_BIT_CTRL_OUT3[184] = GND;
assign RX_BIT_CTRL_OUT3[185] = GND;
assign RX_BIT_CTRL_OUT3[186] = GND;
assign RX_BIT_CTRL_OUT3[187] = GND;
assign RX_BIT_CTRL_OUT3[188] = GND;
assign RX_BIT_CTRL_OUT3[189] = GND;
assign RX_BIT_CTRL_OUT3[190] = GND;
assign RX_BIT_CTRL_OUT3[191] = GND;
assign RX_BIT_CTRL_OUT3[192] = GND;
assign RX_BIT_CTRL_OUT3[193] = GND;
assign RX_BIT_CTRL_OUT3[194] = GND;
assign RX_BIT_CTRL_OUT3[195] = GND;
assign RX_BIT_CTRL_OUT3[196] = GND;
assign RX_BIT_CTRL_OUT3[197] = GND;
assign RX_BIT_CTRL_OUT3[198] = GND;
assign RX_BIT_CTRL_OUT3[199] = GND;
assign RX_BIT_CTRL_OUT3[200] = GND;
assign RX_BIT_CTRL_OUT3[201] = GND;
assign RX_BIT_CTRL_OUT3[202] = GND;
assign RX_BIT_CTRL_OUT3[203] = GND;
assign RX_BIT_CTRL_OUT3[204] = GND;
assign RX_BIT_CTRL_OUT3[205] = GND;
assign RX_BIT_CTRL_OUT3[206] = GND;
assign RX_BIT_CTRL_OUT3[207] = GND;
assign RX_BIT_CTRL_OUT3[208] = GND;
assign RX_BIT_CTRL_OUT3[209] = GND;
assign RX_BIT_CTRL_OUT3[210] = GND;
assign RX_BIT_CTRL_OUT3[211] = GND;
assign RX_BIT_CTRL_OUT3[212] = GND;
assign RX_BIT_CTRL_OUT3[213] = GND;
assign RX_BIT_CTRL_OUT3[214] = GND;
assign RX_BIT_CTRL_OUT3[215] = GND;
assign RX_BIT_CTRL_OUT3[216] = GND;
assign RX_BIT_CTRL_OUT3[217] = GND;
assign RX_BIT_CTRL_OUT3[218] = GND;
assign RX_BIT_CTRL_OUT3[219] = GND;
assign RX_BIT_CTRL_OUT3[220] = GND;
assign RX_BIT_CTRL_OUT3[221] = GND;
assign RX_BIT_CTRL_OUT3[222] = GND;
assign RX_BIT_CTRL_OUT3[223] = GND;
assign RX_BIT_CTRL_OUT3[224] = GND;
assign RX_BIT_CTRL_OUT3[225] = GND;
assign RX_BIT_CTRL_OUT3[226] = GND;
assign RX_BIT_CTRL_OUT3[227] = GND;
assign RX_BIT_CTRL_OUT3[228] = GND;
assign RX_BIT_CTRL_OUT3[229] = GND;
assign RX_BIT_CTRL_OUT3[230] = GND;
assign RX_BIT_CTRL_OUT3[231] = GND;
assign RX_BIT_CTRL_OUT3[232] = GND;
assign RX_BIT_CTRL_OUT3[233] = GND;
assign RX_BIT_CTRL_OUT3[234] = GND;
assign RX_BIT_CTRL_OUT3[235] = GND;
assign RX_BIT_CTRL_OUT3[236] = GND;
assign RX_BIT_CTRL_OUT3[237] = GND;
assign RX_BIT_CTRL_OUT3[238] = GND;
assign RX_BIT_CTRL_OUT3[239] = GND;
assign RX_BIT_CTRL_OUT3[240] = GND;
assign RX_BIT_CTRL_OUT3[241] = GND;
assign RX_BIT_CTRL_OUT3[242] = GND;
assign RX_BIT_CTRL_OUT3[243] = GND;
assign RX_BIT_CTRL_OUT3[244] = GND;
assign RX_BIT_CTRL_OUT3[245] = GND;
assign RX_BIT_CTRL_OUT3[246] = GND;
assign RX_BIT_CTRL_OUT3[247] = GND;
assign RX_BIT_CTRL_OUT3[248] = GND;
assign RX_BIT_CTRL_OUT3[249] = GND;
assign RX_BIT_CTRL_OUT3[250] = GND;
assign RX_BIT_CTRL_OUT3[251] = GND;
assign RX_BIT_CTRL_OUT3[252] = GND;
assign RX_BIT_CTRL_OUT3[253] = GND;
assign RX_BIT_CTRL_OUT3[254] = GND;
assign RX_BIT_CTRL_OUT3[255] = GND;
assign RX_BIT_CTRL_OUT3[256] = GND;
assign RX_BIT_CTRL_OUT3[257] = GND;
assign RX_BIT_CTRL_OUT3[258] = GND;
assign RX_BIT_CTRL_OUT3[259] = GND;
assign RX_BIT_CTRL_OUT3[260] = GND;
assign RX_BIT_CTRL_OUT3[261] = GND;
assign RX_BIT_CTRL_OUT3[262] = GND;
assign RX_BIT_CTRL_OUT3[263] = GND;
assign RX_BIT_CTRL_OUT3[264] = GND;
assign RX_BIT_CTRL_OUT3[265] = GND;
assign RX_BIT_CTRL_OUT3[266] = GND;
assign RX_BIT_CTRL_OUT3[267] = GND;
assign RX_BIT_CTRL_OUT3[268] = GND;
assign RX_BIT_CTRL_OUT3[269] = GND;
assign RX_BIT_CTRL_OUT3[270] = GND;
assign RX_BIT_CTRL_OUT3[271] = GND;
assign RX_BIT_CTRL_OUT3[272] = GND;
assign RX_BIT_CTRL_OUT3[273] = GND;
assign RX_BIT_CTRL_OUT3[274] = GND;
assign RX_BIT_CTRL_OUT3[275] = GND;
assign RX_BIT_CTRL_OUT3[276] = GND;
assign RX_BIT_CTRL_OUT3[277] = GND;
assign RX_BIT_CTRL_OUT3[278] = GND;
assign RX_BIT_CTRL_OUT3[279] = GND;
assign RX_BIT_CTRL_OUT3[280] = GND;
assign RX_BIT_CTRL_OUT3[281] = GND;
assign RX_BIT_CTRL_OUT3[282] = GND;
assign RX_BIT_CTRL_OUT3[283] = GND;
assign RX_BIT_CTRL_OUT3[284] = GND;
assign RX_BIT_CTRL_OUT3[285] = GND;
assign RX_BIT_CTRL_OUT3[286] = GND;
assign RX_BIT_CTRL_OUT3[287] = GND;
assign RX_BIT_CTRL_OUT3[288] = GND;
assign RX_BIT_CTRL_OUT3[289] = GND;
assign RX_BIT_CTRL_OUT3[290] = GND;
assign RX_BIT_CTRL_OUT3[291] = GND;
assign RX_BIT_CTRL_OUT3[292] = GND;
assign RX_BIT_CTRL_OUT3[293] = GND;
assign RX_BIT_CTRL_OUT3[294] = GND;
assign RX_BIT_CTRL_OUT3[295] = GND;
assign RX_BIT_CTRL_OUT3[296] = GND;
assign RX_BIT_CTRL_OUT3[297] = GND;
assign RX_BIT_CTRL_OUT3[298] = GND;
assign RX_BIT_CTRL_OUT3[299] = GND;
assign RX_BIT_CTRL_OUT3[300] = GND;
assign RX_BIT_CTRL_OUT3[301] = GND;
assign RX_BIT_CTRL_OUT3[302] = GND;
assign RX_BIT_CTRL_OUT3[303] = GND;
assign RX_BIT_CTRL_OUT3[304] = GND;
assign RX_BIT_CTRL_OUT3[305] = GND;
assign RX_BIT_CTRL_OUT3[306] = GND;
assign RX_BIT_CTRL_OUT3[307] = GND;
assign RX_BIT_CTRL_OUT3[308] = GND;
assign RX_BIT_CTRL_OUT3[309] = GND;
assign RX_BIT_CTRL_OUT3[310] = GND;
assign RX_BIT_CTRL_OUT3[311] = GND;
assign RX_BIT_CTRL_OUT3[312] = GND;
assign RX_BIT_CTRL_OUT3[313] = GND;
assign RX_BIT_CTRL_OUT3[314] = GND;
assign RX_BIT_CTRL_OUT3[315] = GND;
assign RX_BIT_CTRL_OUT3[316] = GND;
assign RX_BIT_CTRL_OUT3[317] = GND;
assign RX_BIT_CTRL_OUT3[318] = GND;
assign RX_BIT_CTRL_OUT3[319] = GND;
assign RX_BIT_CTRL_OUT4[0] = GND;
assign RX_BIT_CTRL_OUT4[1] = GND;
assign RX_BIT_CTRL_OUT4[2] = GND;
assign RX_BIT_CTRL_OUT4[3] = GND;
assign RX_BIT_CTRL_OUT4[4] = GND;
assign RX_BIT_CTRL_OUT4[5] = GND;
assign RX_BIT_CTRL_OUT4[6] = GND;
assign RX_BIT_CTRL_OUT4[7] = GND;
assign RX_BIT_CTRL_OUT4[8] = GND;
assign RX_BIT_CTRL_OUT4[9] = GND;
assign RX_BIT_CTRL_OUT4[10] = GND;
assign RX_BIT_CTRL_OUT4[11] = GND;
assign RX_BIT_CTRL_OUT4[12] = GND;
assign RX_BIT_CTRL_OUT4[13] = GND;
assign RX_BIT_CTRL_OUT4[14] = GND;
assign RX_BIT_CTRL_OUT4[15] = GND;
assign RX_BIT_CTRL_OUT4[16] = GND;
assign RX_BIT_CTRL_OUT4[17] = GND;
assign RX_BIT_CTRL_OUT4[18] = GND;
assign RX_BIT_CTRL_OUT4[19] = GND;
assign RX_BIT_CTRL_OUT4[20] = GND;
assign RX_BIT_CTRL_OUT4[21] = GND;
assign RX_BIT_CTRL_OUT4[22] = GND;
assign RX_BIT_CTRL_OUT4[23] = GND;
assign RX_BIT_CTRL_OUT4[24] = GND;
assign RX_BIT_CTRL_OUT4[25] = GND;
assign RX_BIT_CTRL_OUT4[26] = GND;
assign RX_BIT_CTRL_OUT4[27] = GND;
assign RX_BIT_CTRL_OUT4[28] = GND;
assign RX_BIT_CTRL_OUT4[29] = GND;
assign RX_BIT_CTRL_OUT4[30] = GND;
assign RX_BIT_CTRL_OUT4[31] = GND;
assign RX_BIT_CTRL_OUT4[32] = GND;
assign RX_BIT_CTRL_OUT4[33] = GND;
assign RX_BIT_CTRL_OUT4[34] = GND;
assign RX_BIT_CTRL_OUT4[35] = GND;
assign RX_BIT_CTRL_OUT4[36] = GND;
assign RX_BIT_CTRL_OUT4[37] = GND;
assign RX_BIT_CTRL_OUT4[38] = GND;
assign RX_BIT_CTRL_OUT4[39] = GND;
assign RX_BIT_CTRL_OUT4[40] = GND;
assign RX_BIT_CTRL_OUT4[41] = GND;
assign RX_BIT_CTRL_OUT4[42] = GND;
assign RX_BIT_CTRL_OUT4[43] = GND;
assign RX_BIT_CTRL_OUT4[44] = GND;
assign RX_BIT_CTRL_OUT4[45] = GND;
assign RX_BIT_CTRL_OUT4[46] = GND;
assign RX_BIT_CTRL_OUT4[47] = GND;
assign RX_BIT_CTRL_OUT4[48] = GND;
assign RX_BIT_CTRL_OUT4[49] = GND;
assign RX_BIT_CTRL_OUT4[50] = GND;
assign RX_BIT_CTRL_OUT4[51] = GND;
assign RX_BIT_CTRL_OUT4[52] = GND;
assign RX_BIT_CTRL_OUT4[53] = GND;
assign RX_BIT_CTRL_OUT4[54] = GND;
assign RX_BIT_CTRL_OUT4[55] = GND;
assign RX_BIT_CTRL_OUT4[56] = GND;
assign RX_BIT_CTRL_OUT4[57] = GND;
assign RX_BIT_CTRL_OUT4[58] = GND;
assign RX_BIT_CTRL_OUT4[59] = GND;
assign RX_BIT_CTRL_OUT4[60] = GND;
assign RX_BIT_CTRL_OUT4[61] = GND;
assign RX_BIT_CTRL_OUT4[62] = GND;
assign RX_BIT_CTRL_OUT4[63] = GND;
assign RX_BIT_CTRL_OUT4[64] = GND;
assign RX_BIT_CTRL_OUT4[65] = GND;
assign RX_BIT_CTRL_OUT4[66] = GND;
assign RX_BIT_CTRL_OUT4[67] = GND;
assign RX_BIT_CTRL_OUT4[68] = GND;
assign RX_BIT_CTRL_OUT4[69] = GND;
assign RX_BIT_CTRL_OUT4[70] = GND;
assign RX_BIT_CTRL_OUT4[71] = GND;
assign RX_BIT_CTRL_OUT4[72] = GND;
assign RX_BIT_CTRL_OUT4[73] = GND;
assign RX_BIT_CTRL_OUT4[74] = GND;
assign RX_BIT_CTRL_OUT4[75] = GND;
assign RX_BIT_CTRL_OUT4[76] = GND;
assign RX_BIT_CTRL_OUT4[77] = GND;
assign RX_BIT_CTRL_OUT4[78] = GND;
assign RX_BIT_CTRL_OUT4[79] = GND;
assign RX_BIT_CTRL_OUT4[80] = GND;
assign RX_BIT_CTRL_OUT4[81] = GND;
assign RX_BIT_CTRL_OUT4[82] = GND;
assign RX_BIT_CTRL_OUT4[83] = GND;
assign RX_BIT_CTRL_OUT4[84] = GND;
assign RX_BIT_CTRL_OUT4[85] = GND;
assign RX_BIT_CTRL_OUT4[86] = GND;
assign RX_BIT_CTRL_OUT4[87] = GND;
assign RX_BIT_CTRL_OUT4[88] = GND;
assign RX_BIT_CTRL_OUT4[89] = GND;
assign RX_BIT_CTRL_OUT4[90] = GND;
assign RX_BIT_CTRL_OUT4[91] = GND;
assign RX_BIT_CTRL_OUT4[92] = GND;
assign RX_BIT_CTRL_OUT4[93] = GND;
assign RX_BIT_CTRL_OUT4[94] = GND;
assign RX_BIT_CTRL_OUT4[95] = GND;
assign RX_BIT_CTRL_OUT4[96] = GND;
assign RX_BIT_CTRL_OUT4[97] = GND;
assign RX_BIT_CTRL_OUT4[98] = GND;
assign RX_BIT_CTRL_OUT4[99] = GND;
assign RX_BIT_CTRL_OUT4[100] = GND;
assign RX_BIT_CTRL_OUT4[101] = GND;
assign RX_BIT_CTRL_OUT4[102] = GND;
assign RX_BIT_CTRL_OUT4[103] = GND;
assign RX_BIT_CTRL_OUT4[104] = GND;
assign RX_BIT_CTRL_OUT4[105] = GND;
assign RX_BIT_CTRL_OUT4[106] = GND;
assign RX_BIT_CTRL_OUT4[107] = GND;
assign RX_BIT_CTRL_OUT4[108] = GND;
assign RX_BIT_CTRL_OUT4[109] = GND;
assign RX_BIT_CTRL_OUT4[110] = GND;
assign RX_BIT_CTRL_OUT4[111] = GND;
assign RX_BIT_CTRL_OUT4[112] = GND;
assign RX_BIT_CTRL_OUT4[113] = GND;
assign RX_BIT_CTRL_OUT4[114] = GND;
assign RX_BIT_CTRL_OUT4[115] = GND;
assign RX_BIT_CTRL_OUT4[116] = GND;
assign RX_BIT_CTRL_OUT4[117] = GND;
assign RX_BIT_CTRL_OUT4[118] = GND;
assign RX_BIT_CTRL_OUT4[119] = GND;
assign RX_BIT_CTRL_OUT4[120] = GND;
assign RX_BIT_CTRL_OUT4[121] = GND;
assign RX_BIT_CTRL_OUT4[122] = GND;
assign RX_BIT_CTRL_OUT4[123] = GND;
assign RX_BIT_CTRL_OUT4[124] = GND;
assign RX_BIT_CTRL_OUT4[125] = GND;
assign RX_BIT_CTRL_OUT4[126] = GND;
assign RX_BIT_CTRL_OUT4[127] = GND;
assign RX_BIT_CTRL_OUT4[128] = GND;
assign RX_BIT_CTRL_OUT4[129] = GND;
assign RX_BIT_CTRL_OUT4[130] = GND;
assign RX_BIT_CTRL_OUT4[131] = GND;
assign RX_BIT_CTRL_OUT4[132] = GND;
assign RX_BIT_CTRL_OUT4[133] = GND;
assign RX_BIT_CTRL_OUT4[134] = GND;
assign RX_BIT_CTRL_OUT4[135] = GND;
assign RX_BIT_CTRL_OUT4[136] = GND;
assign RX_BIT_CTRL_OUT4[137] = GND;
assign RX_BIT_CTRL_OUT4[138] = GND;
assign RX_BIT_CTRL_OUT4[139] = GND;
assign RX_BIT_CTRL_OUT4[140] = GND;
assign RX_BIT_CTRL_OUT4[141] = GND;
assign RX_BIT_CTRL_OUT4[142] = GND;
assign RX_BIT_CTRL_OUT4[143] = GND;
assign RX_BIT_CTRL_OUT4[144] = GND;
assign RX_BIT_CTRL_OUT4[145] = GND;
assign RX_BIT_CTRL_OUT4[146] = GND;
assign RX_BIT_CTRL_OUT4[147] = GND;
assign RX_BIT_CTRL_OUT4[148] = GND;
assign RX_BIT_CTRL_OUT4[149] = GND;
assign RX_BIT_CTRL_OUT4[150] = GND;
assign RX_BIT_CTRL_OUT4[151] = GND;
assign RX_BIT_CTRL_OUT4[152] = GND;
assign RX_BIT_CTRL_OUT4[153] = GND;
assign RX_BIT_CTRL_OUT4[154] = GND;
assign RX_BIT_CTRL_OUT4[155] = GND;
assign RX_BIT_CTRL_OUT4[156] = GND;
assign RX_BIT_CTRL_OUT4[157] = GND;
assign RX_BIT_CTRL_OUT4[158] = GND;
assign RX_BIT_CTRL_OUT4[159] = GND;
assign RX_BIT_CTRL_OUT4[160] = GND;
assign RX_BIT_CTRL_OUT4[161] = GND;
assign RX_BIT_CTRL_OUT4[162] = GND;
assign RX_BIT_CTRL_OUT4[163] = GND;
assign RX_BIT_CTRL_OUT4[164] = GND;
assign RX_BIT_CTRL_OUT4[165] = GND;
assign RX_BIT_CTRL_OUT4[166] = GND;
assign RX_BIT_CTRL_OUT4[167] = GND;
assign RX_BIT_CTRL_OUT4[168] = GND;
assign RX_BIT_CTRL_OUT4[169] = GND;
assign RX_BIT_CTRL_OUT4[170] = GND;
assign RX_BIT_CTRL_OUT4[171] = GND;
assign RX_BIT_CTRL_OUT4[172] = GND;
assign RX_BIT_CTRL_OUT4[173] = GND;
assign RX_BIT_CTRL_OUT4[174] = GND;
assign RX_BIT_CTRL_OUT4[175] = GND;
assign RX_BIT_CTRL_OUT4[176] = GND;
assign RX_BIT_CTRL_OUT4[177] = GND;
assign RX_BIT_CTRL_OUT4[178] = GND;
assign RX_BIT_CTRL_OUT4[179] = GND;
assign RX_BIT_CTRL_OUT4[180] = GND;
assign RX_BIT_CTRL_OUT4[181] = GND;
assign RX_BIT_CTRL_OUT4[182] = GND;
assign RX_BIT_CTRL_OUT4[183] = GND;
assign RX_BIT_CTRL_OUT4[184] = GND;
assign RX_BIT_CTRL_OUT4[185] = GND;
assign RX_BIT_CTRL_OUT4[186] = GND;
assign RX_BIT_CTRL_OUT4[187] = GND;
assign RX_BIT_CTRL_OUT4[188] = GND;
assign RX_BIT_CTRL_OUT4[189] = GND;
assign RX_BIT_CTRL_OUT4[190] = GND;
assign RX_BIT_CTRL_OUT4[191] = GND;
assign RX_BIT_CTRL_OUT4[192] = GND;
assign RX_BIT_CTRL_OUT4[193] = GND;
assign RX_BIT_CTRL_OUT4[194] = GND;
assign RX_BIT_CTRL_OUT4[195] = GND;
assign RX_BIT_CTRL_OUT4[196] = GND;
assign RX_BIT_CTRL_OUT4[197] = GND;
assign RX_BIT_CTRL_OUT4[198] = GND;
assign RX_BIT_CTRL_OUT4[199] = GND;
assign RX_BIT_CTRL_OUT4[240] = GND;
assign RX_BIT_CTRL_OUT4[241] = GND;
assign RX_BIT_CTRL_OUT4[242] = GND;
assign RX_BIT_CTRL_OUT4[243] = GND;
assign RX_BIT_CTRL_OUT4[244] = GND;
assign RX_BIT_CTRL_OUT4[245] = GND;
assign RX_BIT_CTRL_OUT4[246] = GND;
assign RX_BIT_CTRL_OUT4[247] = GND;
assign RX_BIT_CTRL_OUT4[248] = GND;
assign RX_BIT_CTRL_OUT4[249] = GND;
assign RX_BIT_CTRL_OUT4[250] = GND;
assign RX_BIT_CTRL_OUT4[251] = GND;
assign RX_BIT_CTRL_OUT4[252] = GND;
assign RX_BIT_CTRL_OUT4[253] = GND;
assign RX_BIT_CTRL_OUT4[254] = GND;
assign RX_BIT_CTRL_OUT4[255] = GND;
assign RX_BIT_CTRL_OUT4[256] = GND;
assign RX_BIT_CTRL_OUT4[257] = GND;
assign RX_BIT_CTRL_OUT4[258] = GND;
assign RX_BIT_CTRL_OUT4[259] = GND;
assign RX_BIT_CTRL_OUT4[260] = GND;
assign RX_BIT_CTRL_OUT4[261] = GND;
assign RX_BIT_CTRL_OUT4[262] = GND;
assign RX_BIT_CTRL_OUT4[263] = GND;
assign RX_BIT_CTRL_OUT4[264] = GND;
assign RX_BIT_CTRL_OUT4[265] = GND;
assign RX_BIT_CTRL_OUT4[266] = GND;
assign RX_BIT_CTRL_OUT4[267] = GND;
assign RX_BIT_CTRL_OUT4[268] = GND;
assign RX_BIT_CTRL_OUT4[269] = GND;
assign RX_BIT_CTRL_OUT4[270] = GND;
assign RX_BIT_CTRL_OUT4[271] = GND;
assign RX_BIT_CTRL_OUT4[272] = GND;
assign RX_BIT_CTRL_OUT4[273] = GND;
assign RX_BIT_CTRL_OUT4[274] = GND;
assign RX_BIT_CTRL_OUT4[275] = GND;
assign RX_BIT_CTRL_OUT4[276] = GND;
assign RX_BIT_CTRL_OUT4[277] = GND;
assign RX_BIT_CTRL_OUT4[278] = GND;
assign RX_BIT_CTRL_OUT4[279] = GND;
assign RX_BIT_CTRL_OUT4[280] = GND;
assign RX_BIT_CTRL_OUT4[281] = GND;
assign RX_BIT_CTRL_OUT4[282] = GND;
assign RX_BIT_CTRL_OUT4[283] = GND;
assign RX_BIT_CTRL_OUT4[284] = GND;
assign RX_BIT_CTRL_OUT4[285] = GND;
assign RX_BIT_CTRL_OUT4[286] = GND;
assign RX_BIT_CTRL_OUT4[287] = GND;
assign RX_BIT_CTRL_OUT4[288] = GND;
assign RX_BIT_CTRL_OUT4[289] = GND;
assign RX_BIT_CTRL_OUT4[290] = GND;
assign RX_BIT_CTRL_OUT4[291] = GND;
assign RX_BIT_CTRL_OUT4[292] = GND;
assign RX_BIT_CTRL_OUT4[293] = GND;
assign RX_BIT_CTRL_OUT4[294] = GND;
assign RX_BIT_CTRL_OUT4[295] = GND;
assign RX_BIT_CTRL_OUT4[296] = GND;
assign RX_BIT_CTRL_OUT4[297] = GND;
assign RX_BIT_CTRL_OUT4[298] = GND;
assign RX_BIT_CTRL_OUT4[299] = GND;
assign RX_BIT_CTRL_OUT4[300] = GND;
assign RX_BIT_CTRL_OUT4[301] = GND;
assign RX_BIT_CTRL_OUT4[302] = GND;
assign RX_BIT_CTRL_OUT4[303] = GND;
assign RX_BIT_CTRL_OUT4[304] = GND;
assign RX_BIT_CTRL_OUT4[305] = GND;
assign RX_BIT_CTRL_OUT4[306] = GND;
assign RX_BIT_CTRL_OUT4[307] = GND;
assign RX_BIT_CTRL_OUT4[308] = GND;
assign RX_BIT_CTRL_OUT4[309] = GND;
assign RX_BIT_CTRL_OUT4[310] = GND;
assign RX_BIT_CTRL_OUT4[311] = GND;
assign RX_BIT_CTRL_OUT4[312] = GND;
assign RX_BIT_CTRL_OUT4[313] = GND;
assign RX_BIT_CTRL_OUT4[314] = GND;
assign RX_BIT_CTRL_OUT4[315] = GND;
assign RX_BIT_CTRL_OUT4[316] = GND;
assign RX_BIT_CTRL_OUT4[317] = GND;
assign RX_BIT_CTRL_OUT4[318] = GND;
assign RX_BIT_CTRL_OUT4[319] = GND;
assign RX_BIT_CTRL_OUT5[0] = GND;
assign RX_BIT_CTRL_OUT5[1] = GND;
assign RX_BIT_CTRL_OUT5[2] = GND;
assign RX_BIT_CTRL_OUT5[3] = GND;
assign RX_BIT_CTRL_OUT5[4] = GND;
assign RX_BIT_CTRL_OUT5[5] = GND;
assign RX_BIT_CTRL_OUT5[6] = GND;
assign RX_BIT_CTRL_OUT5[7] = GND;
assign RX_BIT_CTRL_OUT5[8] = GND;
assign RX_BIT_CTRL_OUT5[9] = GND;
assign RX_BIT_CTRL_OUT5[10] = GND;
assign RX_BIT_CTRL_OUT5[11] = GND;
assign RX_BIT_CTRL_OUT5[12] = GND;
assign RX_BIT_CTRL_OUT5[13] = GND;
assign RX_BIT_CTRL_OUT5[14] = GND;
assign RX_BIT_CTRL_OUT5[15] = GND;
assign RX_BIT_CTRL_OUT5[16] = GND;
assign RX_BIT_CTRL_OUT5[17] = GND;
assign RX_BIT_CTRL_OUT5[18] = GND;
assign RX_BIT_CTRL_OUT5[19] = GND;
assign RX_BIT_CTRL_OUT5[20] = GND;
assign RX_BIT_CTRL_OUT5[21] = GND;
assign RX_BIT_CTRL_OUT5[22] = GND;
assign RX_BIT_CTRL_OUT5[23] = GND;
assign RX_BIT_CTRL_OUT5[24] = GND;
assign RX_BIT_CTRL_OUT5[25] = GND;
assign RX_BIT_CTRL_OUT5[26] = GND;
assign RX_BIT_CTRL_OUT5[27] = GND;
assign RX_BIT_CTRL_OUT5[28] = GND;
assign RX_BIT_CTRL_OUT5[29] = GND;
assign RX_BIT_CTRL_OUT5[30] = GND;
assign RX_BIT_CTRL_OUT5[31] = GND;
assign RX_BIT_CTRL_OUT5[32] = GND;
assign RX_BIT_CTRL_OUT5[33] = GND;
assign RX_BIT_CTRL_OUT5[34] = GND;
assign RX_BIT_CTRL_OUT5[35] = GND;
assign RX_BIT_CTRL_OUT5[36] = GND;
assign RX_BIT_CTRL_OUT5[37] = GND;
assign RX_BIT_CTRL_OUT5[38] = GND;
assign RX_BIT_CTRL_OUT5[39] = GND;
assign RX_BIT_CTRL_OUT5[40] = GND;
assign RX_BIT_CTRL_OUT5[41] = GND;
assign RX_BIT_CTRL_OUT5[42] = GND;
assign RX_BIT_CTRL_OUT5[43] = GND;
assign RX_BIT_CTRL_OUT5[44] = GND;
assign RX_BIT_CTRL_OUT5[45] = GND;
assign RX_BIT_CTRL_OUT5[46] = GND;
assign RX_BIT_CTRL_OUT5[47] = GND;
assign RX_BIT_CTRL_OUT5[48] = GND;
assign RX_BIT_CTRL_OUT5[49] = GND;
assign RX_BIT_CTRL_OUT5[50] = GND;
assign RX_BIT_CTRL_OUT5[51] = GND;
assign RX_BIT_CTRL_OUT5[52] = GND;
assign RX_BIT_CTRL_OUT5[53] = GND;
assign RX_BIT_CTRL_OUT5[54] = GND;
assign RX_BIT_CTRL_OUT5[55] = GND;
assign RX_BIT_CTRL_OUT5[56] = GND;
assign RX_BIT_CTRL_OUT5[57] = GND;
assign RX_BIT_CTRL_OUT5[58] = GND;
assign RX_BIT_CTRL_OUT5[59] = GND;
assign RX_BIT_CTRL_OUT5[60] = GND;
assign RX_BIT_CTRL_OUT5[61] = GND;
assign RX_BIT_CTRL_OUT5[62] = GND;
assign RX_BIT_CTRL_OUT5[63] = GND;
assign RX_BIT_CTRL_OUT5[64] = GND;
assign RX_BIT_CTRL_OUT5[65] = GND;
assign RX_BIT_CTRL_OUT5[66] = GND;
assign RX_BIT_CTRL_OUT5[67] = GND;
assign RX_BIT_CTRL_OUT5[68] = GND;
assign RX_BIT_CTRL_OUT5[69] = GND;
assign RX_BIT_CTRL_OUT5[70] = GND;
assign RX_BIT_CTRL_OUT5[71] = GND;
assign RX_BIT_CTRL_OUT5[72] = GND;
assign RX_BIT_CTRL_OUT5[73] = GND;
assign RX_BIT_CTRL_OUT5[74] = GND;
assign RX_BIT_CTRL_OUT5[75] = GND;
assign RX_BIT_CTRL_OUT5[76] = GND;
assign RX_BIT_CTRL_OUT5[77] = GND;
assign RX_BIT_CTRL_OUT5[78] = GND;
assign RX_BIT_CTRL_OUT5[79] = GND;
assign RX_BIT_CTRL_OUT5[80] = GND;
assign RX_BIT_CTRL_OUT5[81] = GND;
assign RX_BIT_CTRL_OUT5[82] = GND;
assign RX_BIT_CTRL_OUT5[83] = GND;
assign RX_BIT_CTRL_OUT5[84] = GND;
assign RX_BIT_CTRL_OUT5[85] = GND;
assign RX_BIT_CTRL_OUT5[86] = GND;
assign RX_BIT_CTRL_OUT5[87] = GND;
assign RX_BIT_CTRL_OUT5[88] = GND;
assign RX_BIT_CTRL_OUT5[89] = GND;
assign RX_BIT_CTRL_OUT5[90] = GND;
assign RX_BIT_CTRL_OUT5[91] = GND;
assign RX_BIT_CTRL_OUT5[92] = GND;
assign RX_BIT_CTRL_OUT5[93] = GND;
assign RX_BIT_CTRL_OUT5[94] = GND;
assign RX_BIT_CTRL_OUT5[95] = GND;
assign RX_BIT_CTRL_OUT5[96] = GND;
assign RX_BIT_CTRL_OUT5[97] = GND;
assign RX_BIT_CTRL_OUT5[98] = GND;
assign RX_BIT_CTRL_OUT5[99] = GND;
assign RX_BIT_CTRL_OUT5[100] = GND;
assign RX_BIT_CTRL_OUT5[101] = GND;
assign RX_BIT_CTRL_OUT5[102] = GND;
assign RX_BIT_CTRL_OUT5[103] = GND;
assign RX_BIT_CTRL_OUT5[104] = GND;
assign RX_BIT_CTRL_OUT5[105] = GND;
assign RX_BIT_CTRL_OUT5[106] = GND;
assign RX_BIT_CTRL_OUT5[107] = GND;
assign RX_BIT_CTRL_OUT5[108] = GND;
assign RX_BIT_CTRL_OUT5[109] = GND;
assign RX_BIT_CTRL_OUT5[110] = GND;
assign RX_BIT_CTRL_OUT5[111] = GND;
assign RX_BIT_CTRL_OUT5[112] = GND;
assign RX_BIT_CTRL_OUT5[113] = GND;
assign RX_BIT_CTRL_OUT5[114] = GND;
assign RX_BIT_CTRL_OUT5[115] = GND;
assign RX_BIT_CTRL_OUT5[116] = GND;
assign RX_BIT_CTRL_OUT5[117] = GND;
assign RX_BIT_CTRL_OUT5[118] = GND;
assign RX_BIT_CTRL_OUT5[119] = GND;
assign RX_BIT_CTRL_OUT5[120] = GND;
assign RX_BIT_CTRL_OUT5[121] = GND;
assign RX_BIT_CTRL_OUT5[122] = GND;
assign RX_BIT_CTRL_OUT5[123] = GND;
assign RX_BIT_CTRL_OUT5[124] = GND;
assign RX_BIT_CTRL_OUT5[125] = GND;
assign RX_BIT_CTRL_OUT5[126] = GND;
assign RX_BIT_CTRL_OUT5[127] = GND;
assign RX_BIT_CTRL_OUT5[128] = GND;
assign RX_BIT_CTRL_OUT5[129] = GND;
assign RX_BIT_CTRL_OUT5[130] = GND;
assign RX_BIT_CTRL_OUT5[131] = GND;
assign RX_BIT_CTRL_OUT5[132] = GND;
assign RX_BIT_CTRL_OUT5[133] = GND;
assign RX_BIT_CTRL_OUT5[134] = GND;
assign RX_BIT_CTRL_OUT5[135] = GND;
assign RX_BIT_CTRL_OUT5[136] = GND;
assign RX_BIT_CTRL_OUT5[137] = GND;
assign RX_BIT_CTRL_OUT5[138] = GND;
assign RX_BIT_CTRL_OUT5[139] = GND;
assign RX_BIT_CTRL_OUT5[140] = GND;
assign RX_BIT_CTRL_OUT5[141] = GND;
assign RX_BIT_CTRL_OUT5[142] = GND;
assign RX_BIT_CTRL_OUT5[143] = GND;
assign RX_BIT_CTRL_OUT5[144] = GND;
assign RX_BIT_CTRL_OUT5[145] = GND;
assign RX_BIT_CTRL_OUT5[146] = GND;
assign RX_BIT_CTRL_OUT5[147] = GND;
assign RX_BIT_CTRL_OUT5[148] = GND;
assign RX_BIT_CTRL_OUT5[149] = GND;
assign RX_BIT_CTRL_OUT5[150] = GND;
assign RX_BIT_CTRL_OUT5[151] = GND;
assign RX_BIT_CTRL_OUT5[152] = GND;
assign RX_BIT_CTRL_OUT5[153] = GND;
assign RX_BIT_CTRL_OUT5[154] = GND;
assign RX_BIT_CTRL_OUT5[155] = GND;
assign RX_BIT_CTRL_OUT5[156] = GND;
assign RX_BIT_CTRL_OUT5[157] = GND;
assign RX_BIT_CTRL_OUT5[158] = GND;
assign RX_BIT_CTRL_OUT5[159] = GND;
assign RX_BIT_CTRL_OUT5[160] = GND;
assign RX_BIT_CTRL_OUT5[161] = GND;
assign RX_BIT_CTRL_OUT5[162] = GND;
assign RX_BIT_CTRL_OUT5[163] = GND;
assign RX_BIT_CTRL_OUT5[164] = GND;
assign RX_BIT_CTRL_OUT5[165] = GND;
assign RX_BIT_CTRL_OUT5[166] = GND;
assign RX_BIT_CTRL_OUT5[167] = GND;
assign RX_BIT_CTRL_OUT5[168] = GND;
assign RX_BIT_CTRL_OUT5[169] = GND;
assign RX_BIT_CTRL_OUT5[170] = GND;
assign RX_BIT_CTRL_OUT5[171] = GND;
assign RX_BIT_CTRL_OUT5[172] = GND;
assign RX_BIT_CTRL_OUT5[173] = GND;
assign RX_BIT_CTRL_OUT5[174] = GND;
assign RX_BIT_CTRL_OUT5[175] = GND;
assign RX_BIT_CTRL_OUT5[176] = GND;
assign RX_BIT_CTRL_OUT5[177] = GND;
assign RX_BIT_CTRL_OUT5[178] = GND;
assign RX_BIT_CTRL_OUT5[179] = GND;
assign RX_BIT_CTRL_OUT5[180] = GND;
assign RX_BIT_CTRL_OUT5[181] = GND;
assign RX_BIT_CTRL_OUT5[182] = GND;
assign RX_BIT_CTRL_OUT5[183] = GND;
assign RX_BIT_CTRL_OUT5[184] = GND;
assign RX_BIT_CTRL_OUT5[185] = GND;
assign RX_BIT_CTRL_OUT5[186] = GND;
assign RX_BIT_CTRL_OUT5[187] = GND;
assign RX_BIT_CTRL_OUT5[188] = GND;
assign RX_BIT_CTRL_OUT5[189] = GND;
assign RX_BIT_CTRL_OUT5[190] = GND;
assign RX_BIT_CTRL_OUT5[191] = GND;
assign RX_BIT_CTRL_OUT5[192] = GND;
assign RX_BIT_CTRL_OUT5[193] = GND;
assign RX_BIT_CTRL_OUT5[194] = GND;
assign RX_BIT_CTRL_OUT5[195] = GND;
assign RX_BIT_CTRL_OUT5[196] = GND;
assign RX_BIT_CTRL_OUT5[197] = GND;
assign RX_BIT_CTRL_OUT5[198] = GND;
assign RX_BIT_CTRL_OUT5[199] = GND;
assign RX_BIT_CTRL_OUT5[240] = GND;
assign RX_BIT_CTRL_OUT5[241] = GND;
assign RX_BIT_CTRL_OUT5[242] = GND;
assign RX_BIT_CTRL_OUT5[243] = GND;
assign RX_BIT_CTRL_OUT5[244] = GND;
assign RX_BIT_CTRL_OUT5[245] = GND;
assign RX_BIT_CTRL_OUT5[246] = GND;
assign RX_BIT_CTRL_OUT5[247] = GND;
assign RX_BIT_CTRL_OUT5[248] = GND;
assign RX_BIT_CTRL_OUT5[249] = GND;
assign RX_BIT_CTRL_OUT5[250] = GND;
assign RX_BIT_CTRL_OUT5[251] = GND;
assign RX_BIT_CTRL_OUT5[252] = GND;
assign RX_BIT_CTRL_OUT5[253] = GND;
assign RX_BIT_CTRL_OUT5[254] = GND;
assign RX_BIT_CTRL_OUT5[255] = GND;
assign RX_BIT_CTRL_OUT5[256] = GND;
assign RX_BIT_CTRL_OUT5[257] = GND;
assign RX_BIT_CTRL_OUT5[258] = GND;
assign RX_BIT_CTRL_OUT5[259] = GND;
assign RX_BIT_CTRL_OUT5[260] = GND;
assign RX_BIT_CTRL_OUT5[261] = GND;
assign RX_BIT_CTRL_OUT5[262] = GND;
assign RX_BIT_CTRL_OUT5[263] = GND;
assign RX_BIT_CTRL_OUT5[264] = GND;
assign RX_BIT_CTRL_OUT5[265] = GND;
assign RX_BIT_CTRL_OUT5[266] = GND;
assign RX_BIT_CTRL_OUT5[267] = GND;
assign RX_BIT_CTRL_OUT5[268] = GND;
assign RX_BIT_CTRL_OUT5[269] = GND;
assign RX_BIT_CTRL_OUT5[270] = GND;
assign RX_BIT_CTRL_OUT5[271] = GND;
assign RX_BIT_CTRL_OUT5[272] = GND;
assign RX_BIT_CTRL_OUT5[273] = GND;
assign RX_BIT_CTRL_OUT5[274] = GND;
assign RX_BIT_CTRL_OUT5[275] = GND;
assign RX_BIT_CTRL_OUT5[276] = GND;
assign RX_BIT_CTRL_OUT5[277] = GND;
assign RX_BIT_CTRL_OUT5[278] = GND;
assign RX_BIT_CTRL_OUT5[279] = GND;
assign RX_BIT_CTRL_OUT5[280] = GND;
assign RX_BIT_CTRL_OUT5[281] = GND;
assign RX_BIT_CTRL_OUT5[282] = GND;
assign RX_BIT_CTRL_OUT5[283] = GND;
assign RX_BIT_CTRL_OUT5[284] = GND;
assign RX_BIT_CTRL_OUT5[285] = GND;
assign RX_BIT_CTRL_OUT5[286] = GND;
assign RX_BIT_CTRL_OUT5[287] = GND;
assign RX_BIT_CTRL_OUT5[288] = GND;
assign RX_BIT_CTRL_OUT5[289] = GND;
assign RX_BIT_CTRL_OUT5[290] = GND;
assign RX_BIT_CTRL_OUT5[291] = GND;
assign RX_BIT_CTRL_OUT5[292] = GND;
assign RX_BIT_CTRL_OUT5[293] = GND;
assign RX_BIT_CTRL_OUT5[294] = GND;
assign RX_BIT_CTRL_OUT5[295] = GND;
assign RX_BIT_CTRL_OUT5[296] = GND;
assign RX_BIT_CTRL_OUT5[297] = GND;
assign RX_BIT_CTRL_OUT5[298] = GND;
assign RX_BIT_CTRL_OUT5[299] = GND;
assign RX_BIT_CTRL_OUT5[300] = GND;
assign RX_BIT_CTRL_OUT5[301] = GND;
assign RX_BIT_CTRL_OUT5[302] = GND;
assign RX_BIT_CTRL_OUT5[303] = GND;
assign RX_BIT_CTRL_OUT5[304] = GND;
assign RX_BIT_CTRL_OUT5[305] = GND;
assign RX_BIT_CTRL_OUT5[306] = GND;
assign RX_BIT_CTRL_OUT5[307] = GND;
assign RX_BIT_CTRL_OUT5[308] = GND;
assign RX_BIT_CTRL_OUT5[309] = GND;
assign RX_BIT_CTRL_OUT5[310] = GND;
assign RX_BIT_CTRL_OUT5[311] = GND;
assign RX_BIT_CTRL_OUT5[312] = GND;
assign RX_BIT_CTRL_OUT5[313] = GND;
assign RX_BIT_CTRL_OUT5[314] = GND;
assign RX_BIT_CTRL_OUT5[315] = GND;
assign RX_BIT_CTRL_OUT5[316] = GND;
assign RX_BIT_CTRL_OUT5[317] = GND;
assign RX_BIT_CTRL_OUT5[318] = GND;
assign RX_BIT_CTRL_OUT5[319] = GND;
assign RX_BIT_CTRL_OUT6[0] = GND;
assign RX_BIT_CTRL_OUT6[1] = GND;
assign RX_BIT_CTRL_OUT6[2] = GND;
assign RX_BIT_CTRL_OUT6[3] = GND;
assign RX_BIT_CTRL_OUT6[4] = GND;
assign RX_BIT_CTRL_OUT6[5] = GND;
assign RX_BIT_CTRL_OUT6[6] = GND;
assign RX_BIT_CTRL_OUT6[7] = GND;
assign RX_BIT_CTRL_OUT6[8] = GND;
assign RX_BIT_CTRL_OUT6[9] = GND;
assign RX_BIT_CTRL_OUT6[10] = GND;
assign RX_BIT_CTRL_OUT6[11] = GND;
assign RX_BIT_CTRL_OUT6[12] = GND;
assign RX_BIT_CTRL_OUT6[13] = GND;
assign RX_BIT_CTRL_OUT6[14] = GND;
assign RX_BIT_CTRL_OUT6[15] = GND;
assign RX_BIT_CTRL_OUT6[16] = GND;
assign RX_BIT_CTRL_OUT6[17] = GND;
assign RX_BIT_CTRL_OUT6[18] = GND;
assign RX_BIT_CTRL_OUT6[19] = GND;
assign RX_BIT_CTRL_OUT6[20] = GND;
assign RX_BIT_CTRL_OUT6[21] = GND;
assign RX_BIT_CTRL_OUT6[22] = GND;
assign RX_BIT_CTRL_OUT6[23] = GND;
assign RX_BIT_CTRL_OUT6[24] = GND;
assign RX_BIT_CTRL_OUT6[25] = GND;
assign RX_BIT_CTRL_OUT6[26] = GND;
assign RX_BIT_CTRL_OUT6[27] = GND;
assign RX_BIT_CTRL_OUT6[28] = GND;
assign RX_BIT_CTRL_OUT6[29] = GND;
assign RX_BIT_CTRL_OUT6[30] = GND;
assign RX_BIT_CTRL_OUT6[31] = GND;
assign RX_BIT_CTRL_OUT6[32] = GND;
assign RX_BIT_CTRL_OUT6[33] = GND;
assign RX_BIT_CTRL_OUT6[34] = GND;
assign RX_BIT_CTRL_OUT6[35] = GND;
assign RX_BIT_CTRL_OUT6[36] = GND;
assign RX_BIT_CTRL_OUT6[37] = GND;
assign RX_BIT_CTRL_OUT6[38] = GND;
assign RX_BIT_CTRL_OUT6[39] = GND;
assign RX_BIT_CTRL_OUT6[40] = GND;
assign RX_BIT_CTRL_OUT6[41] = GND;
assign RX_BIT_CTRL_OUT6[42] = GND;
assign RX_BIT_CTRL_OUT6[43] = GND;
assign RX_BIT_CTRL_OUT6[44] = GND;
assign RX_BIT_CTRL_OUT6[45] = GND;
assign RX_BIT_CTRL_OUT6[46] = GND;
assign RX_BIT_CTRL_OUT6[47] = GND;
assign RX_BIT_CTRL_OUT6[48] = GND;
assign RX_BIT_CTRL_OUT6[49] = GND;
assign RX_BIT_CTRL_OUT6[50] = GND;
assign RX_BIT_CTRL_OUT6[51] = GND;
assign RX_BIT_CTRL_OUT6[52] = GND;
assign RX_BIT_CTRL_OUT6[53] = GND;
assign RX_BIT_CTRL_OUT6[54] = GND;
assign RX_BIT_CTRL_OUT6[55] = GND;
assign RX_BIT_CTRL_OUT6[56] = GND;
assign RX_BIT_CTRL_OUT6[57] = GND;
assign RX_BIT_CTRL_OUT6[58] = GND;
assign RX_BIT_CTRL_OUT6[59] = GND;
assign RX_BIT_CTRL_OUT6[60] = GND;
assign RX_BIT_CTRL_OUT6[61] = GND;
assign RX_BIT_CTRL_OUT6[62] = GND;
assign RX_BIT_CTRL_OUT6[63] = GND;
assign RX_BIT_CTRL_OUT6[64] = GND;
assign RX_BIT_CTRL_OUT6[65] = GND;
assign RX_BIT_CTRL_OUT6[66] = GND;
assign RX_BIT_CTRL_OUT6[67] = GND;
assign RX_BIT_CTRL_OUT6[68] = GND;
assign RX_BIT_CTRL_OUT6[69] = GND;
assign RX_BIT_CTRL_OUT6[70] = GND;
assign RX_BIT_CTRL_OUT6[71] = GND;
assign RX_BIT_CTRL_OUT6[72] = GND;
assign RX_BIT_CTRL_OUT6[73] = GND;
assign RX_BIT_CTRL_OUT6[74] = GND;
assign RX_BIT_CTRL_OUT6[75] = GND;
assign RX_BIT_CTRL_OUT6[76] = GND;
assign RX_BIT_CTRL_OUT6[77] = GND;
assign RX_BIT_CTRL_OUT6[78] = GND;
assign RX_BIT_CTRL_OUT6[79] = GND;
assign RX_BIT_CTRL_OUT6[80] = GND;
assign RX_BIT_CTRL_OUT6[81] = GND;
assign RX_BIT_CTRL_OUT6[82] = GND;
assign RX_BIT_CTRL_OUT6[83] = GND;
assign RX_BIT_CTRL_OUT6[84] = GND;
assign RX_BIT_CTRL_OUT6[85] = GND;
assign RX_BIT_CTRL_OUT6[86] = GND;
assign RX_BIT_CTRL_OUT6[87] = GND;
assign RX_BIT_CTRL_OUT6[88] = GND;
assign RX_BIT_CTRL_OUT6[89] = GND;
assign RX_BIT_CTRL_OUT6[90] = GND;
assign RX_BIT_CTRL_OUT6[91] = GND;
assign RX_BIT_CTRL_OUT6[92] = GND;
assign RX_BIT_CTRL_OUT6[93] = GND;
assign RX_BIT_CTRL_OUT6[94] = GND;
assign RX_BIT_CTRL_OUT6[95] = GND;
assign RX_BIT_CTRL_OUT6[96] = GND;
assign RX_BIT_CTRL_OUT6[97] = GND;
assign RX_BIT_CTRL_OUT6[98] = GND;
assign RX_BIT_CTRL_OUT6[99] = GND;
assign RX_BIT_CTRL_OUT6[100] = GND;
assign RX_BIT_CTRL_OUT6[101] = GND;
assign RX_BIT_CTRL_OUT6[102] = GND;
assign RX_BIT_CTRL_OUT6[103] = GND;
assign RX_BIT_CTRL_OUT6[104] = GND;
assign RX_BIT_CTRL_OUT6[105] = GND;
assign RX_BIT_CTRL_OUT6[106] = GND;
assign RX_BIT_CTRL_OUT6[107] = GND;
assign RX_BIT_CTRL_OUT6[108] = GND;
assign RX_BIT_CTRL_OUT6[109] = GND;
assign RX_BIT_CTRL_OUT6[110] = GND;
assign RX_BIT_CTRL_OUT6[111] = GND;
assign RX_BIT_CTRL_OUT6[112] = GND;
assign RX_BIT_CTRL_OUT6[113] = GND;
assign RX_BIT_CTRL_OUT6[114] = GND;
assign RX_BIT_CTRL_OUT6[115] = GND;
assign RX_BIT_CTRL_OUT6[116] = GND;
assign RX_BIT_CTRL_OUT6[117] = GND;
assign RX_BIT_CTRL_OUT6[118] = GND;
assign RX_BIT_CTRL_OUT6[119] = GND;
assign RX_BIT_CTRL_OUT6[120] = GND;
assign RX_BIT_CTRL_OUT6[121] = GND;
assign RX_BIT_CTRL_OUT6[122] = GND;
assign RX_BIT_CTRL_OUT6[123] = GND;
assign RX_BIT_CTRL_OUT6[124] = GND;
assign RX_BIT_CTRL_OUT6[125] = GND;
assign RX_BIT_CTRL_OUT6[126] = GND;
assign RX_BIT_CTRL_OUT6[127] = GND;
assign RX_BIT_CTRL_OUT6[128] = GND;
assign RX_BIT_CTRL_OUT6[129] = GND;
assign RX_BIT_CTRL_OUT6[130] = GND;
assign RX_BIT_CTRL_OUT6[131] = GND;
assign RX_BIT_CTRL_OUT6[132] = GND;
assign RX_BIT_CTRL_OUT6[133] = GND;
assign RX_BIT_CTRL_OUT6[134] = GND;
assign RX_BIT_CTRL_OUT6[135] = GND;
assign RX_BIT_CTRL_OUT6[136] = GND;
assign RX_BIT_CTRL_OUT6[137] = GND;
assign RX_BIT_CTRL_OUT6[138] = GND;
assign RX_BIT_CTRL_OUT6[139] = GND;
assign RX_BIT_CTRL_OUT6[140] = GND;
assign RX_BIT_CTRL_OUT6[141] = GND;
assign RX_BIT_CTRL_OUT6[142] = GND;
assign RX_BIT_CTRL_OUT6[143] = GND;
assign RX_BIT_CTRL_OUT6[144] = GND;
assign RX_BIT_CTRL_OUT6[145] = GND;
assign RX_BIT_CTRL_OUT6[146] = GND;
assign RX_BIT_CTRL_OUT6[147] = GND;
assign RX_BIT_CTRL_OUT6[148] = GND;
assign RX_BIT_CTRL_OUT6[149] = GND;
assign RX_BIT_CTRL_OUT6[150] = GND;
assign RX_BIT_CTRL_OUT6[151] = GND;
assign RX_BIT_CTRL_OUT6[152] = GND;
assign RX_BIT_CTRL_OUT6[153] = GND;
assign RX_BIT_CTRL_OUT6[154] = GND;
assign RX_BIT_CTRL_OUT6[155] = GND;
assign RX_BIT_CTRL_OUT6[156] = GND;
assign RX_BIT_CTRL_OUT6[157] = GND;
assign RX_BIT_CTRL_OUT6[158] = GND;
assign RX_BIT_CTRL_OUT6[159] = GND;
assign RX_BIT_CTRL_OUT6[160] = GND;
assign RX_BIT_CTRL_OUT6[161] = GND;
assign RX_BIT_CTRL_OUT6[162] = GND;
assign RX_BIT_CTRL_OUT6[163] = GND;
assign RX_BIT_CTRL_OUT6[164] = GND;
assign RX_BIT_CTRL_OUT6[165] = GND;
assign RX_BIT_CTRL_OUT6[166] = GND;
assign RX_BIT_CTRL_OUT6[167] = GND;
assign RX_BIT_CTRL_OUT6[168] = GND;
assign RX_BIT_CTRL_OUT6[169] = GND;
assign RX_BIT_CTRL_OUT6[170] = GND;
assign RX_BIT_CTRL_OUT6[171] = GND;
assign RX_BIT_CTRL_OUT6[172] = GND;
assign RX_BIT_CTRL_OUT6[173] = GND;
assign RX_BIT_CTRL_OUT6[174] = GND;
assign RX_BIT_CTRL_OUT6[175] = GND;
assign RX_BIT_CTRL_OUT6[176] = GND;
assign RX_BIT_CTRL_OUT6[177] = GND;
assign RX_BIT_CTRL_OUT6[178] = GND;
assign RX_BIT_CTRL_OUT6[179] = GND;
assign RX_BIT_CTRL_OUT6[180] = GND;
assign RX_BIT_CTRL_OUT6[181] = GND;
assign RX_BIT_CTRL_OUT6[182] = GND;
assign RX_BIT_CTRL_OUT6[183] = GND;
assign RX_BIT_CTRL_OUT6[184] = GND;
assign RX_BIT_CTRL_OUT6[185] = GND;
assign RX_BIT_CTRL_OUT6[186] = GND;
assign RX_BIT_CTRL_OUT6[187] = GND;
assign RX_BIT_CTRL_OUT6[188] = GND;
assign RX_BIT_CTRL_OUT6[189] = GND;
assign RX_BIT_CTRL_OUT6[190] = GND;
assign RX_BIT_CTRL_OUT6[191] = GND;
assign RX_BIT_CTRL_OUT6[192] = GND;
assign RX_BIT_CTRL_OUT6[193] = GND;
assign RX_BIT_CTRL_OUT6[194] = GND;
assign RX_BIT_CTRL_OUT6[195] = GND;
assign RX_BIT_CTRL_OUT6[196] = GND;
assign RX_BIT_CTRL_OUT6[197] = GND;
assign RX_BIT_CTRL_OUT6[198] = GND;
assign RX_BIT_CTRL_OUT6[199] = GND;
assign RX_BIT_CTRL_OUT6[200] = GND;
assign RX_BIT_CTRL_OUT6[201] = GND;
assign RX_BIT_CTRL_OUT6[202] = GND;
assign RX_BIT_CTRL_OUT6[203] = GND;
assign RX_BIT_CTRL_OUT6[204] = GND;
assign RX_BIT_CTRL_OUT6[205] = GND;
assign RX_BIT_CTRL_OUT6[206] = GND;
assign RX_BIT_CTRL_OUT6[207] = GND;
assign RX_BIT_CTRL_OUT6[208] = GND;
assign RX_BIT_CTRL_OUT6[209] = GND;
assign RX_BIT_CTRL_OUT6[210] = GND;
assign RX_BIT_CTRL_OUT6[211] = GND;
assign RX_BIT_CTRL_OUT6[212] = GND;
assign RX_BIT_CTRL_OUT6[213] = GND;
assign RX_BIT_CTRL_OUT6[214] = GND;
assign RX_BIT_CTRL_OUT6[215] = GND;
assign RX_BIT_CTRL_OUT6[216] = GND;
assign RX_BIT_CTRL_OUT6[217] = GND;
assign RX_BIT_CTRL_OUT6[218] = GND;
assign RX_BIT_CTRL_OUT6[219] = GND;
assign RX_BIT_CTRL_OUT6[220] = GND;
assign RX_BIT_CTRL_OUT6[221] = GND;
assign RX_BIT_CTRL_OUT6[222] = GND;
assign RX_BIT_CTRL_OUT6[223] = GND;
assign RX_BIT_CTRL_OUT6[224] = GND;
assign RX_BIT_CTRL_OUT6[225] = GND;
assign RX_BIT_CTRL_OUT6[226] = GND;
assign RX_BIT_CTRL_OUT6[227] = GND;
assign RX_BIT_CTRL_OUT6[228] = GND;
assign RX_BIT_CTRL_OUT6[229] = GND;
assign RX_BIT_CTRL_OUT6[230] = GND;
assign RX_BIT_CTRL_OUT6[231] = GND;
assign RX_BIT_CTRL_OUT6[232] = GND;
assign RX_BIT_CTRL_OUT6[233] = GND;
assign RX_BIT_CTRL_OUT6[234] = GND;
assign RX_BIT_CTRL_OUT6[235] = GND;
assign RX_BIT_CTRL_OUT6[236] = GND;
assign RX_BIT_CTRL_OUT6[237] = GND;
assign RX_BIT_CTRL_OUT6[238] = GND;
assign RX_BIT_CTRL_OUT6[239] = GND;
assign RX_BIT_CTRL_OUT6[240] = GND;
assign RX_BIT_CTRL_OUT6[241] = GND;
assign RX_BIT_CTRL_OUT6[242] = GND;
assign RX_BIT_CTRL_OUT6[243] = GND;
assign RX_BIT_CTRL_OUT6[244] = GND;
assign RX_BIT_CTRL_OUT6[245] = GND;
assign RX_BIT_CTRL_OUT6[246] = GND;
assign RX_BIT_CTRL_OUT6[247] = GND;
assign RX_BIT_CTRL_OUT6[248] = GND;
assign RX_BIT_CTRL_OUT6[249] = GND;
assign RX_BIT_CTRL_OUT6[250] = GND;
assign RX_BIT_CTRL_OUT6[251] = GND;
assign RX_BIT_CTRL_OUT6[252] = GND;
assign RX_BIT_CTRL_OUT6[253] = GND;
assign RX_BIT_CTRL_OUT6[254] = GND;
assign RX_BIT_CTRL_OUT6[255] = GND;
assign RX_BIT_CTRL_OUT6[256] = GND;
assign RX_BIT_CTRL_OUT6[257] = GND;
assign RX_BIT_CTRL_OUT6[258] = GND;
assign RX_BIT_CTRL_OUT6[259] = GND;
assign RX_BIT_CTRL_OUT6[260] = GND;
assign RX_BIT_CTRL_OUT6[261] = GND;
assign RX_BIT_CTRL_OUT6[262] = GND;
assign RX_BIT_CTRL_OUT6[263] = GND;
assign RX_BIT_CTRL_OUT6[264] = GND;
assign RX_BIT_CTRL_OUT6[265] = GND;
assign RX_BIT_CTRL_OUT6[266] = GND;
assign RX_BIT_CTRL_OUT6[267] = GND;
assign RX_BIT_CTRL_OUT6[268] = GND;
assign RX_BIT_CTRL_OUT6[269] = GND;
assign RX_BIT_CTRL_OUT6[270] = GND;
assign RX_BIT_CTRL_OUT6[271] = GND;
assign RX_BIT_CTRL_OUT6[272] = GND;
assign RX_BIT_CTRL_OUT6[273] = GND;
assign RX_BIT_CTRL_OUT6[274] = GND;
assign RX_BIT_CTRL_OUT6[275] = GND;
assign RX_BIT_CTRL_OUT6[276] = GND;
assign RX_BIT_CTRL_OUT6[277] = GND;
assign RX_BIT_CTRL_OUT6[278] = GND;
assign RX_BIT_CTRL_OUT6[279] = GND;
assign RX_BIT_CTRL_OUT6[280] = GND;
assign RX_BIT_CTRL_OUT6[281] = GND;
assign RX_BIT_CTRL_OUT6[282] = GND;
assign RX_BIT_CTRL_OUT6[283] = GND;
assign RX_BIT_CTRL_OUT6[284] = GND;
assign RX_BIT_CTRL_OUT6[285] = GND;
assign RX_BIT_CTRL_OUT6[286] = GND;
assign RX_BIT_CTRL_OUT6[287] = GND;
assign RX_BIT_CTRL_OUT6[288] = GND;
assign RX_BIT_CTRL_OUT6[289] = GND;
assign RX_BIT_CTRL_OUT6[290] = GND;
assign RX_BIT_CTRL_OUT6[291] = GND;
assign RX_BIT_CTRL_OUT6[292] = GND;
assign RX_BIT_CTRL_OUT6[293] = GND;
assign RX_BIT_CTRL_OUT6[294] = GND;
assign RX_BIT_CTRL_OUT6[295] = GND;
assign RX_BIT_CTRL_OUT6[296] = GND;
assign RX_BIT_CTRL_OUT6[297] = GND;
assign RX_BIT_CTRL_OUT6[298] = GND;
assign RX_BIT_CTRL_OUT6[299] = GND;
assign RX_BIT_CTRL_OUT6[300] = GND;
assign RX_BIT_CTRL_OUT6[301] = GND;
assign RX_BIT_CTRL_OUT6[302] = GND;
assign RX_BIT_CTRL_OUT6[303] = GND;
assign RX_BIT_CTRL_OUT6[304] = GND;
assign RX_BIT_CTRL_OUT6[305] = GND;
assign RX_BIT_CTRL_OUT6[306] = GND;
assign RX_BIT_CTRL_OUT6[307] = GND;
assign RX_BIT_CTRL_OUT6[308] = GND;
assign RX_BIT_CTRL_OUT6[309] = GND;
assign RX_BIT_CTRL_OUT6[310] = GND;
assign RX_BIT_CTRL_OUT6[311] = GND;
assign RX_BIT_CTRL_OUT6[312] = GND;
assign RX_BIT_CTRL_OUT6[313] = GND;
assign RX_BIT_CTRL_OUT6[314] = GND;
assign RX_BIT_CTRL_OUT6[315] = GND;
assign RX_BIT_CTRL_OUT6[316] = GND;
assign RX_BIT_CTRL_OUT6[317] = GND;
assign RX_BIT_CTRL_OUT6[318] = GND;
assign RX_BIT_CTRL_OUT6[319] = GND;
assign TX_BIT_CTRL_OUT0[0] = GND;
assign TX_BIT_CTRL_OUT0[1] = GND;
assign TX_BIT_CTRL_OUT0[2] = GND;
assign TX_BIT_CTRL_OUT0[3] = GND;
assign TX_BIT_CTRL_OUT0[4] = GND;
assign TX_BIT_CTRL_OUT0[5] = GND;
assign TX_BIT_CTRL_OUT0[6] = GND;
assign TX_BIT_CTRL_OUT0[7] = GND;
assign TX_BIT_CTRL_OUT0[8] = GND;
assign TX_BIT_CTRL_OUT0[9] = GND;
assign TX_BIT_CTRL_OUT0[10] = GND;
assign TX_BIT_CTRL_OUT0[11] = GND;
assign TX_BIT_CTRL_OUT0[12] = GND;
assign TX_BIT_CTRL_OUT0[13] = GND;
assign TX_BIT_CTRL_OUT0[14] = GND;
assign TX_BIT_CTRL_OUT0[15] = GND;
assign TX_BIT_CTRL_OUT0[16] = GND;
assign TX_BIT_CTRL_OUT0[17] = GND;
assign TX_BIT_CTRL_OUT0[18] = GND;
assign TX_BIT_CTRL_OUT0[19] = GND;
assign TX_BIT_CTRL_OUT0[20] = GND;
assign TX_BIT_CTRL_OUT0[21] = GND;
assign TX_BIT_CTRL_OUT0[22] = GND;
assign TX_BIT_CTRL_OUT0[23] = GND;
assign TX_BIT_CTRL_OUT0[24] = GND;
assign TX_BIT_CTRL_OUT0[25] = GND;
assign TX_BIT_CTRL_OUT0[26] = GND;
assign TX_BIT_CTRL_OUT0[27] = GND;
assign TX_BIT_CTRL_OUT0[28] = GND;
assign TX_BIT_CTRL_OUT0[29] = GND;
assign TX_BIT_CTRL_OUT0[30] = GND;
assign TX_BIT_CTRL_OUT0[31] = GND;
assign TX_BIT_CTRL_OUT0[32] = GND;
assign TX_BIT_CTRL_OUT0[33] = GND;
assign TX_BIT_CTRL_OUT0[34] = GND;
assign TX_BIT_CTRL_OUT0[35] = GND;
assign TX_BIT_CTRL_OUT0[36] = GND;
assign TX_BIT_CTRL_OUT0[37] = GND;
assign TX_BIT_CTRL_OUT0[38] = GND;
assign TX_BIT_CTRL_OUT0[39] = GND;
assign TX_BIT_CTRL_OUT0[40] = GND;
assign TX_BIT_CTRL_OUT0[41] = GND;
assign TX_BIT_CTRL_OUT0[42] = GND;
assign TX_BIT_CTRL_OUT0[43] = GND;
assign TX_BIT_CTRL_OUT0[44] = GND;
assign TX_BIT_CTRL_OUT0[45] = GND;
assign TX_BIT_CTRL_OUT0[46] = GND;
assign TX_BIT_CTRL_OUT0[47] = GND;
assign TX_BIT_CTRL_OUT0[48] = GND;
assign TX_BIT_CTRL_OUT0[49] = GND;
assign TX_BIT_CTRL_OUT0[50] = GND;
assign TX_BIT_CTRL_OUT0[51] = GND;
assign TX_BIT_CTRL_OUT0[52] = GND;
assign TX_BIT_CTRL_OUT0[53] = GND;
assign TX_BIT_CTRL_OUT0[54] = GND;
assign TX_BIT_CTRL_OUT0[55] = GND;
assign TX_BIT_CTRL_OUT0[56] = GND;
assign TX_BIT_CTRL_OUT0[57] = GND;
assign TX_BIT_CTRL_OUT0[58] = GND;
assign TX_BIT_CTRL_OUT0[59] = GND;
assign TX_BIT_CTRL_OUT0[60] = GND;
assign TX_BIT_CTRL_OUT0[61] = GND;
assign TX_BIT_CTRL_OUT0[62] = GND;
assign TX_BIT_CTRL_OUT0[63] = GND;
assign TX_BIT_CTRL_OUT0[64] = GND;
assign TX_BIT_CTRL_OUT0[65] = GND;
assign TX_BIT_CTRL_OUT0[66] = GND;
assign TX_BIT_CTRL_OUT0[67] = GND;
assign TX_BIT_CTRL_OUT0[68] = GND;
assign TX_BIT_CTRL_OUT0[69] = GND;
assign TX_BIT_CTRL_OUT0[70] = GND;
assign TX_BIT_CTRL_OUT0[71] = GND;
assign TX_BIT_CTRL_OUT0[72] = GND;
assign TX_BIT_CTRL_OUT0[73] = GND;
assign TX_BIT_CTRL_OUT0[74] = GND;
assign TX_BIT_CTRL_OUT0[75] = GND;
assign TX_BIT_CTRL_OUT0[76] = GND;
assign TX_BIT_CTRL_OUT0[77] = GND;
assign TX_BIT_CTRL_OUT0[78] = GND;
assign TX_BIT_CTRL_OUT0[79] = GND;
assign TX_BIT_CTRL_OUT0[80] = GND;
assign TX_BIT_CTRL_OUT0[81] = GND;
assign TX_BIT_CTRL_OUT0[82] = GND;
assign TX_BIT_CTRL_OUT0[83] = GND;
assign TX_BIT_CTRL_OUT0[84] = GND;
assign TX_BIT_CTRL_OUT0[85] = GND;
assign TX_BIT_CTRL_OUT0[86] = GND;
assign TX_BIT_CTRL_OUT0[87] = GND;
assign TX_BIT_CTRL_OUT0[88] = GND;
assign TX_BIT_CTRL_OUT0[89] = GND;
assign TX_BIT_CTRL_OUT0[90] = GND;
assign TX_BIT_CTRL_OUT0[91] = GND;
assign TX_BIT_CTRL_OUT0[92] = GND;
assign TX_BIT_CTRL_OUT0[93] = GND;
assign TX_BIT_CTRL_OUT0[94] = GND;
assign TX_BIT_CTRL_OUT0[95] = GND;
assign TX_BIT_CTRL_OUT0[96] = GND;
assign TX_BIT_CTRL_OUT0[97] = GND;
assign TX_BIT_CTRL_OUT0[98] = GND;
assign TX_BIT_CTRL_OUT0[99] = GND;
assign TX_BIT_CTRL_OUT0[100] = GND;
assign TX_BIT_CTRL_OUT0[101] = GND;
assign TX_BIT_CTRL_OUT0[102] = GND;
assign TX_BIT_CTRL_OUT0[103] = GND;
assign TX_BIT_CTRL_OUT0[104] = GND;
assign TX_BIT_CTRL_OUT0[105] = GND;
assign TX_BIT_CTRL_OUT0[106] = GND;
assign TX_BIT_CTRL_OUT0[107] = GND;
assign TX_BIT_CTRL_OUT0[108] = GND;
assign TX_BIT_CTRL_OUT0[109] = GND;
assign TX_BIT_CTRL_OUT0[110] = GND;
assign TX_BIT_CTRL_OUT0[111] = GND;
assign TX_BIT_CTRL_OUT0[112] = GND;
assign TX_BIT_CTRL_OUT0[113] = GND;
assign TX_BIT_CTRL_OUT0[114] = GND;
assign TX_BIT_CTRL_OUT0[115] = GND;
assign TX_BIT_CTRL_OUT0[116] = GND;
assign TX_BIT_CTRL_OUT0[117] = GND;
assign TX_BIT_CTRL_OUT0[118] = GND;
assign TX_BIT_CTRL_OUT0[119] = GND;
assign TX_BIT_CTRL_OUT0[120] = GND;
assign TX_BIT_CTRL_OUT0[121] = GND;
assign TX_BIT_CTRL_OUT0[122] = GND;
assign TX_BIT_CTRL_OUT0[123] = GND;
assign TX_BIT_CTRL_OUT0[124] = GND;
assign TX_BIT_CTRL_OUT0[125] = GND;
assign TX_BIT_CTRL_OUT0[126] = GND;
assign TX_BIT_CTRL_OUT0[127] = GND;
assign TX_BIT_CTRL_OUT0[128] = GND;
assign TX_BIT_CTRL_OUT0[129] = GND;
assign TX_BIT_CTRL_OUT0[130] = GND;
assign TX_BIT_CTRL_OUT0[131] = GND;
assign TX_BIT_CTRL_OUT0[132] = GND;
assign TX_BIT_CTRL_OUT0[133] = GND;
assign TX_BIT_CTRL_OUT0[134] = GND;
assign TX_BIT_CTRL_OUT0[135] = GND;
assign TX_BIT_CTRL_OUT0[136] = GND;
assign TX_BIT_CTRL_OUT0[137] = GND;
assign TX_BIT_CTRL_OUT0[138] = GND;
assign TX_BIT_CTRL_OUT0[139] = GND;
assign TX_BIT_CTRL_OUT0[140] = GND;
assign TX_BIT_CTRL_OUT0[141] = GND;
assign TX_BIT_CTRL_OUT0[142] = GND;
assign TX_BIT_CTRL_OUT0[143] = GND;
assign TX_BIT_CTRL_OUT0[144] = GND;
assign TX_BIT_CTRL_OUT0[145] = GND;
assign TX_BIT_CTRL_OUT0[146] = GND;
assign TX_BIT_CTRL_OUT0[147] = GND;
assign TX_BIT_CTRL_OUT0[148] = GND;
assign TX_BIT_CTRL_OUT0[149] = GND;
assign TX_BIT_CTRL_OUT0[150] = GND;
assign TX_BIT_CTRL_OUT0[151] = GND;
assign TX_BIT_CTRL_OUT0[152] = GND;
assign TX_BIT_CTRL_OUT0[153] = GND;
assign TX_BIT_CTRL_OUT0[154] = GND;
assign TX_BIT_CTRL_OUT0[155] = GND;
assign TX_BIT_CTRL_OUT0[156] = GND;
assign TX_BIT_CTRL_OUT0[157] = GND;
assign TX_BIT_CTRL_OUT0[158] = GND;
assign TX_BIT_CTRL_OUT0[159] = GND;
assign TX_BIT_CTRL_OUT0[160] = GND;
assign TX_BIT_CTRL_OUT0[161] = GND;
assign TX_BIT_CTRL_OUT0[162] = GND;
assign TX_BIT_CTRL_OUT0[163] = GND;
assign TX_BIT_CTRL_OUT0[164] = GND;
assign TX_BIT_CTRL_OUT0[165] = GND;
assign TX_BIT_CTRL_OUT0[166] = GND;
assign TX_BIT_CTRL_OUT0[167] = GND;
assign TX_BIT_CTRL_OUT0[168] = GND;
assign TX_BIT_CTRL_OUT0[169] = GND;
assign TX_BIT_CTRL_OUT0[170] = GND;
assign TX_BIT_CTRL_OUT0[171] = GND;
assign TX_BIT_CTRL_OUT0[172] = GND;
assign TX_BIT_CTRL_OUT0[173] = GND;
assign TX_BIT_CTRL_OUT0[174] = GND;
assign TX_BIT_CTRL_OUT0[175] = GND;
assign TX_BIT_CTRL_OUT0[176] = GND;
assign TX_BIT_CTRL_OUT0[177] = GND;
assign TX_BIT_CTRL_OUT0[178] = GND;
assign TX_BIT_CTRL_OUT0[179] = GND;
assign TX_BIT_CTRL_OUT0[180] = GND;
assign TX_BIT_CTRL_OUT0[181] = GND;
assign TX_BIT_CTRL_OUT0[182] = GND;
assign TX_BIT_CTRL_OUT0[183] = GND;
assign TX_BIT_CTRL_OUT0[184] = GND;
assign TX_BIT_CTRL_OUT0[185] = GND;
assign TX_BIT_CTRL_OUT0[186] = GND;
assign TX_BIT_CTRL_OUT0[187] = GND;
assign TX_BIT_CTRL_OUT0[188] = GND;
assign TX_BIT_CTRL_OUT0[189] = GND;
assign TX_BIT_CTRL_OUT0[190] = GND;
assign TX_BIT_CTRL_OUT0[191] = GND;
assign TX_BIT_CTRL_OUT0[192] = GND;
assign TX_BIT_CTRL_OUT0[193] = GND;
assign TX_BIT_CTRL_OUT0[194] = GND;
assign TX_BIT_CTRL_OUT0[195] = GND;
assign TX_BIT_CTRL_OUT0[196] = GND;
assign TX_BIT_CTRL_OUT0[197] = GND;
assign TX_BIT_CTRL_OUT0[198] = GND;
assign TX_BIT_CTRL_OUT0[199] = GND;
assign TX_BIT_CTRL_OUT0[200] = GND;
assign TX_BIT_CTRL_OUT0[201] = GND;
assign TX_BIT_CTRL_OUT0[202] = GND;
assign TX_BIT_CTRL_OUT0[203] = GND;
assign TX_BIT_CTRL_OUT0[204] = GND;
assign TX_BIT_CTRL_OUT0[205] = GND;
assign TX_BIT_CTRL_OUT0[206] = GND;
assign TX_BIT_CTRL_OUT0[207] = GND;
assign TX_BIT_CTRL_OUT0[208] = GND;
assign TX_BIT_CTRL_OUT0[209] = GND;
assign TX_BIT_CTRL_OUT0[210] = GND;
assign TX_BIT_CTRL_OUT0[211] = GND;
assign TX_BIT_CTRL_OUT0[212] = GND;
assign TX_BIT_CTRL_OUT0[213] = GND;
assign TX_BIT_CTRL_OUT0[214] = GND;
assign TX_BIT_CTRL_OUT0[215] = GND;
assign TX_BIT_CTRL_OUT0[216] = GND;
assign TX_BIT_CTRL_OUT0[217] = GND;
assign TX_BIT_CTRL_OUT0[218] = GND;
assign TX_BIT_CTRL_OUT0[219] = GND;
assign TX_BIT_CTRL_OUT0[220] = GND;
assign TX_BIT_CTRL_OUT0[221] = GND;
assign TX_BIT_CTRL_OUT0[222] = GND;
assign TX_BIT_CTRL_OUT0[223] = GND;
assign TX_BIT_CTRL_OUT0[224] = GND;
assign TX_BIT_CTRL_OUT0[225] = GND;
assign TX_BIT_CTRL_OUT0[226] = GND;
assign TX_BIT_CTRL_OUT0[227] = GND;
assign TX_BIT_CTRL_OUT0[228] = GND;
assign TX_BIT_CTRL_OUT0[229] = GND;
assign TX_BIT_CTRL_OUT0[230] = GND;
assign TX_BIT_CTRL_OUT0[231] = GND;
assign TX_BIT_CTRL_OUT0[232] = GND;
assign TX_BIT_CTRL_OUT0[233] = GND;
assign TX_BIT_CTRL_OUT0[234] = GND;
assign TX_BIT_CTRL_OUT0[235] = GND;
assign TX_BIT_CTRL_OUT0[236] = GND;
assign TX_BIT_CTRL_OUT0[237] = GND;
assign TX_BIT_CTRL_OUT0[238] = GND;
assign TX_BIT_CTRL_OUT0[239] = GND;
assign TX_BIT_CTRL_OUT0[280] = GND;
assign TX_BIT_CTRL_OUT0[281] = GND;
assign TX_BIT_CTRL_OUT0[282] = GND;
assign TX_BIT_CTRL_OUT0[283] = GND;
assign TX_BIT_CTRL_OUT0[284] = GND;
assign TX_BIT_CTRL_OUT0[285] = GND;
assign TX_BIT_CTRL_OUT0[286] = GND;
assign TX_BIT_CTRL_OUT0[287] = GND;
assign TX_BIT_CTRL_OUT0[288] = GND;
assign TX_BIT_CTRL_OUT0[289] = GND;
assign TX_BIT_CTRL_OUT0[290] = GND;
assign TX_BIT_CTRL_OUT0[291] = GND;
assign TX_BIT_CTRL_OUT0[292] = GND;
assign TX_BIT_CTRL_OUT0[293] = GND;
assign TX_BIT_CTRL_OUT0[294] = GND;
assign TX_BIT_CTRL_OUT0[295] = GND;
assign TX_BIT_CTRL_OUT0[296] = GND;
assign TX_BIT_CTRL_OUT0[297] = GND;
assign TX_BIT_CTRL_OUT0[298] = GND;
assign TX_BIT_CTRL_OUT0[299] = GND;
assign TX_BIT_CTRL_OUT0[300] = GND;
assign TX_BIT_CTRL_OUT0[301] = GND;
assign TX_BIT_CTRL_OUT0[302] = GND;
assign TX_BIT_CTRL_OUT0[303] = GND;
assign TX_BIT_CTRL_OUT0[304] = GND;
assign TX_BIT_CTRL_OUT0[305] = GND;
assign TX_BIT_CTRL_OUT0[306] = GND;
assign TX_BIT_CTRL_OUT0[307] = GND;
assign TX_BIT_CTRL_OUT0[308] = GND;
assign TX_BIT_CTRL_OUT0[309] = GND;
assign TX_BIT_CTRL_OUT0[310] = GND;
assign TX_BIT_CTRL_OUT0[311] = GND;
assign TX_BIT_CTRL_OUT0[312] = GND;
assign TX_BIT_CTRL_OUT0[313] = GND;
assign TX_BIT_CTRL_OUT0[314] = GND;
assign TX_BIT_CTRL_OUT0[315] = GND;
assign TX_BIT_CTRL_OUT0[316] = GND;
assign TX_BIT_CTRL_OUT0[317] = GND;
assign TX_BIT_CTRL_OUT0[318] = GND;
assign TX_BIT_CTRL_OUT0[319] = GND;
assign TX_BIT_CTRL_OUT1[0] = GND;
assign TX_BIT_CTRL_OUT1[1] = GND;
assign TX_BIT_CTRL_OUT1[2] = GND;
assign TX_BIT_CTRL_OUT1[3] = GND;
assign TX_BIT_CTRL_OUT1[4] = GND;
assign TX_BIT_CTRL_OUT1[5] = GND;
assign TX_BIT_CTRL_OUT1[6] = GND;
assign TX_BIT_CTRL_OUT1[7] = GND;
assign TX_BIT_CTRL_OUT1[8] = GND;
assign TX_BIT_CTRL_OUT1[9] = GND;
assign TX_BIT_CTRL_OUT1[10] = GND;
assign TX_BIT_CTRL_OUT1[11] = GND;
assign TX_BIT_CTRL_OUT1[12] = GND;
assign TX_BIT_CTRL_OUT1[13] = GND;
assign TX_BIT_CTRL_OUT1[14] = GND;
assign TX_BIT_CTRL_OUT1[15] = GND;
assign TX_BIT_CTRL_OUT1[16] = GND;
assign TX_BIT_CTRL_OUT1[17] = GND;
assign TX_BIT_CTRL_OUT1[18] = GND;
assign TX_BIT_CTRL_OUT1[19] = GND;
assign TX_BIT_CTRL_OUT1[20] = GND;
assign TX_BIT_CTRL_OUT1[21] = GND;
assign TX_BIT_CTRL_OUT1[22] = GND;
assign TX_BIT_CTRL_OUT1[23] = GND;
assign TX_BIT_CTRL_OUT1[24] = GND;
assign TX_BIT_CTRL_OUT1[25] = GND;
assign TX_BIT_CTRL_OUT1[26] = GND;
assign TX_BIT_CTRL_OUT1[27] = GND;
assign TX_BIT_CTRL_OUT1[28] = GND;
assign TX_BIT_CTRL_OUT1[29] = GND;
assign TX_BIT_CTRL_OUT1[30] = GND;
assign TX_BIT_CTRL_OUT1[31] = GND;
assign TX_BIT_CTRL_OUT1[32] = GND;
assign TX_BIT_CTRL_OUT1[33] = GND;
assign TX_BIT_CTRL_OUT1[34] = GND;
assign TX_BIT_CTRL_OUT1[35] = GND;
assign TX_BIT_CTRL_OUT1[36] = GND;
assign TX_BIT_CTRL_OUT1[37] = GND;
assign TX_BIT_CTRL_OUT1[38] = GND;
assign TX_BIT_CTRL_OUT1[39] = GND;
assign TX_BIT_CTRL_OUT1[40] = GND;
assign TX_BIT_CTRL_OUT1[41] = GND;
assign TX_BIT_CTRL_OUT1[42] = GND;
assign TX_BIT_CTRL_OUT1[43] = GND;
assign TX_BIT_CTRL_OUT1[44] = GND;
assign TX_BIT_CTRL_OUT1[45] = GND;
assign TX_BIT_CTRL_OUT1[46] = GND;
assign TX_BIT_CTRL_OUT1[47] = GND;
assign TX_BIT_CTRL_OUT1[48] = GND;
assign TX_BIT_CTRL_OUT1[49] = GND;
assign TX_BIT_CTRL_OUT1[50] = GND;
assign TX_BIT_CTRL_OUT1[51] = GND;
assign TX_BIT_CTRL_OUT1[52] = GND;
assign TX_BIT_CTRL_OUT1[53] = GND;
assign TX_BIT_CTRL_OUT1[54] = GND;
assign TX_BIT_CTRL_OUT1[55] = GND;
assign TX_BIT_CTRL_OUT1[56] = GND;
assign TX_BIT_CTRL_OUT1[57] = GND;
assign TX_BIT_CTRL_OUT1[58] = GND;
assign TX_BIT_CTRL_OUT1[59] = GND;
assign TX_BIT_CTRL_OUT1[60] = GND;
assign TX_BIT_CTRL_OUT1[61] = GND;
assign TX_BIT_CTRL_OUT1[62] = GND;
assign TX_BIT_CTRL_OUT1[63] = GND;
assign TX_BIT_CTRL_OUT1[64] = GND;
assign TX_BIT_CTRL_OUT1[65] = GND;
assign TX_BIT_CTRL_OUT1[66] = GND;
assign TX_BIT_CTRL_OUT1[67] = GND;
assign TX_BIT_CTRL_OUT1[68] = GND;
assign TX_BIT_CTRL_OUT1[69] = GND;
assign TX_BIT_CTRL_OUT1[70] = GND;
assign TX_BIT_CTRL_OUT1[71] = GND;
assign TX_BIT_CTRL_OUT1[72] = GND;
assign TX_BIT_CTRL_OUT1[73] = GND;
assign TX_BIT_CTRL_OUT1[74] = GND;
assign TX_BIT_CTRL_OUT1[75] = GND;
assign TX_BIT_CTRL_OUT1[76] = GND;
assign TX_BIT_CTRL_OUT1[77] = GND;
assign TX_BIT_CTRL_OUT1[78] = GND;
assign TX_BIT_CTRL_OUT1[79] = GND;
assign TX_BIT_CTRL_OUT1[80] = GND;
assign TX_BIT_CTRL_OUT1[81] = GND;
assign TX_BIT_CTRL_OUT1[82] = GND;
assign TX_BIT_CTRL_OUT1[83] = GND;
assign TX_BIT_CTRL_OUT1[84] = GND;
assign TX_BIT_CTRL_OUT1[85] = GND;
assign TX_BIT_CTRL_OUT1[86] = GND;
assign TX_BIT_CTRL_OUT1[87] = GND;
assign TX_BIT_CTRL_OUT1[88] = GND;
assign TX_BIT_CTRL_OUT1[89] = GND;
assign TX_BIT_CTRL_OUT1[90] = GND;
assign TX_BIT_CTRL_OUT1[91] = GND;
assign TX_BIT_CTRL_OUT1[92] = GND;
assign TX_BIT_CTRL_OUT1[93] = GND;
assign TX_BIT_CTRL_OUT1[94] = GND;
assign TX_BIT_CTRL_OUT1[95] = GND;
assign TX_BIT_CTRL_OUT1[96] = GND;
assign TX_BIT_CTRL_OUT1[97] = GND;
assign TX_BIT_CTRL_OUT1[98] = GND;
assign TX_BIT_CTRL_OUT1[99] = GND;
assign TX_BIT_CTRL_OUT1[100] = GND;
assign TX_BIT_CTRL_OUT1[101] = GND;
assign TX_BIT_CTRL_OUT1[102] = GND;
assign TX_BIT_CTRL_OUT1[103] = GND;
assign TX_BIT_CTRL_OUT1[104] = GND;
assign TX_BIT_CTRL_OUT1[105] = GND;
assign TX_BIT_CTRL_OUT1[106] = GND;
assign TX_BIT_CTRL_OUT1[107] = GND;
assign TX_BIT_CTRL_OUT1[108] = GND;
assign TX_BIT_CTRL_OUT1[109] = GND;
assign TX_BIT_CTRL_OUT1[110] = GND;
assign TX_BIT_CTRL_OUT1[111] = GND;
assign TX_BIT_CTRL_OUT1[112] = GND;
assign TX_BIT_CTRL_OUT1[113] = GND;
assign TX_BIT_CTRL_OUT1[114] = GND;
assign TX_BIT_CTRL_OUT1[115] = GND;
assign TX_BIT_CTRL_OUT1[116] = GND;
assign TX_BIT_CTRL_OUT1[117] = GND;
assign TX_BIT_CTRL_OUT1[118] = GND;
assign TX_BIT_CTRL_OUT1[119] = GND;
assign TX_BIT_CTRL_OUT1[120] = GND;
assign TX_BIT_CTRL_OUT1[121] = GND;
assign TX_BIT_CTRL_OUT1[122] = GND;
assign TX_BIT_CTRL_OUT1[123] = GND;
assign TX_BIT_CTRL_OUT1[124] = GND;
assign TX_BIT_CTRL_OUT1[125] = GND;
assign TX_BIT_CTRL_OUT1[126] = GND;
assign TX_BIT_CTRL_OUT1[127] = GND;
assign TX_BIT_CTRL_OUT1[128] = GND;
assign TX_BIT_CTRL_OUT1[129] = GND;
assign TX_BIT_CTRL_OUT1[130] = GND;
assign TX_BIT_CTRL_OUT1[131] = GND;
assign TX_BIT_CTRL_OUT1[132] = GND;
assign TX_BIT_CTRL_OUT1[133] = GND;
assign TX_BIT_CTRL_OUT1[134] = GND;
assign TX_BIT_CTRL_OUT1[135] = GND;
assign TX_BIT_CTRL_OUT1[136] = GND;
assign TX_BIT_CTRL_OUT1[137] = GND;
assign TX_BIT_CTRL_OUT1[138] = GND;
assign TX_BIT_CTRL_OUT1[139] = GND;
assign TX_BIT_CTRL_OUT1[140] = GND;
assign TX_BIT_CTRL_OUT1[141] = GND;
assign TX_BIT_CTRL_OUT1[142] = GND;
assign TX_BIT_CTRL_OUT1[143] = GND;
assign TX_BIT_CTRL_OUT1[144] = GND;
assign TX_BIT_CTRL_OUT1[145] = GND;
assign TX_BIT_CTRL_OUT1[146] = GND;
assign TX_BIT_CTRL_OUT1[147] = GND;
assign TX_BIT_CTRL_OUT1[148] = GND;
assign TX_BIT_CTRL_OUT1[149] = GND;
assign TX_BIT_CTRL_OUT1[150] = GND;
assign TX_BIT_CTRL_OUT1[151] = GND;
assign TX_BIT_CTRL_OUT1[152] = GND;
assign TX_BIT_CTRL_OUT1[153] = GND;
assign TX_BIT_CTRL_OUT1[154] = GND;
assign TX_BIT_CTRL_OUT1[155] = GND;
assign TX_BIT_CTRL_OUT1[156] = GND;
assign TX_BIT_CTRL_OUT1[157] = GND;
assign TX_BIT_CTRL_OUT1[158] = GND;
assign TX_BIT_CTRL_OUT1[159] = GND;
assign TX_BIT_CTRL_OUT1[160] = GND;
assign TX_BIT_CTRL_OUT1[161] = GND;
assign TX_BIT_CTRL_OUT1[162] = GND;
assign TX_BIT_CTRL_OUT1[163] = GND;
assign TX_BIT_CTRL_OUT1[164] = GND;
assign TX_BIT_CTRL_OUT1[165] = GND;
assign TX_BIT_CTRL_OUT1[166] = GND;
assign TX_BIT_CTRL_OUT1[167] = GND;
assign TX_BIT_CTRL_OUT1[168] = GND;
assign TX_BIT_CTRL_OUT1[169] = GND;
assign TX_BIT_CTRL_OUT1[170] = GND;
assign TX_BIT_CTRL_OUT1[171] = GND;
assign TX_BIT_CTRL_OUT1[172] = GND;
assign TX_BIT_CTRL_OUT1[173] = GND;
assign TX_BIT_CTRL_OUT1[174] = GND;
assign TX_BIT_CTRL_OUT1[175] = GND;
assign TX_BIT_CTRL_OUT1[176] = GND;
assign TX_BIT_CTRL_OUT1[177] = GND;
assign TX_BIT_CTRL_OUT1[178] = GND;
assign TX_BIT_CTRL_OUT1[179] = GND;
assign TX_BIT_CTRL_OUT1[180] = GND;
assign TX_BIT_CTRL_OUT1[181] = GND;
assign TX_BIT_CTRL_OUT1[182] = GND;
assign TX_BIT_CTRL_OUT1[183] = GND;
assign TX_BIT_CTRL_OUT1[184] = GND;
assign TX_BIT_CTRL_OUT1[185] = GND;
assign TX_BIT_CTRL_OUT1[186] = GND;
assign TX_BIT_CTRL_OUT1[187] = GND;
assign TX_BIT_CTRL_OUT1[188] = GND;
assign TX_BIT_CTRL_OUT1[189] = GND;
assign TX_BIT_CTRL_OUT1[190] = GND;
assign TX_BIT_CTRL_OUT1[191] = GND;
assign TX_BIT_CTRL_OUT1[192] = GND;
assign TX_BIT_CTRL_OUT1[193] = GND;
assign TX_BIT_CTRL_OUT1[194] = GND;
assign TX_BIT_CTRL_OUT1[195] = GND;
assign TX_BIT_CTRL_OUT1[196] = GND;
assign TX_BIT_CTRL_OUT1[197] = GND;
assign TX_BIT_CTRL_OUT1[198] = GND;
assign TX_BIT_CTRL_OUT1[199] = GND;
assign TX_BIT_CTRL_OUT1[200] = GND;
assign TX_BIT_CTRL_OUT1[201] = GND;
assign TX_BIT_CTRL_OUT1[202] = GND;
assign TX_BIT_CTRL_OUT1[203] = GND;
assign TX_BIT_CTRL_OUT1[204] = GND;
assign TX_BIT_CTRL_OUT1[205] = GND;
assign TX_BIT_CTRL_OUT1[206] = GND;
assign TX_BIT_CTRL_OUT1[207] = GND;
assign TX_BIT_CTRL_OUT1[208] = GND;
assign TX_BIT_CTRL_OUT1[209] = GND;
assign TX_BIT_CTRL_OUT1[210] = GND;
assign TX_BIT_CTRL_OUT1[211] = GND;
assign TX_BIT_CTRL_OUT1[212] = GND;
assign TX_BIT_CTRL_OUT1[213] = GND;
assign TX_BIT_CTRL_OUT1[214] = GND;
assign TX_BIT_CTRL_OUT1[215] = GND;
assign TX_BIT_CTRL_OUT1[216] = GND;
assign TX_BIT_CTRL_OUT1[217] = GND;
assign TX_BIT_CTRL_OUT1[218] = GND;
assign TX_BIT_CTRL_OUT1[219] = GND;
assign TX_BIT_CTRL_OUT1[220] = GND;
assign TX_BIT_CTRL_OUT1[221] = GND;
assign TX_BIT_CTRL_OUT1[222] = GND;
assign TX_BIT_CTRL_OUT1[223] = GND;
assign TX_BIT_CTRL_OUT1[224] = GND;
assign TX_BIT_CTRL_OUT1[225] = GND;
assign TX_BIT_CTRL_OUT1[226] = GND;
assign TX_BIT_CTRL_OUT1[227] = GND;
assign TX_BIT_CTRL_OUT1[228] = GND;
assign TX_BIT_CTRL_OUT1[229] = GND;
assign TX_BIT_CTRL_OUT1[230] = GND;
assign TX_BIT_CTRL_OUT1[231] = GND;
assign TX_BIT_CTRL_OUT1[232] = GND;
assign TX_BIT_CTRL_OUT1[233] = GND;
assign TX_BIT_CTRL_OUT1[234] = GND;
assign TX_BIT_CTRL_OUT1[235] = GND;
assign TX_BIT_CTRL_OUT1[236] = GND;
assign TX_BIT_CTRL_OUT1[237] = GND;
assign TX_BIT_CTRL_OUT1[238] = GND;
assign TX_BIT_CTRL_OUT1[239] = GND;
assign TX_BIT_CTRL_OUT1[240] = GND;
assign TX_BIT_CTRL_OUT1[241] = GND;
assign TX_BIT_CTRL_OUT1[242] = GND;
assign TX_BIT_CTRL_OUT1[243] = GND;
assign TX_BIT_CTRL_OUT1[244] = GND;
assign TX_BIT_CTRL_OUT1[245] = GND;
assign TX_BIT_CTRL_OUT1[246] = GND;
assign TX_BIT_CTRL_OUT1[247] = GND;
assign TX_BIT_CTRL_OUT1[248] = GND;
assign TX_BIT_CTRL_OUT1[249] = GND;
assign TX_BIT_CTRL_OUT1[250] = GND;
assign TX_BIT_CTRL_OUT1[251] = GND;
assign TX_BIT_CTRL_OUT1[252] = GND;
assign TX_BIT_CTRL_OUT1[253] = GND;
assign TX_BIT_CTRL_OUT1[254] = GND;
assign TX_BIT_CTRL_OUT1[255] = GND;
assign TX_BIT_CTRL_OUT1[256] = GND;
assign TX_BIT_CTRL_OUT1[257] = GND;
assign TX_BIT_CTRL_OUT1[258] = GND;
assign TX_BIT_CTRL_OUT1[259] = GND;
assign TX_BIT_CTRL_OUT1[260] = GND;
assign TX_BIT_CTRL_OUT1[261] = GND;
assign TX_BIT_CTRL_OUT1[262] = GND;
assign TX_BIT_CTRL_OUT1[263] = GND;
assign TX_BIT_CTRL_OUT1[264] = GND;
assign TX_BIT_CTRL_OUT1[265] = GND;
assign TX_BIT_CTRL_OUT1[266] = GND;
assign TX_BIT_CTRL_OUT1[267] = GND;
assign TX_BIT_CTRL_OUT1[268] = GND;
assign TX_BIT_CTRL_OUT1[269] = GND;
assign TX_BIT_CTRL_OUT1[270] = GND;
assign TX_BIT_CTRL_OUT1[271] = GND;
assign TX_BIT_CTRL_OUT1[272] = GND;
assign TX_BIT_CTRL_OUT1[273] = GND;
assign TX_BIT_CTRL_OUT1[274] = GND;
assign TX_BIT_CTRL_OUT1[275] = GND;
assign TX_BIT_CTRL_OUT1[276] = GND;
assign TX_BIT_CTRL_OUT1[277] = GND;
assign TX_BIT_CTRL_OUT1[278] = GND;
assign TX_BIT_CTRL_OUT1[279] = GND;
assign TX_BIT_CTRL_OUT1[280] = GND;
assign TX_BIT_CTRL_OUT1[281] = GND;
assign TX_BIT_CTRL_OUT1[282] = GND;
assign TX_BIT_CTRL_OUT1[283] = GND;
assign TX_BIT_CTRL_OUT1[284] = GND;
assign TX_BIT_CTRL_OUT1[285] = GND;
assign TX_BIT_CTRL_OUT1[286] = GND;
assign TX_BIT_CTRL_OUT1[287] = GND;
assign TX_BIT_CTRL_OUT1[288] = GND;
assign TX_BIT_CTRL_OUT1[289] = GND;
assign TX_BIT_CTRL_OUT1[290] = GND;
assign TX_BIT_CTRL_OUT1[291] = GND;
assign TX_BIT_CTRL_OUT1[292] = GND;
assign TX_BIT_CTRL_OUT1[293] = GND;
assign TX_BIT_CTRL_OUT1[294] = GND;
assign TX_BIT_CTRL_OUT1[295] = GND;
assign TX_BIT_CTRL_OUT1[296] = GND;
assign TX_BIT_CTRL_OUT1[297] = GND;
assign TX_BIT_CTRL_OUT1[298] = GND;
assign TX_BIT_CTRL_OUT1[299] = GND;
assign TX_BIT_CTRL_OUT1[300] = GND;
assign TX_BIT_CTRL_OUT1[301] = GND;
assign TX_BIT_CTRL_OUT1[302] = GND;
assign TX_BIT_CTRL_OUT1[303] = GND;
assign TX_BIT_CTRL_OUT1[304] = GND;
assign TX_BIT_CTRL_OUT1[305] = GND;
assign TX_BIT_CTRL_OUT1[306] = GND;
assign TX_BIT_CTRL_OUT1[307] = GND;
assign TX_BIT_CTRL_OUT1[308] = GND;
assign TX_BIT_CTRL_OUT1[309] = GND;
assign TX_BIT_CTRL_OUT1[310] = GND;
assign TX_BIT_CTRL_OUT1[311] = GND;
assign TX_BIT_CTRL_OUT1[312] = GND;
assign TX_BIT_CTRL_OUT1[313] = GND;
assign TX_BIT_CTRL_OUT1[314] = GND;
assign TX_BIT_CTRL_OUT1[315] = GND;
assign TX_BIT_CTRL_OUT1[316] = GND;
assign TX_BIT_CTRL_OUT1[317] = GND;
assign TX_BIT_CTRL_OUT1[318] = GND;
assign TX_BIT_CTRL_OUT1[319] = GND;
assign TX_BIT_CTRL_OUT2[0] = GND;
assign TX_BIT_CTRL_OUT2[1] = GND;
assign TX_BIT_CTRL_OUT2[2] = GND;
assign TX_BIT_CTRL_OUT2[3] = GND;
assign TX_BIT_CTRL_OUT2[4] = GND;
assign TX_BIT_CTRL_OUT2[5] = GND;
assign TX_BIT_CTRL_OUT2[6] = GND;
assign TX_BIT_CTRL_OUT2[7] = GND;
assign TX_BIT_CTRL_OUT2[8] = GND;
assign TX_BIT_CTRL_OUT2[9] = GND;
assign TX_BIT_CTRL_OUT2[10] = GND;
assign TX_BIT_CTRL_OUT2[11] = GND;
assign TX_BIT_CTRL_OUT2[12] = GND;
assign TX_BIT_CTRL_OUT2[13] = GND;
assign TX_BIT_CTRL_OUT2[14] = GND;
assign TX_BIT_CTRL_OUT2[15] = GND;
assign TX_BIT_CTRL_OUT2[16] = GND;
assign TX_BIT_CTRL_OUT2[17] = GND;
assign TX_BIT_CTRL_OUT2[18] = GND;
assign TX_BIT_CTRL_OUT2[19] = GND;
assign TX_BIT_CTRL_OUT2[20] = GND;
assign TX_BIT_CTRL_OUT2[21] = GND;
assign TX_BIT_CTRL_OUT2[22] = GND;
assign TX_BIT_CTRL_OUT2[23] = GND;
assign TX_BIT_CTRL_OUT2[24] = GND;
assign TX_BIT_CTRL_OUT2[25] = GND;
assign TX_BIT_CTRL_OUT2[26] = GND;
assign TX_BIT_CTRL_OUT2[27] = GND;
assign TX_BIT_CTRL_OUT2[28] = GND;
assign TX_BIT_CTRL_OUT2[29] = GND;
assign TX_BIT_CTRL_OUT2[30] = GND;
assign TX_BIT_CTRL_OUT2[31] = GND;
assign TX_BIT_CTRL_OUT2[32] = GND;
assign TX_BIT_CTRL_OUT2[33] = GND;
assign TX_BIT_CTRL_OUT2[34] = GND;
assign TX_BIT_CTRL_OUT2[35] = GND;
assign TX_BIT_CTRL_OUT2[36] = GND;
assign TX_BIT_CTRL_OUT2[37] = GND;
assign TX_BIT_CTRL_OUT2[38] = GND;
assign TX_BIT_CTRL_OUT2[39] = GND;
assign TX_BIT_CTRL_OUT2[40] = GND;
assign TX_BIT_CTRL_OUT2[41] = GND;
assign TX_BIT_CTRL_OUT2[42] = GND;
assign TX_BIT_CTRL_OUT2[43] = GND;
assign TX_BIT_CTRL_OUT2[44] = GND;
assign TX_BIT_CTRL_OUT2[45] = GND;
assign TX_BIT_CTRL_OUT2[46] = GND;
assign TX_BIT_CTRL_OUT2[47] = GND;
assign TX_BIT_CTRL_OUT2[48] = GND;
assign TX_BIT_CTRL_OUT2[49] = GND;
assign TX_BIT_CTRL_OUT2[50] = GND;
assign TX_BIT_CTRL_OUT2[51] = GND;
assign TX_BIT_CTRL_OUT2[52] = GND;
assign TX_BIT_CTRL_OUT2[53] = GND;
assign TX_BIT_CTRL_OUT2[54] = GND;
assign TX_BIT_CTRL_OUT2[55] = GND;
assign TX_BIT_CTRL_OUT2[56] = GND;
assign TX_BIT_CTRL_OUT2[57] = GND;
assign TX_BIT_CTRL_OUT2[58] = GND;
assign TX_BIT_CTRL_OUT2[59] = GND;
assign TX_BIT_CTRL_OUT2[60] = GND;
assign TX_BIT_CTRL_OUT2[61] = GND;
assign TX_BIT_CTRL_OUT2[62] = GND;
assign TX_BIT_CTRL_OUT2[63] = GND;
assign TX_BIT_CTRL_OUT2[64] = GND;
assign TX_BIT_CTRL_OUT2[65] = GND;
assign TX_BIT_CTRL_OUT2[66] = GND;
assign TX_BIT_CTRL_OUT2[67] = GND;
assign TX_BIT_CTRL_OUT2[68] = GND;
assign TX_BIT_CTRL_OUT2[69] = GND;
assign TX_BIT_CTRL_OUT2[70] = GND;
assign TX_BIT_CTRL_OUT2[71] = GND;
assign TX_BIT_CTRL_OUT2[72] = GND;
assign TX_BIT_CTRL_OUT2[73] = GND;
assign TX_BIT_CTRL_OUT2[74] = GND;
assign TX_BIT_CTRL_OUT2[75] = GND;
assign TX_BIT_CTRL_OUT2[76] = GND;
assign TX_BIT_CTRL_OUT2[77] = GND;
assign TX_BIT_CTRL_OUT2[78] = GND;
assign TX_BIT_CTRL_OUT2[79] = GND;
assign TX_BIT_CTRL_OUT2[80] = GND;
assign TX_BIT_CTRL_OUT2[81] = GND;
assign TX_BIT_CTRL_OUT2[82] = GND;
assign TX_BIT_CTRL_OUT2[83] = GND;
assign TX_BIT_CTRL_OUT2[84] = GND;
assign TX_BIT_CTRL_OUT2[85] = GND;
assign TX_BIT_CTRL_OUT2[86] = GND;
assign TX_BIT_CTRL_OUT2[87] = GND;
assign TX_BIT_CTRL_OUT2[88] = GND;
assign TX_BIT_CTRL_OUT2[89] = GND;
assign TX_BIT_CTRL_OUT2[90] = GND;
assign TX_BIT_CTRL_OUT2[91] = GND;
assign TX_BIT_CTRL_OUT2[92] = GND;
assign TX_BIT_CTRL_OUT2[93] = GND;
assign TX_BIT_CTRL_OUT2[94] = GND;
assign TX_BIT_CTRL_OUT2[95] = GND;
assign TX_BIT_CTRL_OUT2[96] = GND;
assign TX_BIT_CTRL_OUT2[97] = GND;
assign TX_BIT_CTRL_OUT2[98] = GND;
assign TX_BIT_CTRL_OUT2[99] = GND;
assign TX_BIT_CTRL_OUT2[100] = GND;
assign TX_BIT_CTRL_OUT2[101] = GND;
assign TX_BIT_CTRL_OUT2[102] = GND;
assign TX_BIT_CTRL_OUT2[103] = GND;
assign TX_BIT_CTRL_OUT2[104] = GND;
assign TX_BIT_CTRL_OUT2[105] = GND;
assign TX_BIT_CTRL_OUT2[106] = GND;
assign TX_BIT_CTRL_OUT2[107] = GND;
assign TX_BIT_CTRL_OUT2[108] = GND;
assign TX_BIT_CTRL_OUT2[109] = GND;
assign TX_BIT_CTRL_OUT2[110] = GND;
assign TX_BIT_CTRL_OUT2[111] = GND;
assign TX_BIT_CTRL_OUT2[112] = GND;
assign TX_BIT_CTRL_OUT2[113] = GND;
assign TX_BIT_CTRL_OUT2[114] = GND;
assign TX_BIT_CTRL_OUT2[115] = GND;
assign TX_BIT_CTRL_OUT2[116] = GND;
assign TX_BIT_CTRL_OUT2[117] = GND;
assign TX_BIT_CTRL_OUT2[118] = GND;
assign TX_BIT_CTRL_OUT2[119] = GND;
assign TX_BIT_CTRL_OUT2[120] = GND;
assign TX_BIT_CTRL_OUT2[121] = GND;
assign TX_BIT_CTRL_OUT2[122] = GND;
assign TX_BIT_CTRL_OUT2[123] = GND;
assign TX_BIT_CTRL_OUT2[124] = GND;
assign TX_BIT_CTRL_OUT2[125] = GND;
assign TX_BIT_CTRL_OUT2[126] = GND;
assign TX_BIT_CTRL_OUT2[127] = GND;
assign TX_BIT_CTRL_OUT2[128] = GND;
assign TX_BIT_CTRL_OUT2[129] = GND;
assign TX_BIT_CTRL_OUT2[130] = GND;
assign TX_BIT_CTRL_OUT2[131] = GND;
assign TX_BIT_CTRL_OUT2[132] = GND;
assign TX_BIT_CTRL_OUT2[133] = GND;
assign TX_BIT_CTRL_OUT2[134] = GND;
assign TX_BIT_CTRL_OUT2[135] = GND;
assign TX_BIT_CTRL_OUT2[136] = GND;
assign TX_BIT_CTRL_OUT2[137] = GND;
assign TX_BIT_CTRL_OUT2[138] = GND;
assign TX_BIT_CTRL_OUT2[139] = GND;
assign TX_BIT_CTRL_OUT2[140] = GND;
assign TX_BIT_CTRL_OUT2[141] = GND;
assign TX_BIT_CTRL_OUT2[142] = GND;
assign TX_BIT_CTRL_OUT2[143] = GND;
assign TX_BIT_CTRL_OUT2[144] = GND;
assign TX_BIT_CTRL_OUT2[145] = GND;
assign TX_BIT_CTRL_OUT2[146] = GND;
assign TX_BIT_CTRL_OUT2[147] = GND;
assign TX_BIT_CTRL_OUT2[148] = GND;
assign TX_BIT_CTRL_OUT2[149] = GND;
assign TX_BIT_CTRL_OUT2[150] = GND;
assign TX_BIT_CTRL_OUT2[151] = GND;
assign TX_BIT_CTRL_OUT2[152] = GND;
assign TX_BIT_CTRL_OUT2[153] = GND;
assign TX_BIT_CTRL_OUT2[154] = GND;
assign TX_BIT_CTRL_OUT2[155] = GND;
assign TX_BIT_CTRL_OUT2[156] = GND;
assign TX_BIT_CTRL_OUT2[157] = GND;
assign TX_BIT_CTRL_OUT2[158] = GND;
assign TX_BIT_CTRL_OUT2[159] = GND;
assign TX_BIT_CTRL_OUT2[160] = GND;
assign TX_BIT_CTRL_OUT2[161] = GND;
assign TX_BIT_CTRL_OUT2[162] = GND;
assign TX_BIT_CTRL_OUT2[163] = GND;
assign TX_BIT_CTRL_OUT2[164] = GND;
assign TX_BIT_CTRL_OUT2[165] = GND;
assign TX_BIT_CTRL_OUT2[166] = GND;
assign TX_BIT_CTRL_OUT2[167] = GND;
assign TX_BIT_CTRL_OUT2[168] = GND;
assign TX_BIT_CTRL_OUT2[169] = GND;
assign TX_BIT_CTRL_OUT2[170] = GND;
assign TX_BIT_CTRL_OUT2[171] = GND;
assign TX_BIT_CTRL_OUT2[172] = GND;
assign TX_BIT_CTRL_OUT2[173] = GND;
assign TX_BIT_CTRL_OUT2[174] = GND;
assign TX_BIT_CTRL_OUT2[175] = GND;
assign TX_BIT_CTRL_OUT2[176] = GND;
assign TX_BIT_CTRL_OUT2[177] = GND;
assign TX_BIT_CTRL_OUT2[178] = GND;
assign TX_BIT_CTRL_OUT2[179] = GND;
assign TX_BIT_CTRL_OUT2[180] = GND;
assign TX_BIT_CTRL_OUT2[181] = GND;
assign TX_BIT_CTRL_OUT2[182] = GND;
assign TX_BIT_CTRL_OUT2[183] = GND;
assign TX_BIT_CTRL_OUT2[184] = GND;
assign TX_BIT_CTRL_OUT2[185] = GND;
assign TX_BIT_CTRL_OUT2[186] = GND;
assign TX_BIT_CTRL_OUT2[187] = GND;
assign TX_BIT_CTRL_OUT2[188] = GND;
assign TX_BIT_CTRL_OUT2[189] = GND;
assign TX_BIT_CTRL_OUT2[190] = GND;
assign TX_BIT_CTRL_OUT2[191] = GND;
assign TX_BIT_CTRL_OUT2[192] = GND;
assign TX_BIT_CTRL_OUT2[193] = GND;
assign TX_BIT_CTRL_OUT2[194] = GND;
assign TX_BIT_CTRL_OUT2[195] = GND;
assign TX_BIT_CTRL_OUT2[196] = GND;
assign TX_BIT_CTRL_OUT2[197] = GND;
assign TX_BIT_CTRL_OUT2[198] = GND;
assign TX_BIT_CTRL_OUT2[199] = GND;
assign TX_BIT_CTRL_OUT2[200] = GND;
assign TX_BIT_CTRL_OUT2[201] = GND;
assign TX_BIT_CTRL_OUT2[202] = GND;
assign TX_BIT_CTRL_OUT2[203] = GND;
assign TX_BIT_CTRL_OUT2[204] = GND;
assign TX_BIT_CTRL_OUT2[205] = GND;
assign TX_BIT_CTRL_OUT2[206] = GND;
assign TX_BIT_CTRL_OUT2[207] = GND;
assign TX_BIT_CTRL_OUT2[208] = GND;
assign TX_BIT_CTRL_OUT2[209] = GND;
assign TX_BIT_CTRL_OUT2[210] = GND;
assign TX_BIT_CTRL_OUT2[211] = GND;
assign TX_BIT_CTRL_OUT2[212] = GND;
assign TX_BIT_CTRL_OUT2[213] = GND;
assign TX_BIT_CTRL_OUT2[214] = GND;
assign TX_BIT_CTRL_OUT2[215] = GND;
assign TX_BIT_CTRL_OUT2[216] = GND;
assign TX_BIT_CTRL_OUT2[217] = GND;
assign TX_BIT_CTRL_OUT2[218] = GND;
assign TX_BIT_CTRL_OUT2[219] = GND;
assign TX_BIT_CTRL_OUT2[220] = GND;
assign TX_BIT_CTRL_OUT2[221] = GND;
assign TX_BIT_CTRL_OUT2[222] = GND;
assign TX_BIT_CTRL_OUT2[223] = GND;
assign TX_BIT_CTRL_OUT2[224] = GND;
assign TX_BIT_CTRL_OUT2[225] = GND;
assign TX_BIT_CTRL_OUT2[226] = GND;
assign TX_BIT_CTRL_OUT2[227] = GND;
assign TX_BIT_CTRL_OUT2[228] = GND;
assign TX_BIT_CTRL_OUT2[229] = GND;
assign TX_BIT_CTRL_OUT2[230] = GND;
assign TX_BIT_CTRL_OUT2[231] = GND;
assign TX_BIT_CTRL_OUT2[232] = GND;
assign TX_BIT_CTRL_OUT2[233] = GND;
assign TX_BIT_CTRL_OUT2[234] = GND;
assign TX_BIT_CTRL_OUT2[235] = GND;
assign TX_BIT_CTRL_OUT2[236] = GND;
assign TX_BIT_CTRL_OUT2[237] = GND;
assign TX_BIT_CTRL_OUT2[238] = GND;
assign TX_BIT_CTRL_OUT2[239] = GND;
assign TX_BIT_CTRL_OUT2[240] = GND;
assign TX_BIT_CTRL_OUT2[241] = GND;
assign TX_BIT_CTRL_OUT2[242] = GND;
assign TX_BIT_CTRL_OUT2[243] = GND;
assign TX_BIT_CTRL_OUT2[244] = GND;
assign TX_BIT_CTRL_OUT2[245] = GND;
assign TX_BIT_CTRL_OUT2[246] = GND;
assign TX_BIT_CTRL_OUT2[247] = GND;
assign TX_BIT_CTRL_OUT2[248] = GND;
assign TX_BIT_CTRL_OUT2[249] = GND;
assign TX_BIT_CTRL_OUT2[250] = GND;
assign TX_BIT_CTRL_OUT2[251] = GND;
assign TX_BIT_CTRL_OUT2[252] = GND;
assign TX_BIT_CTRL_OUT2[253] = GND;
assign TX_BIT_CTRL_OUT2[254] = GND;
assign TX_BIT_CTRL_OUT2[255] = GND;
assign TX_BIT_CTRL_OUT2[256] = GND;
assign TX_BIT_CTRL_OUT2[257] = GND;
assign TX_BIT_CTRL_OUT2[258] = GND;
assign TX_BIT_CTRL_OUT2[259] = GND;
assign TX_BIT_CTRL_OUT2[260] = GND;
assign TX_BIT_CTRL_OUT2[261] = GND;
assign TX_BIT_CTRL_OUT2[262] = GND;
assign TX_BIT_CTRL_OUT2[263] = GND;
assign TX_BIT_CTRL_OUT2[264] = GND;
assign TX_BIT_CTRL_OUT2[265] = GND;
assign TX_BIT_CTRL_OUT2[266] = GND;
assign TX_BIT_CTRL_OUT2[267] = GND;
assign TX_BIT_CTRL_OUT2[268] = GND;
assign TX_BIT_CTRL_OUT2[269] = GND;
assign TX_BIT_CTRL_OUT2[270] = GND;
assign TX_BIT_CTRL_OUT2[271] = GND;
assign TX_BIT_CTRL_OUT2[272] = GND;
assign TX_BIT_CTRL_OUT2[273] = GND;
assign TX_BIT_CTRL_OUT2[274] = GND;
assign TX_BIT_CTRL_OUT2[275] = GND;
assign TX_BIT_CTRL_OUT2[276] = GND;
assign TX_BIT_CTRL_OUT2[277] = GND;
assign TX_BIT_CTRL_OUT2[278] = GND;
assign TX_BIT_CTRL_OUT2[279] = GND;
assign TX_BIT_CTRL_OUT2[280] = GND;
assign TX_BIT_CTRL_OUT2[281] = GND;
assign TX_BIT_CTRL_OUT2[282] = GND;
assign TX_BIT_CTRL_OUT2[283] = GND;
assign TX_BIT_CTRL_OUT2[284] = GND;
assign TX_BIT_CTRL_OUT2[285] = GND;
assign TX_BIT_CTRL_OUT2[286] = GND;
assign TX_BIT_CTRL_OUT2[287] = GND;
assign TX_BIT_CTRL_OUT2[288] = GND;
assign TX_BIT_CTRL_OUT2[289] = GND;
assign TX_BIT_CTRL_OUT2[290] = GND;
assign TX_BIT_CTRL_OUT2[291] = GND;
assign TX_BIT_CTRL_OUT2[292] = GND;
assign TX_BIT_CTRL_OUT2[293] = GND;
assign TX_BIT_CTRL_OUT2[294] = GND;
assign TX_BIT_CTRL_OUT2[295] = GND;
assign TX_BIT_CTRL_OUT2[296] = GND;
assign TX_BIT_CTRL_OUT2[297] = GND;
assign TX_BIT_CTRL_OUT2[298] = GND;
assign TX_BIT_CTRL_OUT2[299] = GND;
assign TX_BIT_CTRL_OUT2[300] = GND;
assign TX_BIT_CTRL_OUT2[301] = GND;
assign TX_BIT_CTRL_OUT2[302] = GND;
assign TX_BIT_CTRL_OUT2[303] = GND;
assign TX_BIT_CTRL_OUT2[304] = GND;
assign TX_BIT_CTRL_OUT2[305] = GND;
assign TX_BIT_CTRL_OUT2[306] = GND;
assign TX_BIT_CTRL_OUT2[307] = GND;
assign TX_BIT_CTRL_OUT2[308] = GND;
assign TX_BIT_CTRL_OUT2[309] = GND;
assign TX_BIT_CTRL_OUT2[310] = GND;
assign TX_BIT_CTRL_OUT2[311] = GND;
assign TX_BIT_CTRL_OUT2[312] = GND;
assign TX_BIT_CTRL_OUT2[313] = GND;
assign TX_BIT_CTRL_OUT2[314] = GND;
assign TX_BIT_CTRL_OUT2[315] = GND;
assign TX_BIT_CTRL_OUT2[316] = GND;
assign TX_BIT_CTRL_OUT2[317] = GND;
assign TX_BIT_CTRL_OUT2[318] = GND;
assign TX_BIT_CTRL_OUT2[319] = GND;
assign TX_BIT_CTRL_OUT3[0] = GND;
assign TX_BIT_CTRL_OUT3[1] = GND;
assign TX_BIT_CTRL_OUT3[2] = GND;
assign TX_BIT_CTRL_OUT3[3] = GND;
assign TX_BIT_CTRL_OUT3[4] = GND;
assign TX_BIT_CTRL_OUT3[5] = GND;
assign TX_BIT_CTRL_OUT3[6] = GND;
assign TX_BIT_CTRL_OUT3[7] = GND;
assign TX_BIT_CTRL_OUT3[8] = GND;
assign TX_BIT_CTRL_OUT3[9] = GND;
assign TX_BIT_CTRL_OUT3[10] = GND;
assign TX_BIT_CTRL_OUT3[11] = GND;
assign TX_BIT_CTRL_OUT3[12] = GND;
assign TX_BIT_CTRL_OUT3[13] = GND;
assign TX_BIT_CTRL_OUT3[14] = GND;
assign TX_BIT_CTRL_OUT3[15] = GND;
assign TX_BIT_CTRL_OUT3[16] = GND;
assign TX_BIT_CTRL_OUT3[17] = GND;
assign TX_BIT_CTRL_OUT3[18] = GND;
assign TX_BIT_CTRL_OUT3[19] = GND;
assign TX_BIT_CTRL_OUT3[20] = GND;
assign TX_BIT_CTRL_OUT3[21] = GND;
assign TX_BIT_CTRL_OUT3[22] = GND;
assign TX_BIT_CTRL_OUT3[23] = GND;
assign TX_BIT_CTRL_OUT3[24] = GND;
assign TX_BIT_CTRL_OUT3[25] = GND;
assign TX_BIT_CTRL_OUT3[26] = GND;
assign TX_BIT_CTRL_OUT3[27] = GND;
assign TX_BIT_CTRL_OUT3[28] = GND;
assign TX_BIT_CTRL_OUT3[29] = GND;
assign TX_BIT_CTRL_OUT3[30] = GND;
assign TX_BIT_CTRL_OUT3[31] = GND;
assign TX_BIT_CTRL_OUT3[32] = GND;
assign TX_BIT_CTRL_OUT3[33] = GND;
assign TX_BIT_CTRL_OUT3[34] = GND;
assign TX_BIT_CTRL_OUT3[35] = GND;
assign TX_BIT_CTRL_OUT3[36] = GND;
assign TX_BIT_CTRL_OUT3[37] = GND;
assign TX_BIT_CTRL_OUT3[38] = GND;
assign TX_BIT_CTRL_OUT3[39] = GND;
assign TX_BIT_CTRL_OUT3[40] = GND;
assign TX_BIT_CTRL_OUT3[41] = GND;
assign TX_BIT_CTRL_OUT3[42] = GND;
assign TX_BIT_CTRL_OUT3[43] = GND;
assign TX_BIT_CTRL_OUT3[44] = GND;
assign TX_BIT_CTRL_OUT3[45] = GND;
assign TX_BIT_CTRL_OUT3[46] = GND;
assign TX_BIT_CTRL_OUT3[47] = GND;
assign TX_BIT_CTRL_OUT3[48] = GND;
assign TX_BIT_CTRL_OUT3[49] = GND;
assign TX_BIT_CTRL_OUT3[50] = GND;
assign TX_BIT_CTRL_OUT3[51] = GND;
assign TX_BIT_CTRL_OUT3[52] = GND;
assign TX_BIT_CTRL_OUT3[53] = GND;
assign TX_BIT_CTRL_OUT3[54] = GND;
assign TX_BIT_CTRL_OUT3[55] = GND;
assign TX_BIT_CTRL_OUT3[56] = GND;
assign TX_BIT_CTRL_OUT3[57] = GND;
assign TX_BIT_CTRL_OUT3[58] = GND;
assign TX_BIT_CTRL_OUT3[59] = GND;
assign TX_BIT_CTRL_OUT3[60] = GND;
assign TX_BIT_CTRL_OUT3[61] = GND;
assign TX_BIT_CTRL_OUT3[62] = GND;
assign TX_BIT_CTRL_OUT3[63] = GND;
assign TX_BIT_CTRL_OUT3[64] = GND;
assign TX_BIT_CTRL_OUT3[65] = GND;
assign TX_BIT_CTRL_OUT3[66] = GND;
assign TX_BIT_CTRL_OUT3[67] = GND;
assign TX_BIT_CTRL_OUT3[68] = GND;
assign TX_BIT_CTRL_OUT3[69] = GND;
assign TX_BIT_CTRL_OUT3[70] = GND;
assign TX_BIT_CTRL_OUT3[71] = GND;
assign TX_BIT_CTRL_OUT3[72] = GND;
assign TX_BIT_CTRL_OUT3[73] = GND;
assign TX_BIT_CTRL_OUT3[74] = GND;
assign TX_BIT_CTRL_OUT3[75] = GND;
assign TX_BIT_CTRL_OUT3[76] = GND;
assign TX_BIT_CTRL_OUT3[77] = GND;
assign TX_BIT_CTRL_OUT3[78] = GND;
assign TX_BIT_CTRL_OUT3[79] = GND;
assign TX_BIT_CTRL_OUT3[80] = GND;
assign TX_BIT_CTRL_OUT3[81] = GND;
assign TX_BIT_CTRL_OUT3[82] = GND;
assign TX_BIT_CTRL_OUT3[83] = GND;
assign TX_BIT_CTRL_OUT3[84] = GND;
assign TX_BIT_CTRL_OUT3[85] = GND;
assign TX_BIT_CTRL_OUT3[86] = GND;
assign TX_BIT_CTRL_OUT3[87] = GND;
assign TX_BIT_CTRL_OUT3[88] = GND;
assign TX_BIT_CTRL_OUT3[89] = GND;
assign TX_BIT_CTRL_OUT3[90] = GND;
assign TX_BIT_CTRL_OUT3[91] = GND;
assign TX_BIT_CTRL_OUT3[92] = GND;
assign TX_BIT_CTRL_OUT3[93] = GND;
assign TX_BIT_CTRL_OUT3[94] = GND;
assign TX_BIT_CTRL_OUT3[95] = GND;
assign TX_BIT_CTRL_OUT3[96] = GND;
assign TX_BIT_CTRL_OUT3[97] = GND;
assign TX_BIT_CTRL_OUT3[98] = GND;
assign TX_BIT_CTRL_OUT3[99] = GND;
assign TX_BIT_CTRL_OUT3[100] = GND;
assign TX_BIT_CTRL_OUT3[101] = GND;
assign TX_BIT_CTRL_OUT3[102] = GND;
assign TX_BIT_CTRL_OUT3[103] = GND;
assign TX_BIT_CTRL_OUT3[104] = GND;
assign TX_BIT_CTRL_OUT3[105] = GND;
assign TX_BIT_CTRL_OUT3[106] = GND;
assign TX_BIT_CTRL_OUT3[107] = GND;
assign TX_BIT_CTRL_OUT3[108] = GND;
assign TX_BIT_CTRL_OUT3[109] = GND;
assign TX_BIT_CTRL_OUT3[110] = GND;
assign TX_BIT_CTRL_OUT3[111] = GND;
assign TX_BIT_CTRL_OUT3[112] = GND;
assign TX_BIT_CTRL_OUT3[113] = GND;
assign TX_BIT_CTRL_OUT3[114] = GND;
assign TX_BIT_CTRL_OUT3[115] = GND;
assign TX_BIT_CTRL_OUT3[116] = GND;
assign TX_BIT_CTRL_OUT3[117] = GND;
assign TX_BIT_CTRL_OUT3[118] = GND;
assign TX_BIT_CTRL_OUT3[119] = GND;
assign TX_BIT_CTRL_OUT3[120] = GND;
assign TX_BIT_CTRL_OUT3[121] = GND;
assign TX_BIT_CTRL_OUT3[122] = GND;
assign TX_BIT_CTRL_OUT3[123] = GND;
assign TX_BIT_CTRL_OUT3[124] = GND;
assign TX_BIT_CTRL_OUT3[125] = GND;
assign TX_BIT_CTRL_OUT3[126] = GND;
assign TX_BIT_CTRL_OUT3[127] = GND;
assign TX_BIT_CTRL_OUT3[128] = GND;
assign TX_BIT_CTRL_OUT3[129] = GND;
assign TX_BIT_CTRL_OUT3[130] = GND;
assign TX_BIT_CTRL_OUT3[131] = GND;
assign TX_BIT_CTRL_OUT3[132] = GND;
assign TX_BIT_CTRL_OUT3[133] = GND;
assign TX_BIT_CTRL_OUT3[134] = GND;
assign TX_BIT_CTRL_OUT3[135] = GND;
assign TX_BIT_CTRL_OUT3[136] = GND;
assign TX_BIT_CTRL_OUT3[137] = GND;
assign TX_BIT_CTRL_OUT3[138] = GND;
assign TX_BIT_CTRL_OUT3[139] = GND;
assign TX_BIT_CTRL_OUT3[140] = GND;
assign TX_BIT_CTRL_OUT3[141] = GND;
assign TX_BIT_CTRL_OUT3[142] = GND;
assign TX_BIT_CTRL_OUT3[143] = GND;
assign TX_BIT_CTRL_OUT3[144] = GND;
assign TX_BIT_CTRL_OUT3[145] = GND;
assign TX_BIT_CTRL_OUT3[146] = GND;
assign TX_BIT_CTRL_OUT3[147] = GND;
assign TX_BIT_CTRL_OUT3[148] = GND;
assign TX_BIT_CTRL_OUT3[149] = GND;
assign TX_BIT_CTRL_OUT3[150] = GND;
assign TX_BIT_CTRL_OUT3[151] = GND;
assign TX_BIT_CTRL_OUT3[152] = GND;
assign TX_BIT_CTRL_OUT3[153] = GND;
assign TX_BIT_CTRL_OUT3[154] = GND;
assign TX_BIT_CTRL_OUT3[155] = GND;
assign TX_BIT_CTRL_OUT3[156] = GND;
assign TX_BIT_CTRL_OUT3[157] = GND;
assign TX_BIT_CTRL_OUT3[158] = GND;
assign TX_BIT_CTRL_OUT3[159] = GND;
assign TX_BIT_CTRL_OUT3[160] = GND;
assign TX_BIT_CTRL_OUT3[161] = GND;
assign TX_BIT_CTRL_OUT3[162] = GND;
assign TX_BIT_CTRL_OUT3[163] = GND;
assign TX_BIT_CTRL_OUT3[164] = GND;
assign TX_BIT_CTRL_OUT3[165] = GND;
assign TX_BIT_CTRL_OUT3[166] = GND;
assign TX_BIT_CTRL_OUT3[167] = GND;
assign TX_BIT_CTRL_OUT3[168] = GND;
assign TX_BIT_CTRL_OUT3[169] = GND;
assign TX_BIT_CTRL_OUT3[170] = GND;
assign TX_BIT_CTRL_OUT3[171] = GND;
assign TX_BIT_CTRL_OUT3[172] = GND;
assign TX_BIT_CTRL_OUT3[173] = GND;
assign TX_BIT_CTRL_OUT3[174] = GND;
assign TX_BIT_CTRL_OUT3[175] = GND;
assign TX_BIT_CTRL_OUT3[176] = GND;
assign TX_BIT_CTRL_OUT3[177] = GND;
assign TX_BIT_CTRL_OUT3[178] = GND;
assign TX_BIT_CTRL_OUT3[179] = GND;
assign TX_BIT_CTRL_OUT3[180] = GND;
assign TX_BIT_CTRL_OUT3[181] = GND;
assign TX_BIT_CTRL_OUT3[182] = GND;
assign TX_BIT_CTRL_OUT3[183] = GND;
assign TX_BIT_CTRL_OUT3[184] = GND;
assign TX_BIT_CTRL_OUT3[185] = GND;
assign TX_BIT_CTRL_OUT3[186] = GND;
assign TX_BIT_CTRL_OUT3[187] = GND;
assign TX_BIT_CTRL_OUT3[188] = GND;
assign TX_BIT_CTRL_OUT3[189] = GND;
assign TX_BIT_CTRL_OUT3[190] = GND;
assign TX_BIT_CTRL_OUT3[191] = GND;
assign TX_BIT_CTRL_OUT3[192] = GND;
assign TX_BIT_CTRL_OUT3[193] = GND;
assign TX_BIT_CTRL_OUT3[194] = GND;
assign TX_BIT_CTRL_OUT3[195] = GND;
assign TX_BIT_CTRL_OUT3[196] = GND;
assign TX_BIT_CTRL_OUT3[197] = GND;
assign TX_BIT_CTRL_OUT3[198] = GND;
assign TX_BIT_CTRL_OUT3[199] = GND;
assign TX_BIT_CTRL_OUT3[200] = GND;
assign TX_BIT_CTRL_OUT3[201] = GND;
assign TX_BIT_CTRL_OUT3[202] = GND;
assign TX_BIT_CTRL_OUT3[203] = GND;
assign TX_BIT_CTRL_OUT3[204] = GND;
assign TX_BIT_CTRL_OUT3[205] = GND;
assign TX_BIT_CTRL_OUT3[206] = GND;
assign TX_BIT_CTRL_OUT3[207] = GND;
assign TX_BIT_CTRL_OUT3[208] = GND;
assign TX_BIT_CTRL_OUT3[209] = GND;
assign TX_BIT_CTRL_OUT3[210] = GND;
assign TX_BIT_CTRL_OUT3[211] = GND;
assign TX_BIT_CTRL_OUT3[212] = GND;
assign TX_BIT_CTRL_OUT3[213] = GND;
assign TX_BIT_CTRL_OUT3[214] = GND;
assign TX_BIT_CTRL_OUT3[215] = GND;
assign TX_BIT_CTRL_OUT3[216] = GND;
assign TX_BIT_CTRL_OUT3[217] = GND;
assign TX_BIT_CTRL_OUT3[218] = GND;
assign TX_BIT_CTRL_OUT3[219] = GND;
assign TX_BIT_CTRL_OUT3[220] = GND;
assign TX_BIT_CTRL_OUT3[221] = GND;
assign TX_BIT_CTRL_OUT3[222] = GND;
assign TX_BIT_CTRL_OUT3[223] = GND;
assign TX_BIT_CTRL_OUT3[224] = GND;
assign TX_BIT_CTRL_OUT3[225] = GND;
assign TX_BIT_CTRL_OUT3[226] = GND;
assign TX_BIT_CTRL_OUT3[227] = GND;
assign TX_BIT_CTRL_OUT3[228] = GND;
assign TX_BIT_CTRL_OUT3[229] = GND;
assign TX_BIT_CTRL_OUT3[230] = GND;
assign TX_BIT_CTRL_OUT3[231] = GND;
assign TX_BIT_CTRL_OUT3[232] = GND;
assign TX_BIT_CTRL_OUT3[233] = GND;
assign TX_BIT_CTRL_OUT3[234] = GND;
assign TX_BIT_CTRL_OUT3[235] = GND;
assign TX_BIT_CTRL_OUT3[236] = GND;
assign TX_BIT_CTRL_OUT3[237] = GND;
assign TX_BIT_CTRL_OUT3[238] = GND;
assign TX_BIT_CTRL_OUT3[239] = GND;
assign TX_BIT_CTRL_OUT3[240] = GND;
assign TX_BIT_CTRL_OUT3[241] = GND;
assign TX_BIT_CTRL_OUT3[242] = GND;
assign TX_BIT_CTRL_OUT3[243] = GND;
assign TX_BIT_CTRL_OUT3[244] = GND;
assign TX_BIT_CTRL_OUT3[245] = GND;
assign TX_BIT_CTRL_OUT3[246] = GND;
assign TX_BIT_CTRL_OUT3[247] = GND;
assign TX_BIT_CTRL_OUT3[248] = GND;
assign TX_BIT_CTRL_OUT3[249] = GND;
assign TX_BIT_CTRL_OUT3[250] = GND;
assign TX_BIT_CTRL_OUT3[251] = GND;
assign TX_BIT_CTRL_OUT3[252] = GND;
assign TX_BIT_CTRL_OUT3[253] = GND;
assign TX_BIT_CTRL_OUT3[254] = GND;
assign TX_BIT_CTRL_OUT3[255] = GND;
assign TX_BIT_CTRL_OUT3[256] = GND;
assign TX_BIT_CTRL_OUT3[257] = GND;
assign TX_BIT_CTRL_OUT3[258] = GND;
assign TX_BIT_CTRL_OUT3[259] = GND;
assign TX_BIT_CTRL_OUT3[260] = GND;
assign TX_BIT_CTRL_OUT3[261] = GND;
assign TX_BIT_CTRL_OUT3[262] = GND;
assign TX_BIT_CTRL_OUT3[263] = GND;
assign TX_BIT_CTRL_OUT3[264] = GND;
assign TX_BIT_CTRL_OUT3[265] = GND;
assign TX_BIT_CTRL_OUT3[266] = GND;
assign TX_BIT_CTRL_OUT3[267] = GND;
assign TX_BIT_CTRL_OUT3[268] = GND;
assign TX_BIT_CTRL_OUT3[269] = GND;
assign TX_BIT_CTRL_OUT3[270] = GND;
assign TX_BIT_CTRL_OUT3[271] = GND;
assign TX_BIT_CTRL_OUT3[272] = GND;
assign TX_BIT_CTRL_OUT3[273] = GND;
assign TX_BIT_CTRL_OUT3[274] = GND;
assign TX_BIT_CTRL_OUT3[275] = GND;
assign TX_BIT_CTRL_OUT3[276] = GND;
assign TX_BIT_CTRL_OUT3[277] = GND;
assign TX_BIT_CTRL_OUT3[278] = GND;
assign TX_BIT_CTRL_OUT3[279] = GND;
assign TX_BIT_CTRL_OUT3[280] = GND;
assign TX_BIT_CTRL_OUT3[281] = GND;
assign TX_BIT_CTRL_OUT3[282] = GND;
assign TX_BIT_CTRL_OUT3[283] = GND;
assign TX_BIT_CTRL_OUT3[284] = GND;
assign TX_BIT_CTRL_OUT3[285] = GND;
assign TX_BIT_CTRL_OUT3[286] = GND;
assign TX_BIT_CTRL_OUT3[287] = GND;
assign TX_BIT_CTRL_OUT3[288] = GND;
assign TX_BIT_CTRL_OUT3[289] = GND;
assign TX_BIT_CTRL_OUT3[290] = GND;
assign TX_BIT_CTRL_OUT3[291] = GND;
assign TX_BIT_CTRL_OUT3[292] = GND;
assign TX_BIT_CTRL_OUT3[293] = GND;
assign TX_BIT_CTRL_OUT3[294] = GND;
assign TX_BIT_CTRL_OUT3[295] = GND;
assign TX_BIT_CTRL_OUT3[296] = GND;
assign TX_BIT_CTRL_OUT3[297] = GND;
assign TX_BIT_CTRL_OUT3[298] = GND;
assign TX_BIT_CTRL_OUT3[299] = GND;
assign TX_BIT_CTRL_OUT3[300] = GND;
assign TX_BIT_CTRL_OUT3[301] = GND;
assign TX_BIT_CTRL_OUT3[302] = GND;
assign TX_BIT_CTRL_OUT3[303] = GND;
assign TX_BIT_CTRL_OUT3[304] = GND;
assign TX_BIT_CTRL_OUT3[305] = GND;
assign TX_BIT_CTRL_OUT3[306] = GND;
assign TX_BIT_CTRL_OUT3[307] = GND;
assign TX_BIT_CTRL_OUT3[308] = GND;
assign TX_BIT_CTRL_OUT3[309] = GND;
assign TX_BIT_CTRL_OUT3[310] = GND;
assign TX_BIT_CTRL_OUT3[311] = GND;
assign TX_BIT_CTRL_OUT3[312] = GND;
assign TX_BIT_CTRL_OUT3[313] = GND;
assign TX_BIT_CTRL_OUT3[314] = GND;
assign TX_BIT_CTRL_OUT3[315] = GND;
assign TX_BIT_CTRL_OUT3[316] = GND;
assign TX_BIT_CTRL_OUT3[317] = GND;
assign TX_BIT_CTRL_OUT3[318] = GND;
assign TX_BIT_CTRL_OUT3[319] = GND;
assign TX_BIT_CTRL_OUT4[0] = GND;
assign TX_BIT_CTRL_OUT4[1] = GND;
assign TX_BIT_CTRL_OUT4[2] = GND;
assign TX_BIT_CTRL_OUT4[3] = GND;
assign TX_BIT_CTRL_OUT4[4] = GND;
assign TX_BIT_CTRL_OUT4[5] = GND;
assign TX_BIT_CTRL_OUT4[6] = GND;
assign TX_BIT_CTRL_OUT4[7] = GND;
assign TX_BIT_CTRL_OUT4[8] = GND;
assign TX_BIT_CTRL_OUT4[9] = GND;
assign TX_BIT_CTRL_OUT4[10] = GND;
assign TX_BIT_CTRL_OUT4[11] = GND;
assign TX_BIT_CTRL_OUT4[12] = GND;
assign TX_BIT_CTRL_OUT4[13] = GND;
assign TX_BIT_CTRL_OUT4[14] = GND;
assign TX_BIT_CTRL_OUT4[15] = GND;
assign TX_BIT_CTRL_OUT4[16] = GND;
assign TX_BIT_CTRL_OUT4[17] = GND;
assign TX_BIT_CTRL_OUT4[18] = GND;
assign TX_BIT_CTRL_OUT4[19] = GND;
assign TX_BIT_CTRL_OUT4[20] = GND;
assign TX_BIT_CTRL_OUT4[21] = GND;
assign TX_BIT_CTRL_OUT4[22] = GND;
assign TX_BIT_CTRL_OUT4[23] = GND;
assign TX_BIT_CTRL_OUT4[24] = GND;
assign TX_BIT_CTRL_OUT4[25] = GND;
assign TX_BIT_CTRL_OUT4[26] = GND;
assign TX_BIT_CTRL_OUT4[27] = GND;
assign TX_BIT_CTRL_OUT4[28] = GND;
assign TX_BIT_CTRL_OUT4[29] = GND;
assign TX_BIT_CTRL_OUT4[30] = GND;
assign TX_BIT_CTRL_OUT4[31] = GND;
assign TX_BIT_CTRL_OUT4[32] = GND;
assign TX_BIT_CTRL_OUT4[33] = GND;
assign TX_BIT_CTRL_OUT4[34] = GND;
assign TX_BIT_CTRL_OUT4[35] = GND;
assign TX_BIT_CTRL_OUT4[36] = GND;
assign TX_BIT_CTRL_OUT4[37] = GND;
assign TX_BIT_CTRL_OUT4[38] = GND;
assign TX_BIT_CTRL_OUT4[39] = GND;
assign TX_BIT_CTRL_OUT4[40] = GND;
assign TX_BIT_CTRL_OUT4[41] = GND;
assign TX_BIT_CTRL_OUT4[42] = GND;
assign TX_BIT_CTRL_OUT4[43] = GND;
assign TX_BIT_CTRL_OUT4[44] = GND;
assign TX_BIT_CTRL_OUT4[45] = GND;
assign TX_BIT_CTRL_OUT4[46] = GND;
assign TX_BIT_CTRL_OUT4[47] = GND;
assign TX_BIT_CTRL_OUT4[48] = GND;
assign TX_BIT_CTRL_OUT4[49] = GND;
assign TX_BIT_CTRL_OUT4[50] = GND;
assign TX_BIT_CTRL_OUT4[51] = GND;
assign TX_BIT_CTRL_OUT4[52] = GND;
assign TX_BIT_CTRL_OUT4[53] = GND;
assign TX_BIT_CTRL_OUT4[54] = GND;
assign TX_BIT_CTRL_OUT4[55] = GND;
assign TX_BIT_CTRL_OUT4[56] = GND;
assign TX_BIT_CTRL_OUT4[57] = GND;
assign TX_BIT_CTRL_OUT4[58] = GND;
assign TX_BIT_CTRL_OUT4[59] = GND;
assign TX_BIT_CTRL_OUT4[60] = GND;
assign TX_BIT_CTRL_OUT4[61] = GND;
assign TX_BIT_CTRL_OUT4[62] = GND;
assign TX_BIT_CTRL_OUT4[63] = GND;
assign TX_BIT_CTRL_OUT4[64] = GND;
assign TX_BIT_CTRL_OUT4[65] = GND;
assign TX_BIT_CTRL_OUT4[66] = GND;
assign TX_BIT_CTRL_OUT4[67] = GND;
assign TX_BIT_CTRL_OUT4[68] = GND;
assign TX_BIT_CTRL_OUT4[69] = GND;
assign TX_BIT_CTRL_OUT4[70] = GND;
assign TX_BIT_CTRL_OUT4[71] = GND;
assign TX_BIT_CTRL_OUT4[72] = GND;
assign TX_BIT_CTRL_OUT4[73] = GND;
assign TX_BIT_CTRL_OUT4[74] = GND;
assign TX_BIT_CTRL_OUT4[75] = GND;
assign TX_BIT_CTRL_OUT4[76] = GND;
assign TX_BIT_CTRL_OUT4[77] = GND;
assign TX_BIT_CTRL_OUT4[78] = GND;
assign TX_BIT_CTRL_OUT4[79] = GND;
assign TX_BIT_CTRL_OUT4[80] = GND;
assign TX_BIT_CTRL_OUT4[81] = GND;
assign TX_BIT_CTRL_OUT4[82] = GND;
assign TX_BIT_CTRL_OUT4[83] = GND;
assign TX_BIT_CTRL_OUT4[84] = GND;
assign TX_BIT_CTRL_OUT4[85] = GND;
assign TX_BIT_CTRL_OUT4[86] = GND;
assign TX_BIT_CTRL_OUT4[87] = GND;
assign TX_BIT_CTRL_OUT4[88] = GND;
assign TX_BIT_CTRL_OUT4[89] = GND;
assign TX_BIT_CTRL_OUT4[90] = GND;
assign TX_BIT_CTRL_OUT4[91] = GND;
assign TX_BIT_CTRL_OUT4[92] = GND;
assign TX_BIT_CTRL_OUT4[93] = GND;
assign TX_BIT_CTRL_OUT4[94] = GND;
assign TX_BIT_CTRL_OUT4[95] = GND;
assign TX_BIT_CTRL_OUT4[96] = GND;
assign TX_BIT_CTRL_OUT4[97] = GND;
assign TX_BIT_CTRL_OUT4[98] = GND;
assign TX_BIT_CTRL_OUT4[99] = GND;
assign TX_BIT_CTRL_OUT4[100] = GND;
assign TX_BIT_CTRL_OUT4[101] = GND;
assign TX_BIT_CTRL_OUT4[102] = GND;
assign TX_BIT_CTRL_OUT4[103] = GND;
assign TX_BIT_CTRL_OUT4[104] = GND;
assign TX_BIT_CTRL_OUT4[105] = GND;
assign TX_BIT_CTRL_OUT4[106] = GND;
assign TX_BIT_CTRL_OUT4[107] = GND;
assign TX_BIT_CTRL_OUT4[108] = GND;
assign TX_BIT_CTRL_OUT4[109] = GND;
assign TX_BIT_CTRL_OUT4[110] = GND;
assign TX_BIT_CTRL_OUT4[111] = GND;
assign TX_BIT_CTRL_OUT4[112] = GND;
assign TX_BIT_CTRL_OUT4[113] = GND;
assign TX_BIT_CTRL_OUT4[114] = GND;
assign TX_BIT_CTRL_OUT4[115] = GND;
assign TX_BIT_CTRL_OUT4[116] = GND;
assign TX_BIT_CTRL_OUT4[117] = GND;
assign TX_BIT_CTRL_OUT4[118] = GND;
assign TX_BIT_CTRL_OUT4[119] = GND;
assign TX_BIT_CTRL_OUT4[120] = GND;
assign TX_BIT_CTRL_OUT4[121] = GND;
assign TX_BIT_CTRL_OUT4[122] = GND;
assign TX_BIT_CTRL_OUT4[123] = GND;
assign TX_BIT_CTRL_OUT4[124] = GND;
assign TX_BIT_CTRL_OUT4[125] = GND;
assign TX_BIT_CTRL_OUT4[126] = GND;
assign TX_BIT_CTRL_OUT4[127] = GND;
assign TX_BIT_CTRL_OUT4[128] = GND;
assign TX_BIT_CTRL_OUT4[129] = GND;
assign TX_BIT_CTRL_OUT4[130] = GND;
assign TX_BIT_CTRL_OUT4[131] = GND;
assign TX_BIT_CTRL_OUT4[132] = GND;
assign TX_BIT_CTRL_OUT4[133] = GND;
assign TX_BIT_CTRL_OUT4[134] = GND;
assign TX_BIT_CTRL_OUT4[135] = GND;
assign TX_BIT_CTRL_OUT4[136] = GND;
assign TX_BIT_CTRL_OUT4[137] = GND;
assign TX_BIT_CTRL_OUT4[138] = GND;
assign TX_BIT_CTRL_OUT4[139] = GND;
assign TX_BIT_CTRL_OUT4[140] = GND;
assign TX_BIT_CTRL_OUT4[141] = GND;
assign TX_BIT_CTRL_OUT4[142] = GND;
assign TX_BIT_CTRL_OUT4[143] = GND;
assign TX_BIT_CTRL_OUT4[144] = GND;
assign TX_BIT_CTRL_OUT4[145] = GND;
assign TX_BIT_CTRL_OUT4[146] = GND;
assign TX_BIT_CTRL_OUT4[147] = GND;
assign TX_BIT_CTRL_OUT4[148] = GND;
assign TX_BIT_CTRL_OUT4[149] = GND;
assign TX_BIT_CTRL_OUT4[150] = GND;
assign TX_BIT_CTRL_OUT4[151] = GND;
assign TX_BIT_CTRL_OUT4[152] = GND;
assign TX_BIT_CTRL_OUT4[153] = GND;
assign TX_BIT_CTRL_OUT4[154] = GND;
assign TX_BIT_CTRL_OUT4[155] = GND;
assign TX_BIT_CTRL_OUT4[156] = GND;
assign TX_BIT_CTRL_OUT4[157] = GND;
assign TX_BIT_CTRL_OUT4[158] = GND;
assign TX_BIT_CTRL_OUT4[159] = GND;
assign TX_BIT_CTRL_OUT4[160] = GND;
assign TX_BIT_CTRL_OUT4[161] = GND;
assign TX_BIT_CTRL_OUT4[162] = GND;
assign TX_BIT_CTRL_OUT4[163] = GND;
assign TX_BIT_CTRL_OUT4[164] = GND;
assign TX_BIT_CTRL_OUT4[165] = GND;
assign TX_BIT_CTRL_OUT4[166] = GND;
assign TX_BIT_CTRL_OUT4[167] = GND;
assign TX_BIT_CTRL_OUT4[168] = GND;
assign TX_BIT_CTRL_OUT4[169] = GND;
assign TX_BIT_CTRL_OUT4[170] = GND;
assign TX_BIT_CTRL_OUT4[171] = GND;
assign TX_BIT_CTRL_OUT4[172] = GND;
assign TX_BIT_CTRL_OUT4[173] = GND;
assign TX_BIT_CTRL_OUT4[174] = GND;
assign TX_BIT_CTRL_OUT4[175] = GND;
assign TX_BIT_CTRL_OUT4[176] = GND;
assign TX_BIT_CTRL_OUT4[177] = GND;
assign TX_BIT_CTRL_OUT4[178] = GND;
assign TX_BIT_CTRL_OUT4[179] = GND;
assign TX_BIT_CTRL_OUT4[180] = GND;
assign TX_BIT_CTRL_OUT4[181] = GND;
assign TX_BIT_CTRL_OUT4[182] = GND;
assign TX_BIT_CTRL_OUT4[183] = GND;
assign TX_BIT_CTRL_OUT4[184] = GND;
assign TX_BIT_CTRL_OUT4[185] = GND;
assign TX_BIT_CTRL_OUT4[186] = GND;
assign TX_BIT_CTRL_OUT4[187] = GND;
assign TX_BIT_CTRL_OUT4[188] = GND;
assign TX_BIT_CTRL_OUT4[189] = GND;
assign TX_BIT_CTRL_OUT4[190] = GND;
assign TX_BIT_CTRL_OUT4[191] = GND;
assign TX_BIT_CTRL_OUT4[192] = GND;
assign TX_BIT_CTRL_OUT4[193] = GND;
assign TX_BIT_CTRL_OUT4[194] = GND;
assign TX_BIT_CTRL_OUT4[195] = GND;
assign TX_BIT_CTRL_OUT4[196] = GND;
assign TX_BIT_CTRL_OUT4[197] = GND;
assign TX_BIT_CTRL_OUT4[198] = GND;
assign TX_BIT_CTRL_OUT4[199] = GND;
assign TX_BIT_CTRL_OUT4[240] = GND;
assign TX_BIT_CTRL_OUT4[241] = GND;
assign TX_BIT_CTRL_OUT4[242] = GND;
assign TX_BIT_CTRL_OUT4[243] = GND;
assign TX_BIT_CTRL_OUT4[244] = GND;
assign TX_BIT_CTRL_OUT4[245] = GND;
assign TX_BIT_CTRL_OUT4[246] = GND;
assign TX_BIT_CTRL_OUT4[247] = GND;
assign TX_BIT_CTRL_OUT4[248] = GND;
assign TX_BIT_CTRL_OUT4[249] = GND;
assign TX_BIT_CTRL_OUT4[250] = GND;
assign TX_BIT_CTRL_OUT4[251] = GND;
assign TX_BIT_CTRL_OUT4[252] = GND;
assign TX_BIT_CTRL_OUT4[253] = GND;
assign TX_BIT_CTRL_OUT4[254] = GND;
assign TX_BIT_CTRL_OUT4[255] = GND;
assign TX_BIT_CTRL_OUT4[256] = GND;
assign TX_BIT_CTRL_OUT4[257] = GND;
assign TX_BIT_CTRL_OUT4[258] = GND;
assign TX_BIT_CTRL_OUT4[259] = GND;
assign TX_BIT_CTRL_OUT4[260] = GND;
assign TX_BIT_CTRL_OUT4[261] = GND;
assign TX_BIT_CTRL_OUT4[262] = GND;
assign TX_BIT_CTRL_OUT4[263] = GND;
assign TX_BIT_CTRL_OUT4[264] = GND;
assign TX_BIT_CTRL_OUT4[265] = GND;
assign TX_BIT_CTRL_OUT4[266] = GND;
assign TX_BIT_CTRL_OUT4[267] = GND;
assign TX_BIT_CTRL_OUT4[268] = GND;
assign TX_BIT_CTRL_OUT4[269] = GND;
assign TX_BIT_CTRL_OUT4[270] = GND;
assign TX_BIT_CTRL_OUT4[271] = GND;
assign TX_BIT_CTRL_OUT4[272] = GND;
assign TX_BIT_CTRL_OUT4[273] = GND;
assign TX_BIT_CTRL_OUT4[274] = GND;
assign TX_BIT_CTRL_OUT4[275] = GND;
assign TX_BIT_CTRL_OUT4[276] = GND;
assign TX_BIT_CTRL_OUT4[277] = GND;
assign TX_BIT_CTRL_OUT4[278] = GND;
assign TX_BIT_CTRL_OUT4[279] = GND;
assign TX_BIT_CTRL_OUT4[280] = GND;
assign TX_BIT_CTRL_OUT4[281] = GND;
assign TX_BIT_CTRL_OUT4[282] = GND;
assign TX_BIT_CTRL_OUT4[283] = GND;
assign TX_BIT_CTRL_OUT4[284] = GND;
assign TX_BIT_CTRL_OUT4[285] = GND;
assign TX_BIT_CTRL_OUT4[286] = GND;
assign TX_BIT_CTRL_OUT4[287] = GND;
assign TX_BIT_CTRL_OUT4[288] = GND;
assign TX_BIT_CTRL_OUT4[289] = GND;
assign TX_BIT_CTRL_OUT4[290] = GND;
assign TX_BIT_CTRL_OUT4[291] = GND;
assign TX_BIT_CTRL_OUT4[292] = GND;
assign TX_BIT_CTRL_OUT4[293] = GND;
assign TX_BIT_CTRL_OUT4[294] = GND;
assign TX_BIT_CTRL_OUT4[295] = GND;
assign TX_BIT_CTRL_OUT4[296] = GND;
assign TX_BIT_CTRL_OUT4[297] = GND;
assign TX_BIT_CTRL_OUT4[298] = GND;
assign TX_BIT_CTRL_OUT4[299] = GND;
assign TX_BIT_CTRL_OUT4[300] = GND;
assign TX_BIT_CTRL_OUT4[301] = GND;
assign TX_BIT_CTRL_OUT4[302] = GND;
assign TX_BIT_CTRL_OUT4[303] = GND;
assign TX_BIT_CTRL_OUT4[304] = GND;
assign TX_BIT_CTRL_OUT4[305] = GND;
assign TX_BIT_CTRL_OUT4[306] = GND;
assign TX_BIT_CTRL_OUT4[307] = GND;
assign TX_BIT_CTRL_OUT4[308] = GND;
assign TX_BIT_CTRL_OUT4[309] = GND;
assign TX_BIT_CTRL_OUT4[310] = GND;
assign TX_BIT_CTRL_OUT4[311] = GND;
assign TX_BIT_CTRL_OUT4[312] = GND;
assign TX_BIT_CTRL_OUT4[313] = GND;
assign TX_BIT_CTRL_OUT4[314] = GND;
assign TX_BIT_CTRL_OUT4[315] = GND;
assign TX_BIT_CTRL_OUT4[316] = GND;
assign TX_BIT_CTRL_OUT4[317] = GND;
assign TX_BIT_CTRL_OUT4[318] = GND;
assign TX_BIT_CTRL_OUT4[319] = GND;
assign TX_BIT_CTRL_OUT5[0] = GND;
assign TX_BIT_CTRL_OUT5[1] = GND;
assign TX_BIT_CTRL_OUT5[2] = GND;
assign TX_BIT_CTRL_OUT5[3] = GND;
assign TX_BIT_CTRL_OUT5[4] = GND;
assign TX_BIT_CTRL_OUT5[5] = GND;
assign TX_BIT_CTRL_OUT5[6] = GND;
assign TX_BIT_CTRL_OUT5[7] = GND;
assign TX_BIT_CTRL_OUT5[8] = GND;
assign TX_BIT_CTRL_OUT5[9] = GND;
assign TX_BIT_CTRL_OUT5[10] = GND;
assign TX_BIT_CTRL_OUT5[11] = GND;
assign TX_BIT_CTRL_OUT5[12] = GND;
assign TX_BIT_CTRL_OUT5[13] = GND;
assign TX_BIT_CTRL_OUT5[14] = GND;
assign TX_BIT_CTRL_OUT5[15] = GND;
assign TX_BIT_CTRL_OUT5[16] = GND;
assign TX_BIT_CTRL_OUT5[17] = GND;
assign TX_BIT_CTRL_OUT5[18] = GND;
assign TX_BIT_CTRL_OUT5[19] = GND;
assign TX_BIT_CTRL_OUT5[20] = GND;
assign TX_BIT_CTRL_OUT5[21] = GND;
assign TX_BIT_CTRL_OUT5[22] = GND;
assign TX_BIT_CTRL_OUT5[23] = GND;
assign TX_BIT_CTRL_OUT5[24] = GND;
assign TX_BIT_CTRL_OUT5[25] = GND;
assign TX_BIT_CTRL_OUT5[26] = GND;
assign TX_BIT_CTRL_OUT5[27] = GND;
assign TX_BIT_CTRL_OUT5[28] = GND;
assign TX_BIT_CTRL_OUT5[29] = GND;
assign TX_BIT_CTRL_OUT5[30] = GND;
assign TX_BIT_CTRL_OUT5[31] = GND;
assign TX_BIT_CTRL_OUT5[32] = GND;
assign TX_BIT_CTRL_OUT5[33] = GND;
assign TX_BIT_CTRL_OUT5[34] = GND;
assign TX_BIT_CTRL_OUT5[35] = GND;
assign TX_BIT_CTRL_OUT5[36] = GND;
assign TX_BIT_CTRL_OUT5[37] = GND;
assign TX_BIT_CTRL_OUT5[38] = GND;
assign TX_BIT_CTRL_OUT5[39] = GND;
assign TX_BIT_CTRL_OUT5[40] = GND;
assign TX_BIT_CTRL_OUT5[41] = GND;
assign TX_BIT_CTRL_OUT5[42] = GND;
assign TX_BIT_CTRL_OUT5[43] = GND;
assign TX_BIT_CTRL_OUT5[44] = GND;
assign TX_BIT_CTRL_OUT5[45] = GND;
assign TX_BIT_CTRL_OUT5[46] = GND;
assign TX_BIT_CTRL_OUT5[47] = GND;
assign TX_BIT_CTRL_OUT5[48] = GND;
assign TX_BIT_CTRL_OUT5[49] = GND;
assign TX_BIT_CTRL_OUT5[50] = GND;
assign TX_BIT_CTRL_OUT5[51] = GND;
assign TX_BIT_CTRL_OUT5[52] = GND;
assign TX_BIT_CTRL_OUT5[53] = GND;
assign TX_BIT_CTRL_OUT5[54] = GND;
assign TX_BIT_CTRL_OUT5[55] = GND;
assign TX_BIT_CTRL_OUT5[56] = GND;
assign TX_BIT_CTRL_OUT5[57] = GND;
assign TX_BIT_CTRL_OUT5[58] = GND;
assign TX_BIT_CTRL_OUT5[59] = GND;
assign TX_BIT_CTRL_OUT5[60] = GND;
assign TX_BIT_CTRL_OUT5[61] = GND;
assign TX_BIT_CTRL_OUT5[62] = GND;
assign TX_BIT_CTRL_OUT5[63] = GND;
assign TX_BIT_CTRL_OUT5[64] = GND;
assign TX_BIT_CTRL_OUT5[65] = GND;
assign TX_BIT_CTRL_OUT5[66] = GND;
assign TX_BIT_CTRL_OUT5[67] = GND;
assign TX_BIT_CTRL_OUT5[68] = GND;
assign TX_BIT_CTRL_OUT5[69] = GND;
assign TX_BIT_CTRL_OUT5[70] = GND;
assign TX_BIT_CTRL_OUT5[71] = GND;
assign TX_BIT_CTRL_OUT5[72] = GND;
assign TX_BIT_CTRL_OUT5[73] = GND;
assign TX_BIT_CTRL_OUT5[74] = GND;
assign TX_BIT_CTRL_OUT5[75] = GND;
assign TX_BIT_CTRL_OUT5[76] = GND;
assign TX_BIT_CTRL_OUT5[77] = GND;
assign TX_BIT_CTRL_OUT5[78] = GND;
assign TX_BIT_CTRL_OUT5[79] = GND;
assign TX_BIT_CTRL_OUT5[80] = GND;
assign TX_BIT_CTRL_OUT5[81] = GND;
assign TX_BIT_CTRL_OUT5[82] = GND;
assign TX_BIT_CTRL_OUT5[83] = GND;
assign TX_BIT_CTRL_OUT5[84] = GND;
assign TX_BIT_CTRL_OUT5[85] = GND;
assign TX_BIT_CTRL_OUT5[86] = GND;
assign TX_BIT_CTRL_OUT5[87] = GND;
assign TX_BIT_CTRL_OUT5[88] = GND;
assign TX_BIT_CTRL_OUT5[89] = GND;
assign TX_BIT_CTRL_OUT5[90] = GND;
assign TX_BIT_CTRL_OUT5[91] = GND;
assign TX_BIT_CTRL_OUT5[92] = GND;
assign TX_BIT_CTRL_OUT5[93] = GND;
assign TX_BIT_CTRL_OUT5[94] = GND;
assign TX_BIT_CTRL_OUT5[95] = GND;
assign TX_BIT_CTRL_OUT5[96] = GND;
assign TX_BIT_CTRL_OUT5[97] = GND;
assign TX_BIT_CTRL_OUT5[98] = GND;
assign TX_BIT_CTRL_OUT5[99] = GND;
assign TX_BIT_CTRL_OUT5[100] = GND;
assign TX_BIT_CTRL_OUT5[101] = GND;
assign TX_BIT_CTRL_OUT5[102] = GND;
assign TX_BIT_CTRL_OUT5[103] = GND;
assign TX_BIT_CTRL_OUT5[104] = GND;
assign TX_BIT_CTRL_OUT5[105] = GND;
assign TX_BIT_CTRL_OUT5[106] = GND;
assign TX_BIT_CTRL_OUT5[107] = GND;
assign TX_BIT_CTRL_OUT5[108] = GND;
assign TX_BIT_CTRL_OUT5[109] = GND;
assign TX_BIT_CTRL_OUT5[110] = GND;
assign TX_BIT_CTRL_OUT5[111] = GND;
assign TX_BIT_CTRL_OUT5[112] = GND;
assign TX_BIT_CTRL_OUT5[113] = GND;
assign TX_BIT_CTRL_OUT5[114] = GND;
assign TX_BIT_CTRL_OUT5[115] = GND;
assign TX_BIT_CTRL_OUT5[116] = GND;
assign TX_BIT_CTRL_OUT5[117] = GND;
assign TX_BIT_CTRL_OUT5[118] = GND;
assign TX_BIT_CTRL_OUT5[119] = GND;
assign TX_BIT_CTRL_OUT5[120] = GND;
assign TX_BIT_CTRL_OUT5[121] = GND;
assign TX_BIT_CTRL_OUT5[122] = GND;
assign TX_BIT_CTRL_OUT5[123] = GND;
assign TX_BIT_CTRL_OUT5[124] = GND;
assign TX_BIT_CTRL_OUT5[125] = GND;
assign TX_BIT_CTRL_OUT5[126] = GND;
assign TX_BIT_CTRL_OUT5[127] = GND;
assign TX_BIT_CTRL_OUT5[128] = GND;
assign TX_BIT_CTRL_OUT5[129] = GND;
assign TX_BIT_CTRL_OUT5[130] = GND;
assign TX_BIT_CTRL_OUT5[131] = GND;
assign TX_BIT_CTRL_OUT5[132] = GND;
assign TX_BIT_CTRL_OUT5[133] = GND;
assign TX_BIT_CTRL_OUT5[134] = GND;
assign TX_BIT_CTRL_OUT5[135] = GND;
assign TX_BIT_CTRL_OUT5[136] = GND;
assign TX_BIT_CTRL_OUT5[137] = GND;
assign TX_BIT_CTRL_OUT5[138] = GND;
assign TX_BIT_CTRL_OUT5[139] = GND;
assign TX_BIT_CTRL_OUT5[140] = GND;
assign TX_BIT_CTRL_OUT5[141] = GND;
assign TX_BIT_CTRL_OUT5[142] = GND;
assign TX_BIT_CTRL_OUT5[143] = GND;
assign TX_BIT_CTRL_OUT5[144] = GND;
assign TX_BIT_CTRL_OUT5[145] = GND;
assign TX_BIT_CTRL_OUT5[146] = GND;
assign TX_BIT_CTRL_OUT5[147] = GND;
assign TX_BIT_CTRL_OUT5[148] = GND;
assign TX_BIT_CTRL_OUT5[149] = GND;
assign TX_BIT_CTRL_OUT5[150] = GND;
assign TX_BIT_CTRL_OUT5[151] = GND;
assign TX_BIT_CTRL_OUT5[152] = GND;
assign TX_BIT_CTRL_OUT5[153] = GND;
assign TX_BIT_CTRL_OUT5[154] = GND;
assign TX_BIT_CTRL_OUT5[155] = GND;
assign TX_BIT_CTRL_OUT5[156] = GND;
assign TX_BIT_CTRL_OUT5[157] = GND;
assign TX_BIT_CTRL_OUT5[158] = GND;
assign TX_BIT_CTRL_OUT5[159] = GND;
assign TX_BIT_CTRL_OUT5[160] = GND;
assign TX_BIT_CTRL_OUT5[161] = GND;
assign TX_BIT_CTRL_OUT5[162] = GND;
assign TX_BIT_CTRL_OUT5[163] = GND;
assign TX_BIT_CTRL_OUT5[164] = GND;
assign TX_BIT_CTRL_OUT5[165] = GND;
assign TX_BIT_CTRL_OUT5[166] = GND;
assign TX_BIT_CTRL_OUT5[167] = GND;
assign TX_BIT_CTRL_OUT5[168] = GND;
assign TX_BIT_CTRL_OUT5[169] = GND;
assign TX_BIT_CTRL_OUT5[170] = GND;
assign TX_BIT_CTRL_OUT5[171] = GND;
assign TX_BIT_CTRL_OUT5[172] = GND;
assign TX_BIT_CTRL_OUT5[173] = GND;
assign TX_BIT_CTRL_OUT5[174] = GND;
assign TX_BIT_CTRL_OUT5[175] = GND;
assign TX_BIT_CTRL_OUT5[176] = GND;
assign TX_BIT_CTRL_OUT5[177] = GND;
assign TX_BIT_CTRL_OUT5[178] = GND;
assign TX_BIT_CTRL_OUT5[179] = GND;
assign TX_BIT_CTRL_OUT5[180] = GND;
assign TX_BIT_CTRL_OUT5[181] = GND;
assign TX_BIT_CTRL_OUT5[182] = GND;
assign TX_BIT_CTRL_OUT5[183] = GND;
assign TX_BIT_CTRL_OUT5[184] = GND;
assign TX_BIT_CTRL_OUT5[185] = GND;
assign TX_BIT_CTRL_OUT5[186] = GND;
assign TX_BIT_CTRL_OUT5[187] = GND;
assign TX_BIT_CTRL_OUT5[188] = GND;
assign TX_BIT_CTRL_OUT5[189] = GND;
assign TX_BIT_CTRL_OUT5[190] = GND;
assign TX_BIT_CTRL_OUT5[191] = GND;
assign TX_BIT_CTRL_OUT5[192] = GND;
assign TX_BIT_CTRL_OUT5[193] = GND;
assign TX_BIT_CTRL_OUT5[194] = GND;
assign TX_BIT_CTRL_OUT5[195] = GND;
assign TX_BIT_CTRL_OUT5[196] = GND;
assign TX_BIT_CTRL_OUT5[197] = GND;
assign TX_BIT_CTRL_OUT5[198] = GND;
assign TX_BIT_CTRL_OUT5[199] = GND;
assign TX_BIT_CTRL_OUT5[240] = GND;
assign TX_BIT_CTRL_OUT5[241] = GND;
assign TX_BIT_CTRL_OUT5[242] = GND;
assign TX_BIT_CTRL_OUT5[243] = GND;
assign TX_BIT_CTRL_OUT5[244] = GND;
assign TX_BIT_CTRL_OUT5[245] = GND;
assign TX_BIT_CTRL_OUT5[246] = GND;
assign TX_BIT_CTRL_OUT5[247] = GND;
assign TX_BIT_CTRL_OUT5[248] = GND;
assign TX_BIT_CTRL_OUT5[249] = GND;
assign TX_BIT_CTRL_OUT5[250] = GND;
assign TX_BIT_CTRL_OUT5[251] = GND;
assign TX_BIT_CTRL_OUT5[252] = GND;
assign TX_BIT_CTRL_OUT5[253] = GND;
assign TX_BIT_CTRL_OUT5[254] = GND;
assign TX_BIT_CTRL_OUT5[255] = GND;
assign TX_BIT_CTRL_OUT5[256] = GND;
assign TX_BIT_CTRL_OUT5[257] = GND;
assign TX_BIT_CTRL_OUT5[258] = GND;
assign TX_BIT_CTRL_OUT5[259] = GND;
assign TX_BIT_CTRL_OUT5[260] = GND;
assign TX_BIT_CTRL_OUT5[261] = GND;
assign TX_BIT_CTRL_OUT5[262] = GND;
assign TX_BIT_CTRL_OUT5[263] = GND;
assign TX_BIT_CTRL_OUT5[264] = GND;
assign TX_BIT_CTRL_OUT5[265] = GND;
assign TX_BIT_CTRL_OUT5[266] = GND;
assign TX_BIT_CTRL_OUT5[267] = GND;
assign TX_BIT_CTRL_OUT5[268] = GND;
assign TX_BIT_CTRL_OUT5[269] = GND;
assign TX_BIT_CTRL_OUT5[270] = GND;
assign TX_BIT_CTRL_OUT5[271] = GND;
assign TX_BIT_CTRL_OUT5[272] = GND;
assign TX_BIT_CTRL_OUT5[273] = GND;
assign TX_BIT_CTRL_OUT5[274] = GND;
assign TX_BIT_CTRL_OUT5[275] = GND;
assign TX_BIT_CTRL_OUT5[276] = GND;
assign TX_BIT_CTRL_OUT5[277] = GND;
assign TX_BIT_CTRL_OUT5[278] = GND;
assign TX_BIT_CTRL_OUT5[279] = GND;
assign TX_BIT_CTRL_OUT5[280] = GND;
assign TX_BIT_CTRL_OUT5[281] = GND;
assign TX_BIT_CTRL_OUT5[282] = GND;
assign TX_BIT_CTRL_OUT5[283] = GND;
assign TX_BIT_CTRL_OUT5[284] = GND;
assign TX_BIT_CTRL_OUT5[285] = GND;
assign TX_BIT_CTRL_OUT5[286] = GND;
assign TX_BIT_CTRL_OUT5[287] = GND;
assign TX_BIT_CTRL_OUT5[288] = GND;
assign TX_BIT_CTRL_OUT5[289] = GND;
assign TX_BIT_CTRL_OUT5[290] = GND;
assign TX_BIT_CTRL_OUT5[291] = GND;
assign TX_BIT_CTRL_OUT5[292] = GND;
assign TX_BIT_CTRL_OUT5[293] = GND;
assign TX_BIT_CTRL_OUT5[294] = GND;
assign TX_BIT_CTRL_OUT5[295] = GND;
assign TX_BIT_CTRL_OUT5[296] = GND;
assign TX_BIT_CTRL_OUT5[297] = GND;
assign TX_BIT_CTRL_OUT5[298] = GND;
assign TX_BIT_CTRL_OUT5[299] = GND;
assign TX_BIT_CTRL_OUT5[300] = GND;
assign TX_BIT_CTRL_OUT5[301] = GND;
assign TX_BIT_CTRL_OUT5[302] = GND;
assign TX_BIT_CTRL_OUT5[303] = GND;
assign TX_BIT_CTRL_OUT5[304] = GND;
assign TX_BIT_CTRL_OUT5[305] = GND;
assign TX_BIT_CTRL_OUT5[306] = GND;
assign TX_BIT_CTRL_OUT5[307] = GND;
assign TX_BIT_CTRL_OUT5[308] = GND;
assign TX_BIT_CTRL_OUT5[309] = GND;
assign TX_BIT_CTRL_OUT5[310] = GND;
assign TX_BIT_CTRL_OUT5[311] = GND;
assign TX_BIT_CTRL_OUT5[312] = GND;
assign TX_BIT_CTRL_OUT5[313] = GND;
assign TX_BIT_CTRL_OUT5[314] = GND;
assign TX_BIT_CTRL_OUT5[315] = GND;
assign TX_BIT_CTRL_OUT5[316] = GND;
assign TX_BIT_CTRL_OUT5[317] = GND;
assign TX_BIT_CTRL_OUT5[318] = GND;
assign TX_BIT_CTRL_OUT5[319] = GND;
assign TX_BIT_CTRL_OUT6[0] = GND;
assign TX_BIT_CTRL_OUT6[1] = GND;
assign TX_BIT_CTRL_OUT6[2] = GND;
assign TX_BIT_CTRL_OUT6[3] = GND;
assign TX_BIT_CTRL_OUT6[4] = GND;
assign TX_BIT_CTRL_OUT6[5] = GND;
assign TX_BIT_CTRL_OUT6[6] = GND;
assign TX_BIT_CTRL_OUT6[7] = GND;
assign TX_BIT_CTRL_OUT6[8] = GND;
assign TX_BIT_CTRL_OUT6[9] = GND;
assign TX_BIT_CTRL_OUT6[10] = GND;
assign TX_BIT_CTRL_OUT6[11] = GND;
assign TX_BIT_CTRL_OUT6[12] = GND;
assign TX_BIT_CTRL_OUT6[13] = GND;
assign TX_BIT_CTRL_OUT6[14] = GND;
assign TX_BIT_CTRL_OUT6[15] = GND;
assign TX_BIT_CTRL_OUT6[16] = GND;
assign TX_BIT_CTRL_OUT6[17] = GND;
assign TX_BIT_CTRL_OUT6[18] = GND;
assign TX_BIT_CTRL_OUT6[19] = GND;
assign TX_BIT_CTRL_OUT6[20] = GND;
assign TX_BIT_CTRL_OUT6[21] = GND;
assign TX_BIT_CTRL_OUT6[22] = GND;
assign TX_BIT_CTRL_OUT6[23] = GND;
assign TX_BIT_CTRL_OUT6[24] = GND;
assign TX_BIT_CTRL_OUT6[25] = GND;
assign TX_BIT_CTRL_OUT6[26] = GND;
assign TX_BIT_CTRL_OUT6[27] = GND;
assign TX_BIT_CTRL_OUT6[28] = GND;
assign TX_BIT_CTRL_OUT6[29] = GND;
assign TX_BIT_CTRL_OUT6[30] = GND;
assign TX_BIT_CTRL_OUT6[31] = GND;
assign TX_BIT_CTRL_OUT6[32] = GND;
assign TX_BIT_CTRL_OUT6[33] = GND;
assign TX_BIT_CTRL_OUT6[34] = GND;
assign TX_BIT_CTRL_OUT6[35] = GND;
assign TX_BIT_CTRL_OUT6[36] = GND;
assign TX_BIT_CTRL_OUT6[37] = GND;
assign TX_BIT_CTRL_OUT6[38] = GND;
assign TX_BIT_CTRL_OUT6[39] = GND;
assign TX_BIT_CTRL_OUT6[40] = GND;
assign TX_BIT_CTRL_OUT6[41] = GND;
assign TX_BIT_CTRL_OUT6[42] = GND;
assign TX_BIT_CTRL_OUT6[43] = GND;
assign TX_BIT_CTRL_OUT6[44] = GND;
assign TX_BIT_CTRL_OUT6[45] = GND;
assign TX_BIT_CTRL_OUT6[46] = GND;
assign TX_BIT_CTRL_OUT6[47] = GND;
assign TX_BIT_CTRL_OUT6[48] = GND;
assign TX_BIT_CTRL_OUT6[49] = GND;
assign TX_BIT_CTRL_OUT6[50] = GND;
assign TX_BIT_CTRL_OUT6[51] = GND;
assign TX_BIT_CTRL_OUT6[52] = GND;
assign TX_BIT_CTRL_OUT6[53] = GND;
assign TX_BIT_CTRL_OUT6[54] = GND;
assign TX_BIT_CTRL_OUT6[55] = GND;
assign TX_BIT_CTRL_OUT6[56] = GND;
assign TX_BIT_CTRL_OUT6[57] = GND;
assign TX_BIT_CTRL_OUT6[58] = GND;
assign TX_BIT_CTRL_OUT6[59] = GND;
assign TX_BIT_CTRL_OUT6[60] = GND;
assign TX_BIT_CTRL_OUT6[61] = GND;
assign TX_BIT_CTRL_OUT6[62] = GND;
assign TX_BIT_CTRL_OUT6[63] = GND;
assign TX_BIT_CTRL_OUT6[64] = GND;
assign TX_BIT_CTRL_OUT6[65] = GND;
assign TX_BIT_CTRL_OUT6[66] = GND;
assign TX_BIT_CTRL_OUT6[67] = GND;
assign TX_BIT_CTRL_OUT6[68] = GND;
assign TX_BIT_CTRL_OUT6[69] = GND;
assign TX_BIT_CTRL_OUT6[70] = GND;
assign TX_BIT_CTRL_OUT6[71] = GND;
assign TX_BIT_CTRL_OUT6[72] = GND;
assign TX_BIT_CTRL_OUT6[73] = GND;
assign TX_BIT_CTRL_OUT6[74] = GND;
assign TX_BIT_CTRL_OUT6[75] = GND;
assign TX_BIT_CTRL_OUT6[76] = GND;
assign TX_BIT_CTRL_OUT6[77] = GND;
assign TX_BIT_CTRL_OUT6[78] = GND;
assign TX_BIT_CTRL_OUT6[79] = GND;
assign TX_BIT_CTRL_OUT6[80] = GND;
assign TX_BIT_CTRL_OUT6[81] = GND;
assign TX_BIT_CTRL_OUT6[82] = GND;
assign TX_BIT_CTRL_OUT6[83] = GND;
assign TX_BIT_CTRL_OUT6[84] = GND;
assign TX_BIT_CTRL_OUT6[85] = GND;
assign TX_BIT_CTRL_OUT6[86] = GND;
assign TX_BIT_CTRL_OUT6[87] = GND;
assign TX_BIT_CTRL_OUT6[88] = GND;
assign TX_BIT_CTRL_OUT6[89] = GND;
assign TX_BIT_CTRL_OUT6[90] = GND;
assign TX_BIT_CTRL_OUT6[91] = GND;
assign TX_BIT_CTRL_OUT6[92] = GND;
assign TX_BIT_CTRL_OUT6[93] = GND;
assign TX_BIT_CTRL_OUT6[94] = GND;
assign TX_BIT_CTRL_OUT6[95] = GND;
assign TX_BIT_CTRL_OUT6[96] = GND;
assign TX_BIT_CTRL_OUT6[97] = GND;
assign TX_BIT_CTRL_OUT6[98] = GND;
assign TX_BIT_CTRL_OUT6[99] = GND;
assign TX_BIT_CTRL_OUT6[100] = GND;
assign TX_BIT_CTRL_OUT6[101] = GND;
assign TX_BIT_CTRL_OUT6[102] = GND;
assign TX_BIT_CTRL_OUT6[103] = GND;
assign TX_BIT_CTRL_OUT6[104] = GND;
assign TX_BIT_CTRL_OUT6[105] = GND;
assign TX_BIT_CTRL_OUT6[106] = GND;
assign TX_BIT_CTRL_OUT6[107] = GND;
assign TX_BIT_CTRL_OUT6[108] = GND;
assign TX_BIT_CTRL_OUT6[109] = GND;
assign TX_BIT_CTRL_OUT6[110] = GND;
assign TX_BIT_CTRL_OUT6[111] = GND;
assign TX_BIT_CTRL_OUT6[112] = GND;
assign TX_BIT_CTRL_OUT6[113] = GND;
assign TX_BIT_CTRL_OUT6[114] = GND;
assign TX_BIT_CTRL_OUT6[115] = GND;
assign TX_BIT_CTRL_OUT6[116] = GND;
assign TX_BIT_CTRL_OUT6[117] = GND;
assign TX_BIT_CTRL_OUT6[118] = GND;
assign TX_BIT_CTRL_OUT6[119] = GND;
assign TX_BIT_CTRL_OUT6[120] = GND;
assign TX_BIT_CTRL_OUT6[121] = GND;
assign TX_BIT_CTRL_OUT6[122] = GND;
assign TX_BIT_CTRL_OUT6[123] = GND;
assign TX_BIT_CTRL_OUT6[124] = GND;
assign TX_BIT_CTRL_OUT6[125] = GND;
assign TX_BIT_CTRL_OUT6[126] = GND;
assign TX_BIT_CTRL_OUT6[127] = GND;
assign TX_BIT_CTRL_OUT6[128] = GND;
assign TX_BIT_CTRL_OUT6[129] = GND;
assign TX_BIT_CTRL_OUT6[130] = GND;
assign TX_BIT_CTRL_OUT6[131] = GND;
assign TX_BIT_CTRL_OUT6[132] = GND;
assign TX_BIT_CTRL_OUT6[133] = GND;
assign TX_BIT_CTRL_OUT6[134] = GND;
assign TX_BIT_CTRL_OUT6[135] = GND;
assign TX_BIT_CTRL_OUT6[136] = GND;
assign TX_BIT_CTRL_OUT6[137] = GND;
assign TX_BIT_CTRL_OUT6[138] = GND;
assign TX_BIT_CTRL_OUT6[139] = GND;
assign TX_BIT_CTRL_OUT6[140] = GND;
assign TX_BIT_CTRL_OUT6[141] = GND;
assign TX_BIT_CTRL_OUT6[142] = GND;
assign TX_BIT_CTRL_OUT6[143] = GND;
assign TX_BIT_CTRL_OUT6[144] = GND;
assign TX_BIT_CTRL_OUT6[145] = GND;
assign TX_BIT_CTRL_OUT6[146] = GND;
assign TX_BIT_CTRL_OUT6[147] = GND;
assign TX_BIT_CTRL_OUT6[148] = GND;
assign TX_BIT_CTRL_OUT6[149] = GND;
assign TX_BIT_CTRL_OUT6[150] = GND;
assign TX_BIT_CTRL_OUT6[151] = GND;
assign TX_BIT_CTRL_OUT6[152] = GND;
assign TX_BIT_CTRL_OUT6[153] = GND;
assign TX_BIT_CTRL_OUT6[154] = GND;
assign TX_BIT_CTRL_OUT6[155] = GND;
assign TX_BIT_CTRL_OUT6[156] = GND;
assign TX_BIT_CTRL_OUT6[157] = GND;
assign TX_BIT_CTRL_OUT6[158] = GND;
assign TX_BIT_CTRL_OUT6[159] = GND;
assign TX_BIT_CTRL_OUT6[160] = GND;
assign TX_BIT_CTRL_OUT6[161] = GND;
assign TX_BIT_CTRL_OUT6[162] = GND;
assign TX_BIT_CTRL_OUT6[163] = GND;
assign TX_BIT_CTRL_OUT6[164] = GND;
assign TX_BIT_CTRL_OUT6[165] = GND;
assign TX_BIT_CTRL_OUT6[166] = GND;
assign TX_BIT_CTRL_OUT6[167] = GND;
assign TX_BIT_CTRL_OUT6[168] = GND;
assign TX_BIT_CTRL_OUT6[169] = GND;
assign TX_BIT_CTRL_OUT6[170] = GND;
assign TX_BIT_CTRL_OUT6[171] = GND;
assign TX_BIT_CTRL_OUT6[172] = GND;
assign TX_BIT_CTRL_OUT6[173] = GND;
assign TX_BIT_CTRL_OUT6[174] = GND;
assign TX_BIT_CTRL_OUT6[175] = GND;
assign TX_BIT_CTRL_OUT6[176] = GND;
assign TX_BIT_CTRL_OUT6[177] = GND;
assign TX_BIT_CTRL_OUT6[178] = GND;
assign TX_BIT_CTRL_OUT6[179] = GND;
assign TX_BIT_CTRL_OUT6[180] = GND;
assign TX_BIT_CTRL_OUT6[181] = GND;
assign TX_BIT_CTRL_OUT6[182] = GND;
assign TX_BIT_CTRL_OUT6[183] = GND;
assign TX_BIT_CTRL_OUT6[184] = GND;
assign TX_BIT_CTRL_OUT6[185] = GND;
assign TX_BIT_CTRL_OUT6[186] = GND;
assign TX_BIT_CTRL_OUT6[187] = GND;
assign TX_BIT_CTRL_OUT6[188] = GND;
assign TX_BIT_CTRL_OUT6[189] = GND;
assign TX_BIT_CTRL_OUT6[190] = GND;
assign TX_BIT_CTRL_OUT6[191] = GND;
assign TX_BIT_CTRL_OUT6[192] = GND;
assign TX_BIT_CTRL_OUT6[193] = GND;
assign TX_BIT_CTRL_OUT6[194] = GND;
assign TX_BIT_CTRL_OUT6[195] = GND;
assign TX_BIT_CTRL_OUT6[196] = GND;
assign TX_BIT_CTRL_OUT6[197] = GND;
assign TX_BIT_CTRL_OUT6[198] = GND;
assign TX_BIT_CTRL_OUT6[199] = GND;
assign TX_BIT_CTRL_OUT6[200] = GND;
assign TX_BIT_CTRL_OUT6[201] = GND;
assign TX_BIT_CTRL_OUT6[202] = GND;
assign TX_BIT_CTRL_OUT6[203] = GND;
assign TX_BIT_CTRL_OUT6[204] = GND;
assign TX_BIT_CTRL_OUT6[205] = GND;
assign TX_BIT_CTRL_OUT6[206] = GND;
assign TX_BIT_CTRL_OUT6[207] = GND;
assign TX_BIT_CTRL_OUT6[208] = GND;
assign TX_BIT_CTRL_OUT6[209] = GND;
assign TX_BIT_CTRL_OUT6[210] = GND;
assign TX_BIT_CTRL_OUT6[211] = GND;
assign TX_BIT_CTRL_OUT6[212] = GND;
assign TX_BIT_CTRL_OUT6[213] = GND;
assign TX_BIT_CTRL_OUT6[214] = GND;
assign TX_BIT_CTRL_OUT6[215] = GND;
assign TX_BIT_CTRL_OUT6[216] = GND;
assign TX_BIT_CTRL_OUT6[217] = GND;
assign TX_BIT_CTRL_OUT6[218] = GND;
assign TX_BIT_CTRL_OUT6[219] = GND;
assign TX_BIT_CTRL_OUT6[220] = GND;
assign TX_BIT_CTRL_OUT6[221] = GND;
assign TX_BIT_CTRL_OUT6[222] = GND;
assign TX_BIT_CTRL_OUT6[223] = GND;
assign TX_BIT_CTRL_OUT6[224] = GND;
assign TX_BIT_CTRL_OUT6[225] = GND;
assign TX_BIT_CTRL_OUT6[226] = GND;
assign TX_BIT_CTRL_OUT6[227] = GND;
assign TX_BIT_CTRL_OUT6[228] = GND;
assign TX_BIT_CTRL_OUT6[229] = GND;
assign TX_BIT_CTRL_OUT6[230] = GND;
assign TX_BIT_CTRL_OUT6[231] = GND;
assign TX_BIT_CTRL_OUT6[232] = GND;
assign TX_BIT_CTRL_OUT6[233] = GND;
assign TX_BIT_CTRL_OUT6[234] = GND;
assign TX_BIT_CTRL_OUT6[235] = GND;
assign TX_BIT_CTRL_OUT6[236] = GND;
assign TX_BIT_CTRL_OUT6[237] = GND;
assign TX_BIT_CTRL_OUT6[238] = GND;
assign TX_BIT_CTRL_OUT6[239] = GND;
assign TX_BIT_CTRL_OUT6[240] = GND;
assign TX_BIT_CTRL_OUT6[241] = GND;
assign TX_BIT_CTRL_OUT6[242] = GND;
assign TX_BIT_CTRL_OUT6[243] = GND;
assign TX_BIT_CTRL_OUT6[244] = GND;
assign TX_BIT_CTRL_OUT6[245] = GND;
assign TX_BIT_CTRL_OUT6[246] = GND;
assign TX_BIT_CTRL_OUT6[247] = GND;
assign TX_BIT_CTRL_OUT6[248] = GND;
assign TX_BIT_CTRL_OUT6[249] = GND;
assign TX_BIT_CTRL_OUT6[250] = GND;
assign TX_BIT_CTRL_OUT6[251] = GND;
assign TX_BIT_CTRL_OUT6[252] = GND;
assign TX_BIT_CTRL_OUT6[253] = GND;
assign TX_BIT_CTRL_OUT6[254] = GND;
assign TX_BIT_CTRL_OUT6[255] = GND;
assign TX_BIT_CTRL_OUT6[256] = GND;
assign TX_BIT_CTRL_OUT6[257] = GND;
assign TX_BIT_CTRL_OUT6[258] = GND;
assign TX_BIT_CTRL_OUT6[259] = GND;
assign TX_BIT_CTRL_OUT6[260] = GND;
assign TX_BIT_CTRL_OUT6[261] = GND;
assign TX_BIT_CTRL_OUT6[262] = GND;
assign TX_BIT_CTRL_OUT6[263] = GND;
assign TX_BIT_CTRL_OUT6[264] = GND;
assign TX_BIT_CTRL_OUT6[265] = GND;
assign TX_BIT_CTRL_OUT6[266] = GND;
assign TX_BIT_CTRL_OUT6[267] = GND;
assign TX_BIT_CTRL_OUT6[268] = GND;
assign TX_BIT_CTRL_OUT6[269] = GND;
assign TX_BIT_CTRL_OUT6[270] = GND;
assign TX_BIT_CTRL_OUT6[271] = GND;
assign TX_BIT_CTRL_OUT6[272] = GND;
assign TX_BIT_CTRL_OUT6[273] = GND;
assign TX_BIT_CTRL_OUT6[274] = GND;
assign TX_BIT_CTRL_OUT6[275] = GND;
assign TX_BIT_CTRL_OUT6[276] = GND;
assign TX_BIT_CTRL_OUT6[277] = GND;
assign TX_BIT_CTRL_OUT6[278] = GND;
assign TX_BIT_CTRL_OUT6[279] = GND;
assign TX_BIT_CTRL_OUT6[280] = GND;
assign TX_BIT_CTRL_OUT6[281] = GND;
assign TX_BIT_CTRL_OUT6[282] = GND;
assign TX_BIT_CTRL_OUT6[283] = GND;
assign TX_BIT_CTRL_OUT6[284] = GND;
assign TX_BIT_CTRL_OUT6[285] = GND;
assign TX_BIT_CTRL_OUT6[286] = GND;
assign TX_BIT_CTRL_OUT6[287] = GND;
assign TX_BIT_CTRL_OUT6[288] = GND;
assign TX_BIT_CTRL_OUT6[289] = GND;
assign TX_BIT_CTRL_OUT6[290] = GND;
assign TX_BIT_CTRL_OUT6[291] = GND;
assign TX_BIT_CTRL_OUT6[292] = GND;
assign TX_BIT_CTRL_OUT6[293] = GND;
assign TX_BIT_CTRL_OUT6[294] = GND;
assign TX_BIT_CTRL_OUT6[295] = GND;
assign TX_BIT_CTRL_OUT6[296] = GND;
assign TX_BIT_CTRL_OUT6[297] = GND;
assign TX_BIT_CTRL_OUT6[298] = GND;
assign TX_BIT_CTRL_OUT6[299] = GND;
assign TX_BIT_CTRL_OUT6[300] = GND;
assign TX_BIT_CTRL_OUT6[301] = GND;
assign TX_BIT_CTRL_OUT6[302] = GND;
assign TX_BIT_CTRL_OUT6[303] = GND;
assign TX_BIT_CTRL_OUT6[304] = GND;
assign TX_BIT_CTRL_OUT6[305] = GND;
assign TX_BIT_CTRL_OUT6[306] = GND;
assign TX_BIT_CTRL_OUT6[307] = GND;
assign TX_BIT_CTRL_OUT6[308] = GND;
assign TX_BIT_CTRL_OUT6[309] = GND;
assign TX_BIT_CTRL_OUT6[310] = GND;
assign TX_BIT_CTRL_OUT6[311] = GND;
assign TX_BIT_CTRL_OUT6[312] = GND;
assign TX_BIT_CTRL_OUT6[313] = GND;
assign TX_BIT_CTRL_OUT6[314] = GND;
assign TX_BIT_CTRL_OUT6[315] = GND;
assign TX_BIT_CTRL_OUT6[316] = GND;
assign TX_BIT_CTRL_OUT6[317] = GND;
assign TX_BIT_CTRL_OUT6[318] = GND;
assign TX_BIT_CTRL_OUT6[319] = GND;
assign DLY_RDY[0] = VCC;
assign DLY_RDY[1] = VCC;
assign DLY_RDY[2] = VCC;
assign DLY_RDY[3] = VCC;
assign DLY_RDY[4] = VCC;
assign DLY_RDY[5] = GND;
assign DLY_RDY[6] = GND;
assign DLY_RDY[7] = VCC;
assign VTC_RDY[0] = VCC;
assign VTC_RDY[1] = VCC;
assign VTC_RDY[2] = VCC;
assign VTC_RDY[3] = VCC;
assign VTC_RDY[4] = VCC;
assign VTC_RDY[5] = GND;
assign VTC_RDY[6] = GND;
assign VTC_RDY[7] = VCC;
endmodule /* hstdm_ultrascale_bitslice_control_8s_40s_DIV2_96s_96s_0s_0s_0s_0s_ULTRASCALE_PLUS_Z1_FB1_uA */

(* haps_ip_type="hstdm" *)module hstdm_ultrascale_bitslice_control_8s_40s_DIV2_48s_48s_0s_0s_0s_0s_ULTRASCALE_PLUS_Z1_FB1_uA (
  RX_BIT_CTRL_OUT0,
  RX_BIT_CTRL_OUT1,
  RX_BIT_CTRL_OUT2,
  RX_BIT_CTRL_OUT3,
  RX_BIT_CTRL_OUT4,
  RX_BIT_CTRL_OUT5,
  RX_BIT_CTRL_OUT6,
  TX_BIT_CTRL_OUT0,
  TX_BIT_CTRL_OUT1,
  TX_BIT_CTRL_OUT2,
  TX_BIT_CTRL_OUT3,
  TX_BIT_CTRL_OUT4,
  TX_BIT_CTRL_OUT5,
  TX_BIT_CTRL_OUT6,
  RX_BIT_CTRL_IN0,
  RX_BIT_CTRL_IN1,
  RX_BIT_CTRL_IN2,
  RX_BIT_CTRL_IN3,
  RX_BIT_CTRL_IN4,
  RX_BIT_CTRL_IN5,
  RX_BIT_CTRL_IN6,
  TX_BIT_CTRL_IN0,
  TX_BIT_CTRL_IN1,
  TX_BIT_CTRL_IN2,
  TX_BIT_CTRL_IN3,
  TX_BIT_CTRL_IN4,
  TX_BIT_CTRL_IN5,
  TX_BIT_CTRL_IN6,
  DLY_RDY,
  VTC_RDY,
  PLL_CLK,
  RST,
  EN_VTC,
  RIU_ADDR,
  RIU_CLK,
  RIU_NIBBLE_SEL_LOWER,
  RIU_NIBBLE_SEL_UPPER,
  RIU_WR_DATA,
  RIU_WR_EN
)
;
output [319:0] RX_BIT_CTRL_OUT0 ;
output [319:0] RX_BIT_CTRL_OUT1 ;
output [319:0] RX_BIT_CTRL_OUT2 ;
output [319:0] RX_BIT_CTRL_OUT3 ;
output [319:0] RX_BIT_CTRL_OUT4 ;
output [319:0] RX_BIT_CTRL_OUT5 ;
output [319:0] RX_BIT_CTRL_OUT6 ;
output [319:0] TX_BIT_CTRL_OUT0 ;
output [319:0] TX_BIT_CTRL_OUT1 ;
output [319:0] TX_BIT_CTRL_OUT2 ;
output [319:0] TX_BIT_CTRL_OUT3 ;
output [319:0] TX_BIT_CTRL_OUT4 ;
output [319:0] TX_BIT_CTRL_OUT5 ;
output [319:0] TX_BIT_CTRL_OUT6 ;
input [319:0] RX_BIT_CTRL_IN0 ;
input [319:0] RX_BIT_CTRL_IN1 ;
input [319:0] RX_BIT_CTRL_IN2 ;
input [319:0] RX_BIT_CTRL_IN3 ;
input [319:0] RX_BIT_CTRL_IN4 ;
input [319:0] RX_BIT_CTRL_IN5 ;
input [319:0] RX_BIT_CTRL_IN6 ;
input [319:0] TX_BIT_CTRL_IN0 ;
input [319:0] TX_BIT_CTRL_IN1 ;
input [319:0] TX_BIT_CTRL_IN2 ;
input [319:0] TX_BIT_CTRL_IN3 ;
input [319:0] TX_BIT_CTRL_IN4 ;
input [319:0] TX_BIT_CTRL_IN5 ;
input [319:0] TX_BIT_CTRL_IN6 ;
output [7:0] DLY_RDY ;
output [7:0] VTC_RDY ;
input PLL_CLK ;
input RST ;
input EN_VTC ;
input [5:0] RIU_ADDR ;
input RIU_CLK ;
input RIU_NIBBLE_SEL_LOWER ;
input RIU_NIBBLE_SEL_UPPER ;
input [15:0] RIU_WR_DATA ;
input RIU_WR_EN ;
wire PLL_CLK ;
wire RST ;
wire EN_VTC ;
wire RIU_CLK ;
wire RIU_NIBBLE_SEL_LOWER ;
wire RIU_NIBBLE_SEL_UPPER ;
wire RIU_WR_EN ;
wire [239:160] RX_BIT_CTRL_OUT0_1;
wire [239:160] RX_BIT_CTRL_OUT1_1;
wire [199:160] RX_BIT_CTRL_OUT2_1;
wire [199:160] RX_BIT_CTRL_OUT3_1;
wire [199:160] RX_BIT_CTRL_OUT5_1;
wire [239:160] RX_BIT_CTRL_OUT6_1;
wire [239:160] TX_BIT_CTRL_OUT0_1;
wire [239:160] TX_BIT_CTRL_OUT1_1;
wire [199:160] TX_BIT_CTRL_OUT2_1;
wire [199:160] TX_BIT_CTRL_OUT3_1;
wire [199:160] TX_BIT_CTRL_OUT5_1;
wire [239:160] TX_BIT_CTRL_OUT6_1;
wire [5:4] DLY_RDY_1;
wire [5:4] VTC_RDY_1;
wire [6:0] \NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_2 ;
wire [15:0] \NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_3 ;
wire [39:0] \NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_7 ;
wire [6:0] \NIBBLE[4].BITSLICE_CTRL.un1_bitslice_control_1 ;
wire [15:0] \NIBBLE[4].BITSLICE_CTRL.un1_bitslice_control_2 ;
wire [39:0] \NIBBLE[4].BITSLICE_CTRL.un1_bitslice_control_7 ;
wire \NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_1  ;
wire \NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control  ;
wire \NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_5  ;
wire \NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_4  ;
wire \NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_6  ;
wire \NIBBLE[4].BITSLICE_CTRL.un1_bitslice_control  ;
wire \NIBBLE[4].BITSLICE_CTRL.un1_bitslice_control_5  ;
wire \NIBBLE[4].BITSLICE_CTRL.un1_bitslice_control_4  ;
wire \NIBBLE[4].BITSLICE_CTRL.un1_bitslice_control_3  ;
wire \NIBBLE[4].BITSLICE_CTRL.un1_bitslice_control_6  ;
wire GND ;
wire VCC ;
  GND GND_cZ (
	.G(GND)
);
  VCC VCC_cZ (
	.P(VCC)
);
// @225:8066
(* haps_ip_type="hstdm_native_bitslice_ctrl" *)  BITSLICE_CONTROL \NIBBLE[5].BITSLICE_CTRL.bitslice_control  (
	.CLK_TO_EXT_NORTH(\NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_1 ),
	.CLK_TO_EXT_SOUTH(\NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control ),
	.DLY_RDY(DLY_RDY_1[5]),
	.DYN_DCI(\NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_2 [6:0]),
	.NCLK_NIBBLE_OUT(\NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_5 ),
	.PCLK_NIBBLE_OUT(\NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_4 ),
	.RIU_RD_DATA(\NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_3 [15:0]),
	.RIU_VALID(\NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_6 ),
	.RX_BIT_CTRL_OUT0(RX_BIT_CTRL_OUT0_1[239:200]),
	.RX_BIT_CTRL_OUT1(RX_BIT_CTRL_OUT1_1[239:200]),
	.RX_BIT_CTRL_OUT2(RX_BIT_CTRL_OUT2[239:200]),
	.RX_BIT_CTRL_OUT3(RX_BIT_CTRL_OUT3[239:200]),
	.RX_BIT_CTRL_OUT4(RX_BIT_CTRL_OUT4[239:200]),
	.RX_BIT_CTRL_OUT5(RX_BIT_CTRL_OUT5[239:200]),
	.RX_BIT_CTRL_OUT6(RX_BIT_CTRL_OUT6_1[239:200]),
	.TX_BIT_CTRL_OUT0(TX_BIT_CTRL_OUT0_1[239:200]),
	.TX_BIT_CTRL_OUT1(TX_BIT_CTRL_OUT1_1[239:200]),
	.TX_BIT_CTRL_OUT2(TX_BIT_CTRL_OUT2[239:200]),
	.TX_BIT_CTRL_OUT3(TX_BIT_CTRL_OUT3[239:200]),
	.TX_BIT_CTRL_OUT4(TX_BIT_CTRL_OUT4[239:200]),
	.TX_BIT_CTRL_OUT5(TX_BIT_CTRL_OUT5[239:200]),
	.TX_BIT_CTRL_OUT6(TX_BIT_CTRL_OUT6_1[239:200]),
	.TX_BIT_CTRL_OUT_TRI(\NIBBLE[5].BITSLICE_CTRL.un1_bitslice_control_7 [39:0]),
	.VTC_RDY(VTC_RDY_1[5]),
	.CLK_FROM_EXT(VCC),
	.EN_VTC(GND),
	.NCLK_NIBBLE_IN(GND),
	.PCLK_NIBBLE_IN(GND),
	.PHY_RDEN({GND, GND, GND, GND}),
	.PLL_CLK(PLL_CLK),
	.REFCLK(GND),
	.RIU_ADDR({GND, GND, GND, GND, GND, GND}),
	.RIU_CLK(RIU_CLK),
	.RIU_NIBBLE_SEL(GND),
	.RIU_WR_DATA({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RIU_WR_EN(GND),
	.RST(RST),
	.RX_BIT_CTRL_IN0({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN1({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN2(RX_BIT_CTRL_IN2[239:200]),
	.RX_BIT_CTRL_IN3(RX_BIT_CTRL_IN3[239:200]),
	.RX_BIT_CTRL_IN4(RX_BIT_CTRL_IN4[239:200]),
	.RX_BIT_CTRL_IN5(RX_BIT_CTRL_IN5[239:200]),
	.RX_BIT_CTRL_IN6({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TBYTE_IN({GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN0({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN1({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN2(TX_BIT_CTRL_IN2[239:200]),
	.TX_BIT_CTRL_IN3(TX_BIT_CTRL_IN3[239:200]),
	.TX_BIT_CTRL_IN4(TX_BIT_CTRL_IN4[239:200]),
	.TX_BIT_CTRL_IN5(TX_BIT_CTRL_IN5[239:200]),
	.TX_BIT_CTRL_IN6({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN_TRI({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND})
);
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .CTRL_CLK="EXTERNAL";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .DIV_MODE="DIV2";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .EN_CLK_TO_EXT_NORTH="DISABLE";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .EN_CLK_TO_EXT_SOUTH="DISABLE";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .EN_OTHER_NCLK="FALSE";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .EN_OTHER_PCLK="FALSE";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .IDLY_VT_TRACK="FALSE";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .ODLY_VT_TRACK="FALSE";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .QDLY_VT_TRACK="FALSE";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .REFCLK_SRC="PLLCLK";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .RX_GATING="DISABLE";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .SELF_CALIBRATE="DISABLE";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .SERIAL_MODE="FALSE";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .SIM_VERSION=2.0;
defparam \NIBBLE[5].BITSLICE_CTRL.bitslice_control .TX_GATING="DISABLE";
// @225:8066
(* haps_ip_type="hstdm_native_bitslice_ctrl" *)  BITSLICE_CONTROL \NIBBLE[4].BITSLICE_CTRL.bitslice_control  (
	.CLK_TO_EXT_NORTH(\NIBBLE[4].BITSLICE_CTRL.un1_bitslice_control ),
	.CLK_TO_EXT_SOUTH(\NIBBLE[4].BITSLICE_CTRL.un1_bitslice_control_5 ),
	.DLY_RDY(DLY_RDY_1[4]),
	.DYN_DCI(\NIBBLE[4].BITSLICE_CTRL.un1_bitslice_control_1 [6:0]),
	.NCLK_NIBBLE_OUT(\NIBBLE[4].BITSLICE_CTRL.un1_bitslice_control_4 ),
	.PCLK_NIBBLE_OUT(\NIBBLE[4].BITSLICE_CTRL.un1_bitslice_control_3 ),
	.RIU_RD_DATA(\NIBBLE[4].BITSLICE_CTRL.un1_bitslice_control_2 [15:0]),
	.RIU_VALID(\NIBBLE[4].BITSLICE_CTRL.un1_bitslice_control_6 ),
	.RX_BIT_CTRL_OUT0(RX_BIT_CTRL_OUT0_1[199:160]),
	.RX_BIT_CTRL_OUT1(RX_BIT_CTRL_OUT1_1[199:160]),
	.RX_BIT_CTRL_OUT2(RX_BIT_CTRL_OUT2_1[199:160]),
	.RX_BIT_CTRL_OUT3(RX_BIT_CTRL_OUT3_1[199:160]),
	.RX_BIT_CTRL_OUT4(RX_BIT_CTRL_OUT4[199:160]),
	.RX_BIT_CTRL_OUT5(RX_BIT_CTRL_OUT5_1[199:160]),
	.RX_BIT_CTRL_OUT6(RX_BIT_CTRL_OUT6_1[199:160]),
	.TX_BIT_CTRL_OUT0(TX_BIT_CTRL_OUT0_1[199:160]),
	.TX_BIT_CTRL_OUT1(TX_BIT_CTRL_OUT1_1[199:160]),
	.TX_BIT_CTRL_OUT2(TX_BIT_CTRL_OUT2_1[199:160]),
	.TX_BIT_CTRL_OUT3(TX_BIT_CTRL_OUT3_1[199:160]),
	.TX_BIT_CTRL_OUT4(TX_BIT_CTRL_OUT4[199:160]),
	.TX_BIT_CTRL_OUT5(TX_BIT_CTRL_OUT5_1[199:160]),
	.TX_BIT_CTRL_OUT6(TX_BIT_CTRL_OUT6_1[199:160]),
	.TX_BIT_CTRL_OUT_TRI(\NIBBLE[4].BITSLICE_CTRL.un1_bitslice_control_7 [39:0]),
	.VTC_RDY(VTC_RDY_1[4]),
	.CLK_FROM_EXT(VCC),
	.EN_VTC(GND),
	.NCLK_NIBBLE_IN(GND),
	.PCLK_NIBBLE_IN(GND),
	.PHY_RDEN({GND, GND, GND, GND}),
	.PLL_CLK(PLL_CLK),
	.REFCLK(GND),
	.RIU_ADDR({GND, GND, GND, GND, GND, GND}),
	.RIU_CLK(RIU_CLK),
	.RIU_NIBBLE_SEL(GND),
	.RIU_WR_DATA({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RIU_WR_EN(GND),
	.RST(RST),
	.RX_BIT_CTRL_IN0({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN1({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN2({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN3({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN4(RX_BIT_CTRL_IN4[199:160]),
	.RX_BIT_CTRL_IN5({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN6({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TBYTE_IN({GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN0({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN1({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN2({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN3({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN4(TX_BIT_CTRL_IN4[199:160]),
	.TX_BIT_CTRL_IN5({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN6({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN_TRI({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND})
);
defparam \NIBBLE[4].BITSLICE_CTRL.bitslice_control .CTRL_CLK="EXTERNAL";
defparam \NIBBLE[4].BITSLICE_CTRL.bitslice_control .DIV_MODE="DIV2";
defparam \NIBBLE[4].BITSLICE_CTRL.bitslice_control .EN_CLK_TO_EXT_NORTH="DISABLE";
defparam \NIBBLE[4].BITSLICE_CTRL.bitslice_control .EN_CLK_TO_EXT_SOUTH="DISABLE";
defparam \NIBBLE[4].BITSLICE_CTRL.bitslice_control .EN_OTHER_NCLK="FALSE";
defparam \NIBBLE[4].BITSLICE_CTRL.bitslice_control .EN_OTHER_PCLK="FALSE";
defparam \NIBBLE[4].BITSLICE_CTRL.bitslice_control .IDLY_VT_TRACK="FALSE";
defparam \NIBBLE[4].BITSLICE_CTRL.bitslice_control .ODLY_VT_TRACK="FALSE";
defparam \NIBBLE[4].BITSLICE_CTRL.bitslice_control .QDLY_VT_TRACK="FALSE";
defparam \NIBBLE[4].BITSLICE_CTRL.bitslice_control .REFCLK_SRC="PLLCLK";
defparam \NIBBLE[4].BITSLICE_CTRL.bitslice_control .RX_GATING="DISABLE";
defparam \NIBBLE[4].BITSLICE_CTRL.bitslice_control .SELF_CALIBRATE="DISABLE";
defparam \NIBBLE[4].BITSLICE_CTRL.bitslice_control .SERIAL_MODE="FALSE";
defparam \NIBBLE[4].BITSLICE_CTRL.bitslice_control .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \NIBBLE[4].BITSLICE_CTRL.bitslice_control .TX_GATING="DISABLE";
assign RX_BIT_CTRL_OUT0[0] = GND;
assign RX_BIT_CTRL_OUT0[1] = GND;
assign RX_BIT_CTRL_OUT0[2] = GND;
assign RX_BIT_CTRL_OUT0[3] = GND;
assign RX_BIT_CTRL_OUT0[4] = GND;
assign RX_BIT_CTRL_OUT0[5] = GND;
assign RX_BIT_CTRL_OUT0[6] = GND;
assign RX_BIT_CTRL_OUT0[7] = GND;
assign RX_BIT_CTRL_OUT0[8] = GND;
assign RX_BIT_CTRL_OUT0[9] = GND;
assign RX_BIT_CTRL_OUT0[10] = GND;
assign RX_BIT_CTRL_OUT0[11] = GND;
assign RX_BIT_CTRL_OUT0[12] = GND;
assign RX_BIT_CTRL_OUT0[13] = GND;
assign RX_BIT_CTRL_OUT0[14] = GND;
assign RX_BIT_CTRL_OUT0[15] = GND;
assign RX_BIT_CTRL_OUT0[16] = GND;
assign RX_BIT_CTRL_OUT0[17] = GND;
assign RX_BIT_CTRL_OUT0[18] = GND;
assign RX_BIT_CTRL_OUT0[19] = GND;
assign RX_BIT_CTRL_OUT0[20] = GND;
assign RX_BIT_CTRL_OUT0[21] = GND;
assign RX_BIT_CTRL_OUT0[22] = GND;
assign RX_BIT_CTRL_OUT0[23] = GND;
assign RX_BIT_CTRL_OUT0[24] = GND;
assign RX_BIT_CTRL_OUT0[25] = GND;
assign RX_BIT_CTRL_OUT0[26] = GND;
assign RX_BIT_CTRL_OUT0[27] = GND;
assign RX_BIT_CTRL_OUT0[28] = GND;
assign RX_BIT_CTRL_OUT0[29] = GND;
assign RX_BIT_CTRL_OUT0[30] = GND;
assign RX_BIT_CTRL_OUT0[31] = GND;
assign RX_BIT_CTRL_OUT0[32] = GND;
assign RX_BIT_CTRL_OUT0[33] = GND;
assign RX_BIT_CTRL_OUT0[34] = GND;
assign RX_BIT_CTRL_OUT0[35] = GND;
assign RX_BIT_CTRL_OUT0[36] = GND;
assign RX_BIT_CTRL_OUT0[37] = GND;
assign RX_BIT_CTRL_OUT0[38] = GND;
assign RX_BIT_CTRL_OUT0[39] = GND;
assign RX_BIT_CTRL_OUT0[40] = GND;
assign RX_BIT_CTRL_OUT0[41] = GND;
assign RX_BIT_CTRL_OUT0[42] = GND;
assign RX_BIT_CTRL_OUT0[43] = GND;
assign RX_BIT_CTRL_OUT0[44] = GND;
assign RX_BIT_CTRL_OUT0[45] = GND;
assign RX_BIT_CTRL_OUT0[46] = GND;
assign RX_BIT_CTRL_OUT0[47] = GND;
assign RX_BIT_CTRL_OUT0[48] = GND;
assign RX_BIT_CTRL_OUT0[49] = GND;
assign RX_BIT_CTRL_OUT0[50] = GND;
assign RX_BIT_CTRL_OUT0[51] = GND;
assign RX_BIT_CTRL_OUT0[52] = GND;
assign RX_BIT_CTRL_OUT0[53] = GND;
assign RX_BIT_CTRL_OUT0[54] = GND;
assign RX_BIT_CTRL_OUT0[55] = GND;
assign RX_BIT_CTRL_OUT0[56] = GND;
assign RX_BIT_CTRL_OUT0[57] = GND;
assign RX_BIT_CTRL_OUT0[58] = GND;
assign RX_BIT_CTRL_OUT0[59] = GND;
assign RX_BIT_CTRL_OUT0[60] = GND;
assign RX_BIT_CTRL_OUT0[61] = GND;
assign RX_BIT_CTRL_OUT0[62] = GND;
assign RX_BIT_CTRL_OUT0[63] = GND;
assign RX_BIT_CTRL_OUT0[64] = GND;
assign RX_BIT_CTRL_OUT0[65] = GND;
assign RX_BIT_CTRL_OUT0[66] = GND;
assign RX_BIT_CTRL_OUT0[67] = GND;
assign RX_BIT_CTRL_OUT0[68] = GND;
assign RX_BIT_CTRL_OUT0[69] = GND;
assign RX_BIT_CTRL_OUT0[70] = GND;
assign RX_BIT_CTRL_OUT0[71] = GND;
assign RX_BIT_CTRL_OUT0[72] = GND;
assign RX_BIT_CTRL_OUT0[73] = GND;
assign RX_BIT_CTRL_OUT0[74] = GND;
assign RX_BIT_CTRL_OUT0[75] = GND;
assign RX_BIT_CTRL_OUT0[76] = GND;
assign RX_BIT_CTRL_OUT0[77] = GND;
assign RX_BIT_CTRL_OUT0[78] = GND;
assign RX_BIT_CTRL_OUT0[79] = GND;
assign RX_BIT_CTRL_OUT0[80] = GND;
assign RX_BIT_CTRL_OUT0[81] = GND;
assign RX_BIT_CTRL_OUT0[82] = GND;
assign RX_BIT_CTRL_OUT0[83] = GND;
assign RX_BIT_CTRL_OUT0[84] = GND;
assign RX_BIT_CTRL_OUT0[85] = GND;
assign RX_BIT_CTRL_OUT0[86] = GND;
assign RX_BIT_CTRL_OUT0[87] = GND;
assign RX_BIT_CTRL_OUT0[88] = GND;
assign RX_BIT_CTRL_OUT0[89] = GND;
assign RX_BIT_CTRL_OUT0[90] = GND;
assign RX_BIT_CTRL_OUT0[91] = GND;
assign RX_BIT_CTRL_OUT0[92] = GND;
assign RX_BIT_CTRL_OUT0[93] = GND;
assign RX_BIT_CTRL_OUT0[94] = GND;
assign RX_BIT_CTRL_OUT0[95] = GND;
assign RX_BIT_CTRL_OUT0[96] = GND;
assign RX_BIT_CTRL_OUT0[97] = GND;
assign RX_BIT_CTRL_OUT0[98] = GND;
assign RX_BIT_CTRL_OUT0[99] = GND;
assign RX_BIT_CTRL_OUT0[100] = GND;
assign RX_BIT_CTRL_OUT0[101] = GND;
assign RX_BIT_CTRL_OUT0[102] = GND;
assign RX_BIT_CTRL_OUT0[103] = GND;
assign RX_BIT_CTRL_OUT0[104] = GND;
assign RX_BIT_CTRL_OUT0[105] = GND;
assign RX_BIT_CTRL_OUT0[106] = GND;
assign RX_BIT_CTRL_OUT0[107] = GND;
assign RX_BIT_CTRL_OUT0[108] = GND;
assign RX_BIT_CTRL_OUT0[109] = GND;
assign RX_BIT_CTRL_OUT0[110] = GND;
assign RX_BIT_CTRL_OUT0[111] = GND;
assign RX_BIT_CTRL_OUT0[112] = GND;
assign RX_BIT_CTRL_OUT0[113] = GND;
assign RX_BIT_CTRL_OUT0[114] = GND;
assign RX_BIT_CTRL_OUT0[115] = GND;
assign RX_BIT_CTRL_OUT0[116] = GND;
assign RX_BIT_CTRL_OUT0[117] = GND;
assign RX_BIT_CTRL_OUT0[118] = GND;
assign RX_BIT_CTRL_OUT0[119] = GND;
assign RX_BIT_CTRL_OUT0[120] = GND;
assign RX_BIT_CTRL_OUT0[121] = GND;
assign RX_BIT_CTRL_OUT0[122] = GND;
assign RX_BIT_CTRL_OUT0[123] = GND;
assign RX_BIT_CTRL_OUT0[124] = GND;
assign RX_BIT_CTRL_OUT0[125] = GND;
assign RX_BIT_CTRL_OUT0[126] = GND;
assign RX_BIT_CTRL_OUT0[127] = GND;
assign RX_BIT_CTRL_OUT0[128] = GND;
assign RX_BIT_CTRL_OUT0[129] = GND;
assign RX_BIT_CTRL_OUT0[130] = GND;
assign RX_BIT_CTRL_OUT0[131] = GND;
assign RX_BIT_CTRL_OUT0[132] = GND;
assign RX_BIT_CTRL_OUT0[133] = GND;
assign RX_BIT_CTRL_OUT0[134] = GND;
assign RX_BIT_CTRL_OUT0[135] = GND;
assign RX_BIT_CTRL_OUT0[136] = GND;
assign RX_BIT_CTRL_OUT0[137] = GND;
assign RX_BIT_CTRL_OUT0[138] = GND;
assign RX_BIT_CTRL_OUT0[139] = GND;
assign RX_BIT_CTRL_OUT0[140] = GND;
assign RX_BIT_CTRL_OUT0[141] = GND;
assign RX_BIT_CTRL_OUT0[142] = GND;
assign RX_BIT_CTRL_OUT0[143] = GND;
assign RX_BIT_CTRL_OUT0[144] = GND;
assign RX_BIT_CTRL_OUT0[145] = GND;
assign RX_BIT_CTRL_OUT0[146] = GND;
assign RX_BIT_CTRL_OUT0[147] = GND;
assign RX_BIT_CTRL_OUT0[148] = GND;
assign RX_BIT_CTRL_OUT0[149] = GND;
assign RX_BIT_CTRL_OUT0[150] = GND;
assign RX_BIT_CTRL_OUT0[151] = GND;
assign RX_BIT_CTRL_OUT0[152] = GND;
assign RX_BIT_CTRL_OUT0[153] = GND;
assign RX_BIT_CTRL_OUT0[154] = GND;
assign RX_BIT_CTRL_OUT0[155] = GND;
assign RX_BIT_CTRL_OUT0[156] = GND;
assign RX_BIT_CTRL_OUT0[157] = GND;
assign RX_BIT_CTRL_OUT0[158] = GND;
assign RX_BIT_CTRL_OUT0[159] = GND;
assign RX_BIT_CTRL_OUT0[160] = GND;
assign RX_BIT_CTRL_OUT0[161] = GND;
assign RX_BIT_CTRL_OUT0[162] = GND;
assign RX_BIT_CTRL_OUT0[163] = GND;
assign RX_BIT_CTRL_OUT0[164] = GND;
assign RX_BIT_CTRL_OUT0[165] = GND;
assign RX_BIT_CTRL_OUT0[166] = GND;
assign RX_BIT_CTRL_OUT0[167] = GND;
assign RX_BIT_CTRL_OUT0[168] = GND;
assign RX_BIT_CTRL_OUT0[169] = GND;
assign RX_BIT_CTRL_OUT0[170] = GND;
assign RX_BIT_CTRL_OUT0[171] = GND;
assign RX_BIT_CTRL_OUT0[172] = GND;
assign RX_BIT_CTRL_OUT0[173] = GND;
assign RX_BIT_CTRL_OUT0[174] = GND;
assign RX_BIT_CTRL_OUT0[175] = GND;
assign RX_BIT_CTRL_OUT0[176] = GND;
assign RX_BIT_CTRL_OUT0[177] = GND;
assign RX_BIT_CTRL_OUT0[178] = GND;
assign RX_BIT_CTRL_OUT0[179] = GND;
assign RX_BIT_CTRL_OUT0[180] = GND;
assign RX_BIT_CTRL_OUT0[181] = GND;
assign RX_BIT_CTRL_OUT0[182] = GND;
assign RX_BIT_CTRL_OUT0[183] = GND;
assign RX_BIT_CTRL_OUT0[184] = GND;
assign RX_BIT_CTRL_OUT0[185] = GND;
assign RX_BIT_CTRL_OUT0[186] = GND;
assign RX_BIT_CTRL_OUT0[187] = GND;
assign RX_BIT_CTRL_OUT0[188] = GND;
assign RX_BIT_CTRL_OUT0[189] = GND;
assign RX_BIT_CTRL_OUT0[190] = GND;
assign RX_BIT_CTRL_OUT0[191] = GND;
assign RX_BIT_CTRL_OUT0[192] = GND;
assign RX_BIT_CTRL_OUT0[193] = GND;
assign RX_BIT_CTRL_OUT0[194] = GND;
assign RX_BIT_CTRL_OUT0[195] = GND;
assign RX_BIT_CTRL_OUT0[196] = GND;
assign RX_BIT_CTRL_OUT0[197] = GND;
assign RX_BIT_CTRL_OUT0[198] = GND;
assign RX_BIT_CTRL_OUT0[199] = GND;
assign RX_BIT_CTRL_OUT0[200] = GND;
assign RX_BIT_CTRL_OUT0[201] = GND;
assign RX_BIT_CTRL_OUT0[202] = GND;
assign RX_BIT_CTRL_OUT0[203] = GND;
assign RX_BIT_CTRL_OUT0[204] = GND;
assign RX_BIT_CTRL_OUT0[205] = GND;
assign RX_BIT_CTRL_OUT0[206] = GND;
assign RX_BIT_CTRL_OUT0[207] = GND;
assign RX_BIT_CTRL_OUT0[208] = GND;
assign RX_BIT_CTRL_OUT0[209] = GND;
assign RX_BIT_CTRL_OUT0[210] = GND;
assign RX_BIT_CTRL_OUT0[211] = GND;
assign RX_BIT_CTRL_OUT0[212] = GND;
assign RX_BIT_CTRL_OUT0[213] = GND;
assign RX_BIT_CTRL_OUT0[214] = GND;
assign RX_BIT_CTRL_OUT0[215] = GND;
assign RX_BIT_CTRL_OUT0[216] = GND;
assign RX_BIT_CTRL_OUT0[217] = GND;
assign RX_BIT_CTRL_OUT0[218] = GND;
assign RX_BIT_CTRL_OUT0[219] = GND;
assign RX_BIT_CTRL_OUT0[220] = GND;
assign RX_BIT_CTRL_OUT0[221] = GND;
assign RX_BIT_CTRL_OUT0[222] = GND;
assign RX_BIT_CTRL_OUT0[223] = GND;
assign RX_BIT_CTRL_OUT0[224] = GND;
assign RX_BIT_CTRL_OUT0[225] = GND;
assign RX_BIT_CTRL_OUT0[226] = GND;
assign RX_BIT_CTRL_OUT0[227] = GND;
assign RX_BIT_CTRL_OUT0[228] = GND;
assign RX_BIT_CTRL_OUT0[229] = GND;
assign RX_BIT_CTRL_OUT0[230] = GND;
assign RX_BIT_CTRL_OUT0[231] = GND;
assign RX_BIT_CTRL_OUT0[232] = GND;
assign RX_BIT_CTRL_OUT0[233] = GND;
assign RX_BIT_CTRL_OUT0[234] = GND;
assign RX_BIT_CTRL_OUT0[235] = GND;
assign RX_BIT_CTRL_OUT0[236] = GND;
assign RX_BIT_CTRL_OUT0[237] = GND;
assign RX_BIT_CTRL_OUT0[238] = GND;
assign RX_BIT_CTRL_OUT0[239] = GND;
assign RX_BIT_CTRL_OUT0[240] = GND;
assign RX_BIT_CTRL_OUT0[241] = GND;
assign RX_BIT_CTRL_OUT0[242] = GND;
assign RX_BIT_CTRL_OUT0[243] = GND;
assign RX_BIT_CTRL_OUT0[244] = GND;
assign RX_BIT_CTRL_OUT0[245] = GND;
assign RX_BIT_CTRL_OUT0[246] = GND;
assign RX_BIT_CTRL_OUT0[247] = GND;
assign RX_BIT_CTRL_OUT0[248] = GND;
assign RX_BIT_CTRL_OUT0[249] = GND;
assign RX_BIT_CTRL_OUT0[250] = GND;
assign RX_BIT_CTRL_OUT0[251] = GND;
assign RX_BIT_CTRL_OUT0[252] = GND;
assign RX_BIT_CTRL_OUT0[253] = GND;
assign RX_BIT_CTRL_OUT0[254] = GND;
assign RX_BIT_CTRL_OUT0[255] = GND;
assign RX_BIT_CTRL_OUT0[256] = GND;
assign RX_BIT_CTRL_OUT0[257] = GND;
assign RX_BIT_CTRL_OUT0[258] = GND;
assign RX_BIT_CTRL_OUT0[259] = GND;
assign RX_BIT_CTRL_OUT0[260] = GND;
assign RX_BIT_CTRL_OUT0[261] = GND;
assign RX_BIT_CTRL_OUT0[262] = GND;
assign RX_BIT_CTRL_OUT0[263] = GND;
assign RX_BIT_CTRL_OUT0[264] = GND;
assign RX_BIT_CTRL_OUT0[265] = GND;
assign RX_BIT_CTRL_OUT0[266] = GND;
assign RX_BIT_CTRL_OUT0[267] = GND;
assign RX_BIT_CTRL_OUT0[268] = GND;
assign RX_BIT_CTRL_OUT0[269] = GND;
assign RX_BIT_CTRL_OUT0[270] = GND;
assign RX_BIT_CTRL_OUT0[271] = GND;
assign RX_BIT_CTRL_OUT0[272] = GND;
assign RX_BIT_CTRL_OUT0[273] = GND;
assign RX_BIT_CTRL_OUT0[274] = GND;
assign RX_BIT_CTRL_OUT0[275] = GND;
assign RX_BIT_CTRL_OUT0[276] = GND;
assign RX_BIT_CTRL_OUT0[277] = GND;
assign RX_BIT_CTRL_OUT0[278] = GND;
assign RX_BIT_CTRL_OUT0[279] = GND;
assign RX_BIT_CTRL_OUT0[280] = GND;
assign RX_BIT_CTRL_OUT0[281] = GND;
assign RX_BIT_CTRL_OUT0[282] = GND;
assign RX_BIT_CTRL_OUT0[283] = GND;
assign RX_BIT_CTRL_OUT0[284] = GND;
assign RX_BIT_CTRL_OUT0[285] = GND;
assign RX_BIT_CTRL_OUT0[286] = GND;
assign RX_BIT_CTRL_OUT0[287] = GND;
assign RX_BIT_CTRL_OUT0[288] = GND;
assign RX_BIT_CTRL_OUT0[289] = GND;
assign RX_BIT_CTRL_OUT0[290] = GND;
assign RX_BIT_CTRL_OUT0[291] = GND;
assign RX_BIT_CTRL_OUT0[292] = GND;
assign RX_BIT_CTRL_OUT0[293] = GND;
assign RX_BIT_CTRL_OUT0[294] = GND;
assign RX_BIT_CTRL_OUT0[295] = GND;
assign RX_BIT_CTRL_OUT0[296] = GND;
assign RX_BIT_CTRL_OUT0[297] = GND;
assign RX_BIT_CTRL_OUT0[298] = GND;
assign RX_BIT_CTRL_OUT0[299] = GND;
assign RX_BIT_CTRL_OUT0[300] = GND;
assign RX_BIT_CTRL_OUT0[301] = GND;
assign RX_BIT_CTRL_OUT0[302] = GND;
assign RX_BIT_CTRL_OUT0[303] = GND;
assign RX_BIT_CTRL_OUT0[304] = GND;
assign RX_BIT_CTRL_OUT0[305] = GND;
assign RX_BIT_CTRL_OUT0[306] = GND;
assign RX_BIT_CTRL_OUT0[307] = GND;
assign RX_BIT_CTRL_OUT0[308] = GND;
assign RX_BIT_CTRL_OUT0[309] = GND;
assign RX_BIT_CTRL_OUT0[310] = GND;
assign RX_BIT_CTRL_OUT0[311] = GND;
assign RX_BIT_CTRL_OUT0[312] = GND;
assign RX_BIT_CTRL_OUT0[313] = GND;
assign RX_BIT_CTRL_OUT0[314] = GND;
assign RX_BIT_CTRL_OUT0[315] = GND;
assign RX_BIT_CTRL_OUT0[316] = GND;
assign RX_BIT_CTRL_OUT0[317] = GND;
assign RX_BIT_CTRL_OUT0[318] = GND;
assign RX_BIT_CTRL_OUT0[319] = GND;
assign RX_BIT_CTRL_OUT1[0] = GND;
assign RX_BIT_CTRL_OUT1[1] = GND;
assign RX_BIT_CTRL_OUT1[2] = GND;
assign RX_BIT_CTRL_OUT1[3] = GND;
assign RX_BIT_CTRL_OUT1[4] = GND;
assign RX_BIT_CTRL_OUT1[5] = GND;
assign RX_BIT_CTRL_OUT1[6] = GND;
assign RX_BIT_CTRL_OUT1[7] = GND;
assign RX_BIT_CTRL_OUT1[8] = GND;
assign RX_BIT_CTRL_OUT1[9] = GND;
assign RX_BIT_CTRL_OUT1[10] = GND;
assign RX_BIT_CTRL_OUT1[11] = GND;
assign RX_BIT_CTRL_OUT1[12] = GND;
assign RX_BIT_CTRL_OUT1[13] = GND;
assign RX_BIT_CTRL_OUT1[14] = GND;
assign RX_BIT_CTRL_OUT1[15] = GND;
assign RX_BIT_CTRL_OUT1[16] = GND;
assign RX_BIT_CTRL_OUT1[17] = GND;
assign RX_BIT_CTRL_OUT1[18] = GND;
assign RX_BIT_CTRL_OUT1[19] = GND;
assign RX_BIT_CTRL_OUT1[20] = GND;
assign RX_BIT_CTRL_OUT1[21] = GND;
assign RX_BIT_CTRL_OUT1[22] = GND;
assign RX_BIT_CTRL_OUT1[23] = GND;
assign RX_BIT_CTRL_OUT1[24] = GND;
assign RX_BIT_CTRL_OUT1[25] = GND;
assign RX_BIT_CTRL_OUT1[26] = GND;
assign RX_BIT_CTRL_OUT1[27] = GND;
assign RX_BIT_CTRL_OUT1[28] = GND;
assign RX_BIT_CTRL_OUT1[29] = GND;
assign RX_BIT_CTRL_OUT1[30] = GND;
assign RX_BIT_CTRL_OUT1[31] = GND;
assign RX_BIT_CTRL_OUT1[32] = GND;
assign RX_BIT_CTRL_OUT1[33] = GND;
assign RX_BIT_CTRL_OUT1[34] = GND;
assign RX_BIT_CTRL_OUT1[35] = GND;
assign RX_BIT_CTRL_OUT1[36] = GND;
assign RX_BIT_CTRL_OUT1[37] = GND;
assign RX_BIT_CTRL_OUT1[38] = GND;
assign RX_BIT_CTRL_OUT1[39] = GND;
assign RX_BIT_CTRL_OUT1[40] = GND;
assign RX_BIT_CTRL_OUT1[41] = GND;
assign RX_BIT_CTRL_OUT1[42] = GND;
assign RX_BIT_CTRL_OUT1[43] = GND;
assign RX_BIT_CTRL_OUT1[44] = GND;
assign RX_BIT_CTRL_OUT1[45] = GND;
assign RX_BIT_CTRL_OUT1[46] = GND;
assign RX_BIT_CTRL_OUT1[47] = GND;
assign RX_BIT_CTRL_OUT1[48] = GND;
assign RX_BIT_CTRL_OUT1[49] = GND;
assign RX_BIT_CTRL_OUT1[50] = GND;
assign RX_BIT_CTRL_OUT1[51] = GND;
assign RX_BIT_CTRL_OUT1[52] = GND;
assign RX_BIT_CTRL_OUT1[53] = GND;
assign RX_BIT_CTRL_OUT1[54] = GND;
assign RX_BIT_CTRL_OUT1[55] = GND;
assign RX_BIT_CTRL_OUT1[56] = GND;
assign RX_BIT_CTRL_OUT1[57] = GND;
assign RX_BIT_CTRL_OUT1[58] = GND;
assign RX_BIT_CTRL_OUT1[59] = GND;
assign RX_BIT_CTRL_OUT1[60] = GND;
assign RX_BIT_CTRL_OUT1[61] = GND;
assign RX_BIT_CTRL_OUT1[62] = GND;
assign RX_BIT_CTRL_OUT1[63] = GND;
assign RX_BIT_CTRL_OUT1[64] = GND;
assign RX_BIT_CTRL_OUT1[65] = GND;
assign RX_BIT_CTRL_OUT1[66] = GND;
assign RX_BIT_CTRL_OUT1[67] = GND;
assign RX_BIT_CTRL_OUT1[68] = GND;
assign RX_BIT_CTRL_OUT1[69] = GND;
assign RX_BIT_CTRL_OUT1[70] = GND;
assign RX_BIT_CTRL_OUT1[71] = GND;
assign RX_BIT_CTRL_OUT1[72] = GND;
assign RX_BIT_CTRL_OUT1[73] = GND;
assign RX_BIT_CTRL_OUT1[74] = GND;
assign RX_BIT_CTRL_OUT1[75] = GND;
assign RX_BIT_CTRL_OUT1[76] = GND;
assign RX_BIT_CTRL_OUT1[77] = GND;
assign RX_BIT_CTRL_OUT1[78] = GND;
assign RX_BIT_CTRL_OUT1[79] = GND;
assign RX_BIT_CTRL_OUT1[80] = GND;
assign RX_BIT_CTRL_OUT1[81] = GND;
assign RX_BIT_CTRL_OUT1[82] = GND;
assign RX_BIT_CTRL_OUT1[83] = GND;
assign RX_BIT_CTRL_OUT1[84] = GND;
assign RX_BIT_CTRL_OUT1[85] = GND;
assign RX_BIT_CTRL_OUT1[86] = GND;
assign RX_BIT_CTRL_OUT1[87] = GND;
assign RX_BIT_CTRL_OUT1[88] = GND;
assign RX_BIT_CTRL_OUT1[89] = GND;
assign RX_BIT_CTRL_OUT1[90] = GND;
assign RX_BIT_CTRL_OUT1[91] = GND;
assign RX_BIT_CTRL_OUT1[92] = GND;
assign RX_BIT_CTRL_OUT1[93] = GND;
assign RX_BIT_CTRL_OUT1[94] = GND;
assign RX_BIT_CTRL_OUT1[95] = GND;
assign RX_BIT_CTRL_OUT1[96] = GND;
assign RX_BIT_CTRL_OUT1[97] = GND;
assign RX_BIT_CTRL_OUT1[98] = GND;
assign RX_BIT_CTRL_OUT1[99] = GND;
assign RX_BIT_CTRL_OUT1[100] = GND;
assign RX_BIT_CTRL_OUT1[101] = GND;
assign RX_BIT_CTRL_OUT1[102] = GND;
assign RX_BIT_CTRL_OUT1[103] = GND;
assign RX_BIT_CTRL_OUT1[104] = GND;
assign RX_BIT_CTRL_OUT1[105] = GND;
assign RX_BIT_CTRL_OUT1[106] = GND;
assign RX_BIT_CTRL_OUT1[107] = GND;
assign RX_BIT_CTRL_OUT1[108] = GND;
assign RX_BIT_CTRL_OUT1[109] = GND;
assign RX_BIT_CTRL_OUT1[110] = GND;
assign RX_BIT_CTRL_OUT1[111] = GND;
assign RX_BIT_CTRL_OUT1[112] = GND;
assign RX_BIT_CTRL_OUT1[113] = GND;
assign RX_BIT_CTRL_OUT1[114] = GND;
assign RX_BIT_CTRL_OUT1[115] = GND;
assign RX_BIT_CTRL_OUT1[116] = GND;
assign RX_BIT_CTRL_OUT1[117] = GND;
assign RX_BIT_CTRL_OUT1[118] = GND;
assign RX_BIT_CTRL_OUT1[119] = GND;
assign RX_BIT_CTRL_OUT1[120] = GND;
assign RX_BIT_CTRL_OUT1[121] = GND;
assign RX_BIT_CTRL_OUT1[122] = GND;
assign RX_BIT_CTRL_OUT1[123] = GND;
assign RX_BIT_CTRL_OUT1[124] = GND;
assign RX_BIT_CTRL_OUT1[125] = GND;
assign RX_BIT_CTRL_OUT1[126] = GND;
assign RX_BIT_CTRL_OUT1[127] = GND;
assign RX_BIT_CTRL_OUT1[128] = GND;
assign RX_BIT_CTRL_OUT1[129] = GND;
assign RX_BIT_CTRL_OUT1[130] = GND;
assign RX_BIT_CTRL_OUT1[131] = GND;
assign RX_BIT_CTRL_OUT1[132] = GND;
assign RX_BIT_CTRL_OUT1[133] = GND;
assign RX_BIT_CTRL_OUT1[134] = GND;
assign RX_BIT_CTRL_OUT1[135] = GND;
assign RX_BIT_CTRL_OUT1[136] = GND;
assign RX_BIT_CTRL_OUT1[137] = GND;
assign RX_BIT_CTRL_OUT1[138] = GND;
assign RX_BIT_CTRL_OUT1[139] = GND;
assign RX_BIT_CTRL_OUT1[140] = GND;
assign RX_BIT_CTRL_OUT1[141] = GND;
assign RX_BIT_CTRL_OUT1[142] = GND;
assign RX_BIT_CTRL_OUT1[143] = GND;
assign RX_BIT_CTRL_OUT1[144] = GND;
assign RX_BIT_CTRL_OUT1[145] = GND;
assign RX_BIT_CTRL_OUT1[146] = GND;
assign RX_BIT_CTRL_OUT1[147] = GND;
assign RX_BIT_CTRL_OUT1[148] = GND;
assign RX_BIT_CTRL_OUT1[149] = GND;
assign RX_BIT_CTRL_OUT1[150] = GND;
assign RX_BIT_CTRL_OUT1[151] = GND;
assign RX_BIT_CTRL_OUT1[152] = GND;
assign RX_BIT_CTRL_OUT1[153] = GND;
assign RX_BIT_CTRL_OUT1[154] = GND;
assign RX_BIT_CTRL_OUT1[155] = GND;
assign RX_BIT_CTRL_OUT1[156] = GND;
assign RX_BIT_CTRL_OUT1[157] = GND;
assign RX_BIT_CTRL_OUT1[158] = GND;
assign RX_BIT_CTRL_OUT1[159] = GND;
assign RX_BIT_CTRL_OUT1[160] = GND;
assign RX_BIT_CTRL_OUT1[161] = GND;
assign RX_BIT_CTRL_OUT1[162] = GND;
assign RX_BIT_CTRL_OUT1[163] = GND;
assign RX_BIT_CTRL_OUT1[164] = GND;
assign RX_BIT_CTRL_OUT1[165] = GND;
assign RX_BIT_CTRL_OUT1[166] = GND;
assign RX_BIT_CTRL_OUT1[167] = GND;
assign RX_BIT_CTRL_OUT1[168] = GND;
assign RX_BIT_CTRL_OUT1[169] = GND;
assign RX_BIT_CTRL_OUT1[170] = GND;
assign RX_BIT_CTRL_OUT1[171] = GND;
assign RX_BIT_CTRL_OUT1[172] = GND;
assign RX_BIT_CTRL_OUT1[173] = GND;
assign RX_BIT_CTRL_OUT1[174] = GND;
assign RX_BIT_CTRL_OUT1[175] = GND;
assign RX_BIT_CTRL_OUT1[176] = GND;
assign RX_BIT_CTRL_OUT1[177] = GND;
assign RX_BIT_CTRL_OUT1[178] = GND;
assign RX_BIT_CTRL_OUT1[179] = GND;
assign RX_BIT_CTRL_OUT1[180] = GND;
assign RX_BIT_CTRL_OUT1[181] = GND;
assign RX_BIT_CTRL_OUT1[182] = GND;
assign RX_BIT_CTRL_OUT1[183] = GND;
assign RX_BIT_CTRL_OUT1[184] = GND;
assign RX_BIT_CTRL_OUT1[185] = GND;
assign RX_BIT_CTRL_OUT1[186] = GND;
assign RX_BIT_CTRL_OUT1[187] = GND;
assign RX_BIT_CTRL_OUT1[188] = GND;
assign RX_BIT_CTRL_OUT1[189] = GND;
assign RX_BIT_CTRL_OUT1[190] = GND;
assign RX_BIT_CTRL_OUT1[191] = GND;
assign RX_BIT_CTRL_OUT1[192] = GND;
assign RX_BIT_CTRL_OUT1[193] = GND;
assign RX_BIT_CTRL_OUT1[194] = GND;
assign RX_BIT_CTRL_OUT1[195] = GND;
assign RX_BIT_CTRL_OUT1[196] = GND;
assign RX_BIT_CTRL_OUT1[197] = GND;
assign RX_BIT_CTRL_OUT1[198] = GND;
assign RX_BIT_CTRL_OUT1[199] = GND;
assign RX_BIT_CTRL_OUT1[200] = GND;
assign RX_BIT_CTRL_OUT1[201] = GND;
assign RX_BIT_CTRL_OUT1[202] = GND;
assign RX_BIT_CTRL_OUT1[203] = GND;
assign RX_BIT_CTRL_OUT1[204] = GND;
assign RX_BIT_CTRL_OUT1[205] = GND;
assign RX_BIT_CTRL_OUT1[206] = GND;
assign RX_BIT_CTRL_OUT1[207] = GND;
assign RX_BIT_CTRL_OUT1[208] = GND;
assign RX_BIT_CTRL_OUT1[209] = GND;
assign RX_BIT_CTRL_OUT1[210] = GND;
assign RX_BIT_CTRL_OUT1[211] = GND;
assign RX_BIT_CTRL_OUT1[212] = GND;
assign RX_BIT_CTRL_OUT1[213] = GND;
assign RX_BIT_CTRL_OUT1[214] = GND;
assign RX_BIT_CTRL_OUT1[215] = GND;
assign RX_BIT_CTRL_OUT1[216] = GND;
assign RX_BIT_CTRL_OUT1[217] = GND;
assign RX_BIT_CTRL_OUT1[218] = GND;
assign RX_BIT_CTRL_OUT1[219] = GND;
assign RX_BIT_CTRL_OUT1[220] = GND;
assign RX_BIT_CTRL_OUT1[221] = GND;
assign RX_BIT_CTRL_OUT1[222] = GND;
assign RX_BIT_CTRL_OUT1[223] = GND;
assign RX_BIT_CTRL_OUT1[224] = GND;
assign RX_BIT_CTRL_OUT1[225] = GND;
assign RX_BIT_CTRL_OUT1[226] = GND;
assign RX_BIT_CTRL_OUT1[227] = GND;
assign RX_BIT_CTRL_OUT1[228] = GND;
assign RX_BIT_CTRL_OUT1[229] = GND;
assign RX_BIT_CTRL_OUT1[230] = GND;
assign RX_BIT_CTRL_OUT1[231] = GND;
assign RX_BIT_CTRL_OUT1[232] = GND;
assign RX_BIT_CTRL_OUT1[233] = GND;
assign RX_BIT_CTRL_OUT1[234] = GND;
assign RX_BIT_CTRL_OUT1[235] = GND;
assign RX_BIT_CTRL_OUT1[236] = GND;
assign RX_BIT_CTRL_OUT1[237] = GND;
assign RX_BIT_CTRL_OUT1[238] = GND;
assign RX_BIT_CTRL_OUT1[239] = GND;
assign RX_BIT_CTRL_OUT1[240] = GND;
assign RX_BIT_CTRL_OUT1[241] = GND;
assign RX_BIT_CTRL_OUT1[242] = GND;
assign RX_BIT_CTRL_OUT1[243] = GND;
assign RX_BIT_CTRL_OUT1[244] = GND;
assign RX_BIT_CTRL_OUT1[245] = GND;
assign RX_BIT_CTRL_OUT1[246] = GND;
assign RX_BIT_CTRL_OUT1[247] = GND;
assign RX_BIT_CTRL_OUT1[248] = GND;
assign RX_BIT_CTRL_OUT1[249] = GND;
assign RX_BIT_CTRL_OUT1[250] = GND;
assign RX_BIT_CTRL_OUT1[251] = GND;
assign RX_BIT_CTRL_OUT1[252] = GND;
assign RX_BIT_CTRL_OUT1[253] = GND;
assign RX_BIT_CTRL_OUT1[254] = GND;
assign RX_BIT_CTRL_OUT1[255] = GND;
assign RX_BIT_CTRL_OUT1[256] = GND;
assign RX_BIT_CTRL_OUT1[257] = GND;
assign RX_BIT_CTRL_OUT1[258] = GND;
assign RX_BIT_CTRL_OUT1[259] = GND;
assign RX_BIT_CTRL_OUT1[260] = GND;
assign RX_BIT_CTRL_OUT1[261] = GND;
assign RX_BIT_CTRL_OUT1[262] = GND;
assign RX_BIT_CTRL_OUT1[263] = GND;
assign RX_BIT_CTRL_OUT1[264] = GND;
assign RX_BIT_CTRL_OUT1[265] = GND;
assign RX_BIT_CTRL_OUT1[266] = GND;
assign RX_BIT_CTRL_OUT1[267] = GND;
assign RX_BIT_CTRL_OUT1[268] = GND;
assign RX_BIT_CTRL_OUT1[269] = GND;
assign RX_BIT_CTRL_OUT1[270] = GND;
assign RX_BIT_CTRL_OUT1[271] = GND;
assign RX_BIT_CTRL_OUT1[272] = GND;
assign RX_BIT_CTRL_OUT1[273] = GND;
assign RX_BIT_CTRL_OUT1[274] = GND;
assign RX_BIT_CTRL_OUT1[275] = GND;
assign RX_BIT_CTRL_OUT1[276] = GND;
assign RX_BIT_CTRL_OUT1[277] = GND;
assign RX_BIT_CTRL_OUT1[278] = GND;
assign RX_BIT_CTRL_OUT1[279] = GND;
assign RX_BIT_CTRL_OUT1[280] = GND;
assign RX_BIT_CTRL_OUT1[281] = GND;
assign RX_BIT_CTRL_OUT1[282] = GND;
assign RX_BIT_CTRL_OUT1[283] = GND;
assign RX_BIT_CTRL_OUT1[284] = GND;
assign RX_BIT_CTRL_OUT1[285] = GND;
assign RX_BIT_CTRL_OUT1[286] = GND;
assign RX_BIT_CTRL_OUT1[287] = GND;
assign RX_BIT_CTRL_OUT1[288] = GND;
assign RX_BIT_CTRL_OUT1[289] = GND;
assign RX_BIT_CTRL_OUT1[290] = GND;
assign RX_BIT_CTRL_OUT1[291] = GND;
assign RX_BIT_CTRL_OUT1[292] = GND;
assign RX_BIT_CTRL_OUT1[293] = GND;
assign RX_BIT_CTRL_OUT1[294] = GND;
assign RX_BIT_CTRL_OUT1[295] = GND;
assign RX_BIT_CTRL_OUT1[296] = GND;
assign RX_BIT_CTRL_OUT1[297] = GND;
assign RX_BIT_CTRL_OUT1[298] = GND;
assign RX_BIT_CTRL_OUT1[299] = GND;
assign RX_BIT_CTRL_OUT1[300] = GND;
assign RX_BIT_CTRL_OUT1[301] = GND;
assign RX_BIT_CTRL_OUT1[302] = GND;
assign RX_BIT_CTRL_OUT1[303] = GND;
assign RX_BIT_CTRL_OUT1[304] = GND;
assign RX_BIT_CTRL_OUT1[305] = GND;
assign RX_BIT_CTRL_OUT1[306] = GND;
assign RX_BIT_CTRL_OUT1[307] = GND;
assign RX_BIT_CTRL_OUT1[308] = GND;
assign RX_BIT_CTRL_OUT1[309] = GND;
assign RX_BIT_CTRL_OUT1[310] = GND;
assign RX_BIT_CTRL_OUT1[311] = GND;
assign RX_BIT_CTRL_OUT1[312] = GND;
assign RX_BIT_CTRL_OUT1[313] = GND;
assign RX_BIT_CTRL_OUT1[314] = GND;
assign RX_BIT_CTRL_OUT1[315] = GND;
assign RX_BIT_CTRL_OUT1[316] = GND;
assign RX_BIT_CTRL_OUT1[317] = GND;
assign RX_BIT_CTRL_OUT1[318] = GND;
assign RX_BIT_CTRL_OUT1[319] = GND;
assign RX_BIT_CTRL_OUT2[0] = GND;
assign RX_BIT_CTRL_OUT2[1] = GND;
assign RX_BIT_CTRL_OUT2[2] = GND;
assign RX_BIT_CTRL_OUT2[3] = GND;
assign RX_BIT_CTRL_OUT2[4] = GND;
assign RX_BIT_CTRL_OUT2[5] = GND;
assign RX_BIT_CTRL_OUT2[6] = GND;
assign RX_BIT_CTRL_OUT2[7] = GND;
assign RX_BIT_CTRL_OUT2[8] = GND;
assign RX_BIT_CTRL_OUT2[9] = GND;
assign RX_BIT_CTRL_OUT2[10] = GND;
assign RX_BIT_CTRL_OUT2[11] = GND;
assign RX_BIT_CTRL_OUT2[12] = GND;
assign RX_BIT_CTRL_OUT2[13] = GND;
assign RX_BIT_CTRL_OUT2[14] = GND;
assign RX_BIT_CTRL_OUT2[15] = GND;
assign RX_BIT_CTRL_OUT2[16] = GND;
assign RX_BIT_CTRL_OUT2[17] = GND;
assign RX_BIT_CTRL_OUT2[18] = GND;
assign RX_BIT_CTRL_OUT2[19] = GND;
assign RX_BIT_CTRL_OUT2[20] = GND;
assign RX_BIT_CTRL_OUT2[21] = GND;
assign RX_BIT_CTRL_OUT2[22] = GND;
assign RX_BIT_CTRL_OUT2[23] = GND;
assign RX_BIT_CTRL_OUT2[24] = GND;
assign RX_BIT_CTRL_OUT2[25] = GND;
assign RX_BIT_CTRL_OUT2[26] = GND;
assign RX_BIT_CTRL_OUT2[27] = GND;
assign RX_BIT_CTRL_OUT2[28] = GND;
assign RX_BIT_CTRL_OUT2[29] = GND;
assign RX_BIT_CTRL_OUT2[30] = GND;
assign RX_BIT_CTRL_OUT2[31] = GND;
assign RX_BIT_CTRL_OUT2[32] = GND;
assign RX_BIT_CTRL_OUT2[33] = GND;
assign RX_BIT_CTRL_OUT2[34] = GND;
assign RX_BIT_CTRL_OUT2[35] = GND;
assign RX_BIT_CTRL_OUT2[36] = GND;
assign RX_BIT_CTRL_OUT2[37] = GND;
assign RX_BIT_CTRL_OUT2[38] = GND;
assign RX_BIT_CTRL_OUT2[39] = GND;
assign RX_BIT_CTRL_OUT2[40] = GND;
assign RX_BIT_CTRL_OUT2[41] = GND;
assign RX_BIT_CTRL_OUT2[42] = GND;
assign RX_BIT_CTRL_OUT2[43] = GND;
assign RX_BIT_CTRL_OUT2[44] = GND;
assign RX_BIT_CTRL_OUT2[45] = GND;
assign RX_BIT_CTRL_OUT2[46] = GND;
assign RX_BIT_CTRL_OUT2[47] = GND;
assign RX_BIT_CTRL_OUT2[48] = GND;
assign RX_BIT_CTRL_OUT2[49] = GND;
assign RX_BIT_CTRL_OUT2[50] = GND;
assign RX_BIT_CTRL_OUT2[51] = GND;
assign RX_BIT_CTRL_OUT2[52] = GND;
assign RX_BIT_CTRL_OUT2[53] = GND;
assign RX_BIT_CTRL_OUT2[54] = GND;
assign RX_BIT_CTRL_OUT2[55] = GND;
assign RX_BIT_CTRL_OUT2[56] = GND;
assign RX_BIT_CTRL_OUT2[57] = GND;
assign RX_BIT_CTRL_OUT2[58] = GND;
assign RX_BIT_CTRL_OUT2[59] = GND;
assign RX_BIT_CTRL_OUT2[60] = GND;
assign RX_BIT_CTRL_OUT2[61] = GND;
assign RX_BIT_CTRL_OUT2[62] = GND;
assign RX_BIT_CTRL_OUT2[63] = GND;
assign RX_BIT_CTRL_OUT2[64] = GND;
assign RX_BIT_CTRL_OUT2[65] = GND;
assign RX_BIT_CTRL_OUT2[66] = GND;
assign RX_BIT_CTRL_OUT2[67] = GND;
assign RX_BIT_CTRL_OUT2[68] = GND;
assign RX_BIT_CTRL_OUT2[69] = GND;
assign RX_BIT_CTRL_OUT2[70] = GND;
assign RX_BIT_CTRL_OUT2[71] = GND;
assign RX_BIT_CTRL_OUT2[72] = GND;
assign RX_BIT_CTRL_OUT2[73] = GND;
assign RX_BIT_CTRL_OUT2[74] = GND;
assign RX_BIT_CTRL_OUT2[75] = GND;
assign RX_BIT_CTRL_OUT2[76] = GND;
assign RX_BIT_CTRL_OUT2[77] = GND;
assign RX_BIT_CTRL_OUT2[78] = GND;
assign RX_BIT_CTRL_OUT2[79] = GND;
assign RX_BIT_CTRL_OUT2[80] = GND;
assign RX_BIT_CTRL_OUT2[81] = GND;
assign RX_BIT_CTRL_OUT2[82] = GND;
assign RX_BIT_CTRL_OUT2[83] = GND;
assign RX_BIT_CTRL_OUT2[84] = GND;
assign RX_BIT_CTRL_OUT2[85] = GND;
assign RX_BIT_CTRL_OUT2[86] = GND;
assign RX_BIT_CTRL_OUT2[87] = GND;
assign RX_BIT_CTRL_OUT2[88] = GND;
assign RX_BIT_CTRL_OUT2[89] = GND;
assign RX_BIT_CTRL_OUT2[90] = GND;
assign RX_BIT_CTRL_OUT2[91] = GND;
assign RX_BIT_CTRL_OUT2[92] = GND;
assign RX_BIT_CTRL_OUT2[93] = GND;
assign RX_BIT_CTRL_OUT2[94] = GND;
assign RX_BIT_CTRL_OUT2[95] = GND;
assign RX_BIT_CTRL_OUT2[96] = GND;
assign RX_BIT_CTRL_OUT2[97] = GND;
assign RX_BIT_CTRL_OUT2[98] = GND;
assign RX_BIT_CTRL_OUT2[99] = GND;
assign RX_BIT_CTRL_OUT2[100] = GND;
assign RX_BIT_CTRL_OUT2[101] = GND;
assign RX_BIT_CTRL_OUT2[102] = GND;
assign RX_BIT_CTRL_OUT2[103] = GND;
assign RX_BIT_CTRL_OUT2[104] = GND;
assign RX_BIT_CTRL_OUT2[105] = GND;
assign RX_BIT_CTRL_OUT2[106] = GND;
assign RX_BIT_CTRL_OUT2[107] = GND;
assign RX_BIT_CTRL_OUT2[108] = GND;
assign RX_BIT_CTRL_OUT2[109] = GND;
assign RX_BIT_CTRL_OUT2[110] = GND;
assign RX_BIT_CTRL_OUT2[111] = GND;
assign RX_BIT_CTRL_OUT2[112] = GND;
assign RX_BIT_CTRL_OUT2[113] = GND;
assign RX_BIT_CTRL_OUT2[114] = GND;
assign RX_BIT_CTRL_OUT2[115] = GND;
assign RX_BIT_CTRL_OUT2[116] = GND;
assign RX_BIT_CTRL_OUT2[117] = GND;
assign RX_BIT_CTRL_OUT2[118] = GND;
assign RX_BIT_CTRL_OUT2[119] = GND;
assign RX_BIT_CTRL_OUT2[120] = GND;
assign RX_BIT_CTRL_OUT2[121] = GND;
assign RX_BIT_CTRL_OUT2[122] = GND;
assign RX_BIT_CTRL_OUT2[123] = GND;
assign RX_BIT_CTRL_OUT2[124] = GND;
assign RX_BIT_CTRL_OUT2[125] = GND;
assign RX_BIT_CTRL_OUT2[126] = GND;
assign RX_BIT_CTRL_OUT2[127] = GND;
assign RX_BIT_CTRL_OUT2[128] = GND;
assign RX_BIT_CTRL_OUT2[129] = GND;
assign RX_BIT_CTRL_OUT2[130] = GND;
assign RX_BIT_CTRL_OUT2[131] = GND;
assign RX_BIT_CTRL_OUT2[132] = GND;
assign RX_BIT_CTRL_OUT2[133] = GND;
assign RX_BIT_CTRL_OUT2[134] = GND;
assign RX_BIT_CTRL_OUT2[135] = GND;
assign RX_BIT_CTRL_OUT2[136] = GND;
assign RX_BIT_CTRL_OUT2[137] = GND;
assign RX_BIT_CTRL_OUT2[138] = GND;
assign RX_BIT_CTRL_OUT2[139] = GND;
assign RX_BIT_CTRL_OUT2[140] = GND;
assign RX_BIT_CTRL_OUT2[141] = GND;
assign RX_BIT_CTRL_OUT2[142] = GND;
assign RX_BIT_CTRL_OUT2[143] = GND;
assign RX_BIT_CTRL_OUT2[144] = GND;
assign RX_BIT_CTRL_OUT2[145] = GND;
assign RX_BIT_CTRL_OUT2[146] = GND;
assign RX_BIT_CTRL_OUT2[147] = GND;
assign RX_BIT_CTRL_OUT2[148] = GND;
assign RX_BIT_CTRL_OUT2[149] = GND;
assign RX_BIT_CTRL_OUT2[150] = GND;
assign RX_BIT_CTRL_OUT2[151] = GND;
assign RX_BIT_CTRL_OUT2[152] = GND;
assign RX_BIT_CTRL_OUT2[153] = GND;
assign RX_BIT_CTRL_OUT2[154] = GND;
assign RX_BIT_CTRL_OUT2[155] = GND;
assign RX_BIT_CTRL_OUT2[156] = GND;
assign RX_BIT_CTRL_OUT2[157] = GND;
assign RX_BIT_CTRL_OUT2[158] = GND;
assign RX_BIT_CTRL_OUT2[159] = GND;
assign RX_BIT_CTRL_OUT2[160] = GND;
assign RX_BIT_CTRL_OUT2[161] = GND;
assign RX_BIT_CTRL_OUT2[162] = GND;
assign RX_BIT_CTRL_OUT2[163] = GND;
assign RX_BIT_CTRL_OUT2[164] = GND;
assign RX_BIT_CTRL_OUT2[165] = GND;
assign RX_BIT_CTRL_OUT2[166] = GND;
assign RX_BIT_CTRL_OUT2[167] = GND;
assign RX_BIT_CTRL_OUT2[168] = GND;
assign RX_BIT_CTRL_OUT2[169] = GND;
assign RX_BIT_CTRL_OUT2[170] = GND;
assign RX_BIT_CTRL_OUT2[171] = GND;
assign RX_BIT_CTRL_OUT2[172] = GND;
assign RX_BIT_CTRL_OUT2[173] = GND;
assign RX_BIT_CTRL_OUT2[174] = GND;
assign RX_BIT_CTRL_OUT2[175] = GND;
assign RX_BIT_CTRL_OUT2[176] = GND;
assign RX_BIT_CTRL_OUT2[177] = GND;
assign RX_BIT_CTRL_OUT2[178] = GND;
assign RX_BIT_CTRL_OUT2[179] = GND;
assign RX_BIT_CTRL_OUT2[180] = GND;
assign RX_BIT_CTRL_OUT2[181] = GND;
assign RX_BIT_CTRL_OUT2[182] = GND;
assign RX_BIT_CTRL_OUT2[183] = GND;
assign RX_BIT_CTRL_OUT2[184] = GND;
assign RX_BIT_CTRL_OUT2[185] = GND;
assign RX_BIT_CTRL_OUT2[186] = GND;
assign RX_BIT_CTRL_OUT2[187] = GND;
assign RX_BIT_CTRL_OUT2[188] = GND;
assign RX_BIT_CTRL_OUT2[189] = GND;
assign RX_BIT_CTRL_OUT2[190] = GND;
assign RX_BIT_CTRL_OUT2[191] = GND;
assign RX_BIT_CTRL_OUT2[192] = GND;
assign RX_BIT_CTRL_OUT2[193] = GND;
assign RX_BIT_CTRL_OUT2[194] = GND;
assign RX_BIT_CTRL_OUT2[195] = GND;
assign RX_BIT_CTRL_OUT2[196] = GND;
assign RX_BIT_CTRL_OUT2[197] = GND;
assign RX_BIT_CTRL_OUT2[198] = GND;
assign RX_BIT_CTRL_OUT2[199] = GND;
assign RX_BIT_CTRL_OUT2[240] = GND;
assign RX_BIT_CTRL_OUT2[241] = GND;
assign RX_BIT_CTRL_OUT2[242] = GND;
assign RX_BIT_CTRL_OUT2[243] = GND;
assign RX_BIT_CTRL_OUT2[244] = GND;
assign RX_BIT_CTRL_OUT2[245] = GND;
assign RX_BIT_CTRL_OUT2[246] = GND;
assign RX_BIT_CTRL_OUT2[247] = GND;
assign RX_BIT_CTRL_OUT2[248] = GND;
assign RX_BIT_CTRL_OUT2[249] = GND;
assign RX_BIT_CTRL_OUT2[250] = GND;
assign RX_BIT_CTRL_OUT2[251] = GND;
assign RX_BIT_CTRL_OUT2[252] = GND;
assign RX_BIT_CTRL_OUT2[253] = GND;
assign RX_BIT_CTRL_OUT2[254] = GND;
assign RX_BIT_CTRL_OUT2[255] = GND;
assign RX_BIT_CTRL_OUT2[256] = GND;
assign RX_BIT_CTRL_OUT2[257] = GND;
assign RX_BIT_CTRL_OUT2[258] = GND;
assign RX_BIT_CTRL_OUT2[259] = GND;
assign RX_BIT_CTRL_OUT2[260] = GND;
assign RX_BIT_CTRL_OUT2[261] = GND;
assign RX_BIT_CTRL_OUT2[262] = GND;
assign RX_BIT_CTRL_OUT2[263] = GND;
assign RX_BIT_CTRL_OUT2[264] = GND;
assign RX_BIT_CTRL_OUT2[265] = GND;
assign RX_BIT_CTRL_OUT2[266] = GND;
assign RX_BIT_CTRL_OUT2[267] = GND;
assign RX_BIT_CTRL_OUT2[268] = GND;
assign RX_BIT_CTRL_OUT2[269] = GND;
assign RX_BIT_CTRL_OUT2[270] = GND;
assign RX_BIT_CTRL_OUT2[271] = GND;
assign RX_BIT_CTRL_OUT2[272] = GND;
assign RX_BIT_CTRL_OUT2[273] = GND;
assign RX_BIT_CTRL_OUT2[274] = GND;
assign RX_BIT_CTRL_OUT2[275] = GND;
assign RX_BIT_CTRL_OUT2[276] = GND;
assign RX_BIT_CTRL_OUT2[277] = GND;
assign RX_BIT_CTRL_OUT2[278] = GND;
assign RX_BIT_CTRL_OUT2[279] = GND;
assign RX_BIT_CTRL_OUT2[280] = GND;
assign RX_BIT_CTRL_OUT2[281] = GND;
assign RX_BIT_CTRL_OUT2[282] = GND;
assign RX_BIT_CTRL_OUT2[283] = GND;
assign RX_BIT_CTRL_OUT2[284] = GND;
assign RX_BIT_CTRL_OUT2[285] = GND;
assign RX_BIT_CTRL_OUT2[286] = GND;
assign RX_BIT_CTRL_OUT2[287] = GND;
assign RX_BIT_CTRL_OUT2[288] = GND;
assign RX_BIT_CTRL_OUT2[289] = GND;
assign RX_BIT_CTRL_OUT2[290] = GND;
assign RX_BIT_CTRL_OUT2[291] = GND;
assign RX_BIT_CTRL_OUT2[292] = GND;
assign RX_BIT_CTRL_OUT2[293] = GND;
assign RX_BIT_CTRL_OUT2[294] = GND;
assign RX_BIT_CTRL_OUT2[295] = GND;
assign RX_BIT_CTRL_OUT2[296] = GND;
assign RX_BIT_CTRL_OUT2[297] = GND;
assign RX_BIT_CTRL_OUT2[298] = GND;
assign RX_BIT_CTRL_OUT2[299] = GND;
assign RX_BIT_CTRL_OUT2[300] = GND;
assign RX_BIT_CTRL_OUT2[301] = GND;
assign RX_BIT_CTRL_OUT2[302] = GND;
assign RX_BIT_CTRL_OUT2[303] = GND;
assign RX_BIT_CTRL_OUT2[304] = GND;
assign RX_BIT_CTRL_OUT2[305] = GND;
assign RX_BIT_CTRL_OUT2[306] = GND;
assign RX_BIT_CTRL_OUT2[307] = GND;
assign RX_BIT_CTRL_OUT2[308] = GND;
assign RX_BIT_CTRL_OUT2[309] = GND;
assign RX_BIT_CTRL_OUT2[310] = GND;
assign RX_BIT_CTRL_OUT2[311] = GND;
assign RX_BIT_CTRL_OUT2[312] = GND;
assign RX_BIT_CTRL_OUT2[313] = GND;
assign RX_BIT_CTRL_OUT2[314] = GND;
assign RX_BIT_CTRL_OUT2[315] = GND;
assign RX_BIT_CTRL_OUT2[316] = GND;
assign RX_BIT_CTRL_OUT2[317] = GND;
assign RX_BIT_CTRL_OUT2[318] = GND;
assign RX_BIT_CTRL_OUT2[319] = GND;
assign RX_BIT_CTRL_OUT3[0] = GND;
assign RX_BIT_CTRL_OUT3[1] = GND;
assign RX_BIT_CTRL_OUT3[2] = GND;
assign RX_BIT_CTRL_OUT3[3] = GND;
assign RX_BIT_CTRL_OUT3[4] = GND;
assign RX_BIT_CTRL_OUT3[5] = GND;
assign RX_BIT_CTRL_OUT3[6] = GND;
assign RX_BIT_CTRL_OUT3[7] = GND;
assign RX_BIT_CTRL_OUT3[8] = GND;
assign RX_BIT_CTRL_OUT3[9] = GND;
assign RX_BIT_CTRL_OUT3[10] = GND;
assign RX_BIT_CTRL_OUT3[11] = GND;
assign RX_BIT_CTRL_OUT3[12] = GND;
assign RX_BIT_CTRL_OUT3[13] = GND;
assign RX_BIT_CTRL_OUT3[14] = GND;
assign RX_BIT_CTRL_OUT3[15] = GND;
assign RX_BIT_CTRL_OUT3[16] = GND;
assign RX_BIT_CTRL_OUT3[17] = GND;
assign RX_BIT_CTRL_OUT3[18] = GND;
assign RX_BIT_CTRL_OUT3[19] = GND;
assign RX_BIT_CTRL_OUT3[20] = GND;
assign RX_BIT_CTRL_OUT3[21] = GND;
assign RX_BIT_CTRL_OUT3[22] = GND;
assign RX_BIT_CTRL_OUT3[23] = GND;
assign RX_BIT_CTRL_OUT3[24] = GND;
assign RX_BIT_CTRL_OUT3[25] = GND;
assign RX_BIT_CTRL_OUT3[26] = GND;
assign RX_BIT_CTRL_OUT3[27] = GND;
assign RX_BIT_CTRL_OUT3[28] = GND;
assign RX_BIT_CTRL_OUT3[29] = GND;
assign RX_BIT_CTRL_OUT3[30] = GND;
assign RX_BIT_CTRL_OUT3[31] = GND;
assign RX_BIT_CTRL_OUT3[32] = GND;
assign RX_BIT_CTRL_OUT3[33] = GND;
assign RX_BIT_CTRL_OUT3[34] = GND;
assign RX_BIT_CTRL_OUT3[35] = GND;
assign RX_BIT_CTRL_OUT3[36] = GND;
assign RX_BIT_CTRL_OUT3[37] = GND;
assign RX_BIT_CTRL_OUT3[38] = GND;
assign RX_BIT_CTRL_OUT3[39] = GND;
assign RX_BIT_CTRL_OUT3[40] = GND;
assign RX_BIT_CTRL_OUT3[41] = GND;
assign RX_BIT_CTRL_OUT3[42] = GND;
assign RX_BIT_CTRL_OUT3[43] = GND;
assign RX_BIT_CTRL_OUT3[44] = GND;
assign RX_BIT_CTRL_OUT3[45] = GND;
assign RX_BIT_CTRL_OUT3[46] = GND;
assign RX_BIT_CTRL_OUT3[47] = GND;
assign RX_BIT_CTRL_OUT3[48] = GND;
assign RX_BIT_CTRL_OUT3[49] = GND;
assign RX_BIT_CTRL_OUT3[50] = GND;
assign RX_BIT_CTRL_OUT3[51] = GND;
assign RX_BIT_CTRL_OUT3[52] = GND;
assign RX_BIT_CTRL_OUT3[53] = GND;
assign RX_BIT_CTRL_OUT3[54] = GND;
assign RX_BIT_CTRL_OUT3[55] = GND;
assign RX_BIT_CTRL_OUT3[56] = GND;
assign RX_BIT_CTRL_OUT3[57] = GND;
assign RX_BIT_CTRL_OUT3[58] = GND;
assign RX_BIT_CTRL_OUT3[59] = GND;
assign RX_BIT_CTRL_OUT3[60] = GND;
assign RX_BIT_CTRL_OUT3[61] = GND;
assign RX_BIT_CTRL_OUT3[62] = GND;
assign RX_BIT_CTRL_OUT3[63] = GND;
assign RX_BIT_CTRL_OUT3[64] = GND;
assign RX_BIT_CTRL_OUT3[65] = GND;
assign RX_BIT_CTRL_OUT3[66] = GND;
assign RX_BIT_CTRL_OUT3[67] = GND;
assign RX_BIT_CTRL_OUT3[68] = GND;
assign RX_BIT_CTRL_OUT3[69] = GND;
assign RX_BIT_CTRL_OUT3[70] = GND;
assign RX_BIT_CTRL_OUT3[71] = GND;
assign RX_BIT_CTRL_OUT3[72] = GND;
assign RX_BIT_CTRL_OUT3[73] = GND;
assign RX_BIT_CTRL_OUT3[74] = GND;
assign RX_BIT_CTRL_OUT3[75] = GND;
assign RX_BIT_CTRL_OUT3[76] = GND;
assign RX_BIT_CTRL_OUT3[77] = GND;
assign RX_BIT_CTRL_OUT3[78] = GND;
assign RX_BIT_CTRL_OUT3[79] = GND;
assign RX_BIT_CTRL_OUT3[80] = GND;
assign RX_BIT_CTRL_OUT3[81] = GND;
assign RX_BIT_CTRL_OUT3[82] = GND;
assign RX_BIT_CTRL_OUT3[83] = GND;
assign RX_BIT_CTRL_OUT3[84] = GND;
assign RX_BIT_CTRL_OUT3[85] = GND;
assign RX_BIT_CTRL_OUT3[86] = GND;
assign RX_BIT_CTRL_OUT3[87] = GND;
assign RX_BIT_CTRL_OUT3[88] = GND;
assign RX_BIT_CTRL_OUT3[89] = GND;
assign RX_BIT_CTRL_OUT3[90] = GND;
assign RX_BIT_CTRL_OUT3[91] = GND;
assign RX_BIT_CTRL_OUT3[92] = GND;
assign RX_BIT_CTRL_OUT3[93] = GND;
assign RX_BIT_CTRL_OUT3[94] = GND;
assign RX_BIT_CTRL_OUT3[95] = GND;
assign RX_BIT_CTRL_OUT3[96] = GND;
assign RX_BIT_CTRL_OUT3[97] = GND;
assign RX_BIT_CTRL_OUT3[98] = GND;
assign RX_BIT_CTRL_OUT3[99] = GND;
assign RX_BIT_CTRL_OUT3[100] = GND;
assign RX_BIT_CTRL_OUT3[101] = GND;
assign RX_BIT_CTRL_OUT3[102] = GND;
assign RX_BIT_CTRL_OUT3[103] = GND;
assign RX_BIT_CTRL_OUT3[104] = GND;
assign RX_BIT_CTRL_OUT3[105] = GND;
assign RX_BIT_CTRL_OUT3[106] = GND;
assign RX_BIT_CTRL_OUT3[107] = GND;
assign RX_BIT_CTRL_OUT3[108] = GND;
assign RX_BIT_CTRL_OUT3[109] = GND;
assign RX_BIT_CTRL_OUT3[110] = GND;
assign RX_BIT_CTRL_OUT3[111] = GND;
assign RX_BIT_CTRL_OUT3[112] = GND;
assign RX_BIT_CTRL_OUT3[113] = GND;
assign RX_BIT_CTRL_OUT3[114] = GND;
assign RX_BIT_CTRL_OUT3[115] = GND;
assign RX_BIT_CTRL_OUT3[116] = GND;
assign RX_BIT_CTRL_OUT3[117] = GND;
assign RX_BIT_CTRL_OUT3[118] = GND;
assign RX_BIT_CTRL_OUT3[119] = GND;
assign RX_BIT_CTRL_OUT3[120] = GND;
assign RX_BIT_CTRL_OUT3[121] = GND;
assign RX_BIT_CTRL_OUT3[122] = GND;
assign RX_BIT_CTRL_OUT3[123] = GND;
assign RX_BIT_CTRL_OUT3[124] = GND;
assign RX_BIT_CTRL_OUT3[125] = GND;
assign RX_BIT_CTRL_OUT3[126] = GND;
assign RX_BIT_CTRL_OUT3[127] = GND;
assign RX_BIT_CTRL_OUT3[128] = GND;
assign RX_BIT_CTRL_OUT3[129] = GND;
assign RX_BIT_CTRL_OUT3[130] = GND;
assign RX_BIT_CTRL_OUT3[131] = GND;
assign RX_BIT_CTRL_OUT3[132] = GND;
assign RX_BIT_CTRL_OUT3[133] = GND;
assign RX_BIT_CTRL_OUT3[134] = GND;
assign RX_BIT_CTRL_OUT3[135] = GND;
assign RX_BIT_CTRL_OUT3[136] = GND;
assign RX_BIT_CTRL_OUT3[137] = GND;
assign RX_BIT_CTRL_OUT3[138] = GND;
assign RX_BIT_CTRL_OUT3[139] = GND;
assign RX_BIT_CTRL_OUT3[140] = GND;
assign RX_BIT_CTRL_OUT3[141] = GND;
assign RX_BIT_CTRL_OUT3[142] = GND;
assign RX_BIT_CTRL_OUT3[143] = GND;
assign RX_BIT_CTRL_OUT3[144] = GND;
assign RX_BIT_CTRL_OUT3[145] = GND;
assign RX_BIT_CTRL_OUT3[146] = GND;
assign RX_BIT_CTRL_OUT3[147] = GND;
assign RX_BIT_CTRL_OUT3[148] = GND;
assign RX_BIT_CTRL_OUT3[149] = GND;
assign RX_BIT_CTRL_OUT3[150] = GND;
assign RX_BIT_CTRL_OUT3[151] = GND;
assign RX_BIT_CTRL_OUT3[152] = GND;
assign RX_BIT_CTRL_OUT3[153] = GND;
assign RX_BIT_CTRL_OUT3[154] = GND;
assign RX_BIT_CTRL_OUT3[155] = GND;
assign RX_BIT_CTRL_OUT3[156] = GND;
assign RX_BIT_CTRL_OUT3[157] = GND;
assign RX_BIT_CTRL_OUT3[158] = GND;
assign RX_BIT_CTRL_OUT3[159] = GND;
assign RX_BIT_CTRL_OUT3[160] = GND;
assign RX_BIT_CTRL_OUT3[161] = GND;
assign RX_BIT_CTRL_OUT3[162] = GND;
assign RX_BIT_CTRL_OUT3[163] = GND;
assign RX_BIT_CTRL_OUT3[164] = GND;
assign RX_BIT_CTRL_OUT3[165] = GND;
assign RX_BIT_CTRL_OUT3[166] = GND;
assign RX_BIT_CTRL_OUT3[167] = GND;
assign RX_BIT_CTRL_OUT3[168] = GND;
assign RX_BIT_CTRL_OUT3[169] = GND;
assign RX_BIT_CTRL_OUT3[170] = GND;
assign RX_BIT_CTRL_OUT3[171] = GND;
assign RX_BIT_CTRL_OUT3[172] = GND;
assign RX_BIT_CTRL_OUT3[173] = GND;
assign RX_BIT_CTRL_OUT3[174] = GND;
assign RX_BIT_CTRL_OUT3[175] = GND;
assign RX_BIT_CTRL_OUT3[176] = GND;
assign RX_BIT_CTRL_OUT3[177] = GND;
assign RX_BIT_CTRL_OUT3[178] = GND;
assign RX_BIT_CTRL_OUT3[179] = GND;
assign RX_BIT_CTRL_OUT3[180] = GND;
assign RX_BIT_CTRL_OUT3[181] = GND;
assign RX_BIT_CTRL_OUT3[182] = GND;
assign RX_BIT_CTRL_OUT3[183] = GND;
assign RX_BIT_CTRL_OUT3[184] = GND;
assign RX_BIT_CTRL_OUT3[185] = GND;
assign RX_BIT_CTRL_OUT3[186] = GND;
assign RX_BIT_CTRL_OUT3[187] = GND;
assign RX_BIT_CTRL_OUT3[188] = GND;
assign RX_BIT_CTRL_OUT3[189] = GND;
assign RX_BIT_CTRL_OUT3[190] = GND;
assign RX_BIT_CTRL_OUT3[191] = GND;
assign RX_BIT_CTRL_OUT3[192] = GND;
assign RX_BIT_CTRL_OUT3[193] = GND;
assign RX_BIT_CTRL_OUT3[194] = GND;
assign RX_BIT_CTRL_OUT3[195] = GND;
assign RX_BIT_CTRL_OUT3[196] = GND;
assign RX_BIT_CTRL_OUT3[197] = GND;
assign RX_BIT_CTRL_OUT3[198] = GND;
assign RX_BIT_CTRL_OUT3[199] = GND;
assign RX_BIT_CTRL_OUT3[240] = GND;
assign RX_BIT_CTRL_OUT3[241] = GND;
assign RX_BIT_CTRL_OUT3[242] = GND;
assign RX_BIT_CTRL_OUT3[243] = GND;
assign RX_BIT_CTRL_OUT3[244] = GND;
assign RX_BIT_CTRL_OUT3[245] = GND;
assign RX_BIT_CTRL_OUT3[246] = GND;
assign RX_BIT_CTRL_OUT3[247] = GND;
assign RX_BIT_CTRL_OUT3[248] = GND;
assign RX_BIT_CTRL_OUT3[249] = GND;
assign RX_BIT_CTRL_OUT3[250] = GND;
assign RX_BIT_CTRL_OUT3[251] = GND;
assign RX_BIT_CTRL_OUT3[252] = GND;
assign RX_BIT_CTRL_OUT3[253] = GND;
assign RX_BIT_CTRL_OUT3[254] = GND;
assign RX_BIT_CTRL_OUT3[255] = GND;
assign RX_BIT_CTRL_OUT3[256] = GND;
assign RX_BIT_CTRL_OUT3[257] = GND;
assign RX_BIT_CTRL_OUT3[258] = GND;
assign RX_BIT_CTRL_OUT3[259] = GND;
assign RX_BIT_CTRL_OUT3[260] = GND;
assign RX_BIT_CTRL_OUT3[261] = GND;
assign RX_BIT_CTRL_OUT3[262] = GND;
assign RX_BIT_CTRL_OUT3[263] = GND;
assign RX_BIT_CTRL_OUT3[264] = GND;
assign RX_BIT_CTRL_OUT3[265] = GND;
assign RX_BIT_CTRL_OUT3[266] = GND;
assign RX_BIT_CTRL_OUT3[267] = GND;
assign RX_BIT_CTRL_OUT3[268] = GND;
assign RX_BIT_CTRL_OUT3[269] = GND;
assign RX_BIT_CTRL_OUT3[270] = GND;
assign RX_BIT_CTRL_OUT3[271] = GND;
assign RX_BIT_CTRL_OUT3[272] = GND;
assign RX_BIT_CTRL_OUT3[273] = GND;
assign RX_BIT_CTRL_OUT3[274] = GND;
assign RX_BIT_CTRL_OUT3[275] = GND;
assign RX_BIT_CTRL_OUT3[276] = GND;
assign RX_BIT_CTRL_OUT3[277] = GND;
assign RX_BIT_CTRL_OUT3[278] = GND;
assign RX_BIT_CTRL_OUT3[279] = GND;
assign RX_BIT_CTRL_OUT3[280] = GND;
assign RX_BIT_CTRL_OUT3[281] = GND;
assign RX_BIT_CTRL_OUT3[282] = GND;
assign RX_BIT_CTRL_OUT3[283] = GND;
assign RX_BIT_CTRL_OUT3[284] = GND;
assign RX_BIT_CTRL_OUT3[285] = GND;
assign RX_BIT_CTRL_OUT3[286] = GND;
assign RX_BIT_CTRL_OUT3[287] = GND;
assign RX_BIT_CTRL_OUT3[288] = GND;
assign RX_BIT_CTRL_OUT3[289] = GND;
assign RX_BIT_CTRL_OUT3[290] = GND;
assign RX_BIT_CTRL_OUT3[291] = GND;
assign RX_BIT_CTRL_OUT3[292] = GND;
assign RX_BIT_CTRL_OUT3[293] = GND;
assign RX_BIT_CTRL_OUT3[294] = GND;
assign RX_BIT_CTRL_OUT3[295] = GND;
assign RX_BIT_CTRL_OUT3[296] = GND;
assign RX_BIT_CTRL_OUT3[297] = GND;
assign RX_BIT_CTRL_OUT3[298] = GND;
assign RX_BIT_CTRL_OUT3[299] = GND;
assign RX_BIT_CTRL_OUT3[300] = GND;
assign RX_BIT_CTRL_OUT3[301] = GND;
assign RX_BIT_CTRL_OUT3[302] = GND;
assign RX_BIT_CTRL_OUT3[303] = GND;
assign RX_BIT_CTRL_OUT3[304] = GND;
assign RX_BIT_CTRL_OUT3[305] = GND;
assign RX_BIT_CTRL_OUT3[306] = GND;
assign RX_BIT_CTRL_OUT3[307] = GND;
assign RX_BIT_CTRL_OUT3[308] = GND;
assign RX_BIT_CTRL_OUT3[309] = GND;
assign RX_BIT_CTRL_OUT3[310] = GND;
assign RX_BIT_CTRL_OUT3[311] = GND;
assign RX_BIT_CTRL_OUT3[312] = GND;
assign RX_BIT_CTRL_OUT3[313] = GND;
assign RX_BIT_CTRL_OUT3[314] = GND;
assign RX_BIT_CTRL_OUT3[315] = GND;
assign RX_BIT_CTRL_OUT3[316] = GND;
assign RX_BIT_CTRL_OUT3[317] = GND;
assign RX_BIT_CTRL_OUT3[318] = GND;
assign RX_BIT_CTRL_OUT3[319] = GND;
assign RX_BIT_CTRL_OUT4[0] = GND;
assign RX_BIT_CTRL_OUT4[1] = GND;
assign RX_BIT_CTRL_OUT4[2] = GND;
assign RX_BIT_CTRL_OUT4[3] = GND;
assign RX_BIT_CTRL_OUT4[4] = GND;
assign RX_BIT_CTRL_OUT4[5] = GND;
assign RX_BIT_CTRL_OUT4[6] = GND;
assign RX_BIT_CTRL_OUT4[7] = GND;
assign RX_BIT_CTRL_OUT4[8] = GND;
assign RX_BIT_CTRL_OUT4[9] = GND;
assign RX_BIT_CTRL_OUT4[10] = GND;
assign RX_BIT_CTRL_OUT4[11] = GND;
assign RX_BIT_CTRL_OUT4[12] = GND;
assign RX_BIT_CTRL_OUT4[13] = GND;
assign RX_BIT_CTRL_OUT4[14] = GND;
assign RX_BIT_CTRL_OUT4[15] = GND;
assign RX_BIT_CTRL_OUT4[16] = GND;
assign RX_BIT_CTRL_OUT4[17] = GND;
assign RX_BIT_CTRL_OUT4[18] = GND;
assign RX_BIT_CTRL_OUT4[19] = GND;
assign RX_BIT_CTRL_OUT4[20] = GND;
assign RX_BIT_CTRL_OUT4[21] = GND;
assign RX_BIT_CTRL_OUT4[22] = GND;
assign RX_BIT_CTRL_OUT4[23] = GND;
assign RX_BIT_CTRL_OUT4[24] = GND;
assign RX_BIT_CTRL_OUT4[25] = GND;
assign RX_BIT_CTRL_OUT4[26] = GND;
assign RX_BIT_CTRL_OUT4[27] = GND;
assign RX_BIT_CTRL_OUT4[28] = GND;
assign RX_BIT_CTRL_OUT4[29] = GND;
assign RX_BIT_CTRL_OUT4[30] = GND;
assign RX_BIT_CTRL_OUT4[31] = GND;
assign RX_BIT_CTRL_OUT4[32] = GND;
assign RX_BIT_CTRL_OUT4[33] = GND;
assign RX_BIT_CTRL_OUT4[34] = GND;
assign RX_BIT_CTRL_OUT4[35] = GND;
assign RX_BIT_CTRL_OUT4[36] = GND;
assign RX_BIT_CTRL_OUT4[37] = GND;
assign RX_BIT_CTRL_OUT4[38] = GND;
assign RX_BIT_CTRL_OUT4[39] = GND;
assign RX_BIT_CTRL_OUT4[40] = GND;
assign RX_BIT_CTRL_OUT4[41] = GND;
assign RX_BIT_CTRL_OUT4[42] = GND;
assign RX_BIT_CTRL_OUT4[43] = GND;
assign RX_BIT_CTRL_OUT4[44] = GND;
assign RX_BIT_CTRL_OUT4[45] = GND;
assign RX_BIT_CTRL_OUT4[46] = GND;
assign RX_BIT_CTRL_OUT4[47] = GND;
assign RX_BIT_CTRL_OUT4[48] = GND;
assign RX_BIT_CTRL_OUT4[49] = GND;
assign RX_BIT_CTRL_OUT4[50] = GND;
assign RX_BIT_CTRL_OUT4[51] = GND;
assign RX_BIT_CTRL_OUT4[52] = GND;
assign RX_BIT_CTRL_OUT4[53] = GND;
assign RX_BIT_CTRL_OUT4[54] = GND;
assign RX_BIT_CTRL_OUT4[55] = GND;
assign RX_BIT_CTRL_OUT4[56] = GND;
assign RX_BIT_CTRL_OUT4[57] = GND;
assign RX_BIT_CTRL_OUT4[58] = GND;
assign RX_BIT_CTRL_OUT4[59] = GND;
assign RX_BIT_CTRL_OUT4[60] = GND;
assign RX_BIT_CTRL_OUT4[61] = GND;
assign RX_BIT_CTRL_OUT4[62] = GND;
assign RX_BIT_CTRL_OUT4[63] = GND;
assign RX_BIT_CTRL_OUT4[64] = GND;
assign RX_BIT_CTRL_OUT4[65] = GND;
assign RX_BIT_CTRL_OUT4[66] = GND;
assign RX_BIT_CTRL_OUT4[67] = GND;
assign RX_BIT_CTRL_OUT4[68] = GND;
assign RX_BIT_CTRL_OUT4[69] = GND;
assign RX_BIT_CTRL_OUT4[70] = GND;
assign RX_BIT_CTRL_OUT4[71] = GND;
assign RX_BIT_CTRL_OUT4[72] = GND;
assign RX_BIT_CTRL_OUT4[73] = GND;
assign RX_BIT_CTRL_OUT4[74] = GND;
assign RX_BIT_CTRL_OUT4[75] = GND;
assign RX_BIT_CTRL_OUT4[76] = GND;
assign RX_BIT_CTRL_OUT4[77] = GND;
assign RX_BIT_CTRL_OUT4[78] = GND;
assign RX_BIT_CTRL_OUT4[79] = GND;
assign RX_BIT_CTRL_OUT4[80] = GND;
assign RX_BIT_CTRL_OUT4[81] = GND;
assign RX_BIT_CTRL_OUT4[82] = GND;
assign RX_BIT_CTRL_OUT4[83] = GND;
assign RX_BIT_CTRL_OUT4[84] = GND;
assign RX_BIT_CTRL_OUT4[85] = GND;
assign RX_BIT_CTRL_OUT4[86] = GND;
assign RX_BIT_CTRL_OUT4[87] = GND;
assign RX_BIT_CTRL_OUT4[88] = GND;
assign RX_BIT_CTRL_OUT4[89] = GND;
assign RX_BIT_CTRL_OUT4[90] = GND;
assign RX_BIT_CTRL_OUT4[91] = GND;
assign RX_BIT_CTRL_OUT4[92] = GND;
assign RX_BIT_CTRL_OUT4[93] = GND;
assign RX_BIT_CTRL_OUT4[94] = GND;
assign RX_BIT_CTRL_OUT4[95] = GND;
assign RX_BIT_CTRL_OUT4[96] = GND;
assign RX_BIT_CTRL_OUT4[97] = GND;
assign RX_BIT_CTRL_OUT4[98] = GND;
assign RX_BIT_CTRL_OUT4[99] = GND;
assign RX_BIT_CTRL_OUT4[100] = GND;
assign RX_BIT_CTRL_OUT4[101] = GND;
assign RX_BIT_CTRL_OUT4[102] = GND;
assign RX_BIT_CTRL_OUT4[103] = GND;
assign RX_BIT_CTRL_OUT4[104] = GND;
assign RX_BIT_CTRL_OUT4[105] = GND;
assign RX_BIT_CTRL_OUT4[106] = GND;
assign RX_BIT_CTRL_OUT4[107] = GND;
assign RX_BIT_CTRL_OUT4[108] = GND;
assign RX_BIT_CTRL_OUT4[109] = GND;
assign RX_BIT_CTRL_OUT4[110] = GND;
assign RX_BIT_CTRL_OUT4[111] = GND;
assign RX_BIT_CTRL_OUT4[112] = GND;
assign RX_BIT_CTRL_OUT4[113] = GND;
assign RX_BIT_CTRL_OUT4[114] = GND;
assign RX_BIT_CTRL_OUT4[115] = GND;
assign RX_BIT_CTRL_OUT4[116] = GND;
assign RX_BIT_CTRL_OUT4[117] = GND;
assign RX_BIT_CTRL_OUT4[118] = GND;
assign RX_BIT_CTRL_OUT4[119] = GND;
assign RX_BIT_CTRL_OUT4[120] = GND;
assign RX_BIT_CTRL_OUT4[121] = GND;
assign RX_BIT_CTRL_OUT4[122] = GND;
assign RX_BIT_CTRL_OUT4[123] = GND;
assign RX_BIT_CTRL_OUT4[124] = GND;
assign RX_BIT_CTRL_OUT4[125] = GND;
assign RX_BIT_CTRL_OUT4[126] = GND;
assign RX_BIT_CTRL_OUT4[127] = GND;
assign RX_BIT_CTRL_OUT4[128] = GND;
assign RX_BIT_CTRL_OUT4[129] = GND;
assign RX_BIT_CTRL_OUT4[130] = GND;
assign RX_BIT_CTRL_OUT4[131] = GND;
assign RX_BIT_CTRL_OUT4[132] = GND;
assign RX_BIT_CTRL_OUT4[133] = GND;
assign RX_BIT_CTRL_OUT4[134] = GND;
assign RX_BIT_CTRL_OUT4[135] = GND;
assign RX_BIT_CTRL_OUT4[136] = GND;
assign RX_BIT_CTRL_OUT4[137] = GND;
assign RX_BIT_CTRL_OUT4[138] = GND;
assign RX_BIT_CTRL_OUT4[139] = GND;
assign RX_BIT_CTRL_OUT4[140] = GND;
assign RX_BIT_CTRL_OUT4[141] = GND;
assign RX_BIT_CTRL_OUT4[142] = GND;
assign RX_BIT_CTRL_OUT4[143] = GND;
assign RX_BIT_CTRL_OUT4[144] = GND;
assign RX_BIT_CTRL_OUT4[145] = GND;
assign RX_BIT_CTRL_OUT4[146] = GND;
assign RX_BIT_CTRL_OUT4[147] = GND;
assign RX_BIT_CTRL_OUT4[148] = GND;
assign RX_BIT_CTRL_OUT4[149] = GND;
assign RX_BIT_CTRL_OUT4[150] = GND;
assign RX_BIT_CTRL_OUT4[151] = GND;
assign RX_BIT_CTRL_OUT4[152] = GND;
assign RX_BIT_CTRL_OUT4[153] = GND;
assign RX_BIT_CTRL_OUT4[154] = GND;
assign RX_BIT_CTRL_OUT4[155] = GND;
assign RX_BIT_CTRL_OUT4[156] = GND;
assign RX_BIT_CTRL_OUT4[157] = GND;
assign RX_BIT_CTRL_OUT4[158] = GND;
assign RX_BIT_CTRL_OUT4[159] = GND;
assign RX_BIT_CTRL_OUT4[240] = GND;
assign RX_BIT_CTRL_OUT4[241] = GND;
assign RX_BIT_CTRL_OUT4[242] = GND;
assign RX_BIT_CTRL_OUT4[243] = GND;
assign RX_BIT_CTRL_OUT4[244] = GND;
assign RX_BIT_CTRL_OUT4[245] = GND;
assign RX_BIT_CTRL_OUT4[246] = GND;
assign RX_BIT_CTRL_OUT4[247] = GND;
assign RX_BIT_CTRL_OUT4[248] = GND;
assign RX_BIT_CTRL_OUT4[249] = GND;
assign RX_BIT_CTRL_OUT4[250] = GND;
assign RX_BIT_CTRL_OUT4[251] = GND;
assign RX_BIT_CTRL_OUT4[252] = GND;
assign RX_BIT_CTRL_OUT4[253] = GND;
assign RX_BIT_CTRL_OUT4[254] = GND;
assign RX_BIT_CTRL_OUT4[255] = GND;
assign RX_BIT_CTRL_OUT4[256] = GND;
assign RX_BIT_CTRL_OUT4[257] = GND;
assign RX_BIT_CTRL_OUT4[258] = GND;
assign RX_BIT_CTRL_OUT4[259] = GND;
assign RX_BIT_CTRL_OUT4[260] = GND;
assign RX_BIT_CTRL_OUT4[261] = GND;
assign RX_BIT_CTRL_OUT4[262] = GND;
assign RX_BIT_CTRL_OUT4[263] = GND;
assign RX_BIT_CTRL_OUT4[264] = GND;
assign RX_BIT_CTRL_OUT4[265] = GND;
assign RX_BIT_CTRL_OUT4[266] = GND;
assign RX_BIT_CTRL_OUT4[267] = GND;
assign RX_BIT_CTRL_OUT4[268] = GND;
assign RX_BIT_CTRL_OUT4[269] = GND;
assign RX_BIT_CTRL_OUT4[270] = GND;
assign RX_BIT_CTRL_OUT4[271] = GND;
assign RX_BIT_CTRL_OUT4[272] = GND;
assign RX_BIT_CTRL_OUT4[273] = GND;
assign RX_BIT_CTRL_OUT4[274] = GND;
assign RX_BIT_CTRL_OUT4[275] = GND;
assign RX_BIT_CTRL_OUT4[276] = GND;
assign RX_BIT_CTRL_OUT4[277] = GND;
assign RX_BIT_CTRL_OUT4[278] = GND;
assign RX_BIT_CTRL_OUT4[279] = GND;
assign RX_BIT_CTRL_OUT4[280] = GND;
assign RX_BIT_CTRL_OUT4[281] = GND;
assign RX_BIT_CTRL_OUT4[282] = GND;
assign RX_BIT_CTRL_OUT4[283] = GND;
assign RX_BIT_CTRL_OUT4[284] = GND;
assign RX_BIT_CTRL_OUT4[285] = GND;
assign RX_BIT_CTRL_OUT4[286] = GND;
assign RX_BIT_CTRL_OUT4[287] = GND;
assign RX_BIT_CTRL_OUT4[288] = GND;
assign RX_BIT_CTRL_OUT4[289] = GND;
assign RX_BIT_CTRL_OUT4[290] = GND;
assign RX_BIT_CTRL_OUT4[291] = GND;
assign RX_BIT_CTRL_OUT4[292] = GND;
assign RX_BIT_CTRL_OUT4[293] = GND;
assign RX_BIT_CTRL_OUT4[294] = GND;
assign RX_BIT_CTRL_OUT4[295] = GND;
assign RX_BIT_CTRL_OUT4[296] = GND;
assign RX_BIT_CTRL_OUT4[297] = GND;
assign RX_BIT_CTRL_OUT4[298] = GND;
assign RX_BIT_CTRL_OUT4[299] = GND;
assign RX_BIT_CTRL_OUT4[300] = GND;
assign RX_BIT_CTRL_OUT4[301] = GND;
assign RX_BIT_CTRL_OUT4[302] = GND;
assign RX_BIT_CTRL_OUT4[303] = GND;
assign RX_BIT_CTRL_OUT4[304] = GND;
assign RX_BIT_CTRL_OUT4[305] = GND;
assign RX_BIT_CTRL_OUT4[306] = GND;
assign RX_BIT_CTRL_OUT4[307] = GND;
assign RX_BIT_CTRL_OUT4[308] = GND;
assign RX_BIT_CTRL_OUT4[309] = GND;
assign RX_BIT_CTRL_OUT4[310] = GND;
assign RX_BIT_CTRL_OUT4[311] = GND;
assign RX_BIT_CTRL_OUT4[312] = GND;
assign RX_BIT_CTRL_OUT4[313] = GND;
assign RX_BIT_CTRL_OUT4[314] = GND;
assign RX_BIT_CTRL_OUT4[315] = GND;
assign RX_BIT_CTRL_OUT4[316] = GND;
assign RX_BIT_CTRL_OUT4[317] = GND;
assign RX_BIT_CTRL_OUT4[318] = GND;
assign RX_BIT_CTRL_OUT4[319] = GND;
assign RX_BIT_CTRL_OUT5[0] = GND;
assign RX_BIT_CTRL_OUT5[1] = GND;
assign RX_BIT_CTRL_OUT5[2] = GND;
assign RX_BIT_CTRL_OUT5[3] = GND;
assign RX_BIT_CTRL_OUT5[4] = GND;
assign RX_BIT_CTRL_OUT5[5] = GND;
assign RX_BIT_CTRL_OUT5[6] = GND;
assign RX_BIT_CTRL_OUT5[7] = GND;
assign RX_BIT_CTRL_OUT5[8] = GND;
assign RX_BIT_CTRL_OUT5[9] = GND;
assign RX_BIT_CTRL_OUT5[10] = GND;
assign RX_BIT_CTRL_OUT5[11] = GND;
assign RX_BIT_CTRL_OUT5[12] = GND;
assign RX_BIT_CTRL_OUT5[13] = GND;
assign RX_BIT_CTRL_OUT5[14] = GND;
assign RX_BIT_CTRL_OUT5[15] = GND;
assign RX_BIT_CTRL_OUT5[16] = GND;
assign RX_BIT_CTRL_OUT5[17] = GND;
assign RX_BIT_CTRL_OUT5[18] = GND;
assign RX_BIT_CTRL_OUT5[19] = GND;
assign RX_BIT_CTRL_OUT5[20] = GND;
assign RX_BIT_CTRL_OUT5[21] = GND;
assign RX_BIT_CTRL_OUT5[22] = GND;
assign RX_BIT_CTRL_OUT5[23] = GND;
assign RX_BIT_CTRL_OUT5[24] = GND;
assign RX_BIT_CTRL_OUT5[25] = GND;
assign RX_BIT_CTRL_OUT5[26] = GND;
assign RX_BIT_CTRL_OUT5[27] = GND;
assign RX_BIT_CTRL_OUT5[28] = GND;
assign RX_BIT_CTRL_OUT5[29] = GND;
assign RX_BIT_CTRL_OUT5[30] = GND;
assign RX_BIT_CTRL_OUT5[31] = GND;
assign RX_BIT_CTRL_OUT5[32] = GND;
assign RX_BIT_CTRL_OUT5[33] = GND;
assign RX_BIT_CTRL_OUT5[34] = GND;
assign RX_BIT_CTRL_OUT5[35] = GND;
assign RX_BIT_CTRL_OUT5[36] = GND;
assign RX_BIT_CTRL_OUT5[37] = GND;
assign RX_BIT_CTRL_OUT5[38] = GND;
assign RX_BIT_CTRL_OUT5[39] = GND;
assign RX_BIT_CTRL_OUT5[40] = GND;
assign RX_BIT_CTRL_OUT5[41] = GND;
assign RX_BIT_CTRL_OUT5[42] = GND;
assign RX_BIT_CTRL_OUT5[43] = GND;
assign RX_BIT_CTRL_OUT5[44] = GND;
assign RX_BIT_CTRL_OUT5[45] = GND;
assign RX_BIT_CTRL_OUT5[46] = GND;
assign RX_BIT_CTRL_OUT5[47] = GND;
assign RX_BIT_CTRL_OUT5[48] = GND;
assign RX_BIT_CTRL_OUT5[49] = GND;
assign RX_BIT_CTRL_OUT5[50] = GND;
assign RX_BIT_CTRL_OUT5[51] = GND;
assign RX_BIT_CTRL_OUT5[52] = GND;
assign RX_BIT_CTRL_OUT5[53] = GND;
assign RX_BIT_CTRL_OUT5[54] = GND;
assign RX_BIT_CTRL_OUT5[55] = GND;
assign RX_BIT_CTRL_OUT5[56] = GND;
assign RX_BIT_CTRL_OUT5[57] = GND;
assign RX_BIT_CTRL_OUT5[58] = GND;
assign RX_BIT_CTRL_OUT5[59] = GND;
assign RX_BIT_CTRL_OUT5[60] = GND;
assign RX_BIT_CTRL_OUT5[61] = GND;
assign RX_BIT_CTRL_OUT5[62] = GND;
assign RX_BIT_CTRL_OUT5[63] = GND;
assign RX_BIT_CTRL_OUT5[64] = GND;
assign RX_BIT_CTRL_OUT5[65] = GND;
assign RX_BIT_CTRL_OUT5[66] = GND;
assign RX_BIT_CTRL_OUT5[67] = GND;
assign RX_BIT_CTRL_OUT5[68] = GND;
assign RX_BIT_CTRL_OUT5[69] = GND;
assign RX_BIT_CTRL_OUT5[70] = GND;
assign RX_BIT_CTRL_OUT5[71] = GND;
assign RX_BIT_CTRL_OUT5[72] = GND;
assign RX_BIT_CTRL_OUT5[73] = GND;
assign RX_BIT_CTRL_OUT5[74] = GND;
assign RX_BIT_CTRL_OUT5[75] = GND;
assign RX_BIT_CTRL_OUT5[76] = GND;
assign RX_BIT_CTRL_OUT5[77] = GND;
assign RX_BIT_CTRL_OUT5[78] = GND;
assign RX_BIT_CTRL_OUT5[79] = GND;
assign RX_BIT_CTRL_OUT5[80] = GND;
assign RX_BIT_CTRL_OUT5[81] = GND;
assign RX_BIT_CTRL_OUT5[82] = GND;
assign RX_BIT_CTRL_OUT5[83] = GND;
assign RX_BIT_CTRL_OUT5[84] = GND;
assign RX_BIT_CTRL_OUT5[85] = GND;
assign RX_BIT_CTRL_OUT5[86] = GND;
assign RX_BIT_CTRL_OUT5[87] = GND;
assign RX_BIT_CTRL_OUT5[88] = GND;
assign RX_BIT_CTRL_OUT5[89] = GND;
assign RX_BIT_CTRL_OUT5[90] = GND;
assign RX_BIT_CTRL_OUT5[91] = GND;
assign RX_BIT_CTRL_OUT5[92] = GND;
assign RX_BIT_CTRL_OUT5[93] = GND;
assign RX_BIT_CTRL_OUT5[94] = GND;
assign RX_BIT_CTRL_OUT5[95] = GND;
assign RX_BIT_CTRL_OUT5[96] = GND;
assign RX_BIT_CTRL_OUT5[97] = GND;
assign RX_BIT_CTRL_OUT5[98] = GND;
assign RX_BIT_CTRL_OUT5[99] = GND;
assign RX_BIT_CTRL_OUT5[100] = GND;
assign RX_BIT_CTRL_OUT5[101] = GND;
assign RX_BIT_CTRL_OUT5[102] = GND;
assign RX_BIT_CTRL_OUT5[103] = GND;
assign RX_BIT_CTRL_OUT5[104] = GND;
assign RX_BIT_CTRL_OUT5[105] = GND;
assign RX_BIT_CTRL_OUT5[106] = GND;
assign RX_BIT_CTRL_OUT5[107] = GND;
assign RX_BIT_CTRL_OUT5[108] = GND;
assign RX_BIT_CTRL_OUT5[109] = GND;
assign RX_BIT_CTRL_OUT5[110] = GND;
assign RX_BIT_CTRL_OUT5[111] = GND;
assign RX_BIT_CTRL_OUT5[112] = GND;
assign RX_BIT_CTRL_OUT5[113] = GND;
assign RX_BIT_CTRL_OUT5[114] = GND;
assign RX_BIT_CTRL_OUT5[115] = GND;
assign RX_BIT_CTRL_OUT5[116] = GND;
assign RX_BIT_CTRL_OUT5[117] = GND;
assign RX_BIT_CTRL_OUT5[118] = GND;
assign RX_BIT_CTRL_OUT5[119] = GND;
assign RX_BIT_CTRL_OUT5[120] = GND;
assign RX_BIT_CTRL_OUT5[121] = GND;
assign RX_BIT_CTRL_OUT5[122] = GND;
assign RX_BIT_CTRL_OUT5[123] = GND;
assign RX_BIT_CTRL_OUT5[124] = GND;
assign RX_BIT_CTRL_OUT5[125] = GND;
assign RX_BIT_CTRL_OUT5[126] = GND;
assign RX_BIT_CTRL_OUT5[127] = GND;
assign RX_BIT_CTRL_OUT5[128] = GND;
assign RX_BIT_CTRL_OUT5[129] = GND;
assign RX_BIT_CTRL_OUT5[130] = GND;
assign RX_BIT_CTRL_OUT5[131] = GND;
assign RX_BIT_CTRL_OUT5[132] = GND;
assign RX_BIT_CTRL_OUT5[133] = GND;
assign RX_BIT_CTRL_OUT5[134] = GND;
assign RX_BIT_CTRL_OUT5[135] = GND;
assign RX_BIT_CTRL_OUT5[136] = GND;
assign RX_BIT_CTRL_OUT5[137] = GND;
assign RX_BIT_CTRL_OUT5[138] = GND;
assign RX_BIT_CTRL_OUT5[139] = GND;
assign RX_BIT_CTRL_OUT5[140] = GND;
assign RX_BIT_CTRL_OUT5[141] = GND;
assign RX_BIT_CTRL_OUT5[142] = GND;
assign RX_BIT_CTRL_OUT5[143] = GND;
assign RX_BIT_CTRL_OUT5[144] = GND;
assign RX_BIT_CTRL_OUT5[145] = GND;
assign RX_BIT_CTRL_OUT5[146] = GND;
assign RX_BIT_CTRL_OUT5[147] = GND;
assign RX_BIT_CTRL_OUT5[148] = GND;
assign RX_BIT_CTRL_OUT5[149] = GND;
assign RX_BIT_CTRL_OUT5[150] = GND;
assign RX_BIT_CTRL_OUT5[151] = GND;
assign RX_BIT_CTRL_OUT5[152] = GND;
assign RX_BIT_CTRL_OUT5[153] = GND;
assign RX_BIT_CTRL_OUT5[154] = GND;
assign RX_BIT_CTRL_OUT5[155] = GND;
assign RX_BIT_CTRL_OUT5[156] = GND;
assign RX_BIT_CTRL_OUT5[157] = GND;
assign RX_BIT_CTRL_OUT5[158] = GND;
assign RX_BIT_CTRL_OUT5[159] = GND;
assign RX_BIT_CTRL_OUT5[160] = GND;
assign RX_BIT_CTRL_OUT5[161] = GND;
assign RX_BIT_CTRL_OUT5[162] = GND;
assign RX_BIT_CTRL_OUT5[163] = GND;
assign RX_BIT_CTRL_OUT5[164] = GND;
assign RX_BIT_CTRL_OUT5[165] = GND;
assign RX_BIT_CTRL_OUT5[166] = GND;
assign RX_BIT_CTRL_OUT5[167] = GND;
assign RX_BIT_CTRL_OUT5[168] = GND;
assign RX_BIT_CTRL_OUT5[169] = GND;
assign RX_BIT_CTRL_OUT5[170] = GND;
assign RX_BIT_CTRL_OUT5[171] = GND;
assign RX_BIT_CTRL_OUT5[172] = GND;
assign RX_BIT_CTRL_OUT5[173] = GND;
assign RX_BIT_CTRL_OUT5[174] = GND;
assign RX_BIT_CTRL_OUT5[175] = GND;
assign RX_BIT_CTRL_OUT5[176] = GND;
assign RX_BIT_CTRL_OUT5[177] = GND;
assign RX_BIT_CTRL_OUT5[178] = GND;
assign RX_BIT_CTRL_OUT5[179] = GND;
assign RX_BIT_CTRL_OUT5[180] = GND;
assign RX_BIT_CTRL_OUT5[181] = GND;
assign RX_BIT_CTRL_OUT5[182] = GND;
assign RX_BIT_CTRL_OUT5[183] = GND;
assign RX_BIT_CTRL_OUT5[184] = GND;
assign RX_BIT_CTRL_OUT5[185] = GND;
assign RX_BIT_CTRL_OUT5[186] = GND;
assign RX_BIT_CTRL_OUT5[187] = GND;
assign RX_BIT_CTRL_OUT5[188] = GND;
assign RX_BIT_CTRL_OUT5[189] = GND;
assign RX_BIT_CTRL_OUT5[190] = GND;
assign RX_BIT_CTRL_OUT5[191] = GND;
assign RX_BIT_CTRL_OUT5[192] = GND;
assign RX_BIT_CTRL_OUT5[193] = GND;
assign RX_BIT_CTRL_OUT5[194] = GND;
assign RX_BIT_CTRL_OUT5[195] = GND;
assign RX_BIT_CTRL_OUT5[196] = GND;
assign RX_BIT_CTRL_OUT5[197] = GND;
assign RX_BIT_CTRL_OUT5[198] = GND;
assign RX_BIT_CTRL_OUT5[199] = GND;
assign RX_BIT_CTRL_OUT5[240] = GND;
assign RX_BIT_CTRL_OUT5[241] = GND;
assign RX_BIT_CTRL_OUT5[242] = GND;
assign RX_BIT_CTRL_OUT5[243] = GND;
assign RX_BIT_CTRL_OUT5[244] = GND;
assign RX_BIT_CTRL_OUT5[245] = GND;
assign RX_BIT_CTRL_OUT5[246] = GND;
assign RX_BIT_CTRL_OUT5[247] = GND;
assign RX_BIT_CTRL_OUT5[248] = GND;
assign RX_BIT_CTRL_OUT5[249] = GND;
assign RX_BIT_CTRL_OUT5[250] = GND;
assign RX_BIT_CTRL_OUT5[251] = GND;
assign RX_BIT_CTRL_OUT5[252] = GND;
assign RX_BIT_CTRL_OUT5[253] = GND;
assign RX_BIT_CTRL_OUT5[254] = GND;
assign RX_BIT_CTRL_OUT5[255] = GND;
assign RX_BIT_CTRL_OUT5[256] = GND;
assign RX_BIT_CTRL_OUT5[257] = GND;
assign RX_BIT_CTRL_OUT5[258] = GND;
assign RX_BIT_CTRL_OUT5[259] = GND;
assign RX_BIT_CTRL_OUT5[260] = GND;
assign RX_BIT_CTRL_OUT5[261] = GND;
assign RX_BIT_CTRL_OUT5[262] = GND;
assign RX_BIT_CTRL_OUT5[263] = GND;
assign RX_BIT_CTRL_OUT5[264] = GND;
assign RX_BIT_CTRL_OUT5[265] = GND;
assign RX_BIT_CTRL_OUT5[266] = GND;
assign RX_BIT_CTRL_OUT5[267] = GND;
assign RX_BIT_CTRL_OUT5[268] = GND;
assign RX_BIT_CTRL_OUT5[269] = GND;
assign RX_BIT_CTRL_OUT5[270] = GND;
assign RX_BIT_CTRL_OUT5[271] = GND;
assign RX_BIT_CTRL_OUT5[272] = GND;
assign RX_BIT_CTRL_OUT5[273] = GND;
assign RX_BIT_CTRL_OUT5[274] = GND;
assign RX_BIT_CTRL_OUT5[275] = GND;
assign RX_BIT_CTRL_OUT5[276] = GND;
assign RX_BIT_CTRL_OUT5[277] = GND;
assign RX_BIT_CTRL_OUT5[278] = GND;
assign RX_BIT_CTRL_OUT5[279] = GND;
assign RX_BIT_CTRL_OUT5[280] = GND;
assign RX_BIT_CTRL_OUT5[281] = GND;
assign RX_BIT_CTRL_OUT5[282] = GND;
assign RX_BIT_CTRL_OUT5[283] = GND;
assign RX_BIT_CTRL_OUT5[284] = GND;
assign RX_BIT_CTRL_OUT5[285] = GND;
assign RX_BIT_CTRL_OUT5[286] = GND;
assign RX_BIT_CTRL_OUT5[287] = GND;
assign RX_BIT_CTRL_OUT5[288] = GND;
assign RX_BIT_CTRL_OUT5[289] = GND;
assign RX_BIT_CTRL_OUT5[290] = GND;
assign RX_BIT_CTRL_OUT5[291] = GND;
assign RX_BIT_CTRL_OUT5[292] = GND;
assign RX_BIT_CTRL_OUT5[293] = GND;
assign RX_BIT_CTRL_OUT5[294] = GND;
assign RX_BIT_CTRL_OUT5[295] = GND;
assign RX_BIT_CTRL_OUT5[296] = GND;
assign RX_BIT_CTRL_OUT5[297] = GND;
assign RX_BIT_CTRL_OUT5[298] = GND;
assign RX_BIT_CTRL_OUT5[299] = GND;
assign RX_BIT_CTRL_OUT5[300] = GND;
assign RX_BIT_CTRL_OUT5[301] = GND;
assign RX_BIT_CTRL_OUT5[302] = GND;
assign RX_BIT_CTRL_OUT5[303] = GND;
assign RX_BIT_CTRL_OUT5[304] = GND;
assign RX_BIT_CTRL_OUT5[305] = GND;
assign RX_BIT_CTRL_OUT5[306] = GND;
assign RX_BIT_CTRL_OUT5[307] = GND;
assign RX_BIT_CTRL_OUT5[308] = GND;
assign RX_BIT_CTRL_OUT5[309] = GND;
assign RX_BIT_CTRL_OUT5[310] = GND;
assign RX_BIT_CTRL_OUT5[311] = GND;
assign RX_BIT_CTRL_OUT5[312] = GND;
assign RX_BIT_CTRL_OUT5[313] = GND;
assign RX_BIT_CTRL_OUT5[314] = GND;
assign RX_BIT_CTRL_OUT5[315] = GND;
assign RX_BIT_CTRL_OUT5[316] = GND;
assign RX_BIT_CTRL_OUT5[317] = GND;
assign RX_BIT_CTRL_OUT5[318] = GND;
assign RX_BIT_CTRL_OUT5[319] = GND;
assign RX_BIT_CTRL_OUT6[0] = GND;
assign RX_BIT_CTRL_OUT6[1] = GND;
assign RX_BIT_CTRL_OUT6[2] = GND;
assign RX_BIT_CTRL_OUT6[3] = GND;
assign RX_BIT_CTRL_OUT6[4] = GND;
assign RX_BIT_CTRL_OUT6[5] = GND;
assign RX_BIT_CTRL_OUT6[6] = GND;
assign RX_BIT_CTRL_OUT6[7] = GND;
assign RX_BIT_CTRL_OUT6[8] = GND;
assign RX_BIT_CTRL_OUT6[9] = GND;
assign RX_BIT_CTRL_OUT6[10] = GND;
assign RX_BIT_CTRL_OUT6[11] = GND;
assign RX_BIT_CTRL_OUT6[12] = GND;
assign RX_BIT_CTRL_OUT6[13] = GND;
assign RX_BIT_CTRL_OUT6[14] = GND;
assign RX_BIT_CTRL_OUT6[15] = GND;
assign RX_BIT_CTRL_OUT6[16] = GND;
assign RX_BIT_CTRL_OUT6[17] = GND;
assign RX_BIT_CTRL_OUT6[18] = GND;
assign RX_BIT_CTRL_OUT6[19] = GND;
assign RX_BIT_CTRL_OUT6[20] = GND;
assign RX_BIT_CTRL_OUT6[21] = GND;
assign RX_BIT_CTRL_OUT6[22] = GND;
assign RX_BIT_CTRL_OUT6[23] = GND;
assign RX_BIT_CTRL_OUT6[24] = GND;
assign RX_BIT_CTRL_OUT6[25] = GND;
assign RX_BIT_CTRL_OUT6[26] = GND;
assign RX_BIT_CTRL_OUT6[27] = GND;
assign RX_BIT_CTRL_OUT6[28] = GND;
assign RX_BIT_CTRL_OUT6[29] = GND;
assign RX_BIT_CTRL_OUT6[30] = GND;
assign RX_BIT_CTRL_OUT6[31] = GND;
assign RX_BIT_CTRL_OUT6[32] = GND;
assign RX_BIT_CTRL_OUT6[33] = GND;
assign RX_BIT_CTRL_OUT6[34] = GND;
assign RX_BIT_CTRL_OUT6[35] = GND;
assign RX_BIT_CTRL_OUT6[36] = GND;
assign RX_BIT_CTRL_OUT6[37] = GND;
assign RX_BIT_CTRL_OUT6[38] = GND;
assign RX_BIT_CTRL_OUT6[39] = GND;
assign RX_BIT_CTRL_OUT6[40] = GND;
assign RX_BIT_CTRL_OUT6[41] = GND;
assign RX_BIT_CTRL_OUT6[42] = GND;
assign RX_BIT_CTRL_OUT6[43] = GND;
assign RX_BIT_CTRL_OUT6[44] = GND;
assign RX_BIT_CTRL_OUT6[45] = GND;
assign RX_BIT_CTRL_OUT6[46] = GND;
assign RX_BIT_CTRL_OUT6[47] = GND;
assign RX_BIT_CTRL_OUT6[48] = GND;
assign RX_BIT_CTRL_OUT6[49] = GND;
assign RX_BIT_CTRL_OUT6[50] = GND;
assign RX_BIT_CTRL_OUT6[51] = GND;
assign RX_BIT_CTRL_OUT6[52] = GND;
assign RX_BIT_CTRL_OUT6[53] = GND;
assign RX_BIT_CTRL_OUT6[54] = GND;
assign RX_BIT_CTRL_OUT6[55] = GND;
assign RX_BIT_CTRL_OUT6[56] = GND;
assign RX_BIT_CTRL_OUT6[57] = GND;
assign RX_BIT_CTRL_OUT6[58] = GND;
assign RX_BIT_CTRL_OUT6[59] = GND;
assign RX_BIT_CTRL_OUT6[60] = GND;
assign RX_BIT_CTRL_OUT6[61] = GND;
assign RX_BIT_CTRL_OUT6[62] = GND;
assign RX_BIT_CTRL_OUT6[63] = GND;
assign RX_BIT_CTRL_OUT6[64] = GND;
assign RX_BIT_CTRL_OUT6[65] = GND;
assign RX_BIT_CTRL_OUT6[66] = GND;
assign RX_BIT_CTRL_OUT6[67] = GND;
assign RX_BIT_CTRL_OUT6[68] = GND;
assign RX_BIT_CTRL_OUT6[69] = GND;
assign RX_BIT_CTRL_OUT6[70] = GND;
assign RX_BIT_CTRL_OUT6[71] = GND;
assign RX_BIT_CTRL_OUT6[72] = GND;
assign RX_BIT_CTRL_OUT6[73] = GND;
assign RX_BIT_CTRL_OUT6[74] = GND;
assign RX_BIT_CTRL_OUT6[75] = GND;
assign RX_BIT_CTRL_OUT6[76] = GND;
assign RX_BIT_CTRL_OUT6[77] = GND;
assign RX_BIT_CTRL_OUT6[78] = GND;
assign RX_BIT_CTRL_OUT6[79] = GND;
assign RX_BIT_CTRL_OUT6[80] = GND;
assign RX_BIT_CTRL_OUT6[81] = GND;
assign RX_BIT_CTRL_OUT6[82] = GND;
assign RX_BIT_CTRL_OUT6[83] = GND;
assign RX_BIT_CTRL_OUT6[84] = GND;
assign RX_BIT_CTRL_OUT6[85] = GND;
assign RX_BIT_CTRL_OUT6[86] = GND;
assign RX_BIT_CTRL_OUT6[87] = GND;
assign RX_BIT_CTRL_OUT6[88] = GND;
assign RX_BIT_CTRL_OUT6[89] = GND;
assign RX_BIT_CTRL_OUT6[90] = GND;
assign RX_BIT_CTRL_OUT6[91] = GND;
assign RX_BIT_CTRL_OUT6[92] = GND;
assign RX_BIT_CTRL_OUT6[93] = GND;
assign RX_BIT_CTRL_OUT6[94] = GND;
assign RX_BIT_CTRL_OUT6[95] = GND;
assign RX_BIT_CTRL_OUT6[96] = GND;
assign RX_BIT_CTRL_OUT6[97] = GND;
assign RX_BIT_CTRL_OUT6[98] = GND;
assign RX_BIT_CTRL_OUT6[99] = GND;
assign RX_BIT_CTRL_OUT6[100] = GND;
assign RX_BIT_CTRL_OUT6[101] = GND;
assign RX_BIT_CTRL_OUT6[102] = GND;
assign RX_BIT_CTRL_OUT6[103] = GND;
assign RX_BIT_CTRL_OUT6[104] = GND;
assign RX_BIT_CTRL_OUT6[105] = GND;
assign RX_BIT_CTRL_OUT6[106] = GND;
assign RX_BIT_CTRL_OUT6[107] = GND;
assign RX_BIT_CTRL_OUT6[108] = GND;
assign RX_BIT_CTRL_OUT6[109] = GND;
assign RX_BIT_CTRL_OUT6[110] = GND;
assign RX_BIT_CTRL_OUT6[111] = GND;
assign RX_BIT_CTRL_OUT6[112] = GND;
assign RX_BIT_CTRL_OUT6[113] = GND;
assign RX_BIT_CTRL_OUT6[114] = GND;
assign RX_BIT_CTRL_OUT6[115] = GND;
assign RX_BIT_CTRL_OUT6[116] = GND;
assign RX_BIT_CTRL_OUT6[117] = GND;
assign RX_BIT_CTRL_OUT6[118] = GND;
assign RX_BIT_CTRL_OUT6[119] = GND;
assign RX_BIT_CTRL_OUT6[120] = GND;
assign RX_BIT_CTRL_OUT6[121] = GND;
assign RX_BIT_CTRL_OUT6[122] = GND;
assign RX_BIT_CTRL_OUT6[123] = GND;
assign RX_BIT_CTRL_OUT6[124] = GND;
assign RX_BIT_CTRL_OUT6[125] = GND;
assign RX_BIT_CTRL_OUT6[126] = GND;
assign RX_BIT_CTRL_OUT6[127] = GND;
assign RX_BIT_CTRL_OUT6[128] = GND;
assign RX_BIT_CTRL_OUT6[129] = GND;
assign RX_BIT_CTRL_OUT6[130] = GND;
assign RX_BIT_CTRL_OUT6[131] = GND;
assign RX_BIT_CTRL_OUT6[132] = GND;
assign RX_BIT_CTRL_OUT6[133] = GND;
assign RX_BIT_CTRL_OUT6[134] = GND;
assign RX_BIT_CTRL_OUT6[135] = GND;
assign RX_BIT_CTRL_OUT6[136] = GND;
assign RX_BIT_CTRL_OUT6[137] = GND;
assign RX_BIT_CTRL_OUT6[138] = GND;
assign RX_BIT_CTRL_OUT6[139] = GND;
assign RX_BIT_CTRL_OUT6[140] = GND;
assign RX_BIT_CTRL_OUT6[141] = GND;
assign RX_BIT_CTRL_OUT6[142] = GND;
assign RX_BIT_CTRL_OUT6[143] = GND;
assign RX_BIT_CTRL_OUT6[144] = GND;
assign RX_BIT_CTRL_OUT6[145] = GND;
assign RX_BIT_CTRL_OUT6[146] = GND;
assign RX_BIT_CTRL_OUT6[147] = GND;
assign RX_BIT_CTRL_OUT6[148] = GND;
assign RX_BIT_CTRL_OUT6[149] = GND;
assign RX_BIT_CTRL_OUT6[150] = GND;
assign RX_BIT_CTRL_OUT6[151] = GND;
assign RX_BIT_CTRL_OUT6[152] = GND;
assign RX_BIT_CTRL_OUT6[153] = GND;
assign RX_BIT_CTRL_OUT6[154] = GND;
assign RX_BIT_CTRL_OUT6[155] = GND;
assign RX_BIT_CTRL_OUT6[156] = GND;
assign RX_BIT_CTRL_OUT6[157] = GND;
assign RX_BIT_CTRL_OUT6[158] = GND;
assign RX_BIT_CTRL_OUT6[159] = GND;
assign RX_BIT_CTRL_OUT6[160] = GND;
assign RX_BIT_CTRL_OUT6[161] = GND;
assign RX_BIT_CTRL_OUT6[162] = GND;
assign RX_BIT_CTRL_OUT6[163] = GND;
assign RX_BIT_CTRL_OUT6[164] = GND;
assign RX_BIT_CTRL_OUT6[165] = GND;
assign RX_BIT_CTRL_OUT6[166] = GND;
assign RX_BIT_CTRL_OUT6[167] = GND;
assign RX_BIT_CTRL_OUT6[168] = GND;
assign RX_BIT_CTRL_OUT6[169] = GND;
assign RX_BIT_CTRL_OUT6[170] = GND;
assign RX_BIT_CTRL_OUT6[171] = GND;
assign RX_BIT_CTRL_OUT6[172] = GND;
assign RX_BIT_CTRL_OUT6[173] = GND;
assign RX_BIT_CTRL_OUT6[174] = GND;
assign RX_BIT_CTRL_OUT6[175] = GND;
assign RX_BIT_CTRL_OUT6[176] = GND;
assign RX_BIT_CTRL_OUT6[177] = GND;
assign RX_BIT_CTRL_OUT6[178] = GND;
assign RX_BIT_CTRL_OUT6[179] = GND;
assign RX_BIT_CTRL_OUT6[180] = GND;
assign RX_BIT_CTRL_OUT6[181] = GND;
assign RX_BIT_CTRL_OUT6[182] = GND;
assign RX_BIT_CTRL_OUT6[183] = GND;
assign RX_BIT_CTRL_OUT6[184] = GND;
assign RX_BIT_CTRL_OUT6[185] = GND;
assign RX_BIT_CTRL_OUT6[186] = GND;
assign RX_BIT_CTRL_OUT6[187] = GND;
assign RX_BIT_CTRL_OUT6[188] = GND;
assign RX_BIT_CTRL_OUT6[189] = GND;
assign RX_BIT_CTRL_OUT6[190] = GND;
assign RX_BIT_CTRL_OUT6[191] = GND;
assign RX_BIT_CTRL_OUT6[192] = GND;
assign RX_BIT_CTRL_OUT6[193] = GND;
assign RX_BIT_CTRL_OUT6[194] = GND;
assign RX_BIT_CTRL_OUT6[195] = GND;
assign RX_BIT_CTRL_OUT6[196] = GND;
assign RX_BIT_CTRL_OUT6[197] = GND;
assign RX_BIT_CTRL_OUT6[198] = GND;
assign RX_BIT_CTRL_OUT6[199] = GND;
assign RX_BIT_CTRL_OUT6[200] = GND;
assign RX_BIT_CTRL_OUT6[201] = GND;
assign RX_BIT_CTRL_OUT6[202] = GND;
assign RX_BIT_CTRL_OUT6[203] = GND;
assign RX_BIT_CTRL_OUT6[204] = GND;
assign RX_BIT_CTRL_OUT6[205] = GND;
assign RX_BIT_CTRL_OUT6[206] = GND;
assign RX_BIT_CTRL_OUT6[207] = GND;
assign RX_BIT_CTRL_OUT6[208] = GND;
assign RX_BIT_CTRL_OUT6[209] = GND;
assign RX_BIT_CTRL_OUT6[210] = GND;
assign RX_BIT_CTRL_OUT6[211] = GND;
assign RX_BIT_CTRL_OUT6[212] = GND;
assign RX_BIT_CTRL_OUT6[213] = GND;
assign RX_BIT_CTRL_OUT6[214] = GND;
assign RX_BIT_CTRL_OUT6[215] = GND;
assign RX_BIT_CTRL_OUT6[216] = GND;
assign RX_BIT_CTRL_OUT6[217] = GND;
assign RX_BIT_CTRL_OUT6[218] = GND;
assign RX_BIT_CTRL_OUT6[219] = GND;
assign RX_BIT_CTRL_OUT6[220] = GND;
assign RX_BIT_CTRL_OUT6[221] = GND;
assign RX_BIT_CTRL_OUT6[222] = GND;
assign RX_BIT_CTRL_OUT6[223] = GND;
assign RX_BIT_CTRL_OUT6[224] = GND;
assign RX_BIT_CTRL_OUT6[225] = GND;
assign RX_BIT_CTRL_OUT6[226] = GND;
assign RX_BIT_CTRL_OUT6[227] = GND;
assign RX_BIT_CTRL_OUT6[228] = GND;
assign RX_BIT_CTRL_OUT6[229] = GND;
assign RX_BIT_CTRL_OUT6[230] = GND;
assign RX_BIT_CTRL_OUT6[231] = GND;
assign RX_BIT_CTRL_OUT6[232] = GND;
assign RX_BIT_CTRL_OUT6[233] = GND;
assign RX_BIT_CTRL_OUT6[234] = GND;
assign RX_BIT_CTRL_OUT6[235] = GND;
assign RX_BIT_CTRL_OUT6[236] = GND;
assign RX_BIT_CTRL_OUT6[237] = GND;
assign RX_BIT_CTRL_OUT6[238] = GND;
assign RX_BIT_CTRL_OUT6[239] = GND;
assign RX_BIT_CTRL_OUT6[240] = GND;
assign RX_BIT_CTRL_OUT6[241] = GND;
assign RX_BIT_CTRL_OUT6[242] = GND;
assign RX_BIT_CTRL_OUT6[243] = GND;
assign RX_BIT_CTRL_OUT6[244] = GND;
assign RX_BIT_CTRL_OUT6[245] = GND;
assign RX_BIT_CTRL_OUT6[246] = GND;
assign RX_BIT_CTRL_OUT6[247] = GND;
assign RX_BIT_CTRL_OUT6[248] = GND;
assign RX_BIT_CTRL_OUT6[249] = GND;
assign RX_BIT_CTRL_OUT6[250] = GND;
assign RX_BIT_CTRL_OUT6[251] = GND;
assign RX_BIT_CTRL_OUT6[252] = GND;
assign RX_BIT_CTRL_OUT6[253] = GND;
assign RX_BIT_CTRL_OUT6[254] = GND;
assign RX_BIT_CTRL_OUT6[255] = GND;
assign RX_BIT_CTRL_OUT6[256] = GND;
assign RX_BIT_CTRL_OUT6[257] = GND;
assign RX_BIT_CTRL_OUT6[258] = GND;
assign RX_BIT_CTRL_OUT6[259] = GND;
assign RX_BIT_CTRL_OUT6[260] = GND;
assign RX_BIT_CTRL_OUT6[261] = GND;
assign RX_BIT_CTRL_OUT6[262] = GND;
assign RX_BIT_CTRL_OUT6[263] = GND;
assign RX_BIT_CTRL_OUT6[264] = GND;
assign RX_BIT_CTRL_OUT6[265] = GND;
assign RX_BIT_CTRL_OUT6[266] = GND;
assign RX_BIT_CTRL_OUT6[267] = GND;
assign RX_BIT_CTRL_OUT6[268] = GND;
assign RX_BIT_CTRL_OUT6[269] = GND;
assign RX_BIT_CTRL_OUT6[270] = GND;
assign RX_BIT_CTRL_OUT6[271] = GND;
assign RX_BIT_CTRL_OUT6[272] = GND;
assign RX_BIT_CTRL_OUT6[273] = GND;
assign RX_BIT_CTRL_OUT6[274] = GND;
assign RX_BIT_CTRL_OUT6[275] = GND;
assign RX_BIT_CTRL_OUT6[276] = GND;
assign RX_BIT_CTRL_OUT6[277] = GND;
assign RX_BIT_CTRL_OUT6[278] = GND;
assign RX_BIT_CTRL_OUT6[279] = GND;
assign RX_BIT_CTRL_OUT6[280] = GND;
assign RX_BIT_CTRL_OUT6[281] = GND;
assign RX_BIT_CTRL_OUT6[282] = GND;
assign RX_BIT_CTRL_OUT6[283] = GND;
assign RX_BIT_CTRL_OUT6[284] = GND;
assign RX_BIT_CTRL_OUT6[285] = GND;
assign RX_BIT_CTRL_OUT6[286] = GND;
assign RX_BIT_CTRL_OUT6[287] = GND;
assign RX_BIT_CTRL_OUT6[288] = GND;
assign RX_BIT_CTRL_OUT6[289] = GND;
assign RX_BIT_CTRL_OUT6[290] = GND;
assign RX_BIT_CTRL_OUT6[291] = GND;
assign RX_BIT_CTRL_OUT6[292] = GND;
assign RX_BIT_CTRL_OUT6[293] = GND;
assign RX_BIT_CTRL_OUT6[294] = GND;
assign RX_BIT_CTRL_OUT6[295] = GND;
assign RX_BIT_CTRL_OUT6[296] = GND;
assign RX_BIT_CTRL_OUT6[297] = GND;
assign RX_BIT_CTRL_OUT6[298] = GND;
assign RX_BIT_CTRL_OUT6[299] = GND;
assign RX_BIT_CTRL_OUT6[300] = GND;
assign RX_BIT_CTRL_OUT6[301] = GND;
assign RX_BIT_CTRL_OUT6[302] = GND;
assign RX_BIT_CTRL_OUT6[303] = GND;
assign RX_BIT_CTRL_OUT6[304] = GND;
assign RX_BIT_CTRL_OUT6[305] = GND;
assign RX_BIT_CTRL_OUT6[306] = GND;
assign RX_BIT_CTRL_OUT6[307] = GND;
assign RX_BIT_CTRL_OUT6[308] = GND;
assign RX_BIT_CTRL_OUT6[309] = GND;
assign RX_BIT_CTRL_OUT6[310] = GND;
assign RX_BIT_CTRL_OUT6[311] = GND;
assign RX_BIT_CTRL_OUT6[312] = GND;
assign RX_BIT_CTRL_OUT6[313] = GND;
assign RX_BIT_CTRL_OUT6[314] = GND;
assign RX_BIT_CTRL_OUT6[315] = GND;
assign RX_BIT_CTRL_OUT6[316] = GND;
assign RX_BIT_CTRL_OUT6[317] = GND;
assign RX_BIT_CTRL_OUT6[318] = GND;
assign RX_BIT_CTRL_OUT6[319] = GND;
assign TX_BIT_CTRL_OUT0[0] = GND;
assign TX_BIT_CTRL_OUT0[1] = GND;
assign TX_BIT_CTRL_OUT0[2] = GND;
assign TX_BIT_CTRL_OUT0[3] = GND;
assign TX_BIT_CTRL_OUT0[4] = GND;
assign TX_BIT_CTRL_OUT0[5] = GND;
assign TX_BIT_CTRL_OUT0[6] = GND;
assign TX_BIT_CTRL_OUT0[7] = GND;
assign TX_BIT_CTRL_OUT0[8] = GND;
assign TX_BIT_CTRL_OUT0[9] = GND;
assign TX_BIT_CTRL_OUT0[10] = GND;
assign TX_BIT_CTRL_OUT0[11] = GND;
assign TX_BIT_CTRL_OUT0[12] = GND;
assign TX_BIT_CTRL_OUT0[13] = GND;
assign TX_BIT_CTRL_OUT0[14] = GND;
assign TX_BIT_CTRL_OUT0[15] = GND;
assign TX_BIT_CTRL_OUT0[16] = GND;
assign TX_BIT_CTRL_OUT0[17] = GND;
assign TX_BIT_CTRL_OUT0[18] = GND;
assign TX_BIT_CTRL_OUT0[19] = GND;
assign TX_BIT_CTRL_OUT0[20] = GND;
assign TX_BIT_CTRL_OUT0[21] = GND;
assign TX_BIT_CTRL_OUT0[22] = GND;
assign TX_BIT_CTRL_OUT0[23] = GND;
assign TX_BIT_CTRL_OUT0[24] = GND;
assign TX_BIT_CTRL_OUT0[25] = GND;
assign TX_BIT_CTRL_OUT0[26] = GND;
assign TX_BIT_CTRL_OUT0[27] = GND;
assign TX_BIT_CTRL_OUT0[28] = GND;
assign TX_BIT_CTRL_OUT0[29] = GND;
assign TX_BIT_CTRL_OUT0[30] = GND;
assign TX_BIT_CTRL_OUT0[31] = GND;
assign TX_BIT_CTRL_OUT0[32] = GND;
assign TX_BIT_CTRL_OUT0[33] = GND;
assign TX_BIT_CTRL_OUT0[34] = GND;
assign TX_BIT_CTRL_OUT0[35] = GND;
assign TX_BIT_CTRL_OUT0[36] = GND;
assign TX_BIT_CTRL_OUT0[37] = GND;
assign TX_BIT_CTRL_OUT0[38] = GND;
assign TX_BIT_CTRL_OUT0[39] = GND;
assign TX_BIT_CTRL_OUT0[40] = GND;
assign TX_BIT_CTRL_OUT0[41] = GND;
assign TX_BIT_CTRL_OUT0[42] = GND;
assign TX_BIT_CTRL_OUT0[43] = GND;
assign TX_BIT_CTRL_OUT0[44] = GND;
assign TX_BIT_CTRL_OUT0[45] = GND;
assign TX_BIT_CTRL_OUT0[46] = GND;
assign TX_BIT_CTRL_OUT0[47] = GND;
assign TX_BIT_CTRL_OUT0[48] = GND;
assign TX_BIT_CTRL_OUT0[49] = GND;
assign TX_BIT_CTRL_OUT0[50] = GND;
assign TX_BIT_CTRL_OUT0[51] = GND;
assign TX_BIT_CTRL_OUT0[52] = GND;
assign TX_BIT_CTRL_OUT0[53] = GND;
assign TX_BIT_CTRL_OUT0[54] = GND;
assign TX_BIT_CTRL_OUT0[55] = GND;
assign TX_BIT_CTRL_OUT0[56] = GND;
assign TX_BIT_CTRL_OUT0[57] = GND;
assign TX_BIT_CTRL_OUT0[58] = GND;
assign TX_BIT_CTRL_OUT0[59] = GND;
assign TX_BIT_CTRL_OUT0[60] = GND;
assign TX_BIT_CTRL_OUT0[61] = GND;
assign TX_BIT_CTRL_OUT0[62] = GND;
assign TX_BIT_CTRL_OUT0[63] = GND;
assign TX_BIT_CTRL_OUT0[64] = GND;
assign TX_BIT_CTRL_OUT0[65] = GND;
assign TX_BIT_CTRL_OUT0[66] = GND;
assign TX_BIT_CTRL_OUT0[67] = GND;
assign TX_BIT_CTRL_OUT0[68] = GND;
assign TX_BIT_CTRL_OUT0[69] = GND;
assign TX_BIT_CTRL_OUT0[70] = GND;
assign TX_BIT_CTRL_OUT0[71] = GND;
assign TX_BIT_CTRL_OUT0[72] = GND;
assign TX_BIT_CTRL_OUT0[73] = GND;
assign TX_BIT_CTRL_OUT0[74] = GND;
assign TX_BIT_CTRL_OUT0[75] = GND;
assign TX_BIT_CTRL_OUT0[76] = GND;
assign TX_BIT_CTRL_OUT0[77] = GND;
assign TX_BIT_CTRL_OUT0[78] = GND;
assign TX_BIT_CTRL_OUT0[79] = GND;
assign TX_BIT_CTRL_OUT0[80] = GND;
assign TX_BIT_CTRL_OUT0[81] = GND;
assign TX_BIT_CTRL_OUT0[82] = GND;
assign TX_BIT_CTRL_OUT0[83] = GND;
assign TX_BIT_CTRL_OUT0[84] = GND;
assign TX_BIT_CTRL_OUT0[85] = GND;
assign TX_BIT_CTRL_OUT0[86] = GND;
assign TX_BIT_CTRL_OUT0[87] = GND;
assign TX_BIT_CTRL_OUT0[88] = GND;
assign TX_BIT_CTRL_OUT0[89] = GND;
assign TX_BIT_CTRL_OUT0[90] = GND;
assign TX_BIT_CTRL_OUT0[91] = GND;
assign TX_BIT_CTRL_OUT0[92] = GND;
assign TX_BIT_CTRL_OUT0[93] = GND;
assign TX_BIT_CTRL_OUT0[94] = GND;
assign TX_BIT_CTRL_OUT0[95] = GND;
assign TX_BIT_CTRL_OUT0[96] = GND;
assign TX_BIT_CTRL_OUT0[97] = GND;
assign TX_BIT_CTRL_OUT0[98] = GND;
assign TX_BIT_CTRL_OUT0[99] = GND;
assign TX_BIT_CTRL_OUT0[100] = GND;
assign TX_BIT_CTRL_OUT0[101] = GND;
assign TX_BIT_CTRL_OUT0[102] = GND;
assign TX_BIT_CTRL_OUT0[103] = GND;
assign TX_BIT_CTRL_OUT0[104] = GND;
assign TX_BIT_CTRL_OUT0[105] = GND;
assign TX_BIT_CTRL_OUT0[106] = GND;
assign TX_BIT_CTRL_OUT0[107] = GND;
assign TX_BIT_CTRL_OUT0[108] = GND;
assign TX_BIT_CTRL_OUT0[109] = GND;
assign TX_BIT_CTRL_OUT0[110] = GND;
assign TX_BIT_CTRL_OUT0[111] = GND;
assign TX_BIT_CTRL_OUT0[112] = GND;
assign TX_BIT_CTRL_OUT0[113] = GND;
assign TX_BIT_CTRL_OUT0[114] = GND;
assign TX_BIT_CTRL_OUT0[115] = GND;
assign TX_BIT_CTRL_OUT0[116] = GND;
assign TX_BIT_CTRL_OUT0[117] = GND;
assign TX_BIT_CTRL_OUT0[118] = GND;
assign TX_BIT_CTRL_OUT0[119] = GND;
assign TX_BIT_CTRL_OUT0[120] = GND;
assign TX_BIT_CTRL_OUT0[121] = GND;
assign TX_BIT_CTRL_OUT0[122] = GND;
assign TX_BIT_CTRL_OUT0[123] = GND;
assign TX_BIT_CTRL_OUT0[124] = GND;
assign TX_BIT_CTRL_OUT0[125] = GND;
assign TX_BIT_CTRL_OUT0[126] = GND;
assign TX_BIT_CTRL_OUT0[127] = GND;
assign TX_BIT_CTRL_OUT0[128] = GND;
assign TX_BIT_CTRL_OUT0[129] = GND;
assign TX_BIT_CTRL_OUT0[130] = GND;
assign TX_BIT_CTRL_OUT0[131] = GND;
assign TX_BIT_CTRL_OUT0[132] = GND;
assign TX_BIT_CTRL_OUT0[133] = GND;
assign TX_BIT_CTRL_OUT0[134] = GND;
assign TX_BIT_CTRL_OUT0[135] = GND;
assign TX_BIT_CTRL_OUT0[136] = GND;
assign TX_BIT_CTRL_OUT0[137] = GND;
assign TX_BIT_CTRL_OUT0[138] = GND;
assign TX_BIT_CTRL_OUT0[139] = GND;
assign TX_BIT_CTRL_OUT0[140] = GND;
assign TX_BIT_CTRL_OUT0[141] = GND;
assign TX_BIT_CTRL_OUT0[142] = GND;
assign TX_BIT_CTRL_OUT0[143] = GND;
assign TX_BIT_CTRL_OUT0[144] = GND;
assign TX_BIT_CTRL_OUT0[145] = GND;
assign TX_BIT_CTRL_OUT0[146] = GND;
assign TX_BIT_CTRL_OUT0[147] = GND;
assign TX_BIT_CTRL_OUT0[148] = GND;
assign TX_BIT_CTRL_OUT0[149] = GND;
assign TX_BIT_CTRL_OUT0[150] = GND;
assign TX_BIT_CTRL_OUT0[151] = GND;
assign TX_BIT_CTRL_OUT0[152] = GND;
assign TX_BIT_CTRL_OUT0[153] = GND;
assign TX_BIT_CTRL_OUT0[154] = GND;
assign TX_BIT_CTRL_OUT0[155] = GND;
assign TX_BIT_CTRL_OUT0[156] = GND;
assign TX_BIT_CTRL_OUT0[157] = GND;
assign TX_BIT_CTRL_OUT0[158] = GND;
assign TX_BIT_CTRL_OUT0[159] = GND;
assign TX_BIT_CTRL_OUT0[160] = GND;
assign TX_BIT_CTRL_OUT0[161] = GND;
assign TX_BIT_CTRL_OUT0[162] = GND;
assign TX_BIT_CTRL_OUT0[163] = GND;
assign TX_BIT_CTRL_OUT0[164] = GND;
assign TX_BIT_CTRL_OUT0[165] = GND;
assign TX_BIT_CTRL_OUT0[166] = GND;
assign TX_BIT_CTRL_OUT0[167] = GND;
assign TX_BIT_CTRL_OUT0[168] = GND;
assign TX_BIT_CTRL_OUT0[169] = GND;
assign TX_BIT_CTRL_OUT0[170] = GND;
assign TX_BIT_CTRL_OUT0[171] = GND;
assign TX_BIT_CTRL_OUT0[172] = GND;
assign TX_BIT_CTRL_OUT0[173] = GND;
assign TX_BIT_CTRL_OUT0[174] = GND;
assign TX_BIT_CTRL_OUT0[175] = GND;
assign TX_BIT_CTRL_OUT0[176] = GND;
assign TX_BIT_CTRL_OUT0[177] = GND;
assign TX_BIT_CTRL_OUT0[178] = GND;
assign TX_BIT_CTRL_OUT0[179] = GND;
assign TX_BIT_CTRL_OUT0[180] = GND;
assign TX_BIT_CTRL_OUT0[181] = GND;
assign TX_BIT_CTRL_OUT0[182] = GND;
assign TX_BIT_CTRL_OUT0[183] = GND;
assign TX_BIT_CTRL_OUT0[184] = GND;
assign TX_BIT_CTRL_OUT0[185] = GND;
assign TX_BIT_CTRL_OUT0[186] = GND;
assign TX_BIT_CTRL_OUT0[187] = GND;
assign TX_BIT_CTRL_OUT0[188] = GND;
assign TX_BIT_CTRL_OUT0[189] = GND;
assign TX_BIT_CTRL_OUT0[190] = GND;
assign TX_BIT_CTRL_OUT0[191] = GND;
assign TX_BIT_CTRL_OUT0[192] = GND;
assign TX_BIT_CTRL_OUT0[193] = GND;
assign TX_BIT_CTRL_OUT0[194] = GND;
assign TX_BIT_CTRL_OUT0[195] = GND;
assign TX_BIT_CTRL_OUT0[196] = GND;
assign TX_BIT_CTRL_OUT0[197] = GND;
assign TX_BIT_CTRL_OUT0[198] = GND;
assign TX_BIT_CTRL_OUT0[199] = GND;
assign TX_BIT_CTRL_OUT0[200] = GND;
assign TX_BIT_CTRL_OUT0[201] = GND;
assign TX_BIT_CTRL_OUT0[202] = GND;
assign TX_BIT_CTRL_OUT0[203] = GND;
assign TX_BIT_CTRL_OUT0[204] = GND;
assign TX_BIT_CTRL_OUT0[205] = GND;
assign TX_BIT_CTRL_OUT0[206] = GND;
assign TX_BIT_CTRL_OUT0[207] = GND;
assign TX_BIT_CTRL_OUT0[208] = GND;
assign TX_BIT_CTRL_OUT0[209] = GND;
assign TX_BIT_CTRL_OUT0[210] = GND;
assign TX_BIT_CTRL_OUT0[211] = GND;
assign TX_BIT_CTRL_OUT0[212] = GND;
assign TX_BIT_CTRL_OUT0[213] = GND;
assign TX_BIT_CTRL_OUT0[214] = GND;
assign TX_BIT_CTRL_OUT0[215] = GND;
assign TX_BIT_CTRL_OUT0[216] = GND;
assign TX_BIT_CTRL_OUT0[217] = GND;
assign TX_BIT_CTRL_OUT0[218] = GND;
assign TX_BIT_CTRL_OUT0[219] = GND;
assign TX_BIT_CTRL_OUT0[220] = GND;
assign TX_BIT_CTRL_OUT0[221] = GND;
assign TX_BIT_CTRL_OUT0[222] = GND;
assign TX_BIT_CTRL_OUT0[223] = GND;
assign TX_BIT_CTRL_OUT0[224] = GND;
assign TX_BIT_CTRL_OUT0[225] = GND;
assign TX_BIT_CTRL_OUT0[226] = GND;
assign TX_BIT_CTRL_OUT0[227] = GND;
assign TX_BIT_CTRL_OUT0[228] = GND;
assign TX_BIT_CTRL_OUT0[229] = GND;
assign TX_BIT_CTRL_OUT0[230] = GND;
assign TX_BIT_CTRL_OUT0[231] = GND;
assign TX_BIT_CTRL_OUT0[232] = GND;
assign TX_BIT_CTRL_OUT0[233] = GND;
assign TX_BIT_CTRL_OUT0[234] = GND;
assign TX_BIT_CTRL_OUT0[235] = GND;
assign TX_BIT_CTRL_OUT0[236] = GND;
assign TX_BIT_CTRL_OUT0[237] = GND;
assign TX_BIT_CTRL_OUT0[238] = GND;
assign TX_BIT_CTRL_OUT0[239] = GND;
assign TX_BIT_CTRL_OUT0[240] = GND;
assign TX_BIT_CTRL_OUT0[241] = GND;
assign TX_BIT_CTRL_OUT0[242] = GND;
assign TX_BIT_CTRL_OUT0[243] = GND;
assign TX_BIT_CTRL_OUT0[244] = GND;
assign TX_BIT_CTRL_OUT0[245] = GND;
assign TX_BIT_CTRL_OUT0[246] = GND;
assign TX_BIT_CTRL_OUT0[247] = GND;
assign TX_BIT_CTRL_OUT0[248] = GND;
assign TX_BIT_CTRL_OUT0[249] = GND;
assign TX_BIT_CTRL_OUT0[250] = GND;
assign TX_BIT_CTRL_OUT0[251] = GND;
assign TX_BIT_CTRL_OUT0[252] = GND;
assign TX_BIT_CTRL_OUT0[253] = GND;
assign TX_BIT_CTRL_OUT0[254] = GND;
assign TX_BIT_CTRL_OUT0[255] = GND;
assign TX_BIT_CTRL_OUT0[256] = GND;
assign TX_BIT_CTRL_OUT0[257] = GND;
assign TX_BIT_CTRL_OUT0[258] = GND;
assign TX_BIT_CTRL_OUT0[259] = GND;
assign TX_BIT_CTRL_OUT0[260] = GND;
assign TX_BIT_CTRL_OUT0[261] = GND;
assign TX_BIT_CTRL_OUT0[262] = GND;
assign TX_BIT_CTRL_OUT0[263] = GND;
assign TX_BIT_CTRL_OUT0[264] = GND;
assign TX_BIT_CTRL_OUT0[265] = GND;
assign TX_BIT_CTRL_OUT0[266] = GND;
assign TX_BIT_CTRL_OUT0[267] = GND;
assign TX_BIT_CTRL_OUT0[268] = GND;
assign TX_BIT_CTRL_OUT0[269] = GND;
assign TX_BIT_CTRL_OUT0[270] = GND;
assign TX_BIT_CTRL_OUT0[271] = GND;
assign TX_BIT_CTRL_OUT0[272] = GND;
assign TX_BIT_CTRL_OUT0[273] = GND;
assign TX_BIT_CTRL_OUT0[274] = GND;
assign TX_BIT_CTRL_OUT0[275] = GND;
assign TX_BIT_CTRL_OUT0[276] = GND;
assign TX_BIT_CTRL_OUT0[277] = GND;
assign TX_BIT_CTRL_OUT0[278] = GND;
assign TX_BIT_CTRL_OUT0[279] = GND;
assign TX_BIT_CTRL_OUT0[280] = GND;
assign TX_BIT_CTRL_OUT0[281] = GND;
assign TX_BIT_CTRL_OUT0[282] = GND;
assign TX_BIT_CTRL_OUT0[283] = GND;
assign TX_BIT_CTRL_OUT0[284] = GND;
assign TX_BIT_CTRL_OUT0[285] = GND;
assign TX_BIT_CTRL_OUT0[286] = GND;
assign TX_BIT_CTRL_OUT0[287] = GND;
assign TX_BIT_CTRL_OUT0[288] = GND;
assign TX_BIT_CTRL_OUT0[289] = GND;
assign TX_BIT_CTRL_OUT0[290] = GND;
assign TX_BIT_CTRL_OUT0[291] = GND;
assign TX_BIT_CTRL_OUT0[292] = GND;
assign TX_BIT_CTRL_OUT0[293] = GND;
assign TX_BIT_CTRL_OUT0[294] = GND;
assign TX_BIT_CTRL_OUT0[295] = GND;
assign TX_BIT_CTRL_OUT0[296] = GND;
assign TX_BIT_CTRL_OUT0[297] = GND;
assign TX_BIT_CTRL_OUT0[298] = GND;
assign TX_BIT_CTRL_OUT0[299] = GND;
assign TX_BIT_CTRL_OUT0[300] = GND;
assign TX_BIT_CTRL_OUT0[301] = GND;
assign TX_BIT_CTRL_OUT0[302] = GND;
assign TX_BIT_CTRL_OUT0[303] = GND;
assign TX_BIT_CTRL_OUT0[304] = GND;
assign TX_BIT_CTRL_OUT0[305] = GND;
assign TX_BIT_CTRL_OUT0[306] = GND;
assign TX_BIT_CTRL_OUT0[307] = GND;
assign TX_BIT_CTRL_OUT0[308] = GND;
assign TX_BIT_CTRL_OUT0[309] = GND;
assign TX_BIT_CTRL_OUT0[310] = GND;
assign TX_BIT_CTRL_OUT0[311] = GND;
assign TX_BIT_CTRL_OUT0[312] = GND;
assign TX_BIT_CTRL_OUT0[313] = GND;
assign TX_BIT_CTRL_OUT0[314] = GND;
assign TX_BIT_CTRL_OUT0[315] = GND;
assign TX_BIT_CTRL_OUT0[316] = GND;
assign TX_BIT_CTRL_OUT0[317] = GND;
assign TX_BIT_CTRL_OUT0[318] = GND;
assign TX_BIT_CTRL_OUT0[319] = GND;
assign TX_BIT_CTRL_OUT1[0] = GND;
assign TX_BIT_CTRL_OUT1[1] = GND;
assign TX_BIT_CTRL_OUT1[2] = GND;
assign TX_BIT_CTRL_OUT1[3] = GND;
assign TX_BIT_CTRL_OUT1[4] = GND;
assign TX_BIT_CTRL_OUT1[5] = GND;
assign TX_BIT_CTRL_OUT1[6] = GND;
assign TX_BIT_CTRL_OUT1[7] = GND;
assign TX_BIT_CTRL_OUT1[8] = GND;
assign TX_BIT_CTRL_OUT1[9] = GND;
assign TX_BIT_CTRL_OUT1[10] = GND;
assign TX_BIT_CTRL_OUT1[11] = GND;
assign TX_BIT_CTRL_OUT1[12] = GND;
assign TX_BIT_CTRL_OUT1[13] = GND;
assign TX_BIT_CTRL_OUT1[14] = GND;
assign TX_BIT_CTRL_OUT1[15] = GND;
assign TX_BIT_CTRL_OUT1[16] = GND;
assign TX_BIT_CTRL_OUT1[17] = GND;
assign TX_BIT_CTRL_OUT1[18] = GND;
assign TX_BIT_CTRL_OUT1[19] = GND;
assign TX_BIT_CTRL_OUT1[20] = GND;
assign TX_BIT_CTRL_OUT1[21] = GND;
assign TX_BIT_CTRL_OUT1[22] = GND;
assign TX_BIT_CTRL_OUT1[23] = GND;
assign TX_BIT_CTRL_OUT1[24] = GND;
assign TX_BIT_CTRL_OUT1[25] = GND;
assign TX_BIT_CTRL_OUT1[26] = GND;
assign TX_BIT_CTRL_OUT1[27] = GND;
assign TX_BIT_CTRL_OUT1[28] = GND;
assign TX_BIT_CTRL_OUT1[29] = GND;
assign TX_BIT_CTRL_OUT1[30] = GND;
assign TX_BIT_CTRL_OUT1[31] = GND;
assign TX_BIT_CTRL_OUT1[32] = GND;
assign TX_BIT_CTRL_OUT1[33] = GND;
assign TX_BIT_CTRL_OUT1[34] = GND;
assign TX_BIT_CTRL_OUT1[35] = GND;
assign TX_BIT_CTRL_OUT1[36] = GND;
assign TX_BIT_CTRL_OUT1[37] = GND;
assign TX_BIT_CTRL_OUT1[38] = GND;
assign TX_BIT_CTRL_OUT1[39] = GND;
assign TX_BIT_CTRL_OUT1[40] = GND;
assign TX_BIT_CTRL_OUT1[41] = GND;
assign TX_BIT_CTRL_OUT1[42] = GND;
assign TX_BIT_CTRL_OUT1[43] = GND;
assign TX_BIT_CTRL_OUT1[44] = GND;
assign TX_BIT_CTRL_OUT1[45] = GND;
assign TX_BIT_CTRL_OUT1[46] = GND;
assign TX_BIT_CTRL_OUT1[47] = GND;
assign TX_BIT_CTRL_OUT1[48] = GND;
assign TX_BIT_CTRL_OUT1[49] = GND;
assign TX_BIT_CTRL_OUT1[50] = GND;
assign TX_BIT_CTRL_OUT1[51] = GND;
assign TX_BIT_CTRL_OUT1[52] = GND;
assign TX_BIT_CTRL_OUT1[53] = GND;
assign TX_BIT_CTRL_OUT1[54] = GND;
assign TX_BIT_CTRL_OUT1[55] = GND;
assign TX_BIT_CTRL_OUT1[56] = GND;
assign TX_BIT_CTRL_OUT1[57] = GND;
assign TX_BIT_CTRL_OUT1[58] = GND;
assign TX_BIT_CTRL_OUT1[59] = GND;
assign TX_BIT_CTRL_OUT1[60] = GND;
assign TX_BIT_CTRL_OUT1[61] = GND;
assign TX_BIT_CTRL_OUT1[62] = GND;
assign TX_BIT_CTRL_OUT1[63] = GND;
assign TX_BIT_CTRL_OUT1[64] = GND;
assign TX_BIT_CTRL_OUT1[65] = GND;
assign TX_BIT_CTRL_OUT1[66] = GND;
assign TX_BIT_CTRL_OUT1[67] = GND;
assign TX_BIT_CTRL_OUT1[68] = GND;
assign TX_BIT_CTRL_OUT1[69] = GND;
assign TX_BIT_CTRL_OUT1[70] = GND;
assign TX_BIT_CTRL_OUT1[71] = GND;
assign TX_BIT_CTRL_OUT1[72] = GND;
assign TX_BIT_CTRL_OUT1[73] = GND;
assign TX_BIT_CTRL_OUT1[74] = GND;
assign TX_BIT_CTRL_OUT1[75] = GND;
assign TX_BIT_CTRL_OUT1[76] = GND;
assign TX_BIT_CTRL_OUT1[77] = GND;
assign TX_BIT_CTRL_OUT1[78] = GND;
assign TX_BIT_CTRL_OUT1[79] = GND;
assign TX_BIT_CTRL_OUT1[80] = GND;
assign TX_BIT_CTRL_OUT1[81] = GND;
assign TX_BIT_CTRL_OUT1[82] = GND;
assign TX_BIT_CTRL_OUT1[83] = GND;
assign TX_BIT_CTRL_OUT1[84] = GND;
assign TX_BIT_CTRL_OUT1[85] = GND;
assign TX_BIT_CTRL_OUT1[86] = GND;
assign TX_BIT_CTRL_OUT1[87] = GND;
assign TX_BIT_CTRL_OUT1[88] = GND;
assign TX_BIT_CTRL_OUT1[89] = GND;
assign TX_BIT_CTRL_OUT1[90] = GND;
assign TX_BIT_CTRL_OUT1[91] = GND;
assign TX_BIT_CTRL_OUT1[92] = GND;
assign TX_BIT_CTRL_OUT1[93] = GND;
assign TX_BIT_CTRL_OUT1[94] = GND;
assign TX_BIT_CTRL_OUT1[95] = GND;
assign TX_BIT_CTRL_OUT1[96] = GND;
assign TX_BIT_CTRL_OUT1[97] = GND;
assign TX_BIT_CTRL_OUT1[98] = GND;
assign TX_BIT_CTRL_OUT1[99] = GND;
assign TX_BIT_CTRL_OUT1[100] = GND;
assign TX_BIT_CTRL_OUT1[101] = GND;
assign TX_BIT_CTRL_OUT1[102] = GND;
assign TX_BIT_CTRL_OUT1[103] = GND;
assign TX_BIT_CTRL_OUT1[104] = GND;
assign TX_BIT_CTRL_OUT1[105] = GND;
assign TX_BIT_CTRL_OUT1[106] = GND;
assign TX_BIT_CTRL_OUT1[107] = GND;
assign TX_BIT_CTRL_OUT1[108] = GND;
assign TX_BIT_CTRL_OUT1[109] = GND;
assign TX_BIT_CTRL_OUT1[110] = GND;
assign TX_BIT_CTRL_OUT1[111] = GND;
assign TX_BIT_CTRL_OUT1[112] = GND;
assign TX_BIT_CTRL_OUT1[113] = GND;
assign TX_BIT_CTRL_OUT1[114] = GND;
assign TX_BIT_CTRL_OUT1[115] = GND;
assign TX_BIT_CTRL_OUT1[116] = GND;
assign TX_BIT_CTRL_OUT1[117] = GND;
assign TX_BIT_CTRL_OUT1[118] = GND;
assign TX_BIT_CTRL_OUT1[119] = GND;
assign TX_BIT_CTRL_OUT1[120] = GND;
assign TX_BIT_CTRL_OUT1[121] = GND;
assign TX_BIT_CTRL_OUT1[122] = GND;
assign TX_BIT_CTRL_OUT1[123] = GND;
assign TX_BIT_CTRL_OUT1[124] = GND;
assign TX_BIT_CTRL_OUT1[125] = GND;
assign TX_BIT_CTRL_OUT1[126] = GND;
assign TX_BIT_CTRL_OUT1[127] = GND;
assign TX_BIT_CTRL_OUT1[128] = GND;
assign TX_BIT_CTRL_OUT1[129] = GND;
assign TX_BIT_CTRL_OUT1[130] = GND;
assign TX_BIT_CTRL_OUT1[131] = GND;
assign TX_BIT_CTRL_OUT1[132] = GND;
assign TX_BIT_CTRL_OUT1[133] = GND;
assign TX_BIT_CTRL_OUT1[134] = GND;
assign TX_BIT_CTRL_OUT1[135] = GND;
assign TX_BIT_CTRL_OUT1[136] = GND;
assign TX_BIT_CTRL_OUT1[137] = GND;
assign TX_BIT_CTRL_OUT1[138] = GND;
assign TX_BIT_CTRL_OUT1[139] = GND;
assign TX_BIT_CTRL_OUT1[140] = GND;
assign TX_BIT_CTRL_OUT1[141] = GND;
assign TX_BIT_CTRL_OUT1[142] = GND;
assign TX_BIT_CTRL_OUT1[143] = GND;
assign TX_BIT_CTRL_OUT1[144] = GND;
assign TX_BIT_CTRL_OUT1[145] = GND;
assign TX_BIT_CTRL_OUT1[146] = GND;
assign TX_BIT_CTRL_OUT1[147] = GND;
assign TX_BIT_CTRL_OUT1[148] = GND;
assign TX_BIT_CTRL_OUT1[149] = GND;
assign TX_BIT_CTRL_OUT1[150] = GND;
assign TX_BIT_CTRL_OUT1[151] = GND;
assign TX_BIT_CTRL_OUT1[152] = GND;
assign TX_BIT_CTRL_OUT1[153] = GND;
assign TX_BIT_CTRL_OUT1[154] = GND;
assign TX_BIT_CTRL_OUT1[155] = GND;
assign TX_BIT_CTRL_OUT1[156] = GND;
assign TX_BIT_CTRL_OUT1[157] = GND;
assign TX_BIT_CTRL_OUT1[158] = GND;
assign TX_BIT_CTRL_OUT1[159] = GND;
assign TX_BIT_CTRL_OUT1[160] = GND;
assign TX_BIT_CTRL_OUT1[161] = GND;
assign TX_BIT_CTRL_OUT1[162] = GND;
assign TX_BIT_CTRL_OUT1[163] = GND;
assign TX_BIT_CTRL_OUT1[164] = GND;
assign TX_BIT_CTRL_OUT1[165] = GND;
assign TX_BIT_CTRL_OUT1[166] = GND;
assign TX_BIT_CTRL_OUT1[167] = GND;
assign TX_BIT_CTRL_OUT1[168] = GND;
assign TX_BIT_CTRL_OUT1[169] = GND;
assign TX_BIT_CTRL_OUT1[170] = GND;
assign TX_BIT_CTRL_OUT1[171] = GND;
assign TX_BIT_CTRL_OUT1[172] = GND;
assign TX_BIT_CTRL_OUT1[173] = GND;
assign TX_BIT_CTRL_OUT1[174] = GND;
assign TX_BIT_CTRL_OUT1[175] = GND;
assign TX_BIT_CTRL_OUT1[176] = GND;
assign TX_BIT_CTRL_OUT1[177] = GND;
assign TX_BIT_CTRL_OUT1[178] = GND;
assign TX_BIT_CTRL_OUT1[179] = GND;
assign TX_BIT_CTRL_OUT1[180] = GND;
assign TX_BIT_CTRL_OUT1[181] = GND;
assign TX_BIT_CTRL_OUT1[182] = GND;
assign TX_BIT_CTRL_OUT1[183] = GND;
assign TX_BIT_CTRL_OUT1[184] = GND;
assign TX_BIT_CTRL_OUT1[185] = GND;
assign TX_BIT_CTRL_OUT1[186] = GND;
assign TX_BIT_CTRL_OUT1[187] = GND;
assign TX_BIT_CTRL_OUT1[188] = GND;
assign TX_BIT_CTRL_OUT1[189] = GND;
assign TX_BIT_CTRL_OUT1[190] = GND;
assign TX_BIT_CTRL_OUT1[191] = GND;
assign TX_BIT_CTRL_OUT1[192] = GND;
assign TX_BIT_CTRL_OUT1[193] = GND;
assign TX_BIT_CTRL_OUT1[194] = GND;
assign TX_BIT_CTRL_OUT1[195] = GND;
assign TX_BIT_CTRL_OUT1[196] = GND;
assign TX_BIT_CTRL_OUT1[197] = GND;
assign TX_BIT_CTRL_OUT1[198] = GND;
assign TX_BIT_CTRL_OUT1[199] = GND;
assign TX_BIT_CTRL_OUT1[200] = GND;
assign TX_BIT_CTRL_OUT1[201] = GND;
assign TX_BIT_CTRL_OUT1[202] = GND;
assign TX_BIT_CTRL_OUT1[203] = GND;
assign TX_BIT_CTRL_OUT1[204] = GND;
assign TX_BIT_CTRL_OUT1[205] = GND;
assign TX_BIT_CTRL_OUT1[206] = GND;
assign TX_BIT_CTRL_OUT1[207] = GND;
assign TX_BIT_CTRL_OUT1[208] = GND;
assign TX_BIT_CTRL_OUT1[209] = GND;
assign TX_BIT_CTRL_OUT1[210] = GND;
assign TX_BIT_CTRL_OUT1[211] = GND;
assign TX_BIT_CTRL_OUT1[212] = GND;
assign TX_BIT_CTRL_OUT1[213] = GND;
assign TX_BIT_CTRL_OUT1[214] = GND;
assign TX_BIT_CTRL_OUT1[215] = GND;
assign TX_BIT_CTRL_OUT1[216] = GND;
assign TX_BIT_CTRL_OUT1[217] = GND;
assign TX_BIT_CTRL_OUT1[218] = GND;
assign TX_BIT_CTRL_OUT1[219] = GND;
assign TX_BIT_CTRL_OUT1[220] = GND;
assign TX_BIT_CTRL_OUT1[221] = GND;
assign TX_BIT_CTRL_OUT1[222] = GND;
assign TX_BIT_CTRL_OUT1[223] = GND;
assign TX_BIT_CTRL_OUT1[224] = GND;
assign TX_BIT_CTRL_OUT1[225] = GND;
assign TX_BIT_CTRL_OUT1[226] = GND;
assign TX_BIT_CTRL_OUT1[227] = GND;
assign TX_BIT_CTRL_OUT1[228] = GND;
assign TX_BIT_CTRL_OUT1[229] = GND;
assign TX_BIT_CTRL_OUT1[230] = GND;
assign TX_BIT_CTRL_OUT1[231] = GND;
assign TX_BIT_CTRL_OUT1[232] = GND;
assign TX_BIT_CTRL_OUT1[233] = GND;
assign TX_BIT_CTRL_OUT1[234] = GND;
assign TX_BIT_CTRL_OUT1[235] = GND;
assign TX_BIT_CTRL_OUT1[236] = GND;
assign TX_BIT_CTRL_OUT1[237] = GND;
assign TX_BIT_CTRL_OUT1[238] = GND;
assign TX_BIT_CTRL_OUT1[239] = GND;
assign TX_BIT_CTRL_OUT1[240] = GND;
assign TX_BIT_CTRL_OUT1[241] = GND;
assign TX_BIT_CTRL_OUT1[242] = GND;
assign TX_BIT_CTRL_OUT1[243] = GND;
assign TX_BIT_CTRL_OUT1[244] = GND;
assign TX_BIT_CTRL_OUT1[245] = GND;
assign TX_BIT_CTRL_OUT1[246] = GND;
assign TX_BIT_CTRL_OUT1[247] = GND;
assign TX_BIT_CTRL_OUT1[248] = GND;
assign TX_BIT_CTRL_OUT1[249] = GND;
assign TX_BIT_CTRL_OUT1[250] = GND;
assign TX_BIT_CTRL_OUT1[251] = GND;
assign TX_BIT_CTRL_OUT1[252] = GND;
assign TX_BIT_CTRL_OUT1[253] = GND;
assign TX_BIT_CTRL_OUT1[254] = GND;
assign TX_BIT_CTRL_OUT1[255] = GND;
assign TX_BIT_CTRL_OUT1[256] = GND;
assign TX_BIT_CTRL_OUT1[257] = GND;
assign TX_BIT_CTRL_OUT1[258] = GND;
assign TX_BIT_CTRL_OUT1[259] = GND;
assign TX_BIT_CTRL_OUT1[260] = GND;
assign TX_BIT_CTRL_OUT1[261] = GND;
assign TX_BIT_CTRL_OUT1[262] = GND;
assign TX_BIT_CTRL_OUT1[263] = GND;
assign TX_BIT_CTRL_OUT1[264] = GND;
assign TX_BIT_CTRL_OUT1[265] = GND;
assign TX_BIT_CTRL_OUT1[266] = GND;
assign TX_BIT_CTRL_OUT1[267] = GND;
assign TX_BIT_CTRL_OUT1[268] = GND;
assign TX_BIT_CTRL_OUT1[269] = GND;
assign TX_BIT_CTRL_OUT1[270] = GND;
assign TX_BIT_CTRL_OUT1[271] = GND;
assign TX_BIT_CTRL_OUT1[272] = GND;
assign TX_BIT_CTRL_OUT1[273] = GND;
assign TX_BIT_CTRL_OUT1[274] = GND;
assign TX_BIT_CTRL_OUT1[275] = GND;
assign TX_BIT_CTRL_OUT1[276] = GND;
assign TX_BIT_CTRL_OUT1[277] = GND;
assign TX_BIT_CTRL_OUT1[278] = GND;
assign TX_BIT_CTRL_OUT1[279] = GND;
assign TX_BIT_CTRL_OUT1[280] = GND;
assign TX_BIT_CTRL_OUT1[281] = GND;
assign TX_BIT_CTRL_OUT1[282] = GND;
assign TX_BIT_CTRL_OUT1[283] = GND;
assign TX_BIT_CTRL_OUT1[284] = GND;
assign TX_BIT_CTRL_OUT1[285] = GND;
assign TX_BIT_CTRL_OUT1[286] = GND;
assign TX_BIT_CTRL_OUT1[287] = GND;
assign TX_BIT_CTRL_OUT1[288] = GND;
assign TX_BIT_CTRL_OUT1[289] = GND;
assign TX_BIT_CTRL_OUT1[290] = GND;
assign TX_BIT_CTRL_OUT1[291] = GND;
assign TX_BIT_CTRL_OUT1[292] = GND;
assign TX_BIT_CTRL_OUT1[293] = GND;
assign TX_BIT_CTRL_OUT1[294] = GND;
assign TX_BIT_CTRL_OUT1[295] = GND;
assign TX_BIT_CTRL_OUT1[296] = GND;
assign TX_BIT_CTRL_OUT1[297] = GND;
assign TX_BIT_CTRL_OUT1[298] = GND;
assign TX_BIT_CTRL_OUT1[299] = GND;
assign TX_BIT_CTRL_OUT1[300] = GND;
assign TX_BIT_CTRL_OUT1[301] = GND;
assign TX_BIT_CTRL_OUT1[302] = GND;
assign TX_BIT_CTRL_OUT1[303] = GND;
assign TX_BIT_CTRL_OUT1[304] = GND;
assign TX_BIT_CTRL_OUT1[305] = GND;
assign TX_BIT_CTRL_OUT1[306] = GND;
assign TX_BIT_CTRL_OUT1[307] = GND;
assign TX_BIT_CTRL_OUT1[308] = GND;
assign TX_BIT_CTRL_OUT1[309] = GND;
assign TX_BIT_CTRL_OUT1[310] = GND;
assign TX_BIT_CTRL_OUT1[311] = GND;
assign TX_BIT_CTRL_OUT1[312] = GND;
assign TX_BIT_CTRL_OUT1[313] = GND;
assign TX_BIT_CTRL_OUT1[314] = GND;
assign TX_BIT_CTRL_OUT1[315] = GND;
assign TX_BIT_CTRL_OUT1[316] = GND;
assign TX_BIT_CTRL_OUT1[317] = GND;
assign TX_BIT_CTRL_OUT1[318] = GND;
assign TX_BIT_CTRL_OUT1[319] = GND;
assign TX_BIT_CTRL_OUT2[0] = GND;
assign TX_BIT_CTRL_OUT2[1] = GND;
assign TX_BIT_CTRL_OUT2[2] = GND;
assign TX_BIT_CTRL_OUT2[3] = GND;
assign TX_BIT_CTRL_OUT2[4] = GND;
assign TX_BIT_CTRL_OUT2[5] = GND;
assign TX_BIT_CTRL_OUT2[6] = GND;
assign TX_BIT_CTRL_OUT2[7] = GND;
assign TX_BIT_CTRL_OUT2[8] = GND;
assign TX_BIT_CTRL_OUT2[9] = GND;
assign TX_BIT_CTRL_OUT2[10] = GND;
assign TX_BIT_CTRL_OUT2[11] = GND;
assign TX_BIT_CTRL_OUT2[12] = GND;
assign TX_BIT_CTRL_OUT2[13] = GND;
assign TX_BIT_CTRL_OUT2[14] = GND;
assign TX_BIT_CTRL_OUT2[15] = GND;
assign TX_BIT_CTRL_OUT2[16] = GND;
assign TX_BIT_CTRL_OUT2[17] = GND;
assign TX_BIT_CTRL_OUT2[18] = GND;
assign TX_BIT_CTRL_OUT2[19] = GND;
assign TX_BIT_CTRL_OUT2[20] = GND;
assign TX_BIT_CTRL_OUT2[21] = GND;
assign TX_BIT_CTRL_OUT2[22] = GND;
assign TX_BIT_CTRL_OUT2[23] = GND;
assign TX_BIT_CTRL_OUT2[24] = GND;
assign TX_BIT_CTRL_OUT2[25] = GND;
assign TX_BIT_CTRL_OUT2[26] = GND;
assign TX_BIT_CTRL_OUT2[27] = GND;
assign TX_BIT_CTRL_OUT2[28] = GND;
assign TX_BIT_CTRL_OUT2[29] = GND;
assign TX_BIT_CTRL_OUT2[30] = GND;
assign TX_BIT_CTRL_OUT2[31] = GND;
assign TX_BIT_CTRL_OUT2[32] = GND;
assign TX_BIT_CTRL_OUT2[33] = GND;
assign TX_BIT_CTRL_OUT2[34] = GND;
assign TX_BIT_CTRL_OUT2[35] = GND;
assign TX_BIT_CTRL_OUT2[36] = GND;
assign TX_BIT_CTRL_OUT2[37] = GND;
assign TX_BIT_CTRL_OUT2[38] = GND;
assign TX_BIT_CTRL_OUT2[39] = GND;
assign TX_BIT_CTRL_OUT2[40] = GND;
assign TX_BIT_CTRL_OUT2[41] = GND;
assign TX_BIT_CTRL_OUT2[42] = GND;
assign TX_BIT_CTRL_OUT2[43] = GND;
assign TX_BIT_CTRL_OUT2[44] = GND;
assign TX_BIT_CTRL_OUT2[45] = GND;
assign TX_BIT_CTRL_OUT2[46] = GND;
assign TX_BIT_CTRL_OUT2[47] = GND;
assign TX_BIT_CTRL_OUT2[48] = GND;
assign TX_BIT_CTRL_OUT2[49] = GND;
assign TX_BIT_CTRL_OUT2[50] = GND;
assign TX_BIT_CTRL_OUT2[51] = GND;
assign TX_BIT_CTRL_OUT2[52] = GND;
assign TX_BIT_CTRL_OUT2[53] = GND;
assign TX_BIT_CTRL_OUT2[54] = GND;
assign TX_BIT_CTRL_OUT2[55] = GND;
assign TX_BIT_CTRL_OUT2[56] = GND;
assign TX_BIT_CTRL_OUT2[57] = GND;
assign TX_BIT_CTRL_OUT2[58] = GND;
assign TX_BIT_CTRL_OUT2[59] = GND;
assign TX_BIT_CTRL_OUT2[60] = GND;
assign TX_BIT_CTRL_OUT2[61] = GND;
assign TX_BIT_CTRL_OUT2[62] = GND;
assign TX_BIT_CTRL_OUT2[63] = GND;
assign TX_BIT_CTRL_OUT2[64] = GND;
assign TX_BIT_CTRL_OUT2[65] = GND;
assign TX_BIT_CTRL_OUT2[66] = GND;
assign TX_BIT_CTRL_OUT2[67] = GND;
assign TX_BIT_CTRL_OUT2[68] = GND;
assign TX_BIT_CTRL_OUT2[69] = GND;
assign TX_BIT_CTRL_OUT2[70] = GND;
assign TX_BIT_CTRL_OUT2[71] = GND;
assign TX_BIT_CTRL_OUT2[72] = GND;
assign TX_BIT_CTRL_OUT2[73] = GND;
assign TX_BIT_CTRL_OUT2[74] = GND;
assign TX_BIT_CTRL_OUT2[75] = GND;
assign TX_BIT_CTRL_OUT2[76] = GND;
assign TX_BIT_CTRL_OUT2[77] = GND;
assign TX_BIT_CTRL_OUT2[78] = GND;
assign TX_BIT_CTRL_OUT2[79] = GND;
assign TX_BIT_CTRL_OUT2[80] = GND;
assign TX_BIT_CTRL_OUT2[81] = GND;
assign TX_BIT_CTRL_OUT2[82] = GND;
assign TX_BIT_CTRL_OUT2[83] = GND;
assign TX_BIT_CTRL_OUT2[84] = GND;
assign TX_BIT_CTRL_OUT2[85] = GND;
assign TX_BIT_CTRL_OUT2[86] = GND;
assign TX_BIT_CTRL_OUT2[87] = GND;
assign TX_BIT_CTRL_OUT2[88] = GND;
assign TX_BIT_CTRL_OUT2[89] = GND;
assign TX_BIT_CTRL_OUT2[90] = GND;
assign TX_BIT_CTRL_OUT2[91] = GND;
assign TX_BIT_CTRL_OUT2[92] = GND;
assign TX_BIT_CTRL_OUT2[93] = GND;
assign TX_BIT_CTRL_OUT2[94] = GND;
assign TX_BIT_CTRL_OUT2[95] = GND;
assign TX_BIT_CTRL_OUT2[96] = GND;
assign TX_BIT_CTRL_OUT2[97] = GND;
assign TX_BIT_CTRL_OUT2[98] = GND;
assign TX_BIT_CTRL_OUT2[99] = GND;
assign TX_BIT_CTRL_OUT2[100] = GND;
assign TX_BIT_CTRL_OUT2[101] = GND;
assign TX_BIT_CTRL_OUT2[102] = GND;
assign TX_BIT_CTRL_OUT2[103] = GND;
assign TX_BIT_CTRL_OUT2[104] = GND;
assign TX_BIT_CTRL_OUT2[105] = GND;
assign TX_BIT_CTRL_OUT2[106] = GND;
assign TX_BIT_CTRL_OUT2[107] = GND;
assign TX_BIT_CTRL_OUT2[108] = GND;
assign TX_BIT_CTRL_OUT2[109] = GND;
assign TX_BIT_CTRL_OUT2[110] = GND;
assign TX_BIT_CTRL_OUT2[111] = GND;
assign TX_BIT_CTRL_OUT2[112] = GND;
assign TX_BIT_CTRL_OUT2[113] = GND;
assign TX_BIT_CTRL_OUT2[114] = GND;
assign TX_BIT_CTRL_OUT2[115] = GND;
assign TX_BIT_CTRL_OUT2[116] = GND;
assign TX_BIT_CTRL_OUT2[117] = GND;
assign TX_BIT_CTRL_OUT2[118] = GND;
assign TX_BIT_CTRL_OUT2[119] = GND;
assign TX_BIT_CTRL_OUT2[120] = GND;
assign TX_BIT_CTRL_OUT2[121] = GND;
assign TX_BIT_CTRL_OUT2[122] = GND;
assign TX_BIT_CTRL_OUT2[123] = GND;
assign TX_BIT_CTRL_OUT2[124] = GND;
assign TX_BIT_CTRL_OUT2[125] = GND;
assign TX_BIT_CTRL_OUT2[126] = GND;
assign TX_BIT_CTRL_OUT2[127] = GND;
assign TX_BIT_CTRL_OUT2[128] = GND;
assign TX_BIT_CTRL_OUT2[129] = GND;
assign TX_BIT_CTRL_OUT2[130] = GND;
assign TX_BIT_CTRL_OUT2[131] = GND;
assign TX_BIT_CTRL_OUT2[132] = GND;
assign TX_BIT_CTRL_OUT2[133] = GND;
assign TX_BIT_CTRL_OUT2[134] = GND;
assign TX_BIT_CTRL_OUT2[135] = GND;
assign TX_BIT_CTRL_OUT2[136] = GND;
assign TX_BIT_CTRL_OUT2[137] = GND;
assign TX_BIT_CTRL_OUT2[138] = GND;
assign TX_BIT_CTRL_OUT2[139] = GND;
assign TX_BIT_CTRL_OUT2[140] = GND;
assign TX_BIT_CTRL_OUT2[141] = GND;
assign TX_BIT_CTRL_OUT2[142] = GND;
assign TX_BIT_CTRL_OUT2[143] = GND;
assign TX_BIT_CTRL_OUT2[144] = GND;
assign TX_BIT_CTRL_OUT2[145] = GND;
assign TX_BIT_CTRL_OUT2[146] = GND;
assign TX_BIT_CTRL_OUT2[147] = GND;
assign TX_BIT_CTRL_OUT2[148] = GND;
assign TX_BIT_CTRL_OUT2[149] = GND;
assign TX_BIT_CTRL_OUT2[150] = GND;
assign TX_BIT_CTRL_OUT2[151] = GND;
assign TX_BIT_CTRL_OUT2[152] = GND;
assign TX_BIT_CTRL_OUT2[153] = GND;
assign TX_BIT_CTRL_OUT2[154] = GND;
assign TX_BIT_CTRL_OUT2[155] = GND;
assign TX_BIT_CTRL_OUT2[156] = GND;
assign TX_BIT_CTRL_OUT2[157] = GND;
assign TX_BIT_CTRL_OUT2[158] = GND;
assign TX_BIT_CTRL_OUT2[159] = GND;
assign TX_BIT_CTRL_OUT2[160] = GND;
assign TX_BIT_CTRL_OUT2[161] = GND;
assign TX_BIT_CTRL_OUT2[162] = GND;
assign TX_BIT_CTRL_OUT2[163] = GND;
assign TX_BIT_CTRL_OUT2[164] = GND;
assign TX_BIT_CTRL_OUT2[165] = GND;
assign TX_BIT_CTRL_OUT2[166] = GND;
assign TX_BIT_CTRL_OUT2[167] = GND;
assign TX_BIT_CTRL_OUT2[168] = GND;
assign TX_BIT_CTRL_OUT2[169] = GND;
assign TX_BIT_CTRL_OUT2[170] = GND;
assign TX_BIT_CTRL_OUT2[171] = GND;
assign TX_BIT_CTRL_OUT2[172] = GND;
assign TX_BIT_CTRL_OUT2[173] = GND;
assign TX_BIT_CTRL_OUT2[174] = GND;
assign TX_BIT_CTRL_OUT2[175] = GND;
assign TX_BIT_CTRL_OUT2[176] = GND;
assign TX_BIT_CTRL_OUT2[177] = GND;
assign TX_BIT_CTRL_OUT2[178] = GND;
assign TX_BIT_CTRL_OUT2[179] = GND;
assign TX_BIT_CTRL_OUT2[180] = GND;
assign TX_BIT_CTRL_OUT2[181] = GND;
assign TX_BIT_CTRL_OUT2[182] = GND;
assign TX_BIT_CTRL_OUT2[183] = GND;
assign TX_BIT_CTRL_OUT2[184] = GND;
assign TX_BIT_CTRL_OUT2[185] = GND;
assign TX_BIT_CTRL_OUT2[186] = GND;
assign TX_BIT_CTRL_OUT2[187] = GND;
assign TX_BIT_CTRL_OUT2[188] = GND;
assign TX_BIT_CTRL_OUT2[189] = GND;
assign TX_BIT_CTRL_OUT2[190] = GND;
assign TX_BIT_CTRL_OUT2[191] = GND;
assign TX_BIT_CTRL_OUT2[192] = GND;
assign TX_BIT_CTRL_OUT2[193] = GND;
assign TX_BIT_CTRL_OUT2[194] = GND;
assign TX_BIT_CTRL_OUT2[195] = GND;
assign TX_BIT_CTRL_OUT2[196] = GND;
assign TX_BIT_CTRL_OUT2[197] = GND;
assign TX_BIT_CTRL_OUT2[198] = GND;
assign TX_BIT_CTRL_OUT2[199] = GND;
assign TX_BIT_CTRL_OUT2[240] = GND;
assign TX_BIT_CTRL_OUT2[241] = GND;
assign TX_BIT_CTRL_OUT2[242] = GND;
assign TX_BIT_CTRL_OUT2[243] = GND;
assign TX_BIT_CTRL_OUT2[244] = GND;
assign TX_BIT_CTRL_OUT2[245] = GND;
assign TX_BIT_CTRL_OUT2[246] = GND;
assign TX_BIT_CTRL_OUT2[247] = GND;
assign TX_BIT_CTRL_OUT2[248] = GND;
assign TX_BIT_CTRL_OUT2[249] = GND;
assign TX_BIT_CTRL_OUT2[250] = GND;
assign TX_BIT_CTRL_OUT2[251] = GND;
assign TX_BIT_CTRL_OUT2[252] = GND;
assign TX_BIT_CTRL_OUT2[253] = GND;
assign TX_BIT_CTRL_OUT2[254] = GND;
assign TX_BIT_CTRL_OUT2[255] = GND;
assign TX_BIT_CTRL_OUT2[256] = GND;
assign TX_BIT_CTRL_OUT2[257] = GND;
assign TX_BIT_CTRL_OUT2[258] = GND;
assign TX_BIT_CTRL_OUT2[259] = GND;
assign TX_BIT_CTRL_OUT2[260] = GND;
assign TX_BIT_CTRL_OUT2[261] = GND;
assign TX_BIT_CTRL_OUT2[262] = GND;
assign TX_BIT_CTRL_OUT2[263] = GND;
assign TX_BIT_CTRL_OUT2[264] = GND;
assign TX_BIT_CTRL_OUT2[265] = GND;
assign TX_BIT_CTRL_OUT2[266] = GND;
assign TX_BIT_CTRL_OUT2[267] = GND;
assign TX_BIT_CTRL_OUT2[268] = GND;
assign TX_BIT_CTRL_OUT2[269] = GND;
assign TX_BIT_CTRL_OUT2[270] = GND;
assign TX_BIT_CTRL_OUT2[271] = GND;
assign TX_BIT_CTRL_OUT2[272] = GND;
assign TX_BIT_CTRL_OUT2[273] = GND;
assign TX_BIT_CTRL_OUT2[274] = GND;
assign TX_BIT_CTRL_OUT2[275] = GND;
assign TX_BIT_CTRL_OUT2[276] = GND;
assign TX_BIT_CTRL_OUT2[277] = GND;
assign TX_BIT_CTRL_OUT2[278] = GND;
assign TX_BIT_CTRL_OUT2[279] = GND;
assign TX_BIT_CTRL_OUT2[280] = GND;
assign TX_BIT_CTRL_OUT2[281] = GND;
assign TX_BIT_CTRL_OUT2[282] = GND;
assign TX_BIT_CTRL_OUT2[283] = GND;
assign TX_BIT_CTRL_OUT2[284] = GND;
assign TX_BIT_CTRL_OUT2[285] = GND;
assign TX_BIT_CTRL_OUT2[286] = GND;
assign TX_BIT_CTRL_OUT2[287] = GND;
assign TX_BIT_CTRL_OUT2[288] = GND;
assign TX_BIT_CTRL_OUT2[289] = GND;
assign TX_BIT_CTRL_OUT2[290] = GND;
assign TX_BIT_CTRL_OUT2[291] = GND;
assign TX_BIT_CTRL_OUT2[292] = GND;
assign TX_BIT_CTRL_OUT2[293] = GND;
assign TX_BIT_CTRL_OUT2[294] = GND;
assign TX_BIT_CTRL_OUT2[295] = GND;
assign TX_BIT_CTRL_OUT2[296] = GND;
assign TX_BIT_CTRL_OUT2[297] = GND;
assign TX_BIT_CTRL_OUT2[298] = GND;
assign TX_BIT_CTRL_OUT2[299] = GND;
assign TX_BIT_CTRL_OUT2[300] = GND;
assign TX_BIT_CTRL_OUT2[301] = GND;
assign TX_BIT_CTRL_OUT2[302] = GND;
assign TX_BIT_CTRL_OUT2[303] = GND;
assign TX_BIT_CTRL_OUT2[304] = GND;
assign TX_BIT_CTRL_OUT2[305] = GND;
assign TX_BIT_CTRL_OUT2[306] = GND;
assign TX_BIT_CTRL_OUT2[307] = GND;
assign TX_BIT_CTRL_OUT2[308] = GND;
assign TX_BIT_CTRL_OUT2[309] = GND;
assign TX_BIT_CTRL_OUT2[310] = GND;
assign TX_BIT_CTRL_OUT2[311] = GND;
assign TX_BIT_CTRL_OUT2[312] = GND;
assign TX_BIT_CTRL_OUT2[313] = GND;
assign TX_BIT_CTRL_OUT2[314] = GND;
assign TX_BIT_CTRL_OUT2[315] = GND;
assign TX_BIT_CTRL_OUT2[316] = GND;
assign TX_BIT_CTRL_OUT2[317] = GND;
assign TX_BIT_CTRL_OUT2[318] = GND;
assign TX_BIT_CTRL_OUT2[319] = GND;
assign TX_BIT_CTRL_OUT3[0] = GND;
assign TX_BIT_CTRL_OUT3[1] = GND;
assign TX_BIT_CTRL_OUT3[2] = GND;
assign TX_BIT_CTRL_OUT3[3] = GND;
assign TX_BIT_CTRL_OUT3[4] = GND;
assign TX_BIT_CTRL_OUT3[5] = GND;
assign TX_BIT_CTRL_OUT3[6] = GND;
assign TX_BIT_CTRL_OUT3[7] = GND;
assign TX_BIT_CTRL_OUT3[8] = GND;
assign TX_BIT_CTRL_OUT3[9] = GND;
assign TX_BIT_CTRL_OUT3[10] = GND;
assign TX_BIT_CTRL_OUT3[11] = GND;
assign TX_BIT_CTRL_OUT3[12] = GND;
assign TX_BIT_CTRL_OUT3[13] = GND;
assign TX_BIT_CTRL_OUT3[14] = GND;
assign TX_BIT_CTRL_OUT3[15] = GND;
assign TX_BIT_CTRL_OUT3[16] = GND;
assign TX_BIT_CTRL_OUT3[17] = GND;
assign TX_BIT_CTRL_OUT3[18] = GND;
assign TX_BIT_CTRL_OUT3[19] = GND;
assign TX_BIT_CTRL_OUT3[20] = GND;
assign TX_BIT_CTRL_OUT3[21] = GND;
assign TX_BIT_CTRL_OUT3[22] = GND;
assign TX_BIT_CTRL_OUT3[23] = GND;
assign TX_BIT_CTRL_OUT3[24] = GND;
assign TX_BIT_CTRL_OUT3[25] = GND;
assign TX_BIT_CTRL_OUT3[26] = GND;
assign TX_BIT_CTRL_OUT3[27] = GND;
assign TX_BIT_CTRL_OUT3[28] = GND;
assign TX_BIT_CTRL_OUT3[29] = GND;
assign TX_BIT_CTRL_OUT3[30] = GND;
assign TX_BIT_CTRL_OUT3[31] = GND;
assign TX_BIT_CTRL_OUT3[32] = GND;
assign TX_BIT_CTRL_OUT3[33] = GND;
assign TX_BIT_CTRL_OUT3[34] = GND;
assign TX_BIT_CTRL_OUT3[35] = GND;
assign TX_BIT_CTRL_OUT3[36] = GND;
assign TX_BIT_CTRL_OUT3[37] = GND;
assign TX_BIT_CTRL_OUT3[38] = GND;
assign TX_BIT_CTRL_OUT3[39] = GND;
assign TX_BIT_CTRL_OUT3[40] = GND;
assign TX_BIT_CTRL_OUT3[41] = GND;
assign TX_BIT_CTRL_OUT3[42] = GND;
assign TX_BIT_CTRL_OUT3[43] = GND;
assign TX_BIT_CTRL_OUT3[44] = GND;
assign TX_BIT_CTRL_OUT3[45] = GND;
assign TX_BIT_CTRL_OUT3[46] = GND;
assign TX_BIT_CTRL_OUT3[47] = GND;
assign TX_BIT_CTRL_OUT3[48] = GND;
assign TX_BIT_CTRL_OUT3[49] = GND;
assign TX_BIT_CTRL_OUT3[50] = GND;
assign TX_BIT_CTRL_OUT3[51] = GND;
assign TX_BIT_CTRL_OUT3[52] = GND;
assign TX_BIT_CTRL_OUT3[53] = GND;
assign TX_BIT_CTRL_OUT3[54] = GND;
assign TX_BIT_CTRL_OUT3[55] = GND;
assign TX_BIT_CTRL_OUT3[56] = GND;
assign TX_BIT_CTRL_OUT3[57] = GND;
assign TX_BIT_CTRL_OUT3[58] = GND;
assign TX_BIT_CTRL_OUT3[59] = GND;
assign TX_BIT_CTRL_OUT3[60] = GND;
assign TX_BIT_CTRL_OUT3[61] = GND;
assign TX_BIT_CTRL_OUT3[62] = GND;
assign TX_BIT_CTRL_OUT3[63] = GND;
assign TX_BIT_CTRL_OUT3[64] = GND;
assign TX_BIT_CTRL_OUT3[65] = GND;
assign TX_BIT_CTRL_OUT3[66] = GND;
assign TX_BIT_CTRL_OUT3[67] = GND;
assign TX_BIT_CTRL_OUT3[68] = GND;
assign TX_BIT_CTRL_OUT3[69] = GND;
assign TX_BIT_CTRL_OUT3[70] = GND;
assign TX_BIT_CTRL_OUT3[71] = GND;
assign TX_BIT_CTRL_OUT3[72] = GND;
assign TX_BIT_CTRL_OUT3[73] = GND;
assign TX_BIT_CTRL_OUT3[74] = GND;
assign TX_BIT_CTRL_OUT3[75] = GND;
assign TX_BIT_CTRL_OUT3[76] = GND;
assign TX_BIT_CTRL_OUT3[77] = GND;
assign TX_BIT_CTRL_OUT3[78] = GND;
assign TX_BIT_CTRL_OUT3[79] = GND;
assign TX_BIT_CTRL_OUT3[80] = GND;
assign TX_BIT_CTRL_OUT3[81] = GND;
assign TX_BIT_CTRL_OUT3[82] = GND;
assign TX_BIT_CTRL_OUT3[83] = GND;
assign TX_BIT_CTRL_OUT3[84] = GND;
assign TX_BIT_CTRL_OUT3[85] = GND;
assign TX_BIT_CTRL_OUT3[86] = GND;
assign TX_BIT_CTRL_OUT3[87] = GND;
assign TX_BIT_CTRL_OUT3[88] = GND;
assign TX_BIT_CTRL_OUT3[89] = GND;
assign TX_BIT_CTRL_OUT3[90] = GND;
assign TX_BIT_CTRL_OUT3[91] = GND;
assign TX_BIT_CTRL_OUT3[92] = GND;
assign TX_BIT_CTRL_OUT3[93] = GND;
assign TX_BIT_CTRL_OUT3[94] = GND;
assign TX_BIT_CTRL_OUT3[95] = GND;
assign TX_BIT_CTRL_OUT3[96] = GND;
assign TX_BIT_CTRL_OUT3[97] = GND;
assign TX_BIT_CTRL_OUT3[98] = GND;
assign TX_BIT_CTRL_OUT3[99] = GND;
assign TX_BIT_CTRL_OUT3[100] = GND;
assign TX_BIT_CTRL_OUT3[101] = GND;
assign TX_BIT_CTRL_OUT3[102] = GND;
assign TX_BIT_CTRL_OUT3[103] = GND;
assign TX_BIT_CTRL_OUT3[104] = GND;
assign TX_BIT_CTRL_OUT3[105] = GND;
assign TX_BIT_CTRL_OUT3[106] = GND;
assign TX_BIT_CTRL_OUT3[107] = GND;
assign TX_BIT_CTRL_OUT3[108] = GND;
assign TX_BIT_CTRL_OUT3[109] = GND;
assign TX_BIT_CTRL_OUT3[110] = GND;
assign TX_BIT_CTRL_OUT3[111] = GND;
assign TX_BIT_CTRL_OUT3[112] = GND;
assign TX_BIT_CTRL_OUT3[113] = GND;
assign TX_BIT_CTRL_OUT3[114] = GND;
assign TX_BIT_CTRL_OUT3[115] = GND;
assign TX_BIT_CTRL_OUT3[116] = GND;
assign TX_BIT_CTRL_OUT3[117] = GND;
assign TX_BIT_CTRL_OUT3[118] = GND;
assign TX_BIT_CTRL_OUT3[119] = GND;
assign TX_BIT_CTRL_OUT3[120] = GND;
assign TX_BIT_CTRL_OUT3[121] = GND;
assign TX_BIT_CTRL_OUT3[122] = GND;
assign TX_BIT_CTRL_OUT3[123] = GND;
assign TX_BIT_CTRL_OUT3[124] = GND;
assign TX_BIT_CTRL_OUT3[125] = GND;
assign TX_BIT_CTRL_OUT3[126] = GND;
assign TX_BIT_CTRL_OUT3[127] = GND;
assign TX_BIT_CTRL_OUT3[128] = GND;
assign TX_BIT_CTRL_OUT3[129] = GND;
assign TX_BIT_CTRL_OUT3[130] = GND;
assign TX_BIT_CTRL_OUT3[131] = GND;
assign TX_BIT_CTRL_OUT3[132] = GND;
assign TX_BIT_CTRL_OUT3[133] = GND;
assign TX_BIT_CTRL_OUT3[134] = GND;
assign TX_BIT_CTRL_OUT3[135] = GND;
assign TX_BIT_CTRL_OUT3[136] = GND;
assign TX_BIT_CTRL_OUT3[137] = GND;
assign TX_BIT_CTRL_OUT3[138] = GND;
assign TX_BIT_CTRL_OUT3[139] = GND;
assign TX_BIT_CTRL_OUT3[140] = GND;
assign TX_BIT_CTRL_OUT3[141] = GND;
assign TX_BIT_CTRL_OUT3[142] = GND;
assign TX_BIT_CTRL_OUT3[143] = GND;
assign TX_BIT_CTRL_OUT3[144] = GND;
assign TX_BIT_CTRL_OUT3[145] = GND;
assign TX_BIT_CTRL_OUT3[146] = GND;
assign TX_BIT_CTRL_OUT3[147] = GND;
assign TX_BIT_CTRL_OUT3[148] = GND;
assign TX_BIT_CTRL_OUT3[149] = GND;
assign TX_BIT_CTRL_OUT3[150] = GND;
assign TX_BIT_CTRL_OUT3[151] = GND;
assign TX_BIT_CTRL_OUT3[152] = GND;
assign TX_BIT_CTRL_OUT3[153] = GND;
assign TX_BIT_CTRL_OUT3[154] = GND;
assign TX_BIT_CTRL_OUT3[155] = GND;
assign TX_BIT_CTRL_OUT3[156] = GND;
assign TX_BIT_CTRL_OUT3[157] = GND;
assign TX_BIT_CTRL_OUT3[158] = GND;
assign TX_BIT_CTRL_OUT3[159] = GND;
assign TX_BIT_CTRL_OUT3[160] = GND;
assign TX_BIT_CTRL_OUT3[161] = GND;
assign TX_BIT_CTRL_OUT3[162] = GND;
assign TX_BIT_CTRL_OUT3[163] = GND;
assign TX_BIT_CTRL_OUT3[164] = GND;
assign TX_BIT_CTRL_OUT3[165] = GND;
assign TX_BIT_CTRL_OUT3[166] = GND;
assign TX_BIT_CTRL_OUT3[167] = GND;
assign TX_BIT_CTRL_OUT3[168] = GND;
assign TX_BIT_CTRL_OUT3[169] = GND;
assign TX_BIT_CTRL_OUT3[170] = GND;
assign TX_BIT_CTRL_OUT3[171] = GND;
assign TX_BIT_CTRL_OUT3[172] = GND;
assign TX_BIT_CTRL_OUT3[173] = GND;
assign TX_BIT_CTRL_OUT3[174] = GND;
assign TX_BIT_CTRL_OUT3[175] = GND;
assign TX_BIT_CTRL_OUT3[176] = GND;
assign TX_BIT_CTRL_OUT3[177] = GND;
assign TX_BIT_CTRL_OUT3[178] = GND;
assign TX_BIT_CTRL_OUT3[179] = GND;
assign TX_BIT_CTRL_OUT3[180] = GND;
assign TX_BIT_CTRL_OUT3[181] = GND;
assign TX_BIT_CTRL_OUT3[182] = GND;
assign TX_BIT_CTRL_OUT3[183] = GND;
assign TX_BIT_CTRL_OUT3[184] = GND;
assign TX_BIT_CTRL_OUT3[185] = GND;
assign TX_BIT_CTRL_OUT3[186] = GND;
assign TX_BIT_CTRL_OUT3[187] = GND;
assign TX_BIT_CTRL_OUT3[188] = GND;
assign TX_BIT_CTRL_OUT3[189] = GND;
assign TX_BIT_CTRL_OUT3[190] = GND;
assign TX_BIT_CTRL_OUT3[191] = GND;
assign TX_BIT_CTRL_OUT3[192] = GND;
assign TX_BIT_CTRL_OUT3[193] = GND;
assign TX_BIT_CTRL_OUT3[194] = GND;
assign TX_BIT_CTRL_OUT3[195] = GND;
assign TX_BIT_CTRL_OUT3[196] = GND;
assign TX_BIT_CTRL_OUT3[197] = GND;
assign TX_BIT_CTRL_OUT3[198] = GND;
assign TX_BIT_CTRL_OUT3[199] = GND;
assign TX_BIT_CTRL_OUT3[240] = GND;
assign TX_BIT_CTRL_OUT3[241] = GND;
assign TX_BIT_CTRL_OUT3[242] = GND;
assign TX_BIT_CTRL_OUT3[243] = GND;
assign TX_BIT_CTRL_OUT3[244] = GND;
assign TX_BIT_CTRL_OUT3[245] = GND;
assign TX_BIT_CTRL_OUT3[246] = GND;
assign TX_BIT_CTRL_OUT3[247] = GND;
assign TX_BIT_CTRL_OUT3[248] = GND;
assign TX_BIT_CTRL_OUT3[249] = GND;
assign TX_BIT_CTRL_OUT3[250] = GND;
assign TX_BIT_CTRL_OUT3[251] = GND;
assign TX_BIT_CTRL_OUT3[252] = GND;
assign TX_BIT_CTRL_OUT3[253] = GND;
assign TX_BIT_CTRL_OUT3[254] = GND;
assign TX_BIT_CTRL_OUT3[255] = GND;
assign TX_BIT_CTRL_OUT3[256] = GND;
assign TX_BIT_CTRL_OUT3[257] = GND;
assign TX_BIT_CTRL_OUT3[258] = GND;
assign TX_BIT_CTRL_OUT3[259] = GND;
assign TX_BIT_CTRL_OUT3[260] = GND;
assign TX_BIT_CTRL_OUT3[261] = GND;
assign TX_BIT_CTRL_OUT3[262] = GND;
assign TX_BIT_CTRL_OUT3[263] = GND;
assign TX_BIT_CTRL_OUT3[264] = GND;
assign TX_BIT_CTRL_OUT3[265] = GND;
assign TX_BIT_CTRL_OUT3[266] = GND;
assign TX_BIT_CTRL_OUT3[267] = GND;
assign TX_BIT_CTRL_OUT3[268] = GND;
assign TX_BIT_CTRL_OUT3[269] = GND;
assign TX_BIT_CTRL_OUT3[270] = GND;
assign TX_BIT_CTRL_OUT3[271] = GND;
assign TX_BIT_CTRL_OUT3[272] = GND;
assign TX_BIT_CTRL_OUT3[273] = GND;
assign TX_BIT_CTRL_OUT3[274] = GND;
assign TX_BIT_CTRL_OUT3[275] = GND;
assign TX_BIT_CTRL_OUT3[276] = GND;
assign TX_BIT_CTRL_OUT3[277] = GND;
assign TX_BIT_CTRL_OUT3[278] = GND;
assign TX_BIT_CTRL_OUT3[279] = GND;
assign TX_BIT_CTRL_OUT3[280] = GND;
assign TX_BIT_CTRL_OUT3[281] = GND;
assign TX_BIT_CTRL_OUT3[282] = GND;
assign TX_BIT_CTRL_OUT3[283] = GND;
assign TX_BIT_CTRL_OUT3[284] = GND;
assign TX_BIT_CTRL_OUT3[285] = GND;
assign TX_BIT_CTRL_OUT3[286] = GND;
assign TX_BIT_CTRL_OUT3[287] = GND;
assign TX_BIT_CTRL_OUT3[288] = GND;
assign TX_BIT_CTRL_OUT3[289] = GND;
assign TX_BIT_CTRL_OUT3[290] = GND;
assign TX_BIT_CTRL_OUT3[291] = GND;
assign TX_BIT_CTRL_OUT3[292] = GND;
assign TX_BIT_CTRL_OUT3[293] = GND;
assign TX_BIT_CTRL_OUT3[294] = GND;
assign TX_BIT_CTRL_OUT3[295] = GND;
assign TX_BIT_CTRL_OUT3[296] = GND;
assign TX_BIT_CTRL_OUT3[297] = GND;
assign TX_BIT_CTRL_OUT3[298] = GND;
assign TX_BIT_CTRL_OUT3[299] = GND;
assign TX_BIT_CTRL_OUT3[300] = GND;
assign TX_BIT_CTRL_OUT3[301] = GND;
assign TX_BIT_CTRL_OUT3[302] = GND;
assign TX_BIT_CTRL_OUT3[303] = GND;
assign TX_BIT_CTRL_OUT3[304] = GND;
assign TX_BIT_CTRL_OUT3[305] = GND;
assign TX_BIT_CTRL_OUT3[306] = GND;
assign TX_BIT_CTRL_OUT3[307] = GND;
assign TX_BIT_CTRL_OUT3[308] = GND;
assign TX_BIT_CTRL_OUT3[309] = GND;
assign TX_BIT_CTRL_OUT3[310] = GND;
assign TX_BIT_CTRL_OUT3[311] = GND;
assign TX_BIT_CTRL_OUT3[312] = GND;
assign TX_BIT_CTRL_OUT3[313] = GND;
assign TX_BIT_CTRL_OUT3[314] = GND;
assign TX_BIT_CTRL_OUT3[315] = GND;
assign TX_BIT_CTRL_OUT3[316] = GND;
assign TX_BIT_CTRL_OUT3[317] = GND;
assign TX_BIT_CTRL_OUT3[318] = GND;
assign TX_BIT_CTRL_OUT3[319] = GND;
assign TX_BIT_CTRL_OUT4[0] = GND;
assign TX_BIT_CTRL_OUT4[1] = GND;
assign TX_BIT_CTRL_OUT4[2] = GND;
assign TX_BIT_CTRL_OUT4[3] = GND;
assign TX_BIT_CTRL_OUT4[4] = GND;
assign TX_BIT_CTRL_OUT4[5] = GND;
assign TX_BIT_CTRL_OUT4[6] = GND;
assign TX_BIT_CTRL_OUT4[7] = GND;
assign TX_BIT_CTRL_OUT4[8] = GND;
assign TX_BIT_CTRL_OUT4[9] = GND;
assign TX_BIT_CTRL_OUT4[10] = GND;
assign TX_BIT_CTRL_OUT4[11] = GND;
assign TX_BIT_CTRL_OUT4[12] = GND;
assign TX_BIT_CTRL_OUT4[13] = GND;
assign TX_BIT_CTRL_OUT4[14] = GND;
assign TX_BIT_CTRL_OUT4[15] = GND;
assign TX_BIT_CTRL_OUT4[16] = GND;
assign TX_BIT_CTRL_OUT4[17] = GND;
assign TX_BIT_CTRL_OUT4[18] = GND;
assign TX_BIT_CTRL_OUT4[19] = GND;
assign TX_BIT_CTRL_OUT4[20] = GND;
assign TX_BIT_CTRL_OUT4[21] = GND;
assign TX_BIT_CTRL_OUT4[22] = GND;
assign TX_BIT_CTRL_OUT4[23] = GND;
assign TX_BIT_CTRL_OUT4[24] = GND;
assign TX_BIT_CTRL_OUT4[25] = GND;
assign TX_BIT_CTRL_OUT4[26] = GND;
assign TX_BIT_CTRL_OUT4[27] = GND;
assign TX_BIT_CTRL_OUT4[28] = GND;
assign TX_BIT_CTRL_OUT4[29] = GND;
assign TX_BIT_CTRL_OUT4[30] = GND;
assign TX_BIT_CTRL_OUT4[31] = GND;
assign TX_BIT_CTRL_OUT4[32] = GND;
assign TX_BIT_CTRL_OUT4[33] = GND;
assign TX_BIT_CTRL_OUT4[34] = GND;
assign TX_BIT_CTRL_OUT4[35] = GND;
assign TX_BIT_CTRL_OUT4[36] = GND;
assign TX_BIT_CTRL_OUT4[37] = GND;
assign TX_BIT_CTRL_OUT4[38] = GND;
assign TX_BIT_CTRL_OUT4[39] = GND;
assign TX_BIT_CTRL_OUT4[40] = GND;
assign TX_BIT_CTRL_OUT4[41] = GND;
assign TX_BIT_CTRL_OUT4[42] = GND;
assign TX_BIT_CTRL_OUT4[43] = GND;
assign TX_BIT_CTRL_OUT4[44] = GND;
assign TX_BIT_CTRL_OUT4[45] = GND;
assign TX_BIT_CTRL_OUT4[46] = GND;
assign TX_BIT_CTRL_OUT4[47] = GND;
assign TX_BIT_CTRL_OUT4[48] = GND;
assign TX_BIT_CTRL_OUT4[49] = GND;
assign TX_BIT_CTRL_OUT4[50] = GND;
assign TX_BIT_CTRL_OUT4[51] = GND;
assign TX_BIT_CTRL_OUT4[52] = GND;
assign TX_BIT_CTRL_OUT4[53] = GND;
assign TX_BIT_CTRL_OUT4[54] = GND;
assign TX_BIT_CTRL_OUT4[55] = GND;
assign TX_BIT_CTRL_OUT4[56] = GND;
assign TX_BIT_CTRL_OUT4[57] = GND;
assign TX_BIT_CTRL_OUT4[58] = GND;
assign TX_BIT_CTRL_OUT4[59] = GND;
assign TX_BIT_CTRL_OUT4[60] = GND;
assign TX_BIT_CTRL_OUT4[61] = GND;
assign TX_BIT_CTRL_OUT4[62] = GND;
assign TX_BIT_CTRL_OUT4[63] = GND;
assign TX_BIT_CTRL_OUT4[64] = GND;
assign TX_BIT_CTRL_OUT4[65] = GND;
assign TX_BIT_CTRL_OUT4[66] = GND;
assign TX_BIT_CTRL_OUT4[67] = GND;
assign TX_BIT_CTRL_OUT4[68] = GND;
assign TX_BIT_CTRL_OUT4[69] = GND;
assign TX_BIT_CTRL_OUT4[70] = GND;
assign TX_BIT_CTRL_OUT4[71] = GND;
assign TX_BIT_CTRL_OUT4[72] = GND;
assign TX_BIT_CTRL_OUT4[73] = GND;
assign TX_BIT_CTRL_OUT4[74] = GND;
assign TX_BIT_CTRL_OUT4[75] = GND;
assign TX_BIT_CTRL_OUT4[76] = GND;
assign TX_BIT_CTRL_OUT4[77] = GND;
assign TX_BIT_CTRL_OUT4[78] = GND;
assign TX_BIT_CTRL_OUT4[79] = GND;
assign TX_BIT_CTRL_OUT4[80] = GND;
assign TX_BIT_CTRL_OUT4[81] = GND;
assign TX_BIT_CTRL_OUT4[82] = GND;
assign TX_BIT_CTRL_OUT4[83] = GND;
assign TX_BIT_CTRL_OUT4[84] = GND;
assign TX_BIT_CTRL_OUT4[85] = GND;
assign TX_BIT_CTRL_OUT4[86] = GND;
assign TX_BIT_CTRL_OUT4[87] = GND;
assign TX_BIT_CTRL_OUT4[88] = GND;
assign TX_BIT_CTRL_OUT4[89] = GND;
assign TX_BIT_CTRL_OUT4[90] = GND;
assign TX_BIT_CTRL_OUT4[91] = GND;
assign TX_BIT_CTRL_OUT4[92] = GND;
assign TX_BIT_CTRL_OUT4[93] = GND;
assign TX_BIT_CTRL_OUT4[94] = GND;
assign TX_BIT_CTRL_OUT4[95] = GND;
assign TX_BIT_CTRL_OUT4[96] = GND;
assign TX_BIT_CTRL_OUT4[97] = GND;
assign TX_BIT_CTRL_OUT4[98] = GND;
assign TX_BIT_CTRL_OUT4[99] = GND;
assign TX_BIT_CTRL_OUT4[100] = GND;
assign TX_BIT_CTRL_OUT4[101] = GND;
assign TX_BIT_CTRL_OUT4[102] = GND;
assign TX_BIT_CTRL_OUT4[103] = GND;
assign TX_BIT_CTRL_OUT4[104] = GND;
assign TX_BIT_CTRL_OUT4[105] = GND;
assign TX_BIT_CTRL_OUT4[106] = GND;
assign TX_BIT_CTRL_OUT4[107] = GND;
assign TX_BIT_CTRL_OUT4[108] = GND;
assign TX_BIT_CTRL_OUT4[109] = GND;
assign TX_BIT_CTRL_OUT4[110] = GND;
assign TX_BIT_CTRL_OUT4[111] = GND;
assign TX_BIT_CTRL_OUT4[112] = GND;
assign TX_BIT_CTRL_OUT4[113] = GND;
assign TX_BIT_CTRL_OUT4[114] = GND;
assign TX_BIT_CTRL_OUT4[115] = GND;
assign TX_BIT_CTRL_OUT4[116] = GND;
assign TX_BIT_CTRL_OUT4[117] = GND;
assign TX_BIT_CTRL_OUT4[118] = GND;
assign TX_BIT_CTRL_OUT4[119] = GND;
assign TX_BIT_CTRL_OUT4[120] = GND;
assign TX_BIT_CTRL_OUT4[121] = GND;
assign TX_BIT_CTRL_OUT4[122] = GND;
assign TX_BIT_CTRL_OUT4[123] = GND;
assign TX_BIT_CTRL_OUT4[124] = GND;
assign TX_BIT_CTRL_OUT4[125] = GND;
assign TX_BIT_CTRL_OUT4[126] = GND;
assign TX_BIT_CTRL_OUT4[127] = GND;
assign TX_BIT_CTRL_OUT4[128] = GND;
assign TX_BIT_CTRL_OUT4[129] = GND;
assign TX_BIT_CTRL_OUT4[130] = GND;
assign TX_BIT_CTRL_OUT4[131] = GND;
assign TX_BIT_CTRL_OUT4[132] = GND;
assign TX_BIT_CTRL_OUT4[133] = GND;
assign TX_BIT_CTRL_OUT4[134] = GND;
assign TX_BIT_CTRL_OUT4[135] = GND;
assign TX_BIT_CTRL_OUT4[136] = GND;
assign TX_BIT_CTRL_OUT4[137] = GND;
assign TX_BIT_CTRL_OUT4[138] = GND;
assign TX_BIT_CTRL_OUT4[139] = GND;
assign TX_BIT_CTRL_OUT4[140] = GND;
assign TX_BIT_CTRL_OUT4[141] = GND;
assign TX_BIT_CTRL_OUT4[142] = GND;
assign TX_BIT_CTRL_OUT4[143] = GND;
assign TX_BIT_CTRL_OUT4[144] = GND;
assign TX_BIT_CTRL_OUT4[145] = GND;
assign TX_BIT_CTRL_OUT4[146] = GND;
assign TX_BIT_CTRL_OUT4[147] = GND;
assign TX_BIT_CTRL_OUT4[148] = GND;
assign TX_BIT_CTRL_OUT4[149] = GND;
assign TX_BIT_CTRL_OUT4[150] = GND;
assign TX_BIT_CTRL_OUT4[151] = GND;
assign TX_BIT_CTRL_OUT4[152] = GND;
assign TX_BIT_CTRL_OUT4[153] = GND;
assign TX_BIT_CTRL_OUT4[154] = GND;
assign TX_BIT_CTRL_OUT4[155] = GND;
assign TX_BIT_CTRL_OUT4[156] = GND;
assign TX_BIT_CTRL_OUT4[157] = GND;
assign TX_BIT_CTRL_OUT4[158] = GND;
assign TX_BIT_CTRL_OUT4[159] = GND;
assign TX_BIT_CTRL_OUT4[240] = GND;
assign TX_BIT_CTRL_OUT4[241] = GND;
assign TX_BIT_CTRL_OUT4[242] = GND;
assign TX_BIT_CTRL_OUT4[243] = GND;
assign TX_BIT_CTRL_OUT4[244] = GND;
assign TX_BIT_CTRL_OUT4[245] = GND;
assign TX_BIT_CTRL_OUT4[246] = GND;
assign TX_BIT_CTRL_OUT4[247] = GND;
assign TX_BIT_CTRL_OUT4[248] = GND;
assign TX_BIT_CTRL_OUT4[249] = GND;
assign TX_BIT_CTRL_OUT4[250] = GND;
assign TX_BIT_CTRL_OUT4[251] = GND;
assign TX_BIT_CTRL_OUT4[252] = GND;
assign TX_BIT_CTRL_OUT4[253] = GND;
assign TX_BIT_CTRL_OUT4[254] = GND;
assign TX_BIT_CTRL_OUT4[255] = GND;
assign TX_BIT_CTRL_OUT4[256] = GND;
assign TX_BIT_CTRL_OUT4[257] = GND;
assign TX_BIT_CTRL_OUT4[258] = GND;
assign TX_BIT_CTRL_OUT4[259] = GND;
assign TX_BIT_CTRL_OUT4[260] = GND;
assign TX_BIT_CTRL_OUT4[261] = GND;
assign TX_BIT_CTRL_OUT4[262] = GND;
assign TX_BIT_CTRL_OUT4[263] = GND;
assign TX_BIT_CTRL_OUT4[264] = GND;
assign TX_BIT_CTRL_OUT4[265] = GND;
assign TX_BIT_CTRL_OUT4[266] = GND;
assign TX_BIT_CTRL_OUT4[267] = GND;
assign TX_BIT_CTRL_OUT4[268] = GND;
assign TX_BIT_CTRL_OUT4[269] = GND;
assign TX_BIT_CTRL_OUT4[270] = GND;
assign TX_BIT_CTRL_OUT4[271] = GND;
assign TX_BIT_CTRL_OUT4[272] = GND;
assign TX_BIT_CTRL_OUT4[273] = GND;
assign TX_BIT_CTRL_OUT4[274] = GND;
assign TX_BIT_CTRL_OUT4[275] = GND;
assign TX_BIT_CTRL_OUT4[276] = GND;
assign TX_BIT_CTRL_OUT4[277] = GND;
assign TX_BIT_CTRL_OUT4[278] = GND;
assign TX_BIT_CTRL_OUT4[279] = GND;
assign TX_BIT_CTRL_OUT4[280] = GND;
assign TX_BIT_CTRL_OUT4[281] = GND;
assign TX_BIT_CTRL_OUT4[282] = GND;
assign TX_BIT_CTRL_OUT4[283] = GND;
assign TX_BIT_CTRL_OUT4[284] = GND;
assign TX_BIT_CTRL_OUT4[285] = GND;
assign TX_BIT_CTRL_OUT4[286] = GND;
assign TX_BIT_CTRL_OUT4[287] = GND;
assign TX_BIT_CTRL_OUT4[288] = GND;
assign TX_BIT_CTRL_OUT4[289] = GND;
assign TX_BIT_CTRL_OUT4[290] = GND;
assign TX_BIT_CTRL_OUT4[291] = GND;
assign TX_BIT_CTRL_OUT4[292] = GND;
assign TX_BIT_CTRL_OUT4[293] = GND;
assign TX_BIT_CTRL_OUT4[294] = GND;
assign TX_BIT_CTRL_OUT4[295] = GND;
assign TX_BIT_CTRL_OUT4[296] = GND;
assign TX_BIT_CTRL_OUT4[297] = GND;
assign TX_BIT_CTRL_OUT4[298] = GND;
assign TX_BIT_CTRL_OUT4[299] = GND;
assign TX_BIT_CTRL_OUT4[300] = GND;
assign TX_BIT_CTRL_OUT4[301] = GND;
assign TX_BIT_CTRL_OUT4[302] = GND;
assign TX_BIT_CTRL_OUT4[303] = GND;
assign TX_BIT_CTRL_OUT4[304] = GND;
assign TX_BIT_CTRL_OUT4[305] = GND;
assign TX_BIT_CTRL_OUT4[306] = GND;
assign TX_BIT_CTRL_OUT4[307] = GND;
assign TX_BIT_CTRL_OUT4[308] = GND;
assign TX_BIT_CTRL_OUT4[309] = GND;
assign TX_BIT_CTRL_OUT4[310] = GND;
assign TX_BIT_CTRL_OUT4[311] = GND;
assign TX_BIT_CTRL_OUT4[312] = GND;
assign TX_BIT_CTRL_OUT4[313] = GND;
assign TX_BIT_CTRL_OUT4[314] = GND;
assign TX_BIT_CTRL_OUT4[315] = GND;
assign TX_BIT_CTRL_OUT4[316] = GND;
assign TX_BIT_CTRL_OUT4[317] = GND;
assign TX_BIT_CTRL_OUT4[318] = GND;
assign TX_BIT_CTRL_OUT4[319] = GND;
assign TX_BIT_CTRL_OUT5[0] = GND;
assign TX_BIT_CTRL_OUT5[1] = GND;
assign TX_BIT_CTRL_OUT5[2] = GND;
assign TX_BIT_CTRL_OUT5[3] = GND;
assign TX_BIT_CTRL_OUT5[4] = GND;
assign TX_BIT_CTRL_OUT5[5] = GND;
assign TX_BIT_CTRL_OUT5[6] = GND;
assign TX_BIT_CTRL_OUT5[7] = GND;
assign TX_BIT_CTRL_OUT5[8] = GND;
assign TX_BIT_CTRL_OUT5[9] = GND;
assign TX_BIT_CTRL_OUT5[10] = GND;
assign TX_BIT_CTRL_OUT5[11] = GND;
assign TX_BIT_CTRL_OUT5[12] = GND;
assign TX_BIT_CTRL_OUT5[13] = GND;
assign TX_BIT_CTRL_OUT5[14] = GND;
assign TX_BIT_CTRL_OUT5[15] = GND;
assign TX_BIT_CTRL_OUT5[16] = GND;
assign TX_BIT_CTRL_OUT5[17] = GND;
assign TX_BIT_CTRL_OUT5[18] = GND;
assign TX_BIT_CTRL_OUT5[19] = GND;
assign TX_BIT_CTRL_OUT5[20] = GND;
assign TX_BIT_CTRL_OUT5[21] = GND;
assign TX_BIT_CTRL_OUT5[22] = GND;
assign TX_BIT_CTRL_OUT5[23] = GND;
assign TX_BIT_CTRL_OUT5[24] = GND;
assign TX_BIT_CTRL_OUT5[25] = GND;
assign TX_BIT_CTRL_OUT5[26] = GND;
assign TX_BIT_CTRL_OUT5[27] = GND;
assign TX_BIT_CTRL_OUT5[28] = GND;
assign TX_BIT_CTRL_OUT5[29] = GND;
assign TX_BIT_CTRL_OUT5[30] = GND;
assign TX_BIT_CTRL_OUT5[31] = GND;
assign TX_BIT_CTRL_OUT5[32] = GND;
assign TX_BIT_CTRL_OUT5[33] = GND;
assign TX_BIT_CTRL_OUT5[34] = GND;
assign TX_BIT_CTRL_OUT5[35] = GND;
assign TX_BIT_CTRL_OUT5[36] = GND;
assign TX_BIT_CTRL_OUT5[37] = GND;
assign TX_BIT_CTRL_OUT5[38] = GND;
assign TX_BIT_CTRL_OUT5[39] = GND;
assign TX_BIT_CTRL_OUT5[40] = GND;
assign TX_BIT_CTRL_OUT5[41] = GND;
assign TX_BIT_CTRL_OUT5[42] = GND;
assign TX_BIT_CTRL_OUT5[43] = GND;
assign TX_BIT_CTRL_OUT5[44] = GND;
assign TX_BIT_CTRL_OUT5[45] = GND;
assign TX_BIT_CTRL_OUT5[46] = GND;
assign TX_BIT_CTRL_OUT5[47] = GND;
assign TX_BIT_CTRL_OUT5[48] = GND;
assign TX_BIT_CTRL_OUT5[49] = GND;
assign TX_BIT_CTRL_OUT5[50] = GND;
assign TX_BIT_CTRL_OUT5[51] = GND;
assign TX_BIT_CTRL_OUT5[52] = GND;
assign TX_BIT_CTRL_OUT5[53] = GND;
assign TX_BIT_CTRL_OUT5[54] = GND;
assign TX_BIT_CTRL_OUT5[55] = GND;
assign TX_BIT_CTRL_OUT5[56] = GND;
assign TX_BIT_CTRL_OUT5[57] = GND;
assign TX_BIT_CTRL_OUT5[58] = GND;
assign TX_BIT_CTRL_OUT5[59] = GND;
assign TX_BIT_CTRL_OUT5[60] = GND;
assign TX_BIT_CTRL_OUT5[61] = GND;
assign TX_BIT_CTRL_OUT5[62] = GND;
assign TX_BIT_CTRL_OUT5[63] = GND;
assign TX_BIT_CTRL_OUT5[64] = GND;
assign TX_BIT_CTRL_OUT5[65] = GND;
assign TX_BIT_CTRL_OUT5[66] = GND;
assign TX_BIT_CTRL_OUT5[67] = GND;
assign TX_BIT_CTRL_OUT5[68] = GND;
assign TX_BIT_CTRL_OUT5[69] = GND;
assign TX_BIT_CTRL_OUT5[70] = GND;
assign TX_BIT_CTRL_OUT5[71] = GND;
assign TX_BIT_CTRL_OUT5[72] = GND;
assign TX_BIT_CTRL_OUT5[73] = GND;
assign TX_BIT_CTRL_OUT5[74] = GND;
assign TX_BIT_CTRL_OUT5[75] = GND;
assign TX_BIT_CTRL_OUT5[76] = GND;
assign TX_BIT_CTRL_OUT5[77] = GND;
assign TX_BIT_CTRL_OUT5[78] = GND;
assign TX_BIT_CTRL_OUT5[79] = GND;
assign TX_BIT_CTRL_OUT5[80] = GND;
assign TX_BIT_CTRL_OUT5[81] = GND;
assign TX_BIT_CTRL_OUT5[82] = GND;
assign TX_BIT_CTRL_OUT5[83] = GND;
assign TX_BIT_CTRL_OUT5[84] = GND;
assign TX_BIT_CTRL_OUT5[85] = GND;
assign TX_BIT_CTRL_OUT5[86] = GND;
assign TX_BIT_CTRL_OUT5[87] = GND;
assign TX_BIT_CTRL_OUT5[88] = GND;
assign TX_BIT_CTRL_OUT5[89] = GND;
assign TX_BIT_CTRL_OUT5[90] = GND;
assign TX_BIT_CTRL_OUT5[91] = GND;
assign TX_BIT_CTRL_OUT5[92] = GND;
assign TX_BIT_CTRL_OUT5[93] = GND;
assign TX_BIT_CTRL_OUT5[94] = GND;
assign TX_BIT_CTRL_OUT5[95] = GND;
assign TX_BIT_CTRL_OUT5[96] = GND;
assign TX_BIT_CTRL_OUT5[97] = GND;
assign TX_BIT_CTRL_OUT5[98] = GND;
assign TX_BIT_CTRL_OUT5[99] = GND;
assign TX_BIT_CTRL_OUT5[100] = GND;
assign TX_BIT_CTRL_OUT5[101] = GND;
assign TX_BIT_CTRL_OUT5[102] = GND;
assign TX_BIT_CTRL_OUT5[103] = GND;
assign TX_BIT_CTRL_OUT5[104] = GND;
assign TX_BIT_CTRL_OUT5[105] = GND;
assign TX_BIT_CTRL_OUT5[106] = GND;
assign TX_BIT_CTRL_OUT5[107] = GND;
assign TX_BIT_CTRL_OUT5[108] = GND;
assign TX_BIT_CTRL_OUT5[109] = GND;
assign TX_BIT_CTRL_OUT5[110] = GND;
assign TX_BIT_CTRL_OUT5[111] = GND;
assign TX_BIT_CTRL_OUT5[112] = GND;
assign TX_BIT_CTRL_OUT5[113] = GND;
assign TX_BIT_CTRL_OUT5[114] = GND;
assign TX_BIT_CTRL_OUT5[115] = GND;
assign TX_BIT_CTRL_OUT5[116] = GND;
assign TX_BIT_CTRL_OUT5[117] = GND;
assign TX_BIT_CTRL_OUT5[118] = GND;
assign TX_BIT_CTRL_OUT5[119] = GND;
assign TX_BIT_CTRL_OUT5[120] = GND;
assign TX_BIT_CTRL_OUT5[121] = GND;
assign TX_BIT_CTRL_OUT5[122] = GND;
assign TX_BIT_CTRL_OUT5[123] = GND;
assign TX_BIT_CTRL_OUT5[124] = GND;
assign TX_BIT_CTRL_OUT5[125] = GND;
assign TX_BIT_CTRL_OUT5[126] = GND;
assign TX_BIT_CTRL_OUT5[127] = GND;
assign TX_BIT_CTRL_OUT5[128] = GND;
assign TX_BIT_CTRL_OUT5[129] = GND;
assign TX_BIT_CTRL_OUT5[130] = GND;
assign TX_BIT_CTRL_OUT5[131] = GND;
assign TX_BIT_CTRL_OUT5[132] = GND;
assign TX_BIT_CTRL_OUT5[133] = GND;
assign TX_BIT_CTRL_OUT5[134] = GND;
assign TX_BIT_CTRL_OUT5[135] = GND;
assign TX_BIT_CTRL_OUT5[136] = GND;
assign TX_BIT_CTRL_OUT5[137] = GND;
assign TX_BIT_CTRL_OUT5[138] = GND;
assign TX_BIT_CTRL_OUT5[139] = GND;
assign TX_BIT_CTRL_OUT5[140] = GND;
assign TX_BIT_CTRL_OUT5[141] = GND;
assign TX_BIT_CTRL_OUT5[142] = GND;
assign TX_BIT_CTRL_OUT5[143] = GND;
assign TX_BIT_CTRL_OUT5[144] = GND;
assign TX_BIT_CTRL_OUT5[145] = GND;
assign TX_BIT_CTRL_OUT5[146] = GND;
assign TX_BIT_CTRL_OUT5[147] = GND;
assign TX_BIT_CTRL_OUT5[148] = GND;
assign TX_BIT_CTRL_OUT5[149] = GND;
assign TX_BIT_CTRL_OUT5[150] = GND;
assign TX_BIT_CTRL_OUT5[151] = GND;
assign TX_BIT_CTRL_OUT5[152] = GND;
assign TX_BIT_CTRL_OUT5[153] = GND;
assign TX_BIT_CTRL_OUT5[154] = GND;
assign TX_BIT_CTRL_OUT5[155] = GND;
assign TX_BIT_CTRL_OUT5[156] = GND;
assign TX_BIT_CTRL_OUT5[157] = GND;
assign TX_BIT_CTRL_OUT5[158] = GND;
assign TX_BIT_CTRL_OUT5[159] = GND;
assign TX_BIT_CTRL_OUT5[160] = GND;
assign TX_BIT_CTRL_OUT5[161] = GND;
assign TX_BIT_CTRL_OUT5[162] = GND;
assign TX_BIT_CTRL_OUT5[163] = GND;
assign TX_BIT_CTRL_OUT5[164] = GND;
assign TX_BIT_CTRL_OUT5[165] = GND;
assign TX_BIT_CTRL_OUT5[166] = GND;
assign TX_BIT_CTRL_OUT5[167] = GND;
assign TX_BIT_CTRL_OUT5[168] = GND;
assign TX_BIT_CTRL_OUT5[169] = GND;
assign TX_BIT_CTRL_OUT5[170] = GND;
assign TX_BIT_CTRL_OUT5[171] = GND;
assign TX_BIT_CTRL_OUT5[172] = GND;
assign TX_BIT_CTRL_OUT5[173] = GND;
assign TX_BIT_CTRL_OUT5[174] = GND;
assign TX_BIT_CTRL_OUT5[175] = GND;
assign TX_BIT_CTRL_OUT5[176] = GND;
assign TX_BIT_CTRL_OUT5[177] = GND;
assign TX_BIT_CTRL_OUT5[178] = GND;
assign TX_BIT_CTRL_OUT5[179] = GND;
assign TX_BIT_CTRL_OUT5[180] = GND;
assign TX_BIT_CTRL_OUT5[181] = GND;
assign TX_BIT_CTRL_OUT5[182] = GND;
assign TX_BIT_CTRL_OUT5[183] = GND;
assign TX_BIT_CTRL_OUT5[184] = GND;
assign TX_BIT_CTRL_OUT5[185] = GND;
assign TX_BIT_CTRL_OUT5[186] = GND;
assign TX_BIT_CTRL_OUT5[187] = GND;
assign TX_BIT_CTRL_OUT5[188] = GND;
assign TX_BIT_CTRL_OUT5[189] = GND;
assign TX_BIT_CTRL_OUT5[190] = GND;
assign TX_BIT_CTRL_OUT5[191] = GND;
assign TX_BIT_CTRL_OUT5[192] = GND;
assign TX_BIT_CTRL_OUT5[193] = GND;
assign TX_BIT_CTRL_OUT5[194] = GND;
assign TX_BIT_CTRL_OUT5[195] = GND;
assign TX_BIT_CTRL_OUT5[196] = GND;
assign TX_BIT_CTRL_OUT5[197] = GND;
assign TX_BIT_CTRL_OUT5[198] = GND;
assign TX_BIT_CTRL_OUT5[199] = GND;
assign TX_BIT_CTRL_OUT5[240] = GND;
assign TX_BIT_CTRL_OUT5[241] = GND;
assign TX_BIT_CTRL_OUT5[242] = GND;
assign TX_BIT_CTRL_OUT5[243] = GND;
assign TX_BIT_CTRL_OUT5[244] = GND;
assign TX_BIT_CTRL_OUT5[245] = GND;
assign TX_BIT_CTRL_OUT5[246] = GND;
assign TX_BIT_CTRL_OUT5[247] = GND;
assign TX_BIT_CTRL_OUT5[248] = GND;
assign TX_BIT_CTRL_OUT5[249] = GND;
assign TX_BIT_CTRL_OUT5[250] = GND;
assign TX_BIT_CTRL_OUT5[251] = GND;
assign TX_BIT_CTRL_OUT5[252] = GND;
assign TX_BIT_CTRL_OUT5[253] = GND;
assign TX_BIT_CTRL_OUT5[254] = GND;
assign TX_BIT_CTRL_OUT5[255] = GND;
assign TX_BIT_CTRL_OUT5[256] = GND;
assign TX_BIT_CTRL_OUT5[257] = GND;
assign TX_BIT_CTRL_OUT5[258] = GND;
assign TX_BIT_CTRL_OUT5[259] = GND;
assign TX_BIT_CTRL_OUT5[260] = GND;
assign TX_BIT_CTRL_OUT5[261] = GND;
assign TX_BIT_CTRL_OUT5[262] = GND;
assign TX_BIT_CTRL_OUT5[263] = GND;
assign TX_BIT_CTRL_OUT5[264] = GND;
assign TX_BIT_CTRL_OUT5[265] = GND;
assign TX_BIT_CTRL_OUT5[266] = GND;
assign TX_BIT_CTRL_OUT5[267] = GND;
assign TX_BIT_CTRL_OUT5[268] = GND;
assign TX_BIT_CTRL_OUT5[269] = GND;
assign TX_BIT_CTRL_OUT5[270] = GND;
assign TX_BIT_CTRL_OUT5[271] = GND;
assign TX_BIT_CTRL_OUT5[272] = GND;
assign TX_BIT_CTRL_OUT5[273] = GND;
assign TX_BIT_CTRL_OUT5[274] = GND;
assign TX_BIT_CTRL_OUT5[275] = GND;
assign TX_BIT_CTRL_OUT5[276] = GND;
assign TX_BIT_CTRL_OUT5[277] = GND;
assign TX_BIT_CTRL_OUT5[278] = GND;
assign TX_BIT_CTRL_OUT5[279] = GND;
assign TX_BIT_CTRL_OUT5[280] = GND;
assign TX_BIT_CTRL_OUT5[281] = GND;
assign TX_BIT_CTRL_OUT5[282] = GND;
assign TX_BIT_CTRL_OUT5[283] = GND;
assign TX_BIT_CTRL_OUT5[284] = GND;
assign TX_BIT_CTRL_OUT5[285] = GND;
assign TX_BIT_CTRL_OUT5[286] = GND;
assign TX_BIT_CTRL_OUT5[287] = GND;
assign TX_BIT_CTRL_OUT5[288] = GND;
assign TX_BIT_CTRL_OUT5[289] = GND;
assign TX_BIT_CTRL_OUT5[290] = GND;
assign TX_BIT_CTRL_OUT5[291] = GND;
assign TX_BIT_CTRL_OUT5[292] = GND;
assign TX_BIT_CTRL_OUT5[293] = GND;
assign TX_BIT_CTRL_OUT5[294] = GND;
assign TX_BIT_CTRL_OUT5[295] = GND;
assign TX_BIT_CTRL_OUT5[296] = GND;
assign TX_BIT_CTRL_OUT5[297] = GND;
assign TX_BIT_CTRL_OUT5[298] = GND;
assign TX_BIT_CTRL_OUT5[299] = GND;
assign TX_BIT_CTRL_OUT5[300] = GND;
assign TX_BIT_CTRL_OUT5[301] = GND;
assign TX_BIT_CTRL_OUT5[302] = GND;
assign TX_BIT_CTRL_OUT5[303] = GND;
assign TX_BIT_CTRL_OUT5[304] = GND;
assign TX_BIT_CTRL_OUT5[305] = GND;
assign TX_BIT_CTRL_OUT5[306] = GND;
assign TX_BIT_CTRL_OUT5[307] = GND;
assign TX_BIT_CTRL_OUT5[308] = GND;
assign TX_BIT_CTRL_OUT5[309] = GND;
assign TX_BIT_CTRL_OUT5[310] = GND;
assign TX_BIT_CTRL_OUT5[311] = GND;
assign TX_BIT_CTRL_OUT5[312] = GND;
assign TX_BIT_CTRL_OUT5[313] = GND;
assign TX_BIT_CTRL_OUT5[314] = GND;
assign TX_BIT_CTRL_OUT5[315] = GND;
assign TX_BIT_CTRL_OUT5[316] = GND;
assign TX_BIT_CTRL_OUT5[317] = GND;
assign TX_BIT_CTRL_OUT5[318] = GND;
assign TX_BIT_CTRL_OUT5[319] = GND;
assign TX_BIT_CTRL_OUT6[0] = GND;
assign TX_BIT_CTRL_OUT6[1] = GND;
assign TX_BIT_CTRL_OUT6[2] = GND;
assign TX_BIT_CTRL_OUT6[3] = GND;
assign TX_BIT_CTRL_OUT6[4] = GND;
assign TX_BIT_CTRL_OUT6[5] = GND;
assign TX_BIT_CTRL_OUT6[6] = GND;
assign TX_BIT_CTRL_OUT6[7] = GND;
assign TX_BIT_CTRL_OUT6[8] = GND;
assign TX_BIT_CTRL_OUT6[9] = GND;
assign TX_BIT_CTRL_OUT6[10] = GND;
assign TX_BIT_CTRL_OUT6[11] = GND;
assign TX_BIT_CTRL_OUT6[12] = GND;
assign TX_BIT_CTRL_OUT6[13] = GND;
assign TX_BIT_CTRL_OUT6[14] = GND;
assign TX_BIT_CTRL_OUT6[15] = GND;
assign TX_BIT_CTRL_OUT6[16] = GND;
assign TX_BIT_CTRL_OUT6[17] = GND;
assign TX_BIT_CTRL_OUT6[18] = GND;
assign TX_BIT_CTRL_OUT6[19] = GND;
assign TX_BIT_CTRL_OUT6[20] = GND;
assign TX_BIT_CTRL_OUT6[21] = GND;
assign TX_BIT_CTRL_OUT6[22] = GND;
assign TX_BIT_CTRL_OUT6[23] = GND;
assign TX_BIT_CTRL_OUT6[24] = GND;
assign TX_BIT_CTRL_OUT6[25] = GND;
assign TX_BIT_CTRL_OUT6[26] = GND;
assign TX_BIT_CTRL_OUT6[27] = GND;
assign TX_BIT_CTRL_OUT6[28] = GND;
assign TX_BIT_CTRL_OUT6[29] = GND;
assign TX_BIT_CTRL_OUT6[30] = GND;
assign TX_BIT_CTRL_OUT6[31] = GND;
assign TX_BIT_CTRL_OUT6[32] = GND;
assign TX_BIT_CTRL_OUT6[33] = GND;
assign TX_BIT_CTRL_OUT6[34] = GND;
assign TX_BIT_CTRL_OUT6[35] = GND;
assign TX_BIT_CTRL_OUT6[36] = GND;
assign TX_BIT_CTRL_OUT6[37] = GND;
assign TX_BIT_CTRL_OUT6[38] = GND;
assign TX_BIT_CTRL_OUT6[39] = GND;
assign TX_BIT_CTRL_OUT6[40] = GND;
assign TX_BIT_CTRL_OUT6[41] = GND;
assign TX_BIT_CTRL_OUT6[42] = GND;
assign TX_BIT_CTRL_OUT6[43] = GND;
assign TX_BIT_CTRL_OUT6[44] = GND;
assign TX_BIT_CTRL_OUT6[45] = GND;
assign TX_BIT_CTRL_OUT6[46] = GND;
assign TX_BIT_CTRL_OUT6[47] = GND;
assign TX_BIT_CTRL_OUT6[48] = GND;
assign TX_BIT_CTRL_OUT6[49] = GND;
assign TX_BIT_CTRL_OUT6[50] = GND;
assign TX_BIT_CTRL_OUT6[51] = GND;
assign TX_BIT_CTRL_OUT6[52] = GND;
assign TX_BIT_CTRL_OUT6[53] = GND;
assign TX_BIT_CTRL_OUT6[54] = GND;
assign TX_BIT_CTRL_OUT6[55] = GND;
assign TX_BIT_CTRL_OUT6[56] = GND;
assign TX_BIT_CTRL_OUT6[57] = GND;
assign TX_BIT_CTRL_OUT6[58] = GND;
assign TX_BIT_CTRL_OUT6[59] = GND;
assign TX_BIT_CTRL_OUT6[60] = GND;
assign TX_BIT_CTRL_OUT6[61] = GND;
assign TX_BIT_CTRL_OUT6[62] = GND;
assign TX_BIT_CTRL_OUT6[63] = GND;
assign TX_BIT_CTRL_OUT6[64] = GND;
assign TX_BIT_CTRL_OUT6[65] = GND;
assign TX_BIT_CTRL_OUT6[66] = GND;
assign TX_BIT_CTRL_OUT6[67] = GND;
assign TX_BIT_CTRL_OUT6[68] = GND;
assign TX_BIT_CTRL_OUT6[69] = GND;
assign TX_BIT_CTRL_OUT6[70] = GND;
assign TX_BIT_CTRL_OUT6[71] = GND;
assign TX_BIT_CTRL_OUT6[72] = GND;
assign TX_BIT_CTRL_OUT6[73] = GND;
assign TX_BIT_CTRL_OUT6[74] = GND;
assign TX_BIT_CTRL_OUT6[75] = GND;
assign TX_BIT_CTRL_OUT6[76] = GND;
assign TX_BIT_CTRL_OUT6[77] = GND;
assign TX_BIT_CTRL_OUT6[78] = GND;
assign TX_BIT_CTRL_OUT6[79] = GND;
assign TX_BIT_CTRL_OUT6[80] = GND;
assign TX_BIT_CTRL_OUT6[81] = GND;
assign TX_BIT_CTRL_OUT6[82] = GND;
assign TX_BIT_CTRL_OUT6[83] = GND;
assign TX_BIT_CTRL_OUT6[84] = GND;
assign TX_BIT_CTRL_OUT6[85] = GND;
assign TX_BIT_CTRL_OUT6[86] = GND;
assign TX_BIT_CTRL_OUT6[87] = GND;
assign TX_BIT_CTRL_OUT6[88] = GND;
assign TX_BIT_CTRL_OUT6[89] = GND;
assign TX_BIT_CTRL_OUT6[90] = GND;
assign TX_BIT_CTRL_OUT6[91] = GND;
assign TX_BIT_CTRL_OUT6[92] = GND;
assign TX_BIT_CTRL_OUT6[93] = GND;
assign TX_BIT_CTRL_OUT6[94] = GND;
assign TX_BIT_CTRL_OUT6[95] = GND;
assign TX_BIT_CTRL_OUT6[96] = GND;
assign TX_BIT_CTRL_OUT6[97] = GND;
assign TX_BIT_CTRL_OUT6[98] = GND;
assign TX_BIT_CTRL_OUT6[99] = GND;
assign TX_BIT_CTRL_OUT6[100] = GND;
assign TX_BIT_CTRL_OUT6[101] = GND;
assign TX_BIT_CTRL_OUT6[102] = GND;
assign TX_BIT_CTRL_OUT6[103] = GND;
assign TX_BIT_CTRL_OUT6[104] = GND;
assign TX_BIT_CTRL_OUT6[105] = GND;
assign TX_BIT_CTRL_OUT6[106] = GND;
assign TX_BIT_CTRL_OUT6[107] = GND;
assign TX_BIT_CTRL_OUT6[108] = GND;
assign TX_BIT_CTRL_OUT6[109] = GND;
assign TX_BIT_CTRL_OUT6[110] = GND;
assign TX_BIT_CTRL_OUT6[111] = GND;
assign TX_BIT_CTRL_OUT6[112] = GND;
assign TX_BIT_CTRL_OUT6[113] = GND;
assign TX_BIT_CTRL_OUT6[114] = GND;
assign TX_BIT_CTRL_OUT6[115] = GND;
assign TX_BIT_CTRL_OUT6[116] = GND;
assign TX_BIT_CTRL_OUT6[117] = GND;
assign TX_BIT_CTRL_OUT6[118] = GND;
assign TX_BIT_CTRL_OUT6[119] = GND;
assign TX_BIT_CTRL_OUT6[120] = GND;
assign TX_BIT_CTRL_OUT6[121] = GND;
assign TX_BIT_CTRL_OUT6[122] = GND;
assign TX_BIT_CTRL_OUT6[123] = GND;
assign TX_BIT_CTRL_OUT6[124] = GND;
assign TX_BIT_CTRL_OUT6[125] = GND;
assign TX_BIT_CTRL_OUT6[126] = GND;
assign TX_BIT_CTRL_OUT6[127] = GND;
assign TX_BIT_CTRL_OUT6[128] = GND;
assign TX_BIT_CTRL_OUT6[129] = GND;
assign TX_BIT_CTRL_OUT6[130] = GND;
assign TX_BIT_CTRL_OUT6[131] = GND;
assign TX_BIT_CTRL_OUT6[132] = GND;
assign TX_BIT_CTRL_OUT6[133] = GND;
assign TX_BIT_CTRL_OUT6[134] = GND;
assign TX_BIT_CTRL_OUT6[135] = GND;
assign TX_BIT_CTRL_OUT6[136] = GND;
assign TX_BIT_CTRL_OUT6[137] = GND;
assign TX_BIT_CTRL_OUT6[138] = GND;
assign TX_BIT_CTRL_OUT6[139] = GND;
assign TX_BIT_CTRL_OUT6[140] = GND;
assign TX_BIT_CTRL_OUT6[141] = GND;
assign TX_BIT_CTRL_OUT6[142] = GND;
assign TX_BIT_CTRL_OUT6[143] = GND;
assign TX_BIT_CTRL_OUT6[144] = GND;
assign TX_BIT_CTRL_OUT6[145] = GND;
assign TX_BIT_CTRL_OUT6[146] = GND;
assign TX_BIT_CTRL_OUT6[147] = GND;
assign TX_BIT_CTRL_OUT6[148] = GND;
assign TX_BIT_CTRL_OUT6[149] = GND;
assign TX_BIT_CTRL_OUT6[150] = GND;
assign TX_BIT_CTRL_OUT6[151] = GND;
assign TX_BIT_CTRL_OUT6[152] = GND;
assign TX_BIT_CTRL_OUT6[153] = GND;
assign TX_BIT_CTRL_OUT6[154] = GND;
assign TX_BIT_CTRL_OUT6[155] = GND;
assign TX_BIT_CTRL_OUT6[156] = GND;
assign TX_BIT_CTRL_OUT6[157] = GND;
assign TX_BIT_CTRL_OUT6[158] = GND;
assign TX_BIT_CTRL_OUT6[159] = GND;
assign TX_BIT_CTRL_OUT6[160] = GND;
assign TX_BIT_CTRL_OUT6[161] = GND;
assign TX_BIT_CTRL_OUT6[162] = GND;
assign TX_BIT_CTRL_OUT6[163] = GND;
assign TX_BIT_CTRL_OUT6[164] = GND;
assign TX_BIT_CTRL_OUT6[165] = GND;
assign TX_BIT_CTRL_OUT6[166] = GND;
assign TX_BIT_CTRL_OUT6[167] = GND;
assign TX_BIT_CTRL_OUT6[168] = GND;
assign TX_BIT_CTRL_OUT6[169] = GND;
assign TX_BIT_CTRL_OUT6[170] = GND;
assign TX_BIT_CTRL_OUT6[171] = GND;
assign TX_BIT_CTRL_OUT6[172] = GND;
assign TX_BIT_CTRL_OUT6[173] = GND;
assign TX_BIT_CTRL_OUT6[174] = GND;
assign TX_BIT_CTRL_OUT6[175] = GND;
assign TX_BIT_CTRL_OUT6[176] = GND;
assign TX_BIT_CTRL_OUT6[177] = GND;
assign TX_BIT_CTRL_OUT6[178] = GND;
assign TX_BIT_CTRL_OUT6[179] = GND;
assign TX_BIT_CTRL_OUT6[180] = GND;
assign TX_BIT_CTRL_OUT6[181] = GND;
assign TX_BIT_CTRL_OUT6[182] = GND;
assign TX_BIT_CTRL_OUT6[183] = GND;
assign TX_BIT_CTRL_OUT6[184] = GND;
assign TX_BIT_CTRL_OUT6[185] = GND;
assign TX_BIT_CTRL_OUT6[186] = GND;
assign TX_BIT_CTRL_OUT6[187] = GND;
assign TX_BIT_CTRL_OUT6[188] = GND;
assign TX_BIT_CTRL_OUT6[189] = GND;
assign TX_BIT_CTRL_OUT6[190] = GND;
assign TX_BIT_CTRL_OUT6[191] = GND;
assign TX_BIT_CTRL_OUT6[192] = GND;
assign TX_BIT_CTRL_OUT6[193] = GND;
assign TX_BIT_CTRL_OUT6[194] = GND;
assign TX_BIT_CTRL_OUT6[195] = GND;
assign TX_BIT_CTRL_OUT6[196] = GND;
assign TX_BIT_CTRL_OUT6[197] = GND;
assign TX_BIT_CTRL_OUT6[198] = GND;
assign TX_BIT_CTRL_OUT6[199] = GND;
assign TX_BIT_CTRL_OUT6[200] = GND;
assign TX_BIT_CTRL_OUT6[201] = GND;
assign TX_BIT_CTRL_OUT6[202] = GND;
assign TX_BIT_CTRL_OUT6[203] = GND;
assign TX_BIT_CTRL_OUT6[204] = GND;
assign TX_BIT_CTRL_OUT6[205] = GND;
assign TX_BIT_CTRL_OUT6[206] = GND;
assign TX_BIT_CTRL_OUT6[207] = GND;
assign TX_BIT_CTRL_OUT6[208] = GND;
assign TX_BIT_CTRL_OUT6[209] = GND;
assign TX_BIT_CTRL_OUT6[210] = GND;
assign TX_BIT_CTRL_OUT6[211] = GND;
assign TX_BIT_CTRL_OUT6[212] = GND;
assign TX_BIT_CTRL_OUT6[213] = GND;
assign TX_BIT_CTRL_OUT6[214] = GND;
assign TX_BIT_CTRL_OUT6[215] = GND;
assign TX_BIT_CTRL_OUT6[216] = GND;
assign TX_BIT_CTRL_OUT6[217] = GND;
assign TX_BIT_CTRL_OUT6[218] = GND;
assign TX_BIT_CTRL_OUT6[219] = GND;
assign TX_BIT_CTRL_OUT6[220] = GND;
assign TX_BIT_CTRL_OUT6[221] = GND;
assign TX_BIT_CTRL_OUT6[222] = GND;
assign TX_BIT_CTRL_OUT6[223] = GND;
assign TX_BIT_CTRL_OUT6[224] = GND;
assign TX_BIT_CTRL_OUT6[225] = GND;
assign TX_BIT_CTRL_OUT6[226] = GND;
assign TX_BIT_CTRL_OUT6[227] = GND;
assign TX_BIT_CTRL_OUT6[228] = GND;
assign TX_BIT_CTRL_OUT6[229] = GND;
assign TX_BIT_CTRL_OUT6[230] = GND;
assign TX_BIT_CTRL_OUT6[231] = GND;
assign TX_BIT_CTRL_OUT6[232] = GND;
assign TX_BIT_CTRL_OUT6[233] = GND;
assign TX_BIT_CTRL_OUT6[234] = GND;
assign TX_BIT_CTRL_OUT6[235] = GND;
assign TX_BIT_CTRL_OUT6[236] = GND;
assign TX_BIT_CTRL_OUT6[237] = GND;
assign TX_BIT_CTRL_OUT6[238] = GND;
assign TX_BIT_CTRL_OUT6[239] = GND;
assign TX_BIT_CTRL_OUT6[240] = GND;
assign TX_BIT_CTRL_OUT6[241] = GND;
assign TX_BIT_CTRL_OUT6[242] = GND;
assign TX_BIT_CTRL_OUT6[243] = GND;
assign TX_BIT_CTRL_OUT6[244] = GND;
assign TX_BIT_CTRL_OUT6[245] = GND;
assign TX_BIT_CTRL_OUT6[246] = GND;
assign TX_BIT_CTRL_OUT6[247] = GND;
assign TX_BIT_CTRL_OUT6[248] = GND;
assign TX_BIT_CTRL_OUT6[249] = GND;
assign TX_BIT_CTRL_OUT6[250] = GND;
assign TX_BIT_CTRL_OUT6[251] = GND;
assign TX_BIT_CTRL_OUT6[252] = GND;
assign TX_BIT_CTRL_OUT6[253] = GND;
assign TX_BIT_CTRL_OUT6[254] = GND;
assign TX_BIT_CTRL_OUT6[255] = GND;
assign TX_BIT_CTRL_OUT6[256] = GND;
assign TX_BIT_CTRL_OUT6[257] = GND;
assign TX_BIT_CTRL_OUT6[258] = GND;
assign TX_BIT_CTRL_OUT6[259] = GND;
assign TX_BIT_CTRL_OUT6[260] = GND;
assign TX_BIT_CTRL_OUT6[261] = GND;
assign TX_BIT_CTRL_OUT6[262] = GND;
assign TX_BIT_CTRL_OUT6[263] = GND;
assign TX_BIT_CTRL_OUT6[264] = GND;
assign TX_BIT_CTRL_OUT6[265] = GND;
assign TX_BIT_CTRL_OUT6[266] = GND;
assign TX_BIT_CTRL_OUT6[267] = GND;
assign TX_BIT_CTRL_OUT6[268] = GND;
assign TX_BIT_CTRL_OUT6[269] = GND;
assign TX_BIT_CTRL_OUT6[270] = GND;
assign TX_BIT_CTRL_OUT6[271] = GND;
assign TX_BIT_CTRL_OUT6[272] = GND;
assign TX_BIT_CTRL_OUT6[273] = GND;
assign TX_BIT_CTRL_OUT6[274] = GND;
assign TX_BIT_CTRL_OUT6[275] = GND;
assign TX_BIT_CTRL_OUT6[276] = GND;
assign TX_BIT_CTRL_OUT6[277] = GND;
assign TX_BIT_CTRL_OUT6[278] = GND;
assign TX_BIT_CTRL_OUT6[279] = GND;
assign TX_BIT_CTRL_OUT6[280] = GND;
assign TX_BIT_CTRL_OUT6[281] = GND;
assign TX_BIT_CTRL_OUT6[282] = GND;
assign TX_BIT_CTRL_OUT6[283] = GND;
assign TX_BIT_CTRL_OUT6[284] = GND;
assign TX_BIT_CTRL_OUT6[285] = GND;
assign TX_BIT_CTRL_OUT6[286] = GND;
assign TX_BIT_CTRL_OUT6[287] = GND;
assign TX_BIT_CTRL_OUT6[288] = GND;
assign TX_BIT_CTRL_OUT6[289] = GND;
assign TX_BIT_CTRL_OUT6[290] = GND;
assign TX_BIT_CTRL_OUT6[291] = GND;
assign TX_BIT_CTRL_OUT6[292] = GND;
assign TX_BIT_CTRL_OUT6[293] = GND;
assign TX_BIT_CTRL_OUT6[294] = GND;
assign TX_BIT_CTRL_OUT6[295] = GND;
assign TX_BIT_CTRL_OUT6[296] = GND;
assign TX_BIT_CTRL_OUT6[297] = GND;
assign TX_BIT_CTRL_OUT6[298] = GND;
assign TX_BIT_CTRL_OUT6[299] = GND;
assign TX_BIT_CTRL_OUT6[300] = GND;
assign TX_BIT_CTRL_OUT6[301] = GND;
assign TX_BIT_CTRL_OUT6[302] = GND;
assign TX_BIT_CTRL_OUT6[303] = GND;
assign TX_BIT_CTRL_OUT6[304] = GND;
assign TX_BIT_CTRL_OUT6[305] = GND;
assign TX_BIT_CTRL_OUT6[306] = GND;
assign TX_BIT_CTRL_OUT6[307] = GND;
assign TX_BIT_CTRL_OUT6[308] = GND;
assign TX_BIT_CTRL_OUT6[309] = GND;
assign TX_BIT_CTRL_OUT6[310] = GND;
assign TX_BIT_CTRL_OUT6[311] = GND;
assign TX_BIT_CTRL_OUT6[312] = GND;
assign TX_BIT_CTRL_OUT6[313] = GND;
assign TX_BIT_CTRL_OUT6[314] = GND;
assign TX_BIT_CTRL_OUT6[315] = GND;
assign TX_BIT_CTRL_OUT6[316] = GND;
assign TX_BIT_CTRL_OUT6[317] = GND;
assign TX_BIT_CTRL_OUT6[318] = GND;
assign TX_BIT_CTRL_OUT6[319] = GND;
assign DLY_RDY[0] = VCC;
assign DLY_RDY[1] = VCC;
assign DLY_RDY[2] = VCC;
assign DLY_RDY[3] = VCC;
assign DLY_RDY[4] = GND;
assign DLY_RDY[5] = GND;
assign DLY_RDY[6] = VCC;
assign DLY_RDY[7] = VCC;
assign VTC_RDY[0] = VCC;
assign VTC_RDY[1] = VCC;
assign VTC_RDY[2] = VCC;
assign VTC_RDY[3] = VCC;
assign VTC_RDY[4] = GND;
assign VTC_RDY[5] = GND;
assign VTC_RDY[6] = VCC;
assign VTC_RDY[7] = VCC;
endmodule /* hstdm_ultrascale_bitslice_control_8s_40s_DIV2_48s_48s_0s_0s_0s_0s_ULTRASCALE_PLUS_Z1_FB1_uA */

(* DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_tx_clkgen_0s_4s_1200s_150s_DATA_AND_CLOCK_1s_TRUE_40s_ULTRASCALE_PLUS_Z1_FB1_uA (
  txclk_in,
  tx,
  T_in,
  T_out,
  txctrl0,
  RX_BIT_CTRL_OUT,
  TX_BIT_CTRL_OUT,
  RX_BIT_CTRL_IN,
  TX_BIT_CTRL_IN,
  RST_DLY,
  BS_RST
)
;
input txclk_in ;
output tx ;
input T_in ;
output T_out ;
input txctrl0 ;
output [39:0] RX_BIT_CTRL_OUT ;
output [39:0] TX_BIT_CTRL_OUT ;
input [39:0] RX_BIT_CTRL_IN ;
input [39:0] TX_BIT_CTRL_IN ;
input RST_DLY ;
input BS_RST ;
wire txclk_in ;
wire tx ;
wire T_in ;
wire T_out ;
wire txctrl0 ;
wire RST_DLY ;
wire BS_RST ;
wire [7:0] Q;
wire [8:0] RX_CNTVALUEOUT;
wire [8:0] TX_CNTVALUEOUT;
wire [7:0] clkpattern;
wire FIFO_EMPTY ;
wire FIFO_WRCLK_OUT ;
wire VCC ;
wire N_11 ;
wire N_12 ;
wire T_outz ;
wire GND ;
  GND GND_cZ (
	.G(GND)
);
  VCC VCC_cZ (
	.P(VCC)
);
// @225:4911
  FDCE \clkpattern_Z[2]  (
	.Q(clkpattern[2]),
	.D(GND),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[2] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[1]  (
	.Q(clkpattern[1]),
	.D(VCC),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[1] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[0]  (
	.Q(clkpattern[0]),
	.D(GND),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[0] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[7]  (
	.Q(clkpattern[7]),
	.D(VCC),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[7] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[6]  (
	.Q(clkpattern[6]),
	.D(GND),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[6] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[5]  (
	.Q(clkpattern[5]),
	.D(VCC),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[5] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[4]  (
	.Q(clkpattern[4]),
	.D(GND),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[4] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[3]  (
	.Q(clkpattern[3]),
	.D(VCC),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[3] .INIT=1'b0;
// @225:4960
  RXTX_BITSLICE bitslice_tx_clock (
	.FIFO_EMPTY(FIFO_EMPTY),
	.FIFO_WRCLK_OUT(FIFO_WRCLK_OUT),
	.O(tx),
	.Q(Q[7:0]),
	.RX_BIT_CTRL_OUT(RX_BIT_CTRL_OUT[39:0]),
	.RX_CNTVALUEOUT(RX_CNTVALUEOUT[8:0]),
	.TX_BIT_CTRL_OUT(TX_BIT_CTRL_OUT[39:0]),
	.TX_CNTVALUEOUT(TX_CNTVALUEOUT[8:0]),
	.T_OUT(T_outz),
	.D(clkpattern[7:0]),
	.DATAIN(GND),
	.RX_BIT_CTRL_IN(RX_BIT_CTRL_IN[39:0]),
	.RX_EN_VTC(GND),
	.RX_RST(BS_RST),
	.RX_RST_DLY(RST_DLY),
	.T(GND),
	.TX_BIT_CTRL_IN(TX_BIT_CTRL_IN[39:0]),
	.TX_CE(GND),
	.TX_CLK(GND),
	.TX_CNTVALUEIN({GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_EN_VTC(GND),
	.TX_INC(GND),
	.TX_LOAD(GND),
	.TX_RST(BS_RST),
	.TX_RST_DLY(RST_DLY)
);
defparam bitslice_tx_clock.ENABLE_PRE_EMPHASIS="TRUE";
defparam bitslice_tx_clock.INIT=1'b0;
defparam bitslice_tx_clock.RX_DATA_TYPE="DATA_AND_CLOCK";
defparam bitslice_tx_clock.RX_DATA_WIDTH=4;
defparam bitslice_tx_clock.RX_DELAY_FORMAT="COUNT";
defparam bitslice_tx_clock.RX_DELAY_TYPE="FIXED";
defparam bitslice_tx_clock.RX_DELAY_VALUE=0;
defparam bitslice_tx_clock.RX_REFCLK_FREQUENCY=1200.0;
defparam bitslice_tx_clock.SIM_DEVICE="ULTRASCALE_PLUS";
defparam bitslice_tx_clock.TBYTE_CTL="T";
defparam bitslice_tx_clock.TX_DATA_WIDTH=4;
defparam bitslice_tx_clock.TX_DELAY_FORMAT="COUNT";
defparam bitslice_tx_clock.TX_DELAY_TYPE="FIXED";
defparam bitslice_tx_clock.TX_DELAY_VALUE=0;
defparam bitslice_tx_clock.TX_REFCLK_FREQUENCY=1200.0;
assign T_out = GND;
endmodule /* hstdm_tx_clkgen_0s_4s_1200s_150s_DATA_AND_CLOCK_1s_TRUE_40s_ULTRASCALE_PLUS_Z1_FB1_uA */

(* DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_tx_clkgen_0s_4s_1200s_150s_DATA_0s_FALSE_40s_ULTRASCALE_PLUS_Z1_FB1_uA (
  txclk_in,
  tx,
  T_in,
  T_out,
  txctrl0,
  RX_BIT_CTRL_OUT,
  TX_BIT_CTRL_OUT,
  RX_BIT_CTRL_IN,
  TX_BIT_CTRL_IN,
  RST_DLY,
  BS_RST
)
;
input txclk_in ;
output tx ;
input T_in ;
output T_out ;
input txctrl0 ;
output [39:0] RX_BIT_CTRL_OUT ;
output [39:0] TX_BIT_CTRL_OUT ;
input [39:0] RX_BIT_CTRL_IN ;
input [39:0] TX_BIT_CTRL_IN ;
input RST_DLY ;
input BS_RST ;
wire txclk_in ;
wire tx ;
wire T_in ;
wire T_out ;
wire txctrl0 ;
wire RST_DLY ;
wire BS_RST ;
wire [7:0] Q;
wire [8:0] RX_CNTVALUEOUT;
wire [8:0] TX_CNTVALUEOUT;
wire [7:0] clkpattern;
wire FIFO_EMPTY ;
wire FIFO_WRCLK_OUT ;
wire VCC ;
wire N_11 ;
wire N_12 ;
wire T_outz ;
wire GND ;
  GND GND_cZ (
	.G(GND)
);
  VCC VCC_cZ (
	.P(VCC)
);
// @225:4911
  FDCE \clkpattern_Z[2]  (
	.Q(clkpattern[2]),
	.D(GND),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[2] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[1]  (
	.Q(clkpattern[1]),
	.D(VCC),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[1] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[0]  (
	.Q(clkpattern[0]),
	.D(GND),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[0] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[7]  (
	.Q(clkpattern[7]),
	.D(VCC),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[7] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[6]  (
	.Q(clkpattern[6]),
	.D(GND),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[6] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[5]  (
	.Q(clkpattern[5]),
	.D(VCC),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[5] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[4]  (
	.Q(clkpattern[4]),
	.D(GND),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[4] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[3]  (
	.Q(clkpattern[3]),
	.D(VCC),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[3] .INIT=1'b0;
// @225:4960
  RXTX_BITSLICE bitslice_tx_clock (
	.FIFO_EMPTY(FIFO_EMPTY),
	.FIFO_WRCLK_OUT(FIFO_WRCLK_OUT),
	.O(tx),
	.Q(Q[7:0]),
	.RX_BIT_CTRL_OUT(RX_BIT_CTRL_OUT[39:0]),
	.RX_CNTVALUEOUT(RX_CNTVALUEOUT[8:0]),
	.TX_BIT_CTRL_OUT(TX_BIT_CTRL_OUT[39:0]),
	.TX_CNTVALUEOUT(TX_CNTVALUEOUT[8:0]),
	.T_OUT(T_outz),
	.D(clkpattern[7:0]),
	.DATAIN(GND),
	.RX_BIT_CTRL_IN(RX_BIT_CTRL_IN[39:0]),
	.RX_EN_VTC(GND),
	.RX_RST(BS_RST),
	.RX_RST_DLY(RST_DLY),
	.T(GND),
	.TX_BIT_CTRL_IN(TX_BIT_CTRL_IN[39:0]),
	.TX_CE(GND),
	.TX_CLK(GND),
	.TX_CNTVALUEIN({GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_EN_VTC(GND),
	.TX_INC(GND),
	.TX_LOAD(GND),
	.TX_RST(BS_RST),
	.TX_RST_DLY(RST_DLY)
);
defparam bitslice_tx_clock.ENABLE_PRE_EMPHASIS="FALSE";
defparam bitslice_tx_clock.INIT=1'b0;
defparam bitslice_tx_clock.RX_DATA_TYPE="DATA";
defparam bitslice_tx_clock.RX_DATA_WIDTH=4;
defparam bitslice_tx_clock.RX_DELAY_FORMAT="COUNT";
defparam bitslice_tx_clock.RX_DELAY_TYPE="FIXED";
defparam bitslice_tx_clock.RX_DELAY_VALUE=0;
defparam bitslice_tx_clock.RX_REFCLK_FREQUENCY=1200.0;
defparam bitslice_tx_clock.SIM_DEVICE="ULTRASCALE_PLUS";
defparam bitslice_tx_clock.TBYTE_CTL="T";
defparam bitslice_tx_clock.TX_DATA_WIDTH=4;
defparam bitslice_tx_clock.TX_DELAY_FORMAT="COUNT";
defparam bitslice_tx_clock.TX_DELAY_TYPE="FIXED";
defparam bitslice_tx_clock.TX_DELAY_VALUE=0;
defparam bitslice_tx_clock.TX_REFCLK_FREQUENCY=1200.0;
assign T_out = GND;
endmodule /* hstdm_tx_clkgen_0s_4s_1200s_150s_DATA_0s_FALSE_40s_ULTRASCALE_PLUS_Z1_FB1_uA */

(* DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_tx_clkgen_0s_4s_1200s_150s_DATA_AND_CLOCK_1s_TRUE_40s_ULTRASCALE_PLUS_Z1_0_FB1_uA (
  txclk_in,
  tx,
  T_in,
  T_out,
  txctrl0,
  RX_BIT_CTRL_OUT,
  TX_BIT_CTRL_OUT,
  RX_BIT_CTRL_IN,
  TX_BIT_CTRL_IN,
  RST_DLY,
  BS_RST
)
;
input txclk_in ;
output tx ;
input T_in ;
output T_out ;
input txctrl0 ;
output [39:0] RX_BIT_CTRL_OUT ;
output [39:0] TX_BIT_CTRL_OUT ;
input [39:0] RX_BIT_CTRL_IN ;
input [39:0] TX_BIT_CTRL_IN ;
input RST_DLY ;
input BS_RST ;
wire txclk_in ;
wire tx ;
wire T_in ;
wire T_out ;
wire txctrl0 ;
wire RST_DLY ;
wire BS_RST ;
wire [7:0] Q;
wire [8:0] RX_CNTVALUEOUT;
wire [8:0] TX_CNTVALUEOUT;
wire [7:0] clkpattern;
wire FIFO_EMPTY ;
wire FIFO_WRCLK_OUT ;
wire VCC ;
wire N_11 ;
wire N_12 ;
wire T_outz ;
wire GND ;
  GND GND_cZ (
	.G(GND)
);
  VCC VCC_cZ (
	.P(VCC)
);
// @225:4911
  FDCE \clkpattern_Z[2]  (
	.Q(clkpattern[2]),
	.D(GND),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[2] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[1]  (
	.Q(clkpattern[1]),
	.D(VCC),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[1] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[0]  (
	.Q(clkpattern[0]),
	.D(GND),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[0] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[7]  (
	.Q(clkpattern[7]),
	.D(VCC),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[7] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[6]  (
	.Q(clkpattern[6]),
	.D(GND),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[6] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[5]  (
	.Q(clkpattern[5]),
	.D(VCC),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[5] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[4]  (
	.Q(clkpattern[4]),
	.D(GND),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[4] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[3]  (
	.Q(clkpattern[3]),
	.D(VCC),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[3] .INIT=1'b0;
// @225:4960
  RXTX_BITSLICE bitslice_tx_clock (
	.FIFO_EMPTY(FIFO_EMPTY),
	.FIFO_WRCLK_OUT(FIFO_WRCLK_OUT),
	.O(tx),
	.Q(Q[7:0]),
	.RX_BIT_CTRL_OUT(RX_BIT_CTRL_OUT[39:0]),
	.RX_CNTVALUEOUT(RX_CNTVALUEOUT[8:0]),
	.TX_BIT_CTRL_OUT(TX_BIT_CTRL_OUT[39:0]),
	.TX_CNTVALUEOUT(TX_CNTVALUEOUT[8:0]),
	.T_OUT(T_outz),
	.D(clkpattern[7:0]),
	.DATAIN(GND),
	.RX_BIT_CTRL_IN(RX_BIT_CTRL_IN[39:0]),
	.RX_EN_VTC(GND),
	.RX_RST(BS_RST),
	.RX_RST_DLY(RST_DLY),
	.T(GND),
	.TX_BIT_CTRL_IN(TX_BIT_CTRL_IN[39:0]),
	.TX_CE(GND),
	.TX_CLK(GND),
	.TX_CNTVALUEIN({GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_EN_VTC(GND),
	.TX_INC(GND),
	.TX_LOAD(GND),
	.TX_RST(BS_RST),
	.TX_RST_DLY(RST_DLY)
);
defparam bitslice_tx_clock.ENABLE_PRE_EMPHASIS="TRUE";
defparam bitslice_tx_clock.INIT=1'b0;
defparam bitslice_tx_clock.RX_DATA_TYPE="DATA_AND_CLOCK";
defparam bitslice_tx_clock.RX_DATA_WIDTH=4;
defparam bitslice_tx_clock.RX_DELAY_FORMAT="COUNT";
defparam bitslice_tx_clock.RX_DELAY_TYPE="FIXED";
defparam bitslice_tx_clock.RX_DELAY_VALUE=0;
defparam bitslice_tx_clock.RX_REFCLK_FREQUENCY=1200.0;
defparam bitslice_tx_clock.SIM_DEVICE="ULTRASCALE_PLUS";
defparam bitslice_tx_clock.TBYTE_CTL="T";
defparam bitslice_tx_clock.TX_DATA_WIDTH=4;
defparam bitslice_tx_clock.TX_DELAY_FORMAT="COUNT";
defparam bitslice_tx_clock.TX_DELAY_TYPE="FIXED";
defparam bitslice_tx_clock.TX_DELAY_VALUE=0;
defparam bitslice_tx_clock.TX_REFCLK_FREQUENCY=1200.0;
assign T_out = GND;
endmodule /* hstdm_tx_clkgen_0s_4s_1200s_150s_DATA_AND_CLOCK_1s_TRUE_40s_ULTRASCALE_PLUS_Z1_0_FB1_uA */

(* DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_tx_clkgen_0s_4s_1200s_150s_DATA_AND_CLOCK_1s_TRUE_40s_ULTRASCALE_PLUS_Z1_1_FB1_uA (
  txclk_in,
  tx,
  T_in,
  T_out,
  txctrl0,
  RX_BIT_CTRL_OUT,
  TX_BIT_CTRL_OUT,
  RX_BIT_CTRL_IN,
  TX_BIT_CTRL_IN,
  RST_DLY,
  BS_RST
)
;
input txclk_in ;
output tx ;
input T_in ;
output T_out ;
input txctrl0 ;
output [39:0] RX_BIT_CTRL_OUT ;
output [39:0] TX_BIT_CTRL_OUT ;
input [39:0] RX_BIT_CTRL_IN ;
input [39:0] TX_BIT_CTRL_IN ;
input RST_DLY ;
input BS_RST ;
wire txclk_in ;
wire tx ;
wire T_in ;
wire T_out ;
wire txctrl0 ;
wire RST_DLY ;
wire BS_RST ;
wire [7:0] Q;
wire [8:0] RX_CNTVALUEOUT;
wire [8:0] TX_CNTVALUEOUT;
wire [7:0] clkpattern;
wire FIFO_EMPTY ;
wire FIFO_WRCLK_OUT ;
wire VCC ;
wire N_11 ;
wire N_12 ;
wire T_outz ;
wire GND ;
  GND GND_cZ (
	.G(GND)
);
  VCC VCC_cZ (
	.P(VCC)
);
// @225:4911
  FDCE \clkpattern_Z[2]  (
	.Q(clkpattern[2]),
	.D(GND),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[2] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[1]  (
	.Q(clkpattern[1]),
	.D(VCC),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[1] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[0]  (
	.Q(clkpattern[0]),
	.D(GND),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[0] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[7]  (
	.Q(clkpattern[7]),
	.D(VCC),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[7] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[6]  (
	.Q(clkpattern[6]),
	.D(GND),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[6] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[5]  (
	.Q(clkpattern[5]),
	.D(VCC),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[5] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[4]  (
	.Q(clkpattern[4]),
	.D(GND),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[4] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[3]  (
	.Q(clkpattern[3]),
	.D(VCC),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[3] .INIT=1'b0;
// @225:4960
  RXTX_BITSLICE bitslice_tx_clock (
	.FIFO_EMPTY(FIFO_EMPTY),
	.FIFO_WRCLK_OUT(FIFO_WRCLK_OUT),
	.O(tx),
	.Q(Q[7:0]),
	.RX_BIT_CTRL_OUT(RX_BIT_CTRL_OUT[39:0]),
	.RX_CNTVALUEOUT(RX_CNTVALUEOUT[8:0]),
	.TX_BIT_CTRL_OUT(TX_BIT_CTRL_OUT[39:0]),
	.TX_CNTVALUEOUT(TX_CNTVALUEOUT[8:0]),
	.T_OUT(T_outz),
	.D(clkpattern[7:0]),
	.DATAIN(GND),
	.RX_BIT_CTRL_IN(RX_BIT_CTRL_IN[39:0]),
	.RX_EN_VTC(GND),
	.RX_RST(BS_RST),
	.RX_RST_DLY(RST_DLY),
	.T(GND),
	.TX_BIT_CTRL_IN(TX_BIT_CTRL_IN[39:0]),
	.TX_CE(GND),
	.TX_CLK(GND),
	.TX_CNTVALUEIN({GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_EN_VTC(GND),
	.TX_INC(GND),
	.TX_LOAD(GND),
	.TX_RST(BS_RST),
	.TX_RST_DLY(RST_DLY)
);
defparam bitslice_tx_clock.ENABLE_PRE_EMPHASIS="TRUE";
defparam bitslice_tx_clock.INIT=1'b0;
defparam bitslice_tx_clock.RX_DATA_TYPE="DATA_AND_CLOCK";
defparam bitslice_tx_clock.RX_DATA_WIDTH=4;
defparam bitslice_tx_clock.RX_DELAY_FORMAT="COUNT";
defparam bitslice_tx_clock.RX_DELAY_TYPE="FIXED";
defparam bitslice_tx_clock.RX_DELAY_VALUE=0;
defparam bitslice_tx_clock.RX_REFCLK_FREQUENCY=1200.0;
defparam bitslice_tx_clock.SIM_DEVICE="ULTRASCALE_PLUS";
defparam bitslice_tx_clock.TBYTE_CTL="T";
defparam bitslice_tx_clock.TX_DATA_WIDTH=4;
defparam bitslice_tx_clock.TX_DELAY_FORMAT="COUNT";
defparam bitslice_tx_clock.TX_DELAY_TYPE="FIXED";
defparam bitslice_tx_clock.TX_DELAY_VALUE=0;
defparam bitslice_tx_clock.TX_REFCLK_FREQUENCY=1200.0;
assign T_out = GND;
endmodule /* hstdm_tx_clkgen_0s_4s_1200s_150s_DATA_AND_CLOCK_1s_TRUE_40s_ULTRASCALE_PLUS_Z1_1_FB1_uA */

(* DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_tx_clkgen_0s_4s_1200s_150s_DATA_AND_CLOCK_1s_TRUE_40s_ULTRASCALE_PLUS_Z1_2_FB1_uA (
  txclk_in,
  tx,
  T_in,
  T_out,
  txctrl0,
  RX_BIT_CTRL_OUT,
  TX_BIT_CTRL_OUT,
  RX_BIT_CTRL_IN,
  TX_BIT_CTRL_IN,
  RST_DLY,
  BS_RST
)
;
input txclk_in ;
output tx ;
input T_in ;
output T_out ;
input txctrl0 ;
output [39:0] RX_BIT_CTRL_OUT ;
output [39:0] TX_BIT_CTRL_OUT ;
input [39:0] RX_BIT_CTRL_IN ;
input [39:0] TX_BIT_CTRL_IN ;
input RST_DLY ;
input BS_RST ;
wire txclk_in ;
wire tx ;
wire T_in ;
wire T_out ;
wire txctrl0 ;
wire RST_DLY ;
wire BS_RST ;
wire [7:0] Q;
wire [8:0] RX_CNTVALUEOUT;
wire [8:0] TX_CNTVALUEOUT;
wire [7:0] clkpattern;
wire FIFO_EMPTY ;
wire FIFO_WRCLK_OUT ;
wire VCC ;
wire N_11 ;
wire N_12 ;
wire T_outz ;
wire GND ;
  GND GND_cZ (
	.G(GND)
);
  VCC VCC_cZ (
	.P(VCC)
);
// @225:4911
  FDCE \clkpattern_Z[2]  (
	.Q(clkpattern[2]),
	.D(GND),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[2] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[1]  (
	.Q(clkpattern[1]),
	.D(VCC),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[1] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[0]  (
	.Q(clkpattern[0]),
	.D(GND),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[0] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[7]  (
	.Q(clkpattern[7]),
	.D(VCC),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[7] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[6]  (
	.Q(clkpattern[6]),
	.D(GND),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[6] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[5]  (
	.Q(clkpattern[5]),
	.D(VCC),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[5] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[4]  (
	.Q(clkpattern[4]),
	.D(GND),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[4] .INIT=1'b0;
// @225:4911
  FDCE \clkpattern_Z[3]  (
	.Q(clkpattern[3]),
	.D(VCC),
	.C(GND),
	.CLR(BS_RST),
	.CE(GND)
);
defparam \clkpattern_Z[3] .INIT=1'b0;
// @225:4960
  RXTX_BITSLICE bitslice_tx_clock (
	.FIFO_EMPTY(FIFO_EMPTY),
	.FIFO_WRCLK_OUT(FIFO_WRCLK_OUT),
	.O(tx),
	.Q(Q[7:0]),
	.RX_BIT_CTRL_OUT(RX_BIT_CTRL_OUT[39:0]),
	.RX_CNTVALUEOUT(RX_CNTVALUEOUT[8:0]),
	.TX_BIT_CTRL_OUT(TX_BIT_CTRL_OUT[39:0]),
	.TX_CNTVALUEOUT(TX_CNTVALUEOUT[8:0]),
	.T_OUT(T_outz),
	.D(clkpattern[7:0]),
	.DATAIN(GND),
	.RX_BIT_CTRL_IN(RX_BIT_CTRL_IN[39:0]),
	.RX_EN_VTC(GND),
	.RX_RST(BS_RST),
	.RX_RST_DLY(RST_DLY),
	.T(GND),
	.TX_BIT_CTRL_IN(TX_BIT_CTRL_IN[39:0]),
	.TX_CE(GND),
	.TX_CLK(GND),
	.TX_CNTVALUEIN({GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_EN_VTC(GND),
	.TX_INC(GND),
	.TX_LOAD(GND),
	.TX_RST(BS_RST),
	.TX_RST_DLY(RST_DLY)
);
defparam bitslice_tx_clock.ENABLE_PRE_EMPHASIS="TRUE";
defparam bitslice_tx_clock.INIT=1'b0;
defparam bitslice_tx_clock.RX_DATA_TYPE="DATA_AND_CLOCK";
defparam bitslice_tx_clock.RX_DATA_WIDTH=4;
defparam bitslice_tx_clock.RX_DELAY_FORMAT="COUNT";
defparam bitslice_tx_clock.RX_DELAY_TYPE="FIXED";
defparam bitslice_tx_clock.RX_DELAY_VALUE=0;
defparam bitslice_tx_clock.RX_REFCLK_FREQUENCY=1200.0;
defparam bitslice_tx_clock.SIM_DEVICE="ULTRASCALE_PLUS";
defparam bitslice_tx_clock.TBYTE_CTL="T";
defparam bitslice_tx_clock.TX_DATA_WIDTH=4;
defparam bitslice_tx_clock.TX_DELAY_FORMAT="COUNT";
defparam bitslice_tx_clock.TX_DELAY_TYPE="FIXED";
defparam bitslice_tx_clock.TX_DELAY_VALUE=0;
defparam bitslice_tx_clock.TX_REFCLK_FREQUENCY=1200.0;
assign T_out = GND;
endmodule /* hstdm_tx_clkgen_0s_4s_1200s_150s_DATA_AND_CLOCK_1s_TRUE_40s_ULTRASCALE_PLUS_Z1_2_FB1_uA */

(* n_hstdm_low_latency=1 , DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_tx_Z2_FB1_uA (
  txclk,
  txclkdiv4,
  txclkdiv2,
  cpm_data,
  data_in,
  txrst,
  txctrl,
  T_in,
  T_out,
  RX_BIT_CTRL_OUT,
  TX_BIT_CTRL_OUT,
  RX_BIT_CTRL_IN,
  TX_BIT_CTRL_IN,
  RST_DLY,
  BS_RST,
  SIMULATION
)
;
input txclk ;
input txclkdiv4 ;
input txclkdiv2 ;
output cpm_data ;
input [3:0] data_in ;
input txrst ;
input [1:0] txctrl ;
input T_in ;
output T_out ;
output [39:0] RX_BIT_CTRL_OUT ;
output [39:0] TX_BIT_CTRL_OUT ;
input [39:0] RX_BIT_CTRL_IN ;
input [39:0] TX_BIT_CTRL_IN ;
input RST_DLY ;
input BS_RST ;
input SIMULATION ;
wire txclk ;
wire txclkdiv4 ;
wire txclkdiv2 ;
wire cpm_data ;
wire txrst ;
wire T_in ;
wire T_out ;
wire RST_DLY ;
wire BS_RST ;
wire SIMULATION ;
wire [1:0] txctrl_sync;
wire [3:0] data_in_mux;
wire [3:0] data_to_serdes;
wire [7:0] Q;
wire [8:0] RX_CNTVALUEOUT;
wire [8:0] TX_CNTVALUEOUT;
wire [3:0] \tx_core.FF.data_in ;
wire [3:0] \training_bit_gen_inst.scrambler_out ;
wire [13:0] \training_bit_gen_inst.BIT[3].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[2].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[1].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[0].scrambler.shift ;
wire FIFO_EMPTY ;
wire FIFO_WRCLK_OUT ;
wire GND ;
wire \ar_tx_ctrl1.R0  ;
wire \ar_tx_ctrl0.R0  ;
wire N_1 ;
wire N_259_i ;
wire \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i  ;
wire T_outz ;
wire VCC ;
  GND GND_cZ (
	.G(GND)
);
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.D(N_259_i),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [0]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11] .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R1_Z  (
	.Q(txctrl_sync[1]),
	.D(\ar_tx_ctrl1.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R0_Z  (
	.Q(\ar_tx_ctrl0.R0 ),
	.D(txctrl[0]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R0_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R1_Z  (
	.Q(txctrl_sync[0]),
	.D(\ar_tx_ctrl0.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R0_Z  (
	.Q(\ar_tx_ctrl1.R0 ),
	.D(txctrl[1]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R0_Z .INIT=1'b0;
//@226:23924
// @225:7866
  RXTX_BITSLICE \tx_core.bitslice_tx_data  (
	.FIFO_EMPTY(FIFO_EMPTY),
	.FIFO_WRCLK_OUT(FIFO_WRCLK_OUT),
	.O(cpm_data),
	.Q(Q[7:0]),
	.RX_BIT_CTRL_OUT(RX_BIT_CTRL_OUT[39:0]),
	.RX_CNTVALUEOUT(RX_CNTVALUEOUT[8:0]),
	.TX_BIT_CTRL_OUT(TX_BIT_CTRL_OUT[39:0]),
	.TX_CNTVALUEOUT(TX_CNTVALUEOUT[8:0]),
	.T_OUT(T_outz),
	.D({GND, GND, GND, GND, \tx_core.FF.data_in [3:0]}),
	.DATAIN(GND),
	.RX_BIT_CTRL_IN(RX_BIT_CTRL_IN[39:0]),
	.RX_EN_VTC(GND),
	.RX_RST(BS_RST),
	.RX_RST_DLY(RST_DLY),
	.T(GND),
	.TX_BIT_CTRL_IN(TX_BIT_CTRL_IN[39:0]),
	.TX_CE(GND),
	.TX_CLK(GND),
	.TX_CNTVALUEIN({GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_EN_VTC(GND),
	.TX_INC(GND),
	.TX_LOAD(GND),
	.TX_RST(BS_RST),
	.TX_RST_DLY(RST_DLY)
);
defparam \tx_core.bitslice_tx_data .ENABLE_PRE_EMPHASIS="TRUE";
defparam \tx_core.bitslice_tx_data .INIT=1'b0;
defparam \tx_core.bitslice_tx_data .RX_DATA_TYPE="DATA";
defparam \tx_core.bitslice_tx_data .RX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .RX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .RX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .RX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .RX_REFCLK_FREQUENCY=1200.0;
defparam \tx_core.bitslice_tx_data .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \tx_core.bitslice_tx_data .TBYTE_CTL="T";
defparam \tx_core.bitslice_tx_data .TX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .TX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .TX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .TX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .TX_REFCLK_FREQUENCY=1200.0;
//@225:6420
//@225:6420
//@225:6420
//@225:6420
// @225:5095
  LUT3 \training_bit_gen_inst.BIT[0].scrambler.N_259_i  (
	.I0(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.O(N_259_i)
);
defparam \training_bit_gen_inst.BIT[0].scrambler.N_259_i .INIT=8'h69;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.O(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.O(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.O(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[1]  (
	.I0(data_in[1]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[1])
);
defparam \un3_data_in_mux_cZ[1] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[0]  (
	.I0(data_in[0]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[0])
);
defparam \un3_data_in_mux_cZ[0] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[3]  (
	.I0(data_in[3]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[3])
);
defparam \un3_data_in_mux_cZ[3] .INIT=4'h2;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[2]  (
	.I0(data_in[2]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[2])
);
defparam \un3_data_in_mux_cZ[2] .INIT=4'h2;
  LUT4 \training_bit_gen_inst.data_to_serdes[3]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[3]),
	.O(data_to_serdes[3])
);
defparam \training_bit_gen_inst.data_to_serdes[3] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[2]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[2]),
	.O(data_to_serdes[2])
);
defparam \training_bit_gen_inst.data_to_serdes[2] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[1]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[1]),
	.O(data_to_serdes[1])
);
defparam \training_bit_gen_inst.data_to_serdes[1] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[0]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[0]),
	.O(data_to_serdes[0])
);
defparam \training_bit_gen_inst.data_to_serdes[0] .INIT=16'h4F40;
// @225:7828
  FD \tx_core.FF.data_in_Z[3]  (
	.Q(\tx_core.FF.data_in [3]),
	.D(data_to_serdes[3]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[2]  (
	.Q(\tx_core.FF.data_in [2]),
	.D(data_to_serdes[2]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[1]  (
	.Q(\tx_core.FF.data_in [1]),
	.D(data_to_serdes[1]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[0]  (
	.Q(\tx_core.FF.data_in [0]),
	.D(data_to_serdes[0]),
	.C(txclkdiv2)
);
  assign VCC = 1'b1;
assign T_out = GND;
endmodule /* hstdm_tx_Z2_FB1_uA */

(* n_hstdm_low_latency=1 , DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_tx_Z2_0_FB1_uA (
  txclk,
  txclkdiv4,
  txclkdiv2,
  cpm_data,
  data_in,
  txrst,
  txctrl,
  T_in,
  T_out,
  RX_BIT_CTRL_OUT,
  TX_BIT_CTRL_OUT,
  RX_BIT_CTRL_IN,
  TX_BIT_CTRL_IN,
  RST_DLY,
  BS_RST,
  SIMULATION
)
;
input txclk ;
input txclkdiv4 ;
input txclkdiv2 ;
output cpm_data ;
input [3:0] data_in ;
input txrst ;
input [1:0] txctrl ;
input T_in ;
output T_out ;
output [39:0] RX_BIT_CTRL_OUT ;
output [39:0] TX_BIT_CTRL_OUT ;
input [39:0] RX_BIT_CTRL_IN ;
input [39:0] TX_BIT_CTRL_IN ;
input RST_DLY ;
input BS_RST ;
input SIMULATION ;
wire txclk ;
wire txclkdiv4 ;
wire txclkdiv2 ;
wire cpm_data ;
wire txrst ;
wire T_in ;
wire T_out ;
wire RST_DLY ;
wire BS_RST ;
wire SIMULATION ;
wire [1:0] txctrl_sync;
wire [3:0] data_in_mux;
wire [3:0] data_to_serdes;
wire [7:0] Q;
wire [8:0] RX_CNTVALUEOUT;
wire [8:0] TX_CNTVALUEOUT;
wire [3:0] \tx_core.FF.data_in ;
wire [3:0] \training_bit_gen_inst.scrambler_out ;
wire [13:0] \training_bit_gen_inst.BIT[3].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[2].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[1].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[0].scrambler.shift ;
wire FIFO_EMPTY ;
wire FIFO_WRCLK_OUT ;
wire GND ;
wire \ar_tx_ctrl1.R0  ;
wire \ar_tx_ctrl0.R0  ;
wire N_1 ;
wire N_259_i ;
wire \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i  ;
wire T_outz ;
wire VCC ;
  GND GND_cZ (
	.G(GND)
);
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.D(N_259_i),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [0]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11] .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R1_Z  (
	.Q(txctrl_sync[1]),
	.D(\ar_tx_ctrl1.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R0_Z  (
	.Q(\ar_tx_ctrl0.R0 ),
	.D(txctrl[0]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R0_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R1_Z  (
	.Q(txctrl_sync[0]),
	.D(\ar_tx_ctrl0.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R0_Z  (
	.Q(\ar_tx_ctrl1.R0 ),
	.D(txctrl[1]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R0_Z .INIT=1'b0;
//@226:23924
// @225:7866
  RXTX_BITSLICE \tx_core.bitslice_tx_data  (
	.FIFO_EMPTY(FIFO_EMPTY),
	.FIFO_WRCLK_OUT(FIFO_WRCLK_OUT),
	.O(cpm_data),
	.Q(Q[7:0]),
	.RX_BIT_CTRL_OUT(RX_BIT_CTRL_OUT[39:0]),
	.RX_CNTVALUEOUT(RX_CNTVALUEOUT[8:0]),
	.TX_BIT_CTRL_OUT(TX_BIT_CTRL_OUT[39:0]),
	.TX_CNTVALUEOUT(TX_CNTVALUEOUT[8:0]),
	.T_OUT(T_outz),
	.D({GND, GND, GND, GND, \tx_core.FF.data_in [3:0]}),
	.DATAIN(GND),
	.RX_BIT_CTRL_IN(RX_BIT_CTRL_IN[39:0]),
	.RX_EN_VTC(GND),
	.RX_RST(BS_RST),
	.RX_RST_DLY(RST_DLY),
	.T(GND),
	.TX_BIT_CTRL_IN(TX_BIT_CTRL_IN[39:0]),
	.TX_CE(GND),
	.TX_CLK(GND),
	.TX_CNTVALUEIN({GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_EN_VTC(GND),
	.TX_INC(GND),
	.TX_LOAD(GND),
	.TX_RST(BS_RST),
	.TX_RST_DLY(RST_DLY)
);
defparam \tx_core.bitslice_tx_data .ENABLE_PRE_EMPHASIS="TRUE";
defparam \tx_core.bitslice_tx_data .INIT=1'b0;
defparam \tx_core.bitslice_tx_data .RX_DATA_TYPE="DATA";
defparam \tx_core.bitslice_tx_data .RX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .RX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .RX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .RX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .RX_REFCLK_FREQUENCY=1200.0;
defparam \tx_core.bitslice_tx_data .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \tx_core.bitslice_tx_data .TBYTE_CTL="T";
defparam \tx_core.bitslice_tx_data .TX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .TX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .TX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .TX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .TX_REFCLK_FREQUENCY=1200.0;
//@225:6420
//@225:6420
//@225:6420
//@225:6420
// @225:5095
  LUT3 \training_bit_gen_inst.BIT[0].scrambler.N_259_i  (
	.I0(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.O(N_259_i)
);
defparam \training_bit_gen_inst.BIT[0].scrambler.N_259_i .INIT=8'h69;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.O(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.O(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.O(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[1]  (
	.I0(data_in[1]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[1])
);
defparam \un3_data_in_mux_cZ[1] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[0]  (
	.I0(data_in[0]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[0])
);
defparam \un3_data_in_mux_cZ[0] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[3]  (
	.I0(data_in[3]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[3])
);
defparam \un3_data_in_mux_cZ[3] .INIT=4'h2;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[2]  (
	.I0(data_in[2]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[2])
);
defparam \un3_data_in_mux_cZ[2] .INIT=4'h2;
  LUT4 \training_bit_gen_inst.data_to_serdes[3]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[3]),
	.O(data_to_serdes[3])
);
defparam \training_bit_gen_inst.data_to_serdes[3] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[2]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[2]),
	.O(data_to_serdes[2])
);
defparam \training_bit_gen_inst.data_to_serdes[2] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[1]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[1]),
	.O(data_to_serdes[1])
);
defparam \training_bit_gen_inst.data_to_serdes[1] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[0]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[0]),
	.O(data_to_serdes[0])
);
defparam \training_bit_gen_inst.data_to_serdes[0] .INIT=16'h4F40;
// @225:7828
  FD \tx_core.FF.data_in_Z[3]  (
	.Q(\tx_core.FF.data_in [3]),
	.D(data_to_serdes[3]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[2]  (
	.Q(\tx_core.FF.data_in [2]),
	.D(data_to_serdes[2]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[1]  (
	.Q(\tx_core.FF.data_in [1]),
	.D(data_to_serdes[1]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[0]  (
	.Q(\tx_core.FF.data_in [0]),
	.D(data_to_serdes[0]),
	.C(txclkdiv2)
);
  assign VCC = 1'b1;
assign T_out = GND;
endmodule /* hstdm_tx_Z2_0_FB1_uA */

(* n_hstdm_low_latency=1 , DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_tx_Z2_1_FB1_uA (
  txclk,
  txclkdiv4,
  txclkdiv2,
  cpm_data,
  data_in,
  txrst,
  txctrl,
  T_in,
  T_out,
  RX_BIT_CTRL_OUT,
  TX_BIT_CTRL_OUT,
  RX_BIT_CTRL_IN,
  TX_BIT_CTRL_IN,
  RST_DLY,
  BS_RST,
  SIMULATION
)
;
input txclk ;
input txclkdiv4 ;
input txclkdiv2 ;
output cpm_data ;
input [3:0] data_in ;
input txrst ;
input [1:0] txctrl ;
input T_in ;
output T_out ;
output [39:0] RX_BIT_CTRL_OUT ;
output [39:0] TX_BIT_CTRL_OUT ;
input [39:0] RX_BIT_CTRL_IN ;
input [39:0] TX_BIT_CTRL_IN ;
input RST_DLY ;
input BS_RST ;
input SIMULATION ;
wire txclk ;
wire txclkdiv4 ;
wire txclkdiv2 ;
wire cpm_data ;
wire txrst ;
wire T_in ;
wire T_out ;
wire RST_DLY ;
wire BS_RST ;
wire SIMULATION ;
wire [1:0] txctrl_sync;
wire [3:0] data_in_mux;
wire [3:0] data_to_serdes;
wire [7:0] Q;
wire [8:0] RX_CNTVALUEOUT;
wire [8:0] TX_CNTVALUEOUT;
wire [3:0] \tx_core.FF.data_in ;
wire [3:0] \training_bit_gen_inst.scrambler_out ;
wire [13:0] \training_bit_gen_inst.BIT[3].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[2].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[1].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[0].scrambler.shift ;
wire FIFO_EMPTY ;
wire FIFO_WRCLK_OUT ;
wire GND ;
wire \ar_tx_ctrl1.R0  ;
wire \ar_tx_ctrl0.R0  ;
wire N_1 ;
wire N_259_i ;
wire \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i  ;
wire T_outz ;
wire VCC ;
  GND GND_cZ (
	.G(GND)
);
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.D(N_259_i),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [0]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11] .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R1_Z  (
	.Q(txctrl_sync[1]),
	.D(\ar_tx_ctrl1.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R0_Z  (
	.Q(\ar_tx_ctrl0.R0 ),
	.D(txctrl[0]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R0_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R1_Z  (
	.Q(txctrl_sync[0]),
	.D(\ar_tx_ctrl0.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R0_Z  (
	.Q(\ar_tx_ctrl1.R0 ),
	.D(txctrl[1]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R0_Z .INIT=1'b0;
//@226:23924
// @225:7866
  RXTX_BITSLICE \tx_core.bitslice_tx_data  (
	.FIFO_EMPTY(FIFO_EMPTY),
	.FIFO_WRCLK_OUT(FIFO_WRCLK_OUT),
	.O(cpm_data),
	.Q(Q[7:0]),
	.RX_BIT_CTRL_OUT(RX_BIT_CTRL_OUT[39:0]),
	.RX_CNTVALUEOUT(RX_CNTVALUEOUT[8:0]),
	.TX_BIT_CTRL_OUT(TX_BIT_CTRL_OUT[39:0]),
	.TX_CNTVALUEOUT(TX_CNTVALUEOUT[8:0]),
	.T_OUT(T_outz),
	.D({GND, GND, GND, GND, \tx_core.FF.data_in [3:0]}),
	.DATAIN(GND),
	.RX_BIT_CTRL_IN(RX_BIT_CTRL_IN[39:0]),
	.RX_EN_VTC(GND),
	.RX_RST(BS_RST),
	.RX_RST_DLY(RST_DLY),
	.T(GND),
	.TX_BIT_CTRL_IN(TX_BIT_CTRL_IN[39:0]),
	.TX_CE(GND),
	.TX_CLK(GND),
	.TX_CNTVALUEIN({GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_EN_VTC(GND),
	.TX_INC(GND),
	.TX_LOAD(GND),
	.TX_RST(BS_RST),
	.TX_RST_DLY(RST_DLY)
);
defparam \tx_core.bitslice_tx_data .ENABLE_PRE_EMPHASIS="FALSE";
defparam \tx_core.bitslice_tx_data .INIT=1'b0;
defparam \tx_core.bitslice_tx_data .RX_DATA_TYPE="DATA";
defparam \tx_core.bitslice_tx_data .RX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .RX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .RX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .RX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .RX_REFCLK_FREQUENCY=1200.0;
defparam \tx_core.bitslice_tx_data .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \tx_core.bitslice_tx_data .TBYTE_CTL="T";
defparam \tx_core.bitslice_tx_data .TX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .TX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .TX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .TX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .TX_REFCLK_FREQUENCY=1200.0;
//@225:6420
//@225:6420
//@225:6420
//@225:6420
// @225:5095
  LUT3 \training_bit_gen_inst.BIT[0].scrambler.N_259_i  (
	.I0(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.O(N_259_i)
);
defparam \training_bit_gen_inst.BIT[0].scrambler.N_259_i .INIT=8'h69;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.O(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.O(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.O(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[1]  (
	.I0(data_in[1]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[1])
);
defparam \un3_data_in_mux_cZ[1] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[0]  (
	.I0(data_in[0]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[0])
);
defparam \un3_data_in_mux_cZ[0] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[3]  (
	.I0(data_in[3]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[3])
);
defparam \un3_data_in_mux_cZ[3] .INIT=4'h2;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[2]  (
	.I0(data_in[2]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[2])
);
defparam \un3_data_in_mux_cZ[2] .INIT=4'h2;
  LUT4 \training_bit_gen_inst.data_to_serdes[3]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[3]),
	.O(data_to_serdes[3])
);
defparam \training_bit_gen_inst.data_to_serdes[3] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[2]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[2]),
	.O(data_to_serdes[2])
);
defparam \training_bit_gen_inst.data_to_serdes[2] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[1]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[1]),
	.O(data_to_serdes[1])
);
defparam \training_bit_gen_inst.data_to_serdes[1] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[0]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[0]),
	.O(data_to_serdes[0])
);
defparam \training_bit_gen_inst.data_to_serdes[0] .INIT=16'h4F40;
// @225:7828
  FD \tx_core.FF.data_in_Z[3]  (
	.Q(\tx_core.FF.data_in [3]),
	.D(data_to_serdes[3]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[2]  (
	.Q(\tx_core.FF.data_in [2]),
	.D(data_to_serdes[2]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[1]  (
	.Q(\tx_core.FF.data_in [1]),
	.D(data_to_serdes[1]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[0]  (
	.Q(\tx_core.FF.data_in [0]),
	.D(data_to_serdes[0]),
	.C(txclkdiv2)
);
  assign VCC = 1'b1;
assign T_out = GND;
endmodule /* hstdm_tx_Z2_1_FB1_uA */

(* n_hstdm_low_latency=1 , DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_tx_Z2_2_FB1_uA (
  txclk,
  txclkdiv4,
  txclkdiv2,
  cpm_data,
  data_in,
  txrst,
  txctrl,
  T_in,
  T_out,
  RX_BIT_CTRL_OUT,
  TX_BIT_CTRL_OUT,
  RX_BIT_CTRL_IN,
  TX_BIT_CTRL_IN,
  RST_DLY,
  BS_RST,
  SIMULATION
)
;
input txclk ;
input txclkdiv4 ;
input txclkdiv2 ;
output cpm_data ;
input [3:0] data_in ;
input txrst ;
input [1:0] txctrl ;
input T_in ;
output T_out ;
output [39:0] RX_BIT_CTRL_OUT ;
output [39:0] TX_BIT_CTRL_OUT ;
input [39:0] RX_BIT_CTRL_IN ;
input [39:0] TX_BIT_CTRL_IN ;
input RST_DLY ;
input BS_RST ;
input SIMULATION ;
wire txclk ;
wire txclkdiv4 ;
wire txclkdiv2 ;
wire cpm_data ;
wire txrst ;
wire T_in ;
wire T_out ;
wire RST_DLY ;
wire BS_RST ;
wire SIMULATION ;
wire [1:0] txctrl_sync;
wire [3:0] data_in_mux;
wire [3:0] data_to_serdes;
wire [7:0] Q;
wire [8:0] RX_CNTVALUEOUT;
wire [8:0] TX_CNTVALUEOUT;
wire [3:0] \tx_core.FF.data_in ;
wire [3:0] \training_bit_gen_inst.scrambler_out ;
wire [13:0] \training_bit_gen_inst.BIT[3].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[2].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[1].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[0].scrambler.shift ;
wire FIFO_EMPTY ;
wire FIFO_WRCLK_OUT ;
wire GND ;
wire \ar_tx_ctrl1.R0  ;
wire \ar_tx_ctrl0.R0  ;
wire N_1 ;
wire N_259_i ;
wire \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i  ;
wire T_outz ;
wire VCC ;
  GND GND_cZ (
	.G(GND)
);
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.D(N_259_i),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [0]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11] .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R1_Z  (
	.Q(txctrl_sync[1]),
	.D(\ar_tx_ctrl1.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R0_Z  (
	.Q(\ar_tx_ctrl0.R0 ),
	.D(txctrl[0]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R0_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R1_Z  (
	.Q(txctrl_sync[0]),
	.D(\ar_tx_ctrl0.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R0_Z  (
	.Q(\ar_tx_ctrl1.R0 ),
	.D(txctrl[1]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R0_Z .INIT=1'b0;
//@226:23924
// @225:7866
  RXTX_BITSLICE \tx_core.bitslice_tx_data  (
	.FIFO_EMPTY(FIFO_EMPTY),
	.FIFO_WRCLK_OUT(FIFO_WRCLK_OUT),
	.O(cpm_data),
	.Q(Q[7:0]),
	.RX_BIT_CTRL_OUT(RX_BIT_CTRL_OUT[39:0]),
	.RX_CNTVALUEOUT(RX_CNTVALUEOUT[8:0]),
	.TX_BIT_CTRL_OUT(TX_BIT_CTRL_OUT[39:0]),
	.TX_CNTVALUEOUT(TX_CNTVALUEOUT[8:0]),
	.T_OUT(T_outz),
	.D({GND, GND, GND, GND, \tx_core.FF.data_in [3:0]}),
	.DATAIN(GND),
	.RX_BIT_CTRL_IN(RX_BIT_CTRL_IN[39:0]),
	.RX_EN_VTC(GND),
	.RX_RST(BS_RST),
	.RX_RST_DLY(RST_DLY),
	.T(GND),
	.TX_BIT_CTRL_IN(TX_BIT_CTRL_IN[39:0]),
	.TX_CE(GND),
	.TX_CLK(GND),
	.TX_CNTVALUEIN({GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_EN_VTC(GND),
	.TX_INC(GND),
	.TX_LOAD(GND),
	.TX_RST(BS_RST),
	.TX_RST_DLY(RST_DLY)
);
defparam \tx_core.bitslice_tx_data .ENABLE_PRE_EMPHASIS="FALSE";
defparam \tx_core.bitslice_tx_data .INIT=1'b0;
defparam \tx_core.bitslice_tx_data .RX_DATA_TYPE="DATA";
defparam \tx_core.bitslice_tx_data .RX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .RX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .RX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .RX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .RX_REFCLK_FREQUENCY=1200.0;
defparam \tx_core.bitslice_tx_data .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \tx_core.bitslice_tx_data .TBYTE_CTL="T";
defparam \tx_core.bitslice_tx_data .TX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .TX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .TX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .TX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .TX_REFCLK_FREQUENCY=1200.0;
//@225:6420
//@225:6420
//@225:6420
//@225:6420
// @225:5095
  LUT3 \training_bit_gen_inst.BIT[0].scrambler.N_259_i  (
	.I0(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.O(N_259_i)
);
defparam \training_bit_gen_inst.BIT[0].scrambler.N_259_i .INIT=8'h69;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.O(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.O(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.O(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[1]  (
	.I0(data_in[1]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[1])
);
defparam \un3_data_in_mux_cZ[1] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[0]  (
	.I0(data_in[0]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[0])
);
defparam \un3_data_in_mux_cZ[0] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[3]  (
	.I0(data_in[3]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[3])
);
defparam \un3_data_in_mux_cZ[3] .INIT=4'h2;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[2]  (
	.I0(data_in[2]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[2])
);
defparam \un3_data_in_mux_cZ[2] .INIT=4'h2;
  LUT4 \training_bit_gen_inst.data_to_serdes[3]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[3]),
	.O(data_to_serdes[3])
);
defparam \training_bit_gen_inst.data_to_serdes[3] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[2]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[2]),
	.O(data_to_serdes[2])
);
defparam \training_bit_gen_inst.data_to_serdes[2] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[1]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[1]),
	.O(data_to_serdes[1])
);
defparam \training_bit_gen_inst.data_to_serdes[1] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[0]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[0]),
	.O(data_to_serdes[0])
);
defparam \training_bit_gen_inst.data_to_serdes[0] .INIT=16'h4F40;
// @225:7828
  FD \tx_core.FF.data_in_Z[3]  (
	.Q(\tx_core.FF.data_in [3]),
	.D(data_to_serdes[3]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[2]  (
	.Q(\tx_core.FF.data_in [2]),
	.D(data_to_serdes[2]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[1]  (
	.Q(\tx_core.FF.data_in [1]),
	.D(data_to_serdes[1]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[0]  (
	.Q(\tx_core.FF.data_in [0]),
	.D(data_to_serdes[0]),
	.C(txclkdiv2)
);
  assign VCC = 1'b1;
assign T_out = GND;
endmodule /* hstdm_tx_Z2_2_FB1_uA */

(* n_hstdm_low_latency=1 , DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_tx_Z2_3_FB1_uA (
  txclk,
  txclkdiv4,
  txclkdiv2,
  cpm_data,
  data_in,
  txrst,
  txctrl,
  T_in,
  T_out,
  RX_BIT_CTRL_OUT,
  TX_BIT_CTRL_OUT,
  RX_BIT_CTRL_IN,
  TX_BIT_CTRL_IN,
  RST_DLY,
  BS_RST,
  SIMULATION
)
;
input txclk ;
input txclkdiv4 ;
input txclkdiv2 ;
output cpm_data ;
input [3:0] data_in ;
input txrst ;
input [1:0] txctrl ;
input T_in ;
output T_out ;
output [39:0] RX_BIT_CTRL_OUT ;
output [39:0] TX_BIT_CTRL_OUT ;
input [39:0] RX_BIT_CTRL_IN ;
input [39:0] TX_BIT_CTRL_IN ;
input RST_DLY ;
input BS_RST ;
input SIMULATION ;
wire txclk ;
wire txclkdiv4 ;
wire txclkdiv2 ;
wire cpm_data ;
wire txrst ;
wire T_in ;
wire T_out ;
wire RST_DLY ;
wire BS_RST ;
wire SIMULATION ;
wire [0:0] txctrl_sync;
wire [1:0] data_in_mux;
wire [3:0] data_to_serdes;
wire [7:0] Q;
wire [8:0] RX_CNTVALUEOUT;
wire [8:0] TX_CNTVALUEOUT;
wire [3:0] \tx_core.FF.data_in ;
wire [3:0] \training_bit_gen_inst.scrambler_out ;
wire [13:0] \training_bit_gen_inst.BIT[3].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[2].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[1].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[0].scrambler.shift ;
wire GND ;
wire FIFO_EMPTY ;
wire FIFO_WRCLK_OUT ;
wire \ar_tx_ctrl1.R0  ;
wire \ar_tx_ctrl0.R0  ;
wire N_1 ;
wire N_262_i ;
wire \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i  ;
wire T_outz ;
wire VCC ;
  GND GND_cZ (
	.G(GND)
);
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.D(N_262_i),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [0]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14] .INIT=1'b1;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R0_Z  (
	.Q(\ar_tx_ctrl0.R0 ),
	.D(txctrl[0]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R0_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R1_Z  (
	.Q(txctrl_sync[0]),
	.D(\ar_tx_ctrl0.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R0_Z  (
	.Q(\ar_tx_ctrl1.R0 ),
	.D(txctrl[1]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R0_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R1_Z  (
	.Q(data_in_mux[1]),
	.D(\ar_tx_ctrl1.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R1_Z .INIT=1'b0;
//@226:23924
// @225:7866
  RXTX_BITSLICE \tx_core.bitslice_tx_data  (
	.FIFO_EMPTY(FIFO_EMPTY),
	.FIFO_WRCLK_OUT(FIFO_WRCLK_OUT),
	.O(cpm_data),
	.Q(Q[7:0]),
	.RX_BIT_CTRL_OUT(RX_BIT_CTRL_OUT[39:0]),
	.RX_CNTVALUEOUT(RX_CNTVALUEOUT[8:0]),
	.TX_BIT_CTRL_OUT(TX_BIT_CTRL_OUT[39:0]),
	.TX_CNTVALUEOUT(TX_CNTVALUEOUT[8:0]),
	.T_OUT(T_outz),
	.D({GND, GND, GND, GND, \tx_core.FF.data_in [3:0]}),
	.DATAIN(GND),
	.RX_BIT_CTRL_IN(RX_BIT_CTRL_IN[39:0]),
	.RX_EN_VTC(GND),
	.RX_RST(BS_RST),
	.RX_RST_DLY(RST_DLY),
	.T(GND),
	.TX_BIT_CTRL_IN(TX_BIT_CTRL_IN[39:0]),
	.TX_CE(GND),
	.TX_CLK(GND),
	.TX_CNTVALUEIN({GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_EN_VTC(GND),
	.TX_INC(GND),
	.TX_LOAD(GND),
	.TX_RST(BS_RST),
	.TX_RST_DLY(RST_DLY)
);
defparam \tx_core.bitslice_tx_data .ENABLE_PRE_EMPHASIS="FALSE";
defparam \tx_core.bitslice_tx_data .INIT=1'b0;
defparam \tx_core.bitslice_tx_data .RX_DATA_TYPE="DATA";
defparam \tx_core.bitslice_tx_data .RX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .RX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .RX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .RX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .RX_REFCLK_FREQUENCY=1200.0;
defparam \tx_core.bitslice_tx_data .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \tx_core.bitslice_tx_data .TBYTE_CTL="T";
defparam \tx_core.bitslice_tx_data .TX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .TX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .TX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .TX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .TX_REFCLK_FREQUENCY=1200.0;
//@225:6420
//@225:6420
//@225:6420
//@225:6420
// @225:5095
  LUT3 \training_bit_gen_inst.BIT[0].scrambler.N_262_i  (
	.I0(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.O(N_262_i)
);
defparam \training_bit_gen_inst.BIT[0].scrambler.N_262_i .INIT=8'h69;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.O(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.O(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.O(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[0]  (
	.I0(data_in[0]),
	.I1(data_in_mux[1]),
	.O(data_in_mux[0])
);
defparam \un3_data_in_mux_cZ[0] .INIT=4'hE;
  LUT4 \training_bit_gen_inst.data_to_serdes[3]  (
	.I0(SIMULATION),
	.I1(GND),
	.I2(\training_bit_gen_inst.scrambler_out [3]),
	.I3(txctrl_sync[0]),
	.O(data_to_serdes[3])
);
defparam \training_bit_gen_inst.data_to_serdes[3] .INIT=16'hFACC;
  LUT4 \training_bit_gen_inst.data_to_serdes[2]  (
	.I0(SIMULATION),
	.I1(GND),
	.I2(\training_bit_gen_inst.scrambler_out [2]),
	.I3(txctrl_sync[0]),
	.O(data_to_serdes[2])
);
defparam \training_bit_gen_inst.data_to_serdes[2] .INIT=16'hFACC;
  LUT4 \training_bit_gen_inst.data_to_serdes[1]  (
	.I0(SIMULATION),
	.I1(data_in_mux[1]),
	.I2(\training_bit_gen_inst.scrambler_out [1]),
	.I3(txctrl_sync[0]),
	.O(data_to_serdes[1])
);
defparam \training_bit_gen_inst.data_to_serdes[1] .INIT=16'hFACC;
  LUT4 \training_bit_gen_inst.data_to_serdes[0]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[0]),
	.O(data_to_serdes[0])
);
defparam \training_bit_gen_inst.data_to_serdes[0] .INIT=16'h4F40;
// @225:7828
  FD \tx_core.FF.data_in_Z[3]  (
	.Q(\tx_core.FF.data_in [3]),
	.D(data_to_serdes[3]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[2]  (
	.Q(\tx_core.FF.data_in [2]),
	.D(data_to_serdes[2]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[1]  (
	.Q(\tx_core.FF.data_in [1]),
	.D(data_to_serdes[1]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[0]  (
	.Q(\tx_core.FF.data_in [0]),
	.D(data_to_serdes[0]),
	.C(txclkdiv2)
);
  assign VCC = 1'b1;
assign T_out = GND;
endmodule /* hstdm_tx_Z2_3_FB1_uA */

(* n_hstdm_low_latency=1 , DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_tx_Z2_4_FB1_uA (
  txclk,
  txclkdiv4,
  txclkdiv2,
  cpm_data,
  data_in,
  txrst,
  txctrl,
  T_in,
  T_out,
  RX_BIT_CTRL_OUT,
  TX_BIT_CTRL_OUT,
  RX_BIT_CTRL_IN,
  TX_BIT_CTRL_IN,
  RST_DLY,
  BS_RST,
  SIMULATION
)
;
input txclk ;
input txclkdiv4 ;
input txclkdiv2 ;
output cpm_data ;
input [3:0] data_in ;
input txrst ;
input [1:0] txctrl ;
input T_in ;
output T_out ;
output [39:0] RX_BIT_CTRL_OUT ;
output [39:0] TX_BIT_CTRL_OUT ;
input [39:0] RX_BIT_CTRL_IN ;
input [39:0] TX_BIT_CTRL_IN ;
input RST_DLY ;
input BS_RST ;
input SIMULATION ;
wire txclk ;
wire txclkdiv4 ;
wire txclkdiv2 ;
wire cpm_data ;
wire txrst ;
wire T_in ;
wire T_out ;
wire RST_DLY ;
wire BS_RST ;
wire SIMULATION ;
wire [1:0] txctrl_sync;
wire [3:0] data_in_mux;
wire [3:0] data_to_serdes;
wire [7:0] Q;
wire [8:0] RX_CNTVALUEOUT;
wire [8:0] TX_CNTVALUEOUT;
wire [3:0] \tx_core.FF.data_in ;
wire [3:0] \training_bit_gen_inst.scrambler_out ;
wire [13:0] \training_bit_gen_inst.BIT[3].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[2].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[1].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[0].scrambler.shift ;
wire FIFO_EMPTY ;
wire FIFO_WRCLK_OUT ;
wire GND ;
wire \ar_tx_ctrl1.R0  ;
wire \ar_tx_ctrl0.R0  ;
wire N_1 ;
wire N_259_i ;
wire \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i  ;
wire T_outz ;
wire VCC ;
  GND GND_cZ (
	.G(GND)
);
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.D(N_259_i),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [0]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11] .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R1_Z  (
	.Q(txctrl_sync[1]),
	.D(\ar_tx_ctrl1.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R0_Z  (
	.Q(\ar_tx_ctrl0.R0 ),
	.D(txctrl[0]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R0_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R1_Z  (
	.Q(txctrl_sync[0]),
	.D(\ar_tx_ctrl0.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R0_Z  (
	.Q(\ar_tx_ctrl1.R0 ),
	.D(txctrl[1]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R0_Z .INIT=1'b0;
//@226:23924
// @225:7866
  RXTX_BITSLICE \tx_core.bitslice_tx_data  (
	.FIFO_EMPTY(FIFO_EMPTY),
	.FIFO_WRCLK_OUT(FIFO_WRCLK_OUT),
	.O(cpm_data),
	.Q(Q[7:0]),
	.RX_BIT_CTRL_OUT(RX_BIT_CTRL_OUT[39:0]),
	.RX_CNTVALUEOUT(RX_CNTVALUEOUT[8:0]),
	.TX_BIT_CTRL_OUT(TX_BIT_CTRL_OUT[39:0]),
	.TX_CNTVALUEOUT(TX_CNTVALUEOUT[8:0]),
	.T_OUT(T_outz),
	.D({GND, GND, GND, GND, \tx_core.FF.data_in [3:0]}),
	.DATAIN(GND),
	.RX_BIT_CTRL_IN(RX_BIT_CTRL_IN[39:0]),
	.RX_EN_VTC(GND),
	.RX_RST(BS_RST),
	.RX_RST_DLY(RST_DLY),
	.T(GND),
	.TX_BIT_CTRL_IN(TX_BIT_CTRL_IN[39:0]),
	.TX_CE(GND),
	.TX_CLK(GND),
	.TX_CNTVALUEIN({GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_EN_VTC(GND),
	.TX_INC(GND),
	.TX_LOAD(GND),
	.TX_RST(BS_RST),
	.TX_RST_DLY(RST_DLY)
);
defparam \tx_core.bitslice_tx_data .ENABLE_PRE_EMPHASIS="FALSE";
defparam \tx_core.bitslice_tx_data .INIT=1'b0;
defparam \tx_core.bitslice_tx_data .RX_DATA_TYPE="DATA";
defparam \tx_core.bitslice_tx_data .RX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .RX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .RX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .RX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .RX_REFCLK_FREQUENCY=1200.0;
defparam \tx_core.bitslice_tx_data .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \tx_core.bitslice_tx_data .TBYTE_CTL="T";
defparam \tx_core.bitslice_tx_data .TX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .TX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .TX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .TX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .TX_REFCLK_FREQUENCY=1200.0;
//@225:6420
//@225:6420
//@225:6420
//@225:6420
// @225:5095
  LUT3 \training_bit_gen_inst.BIT[0].scrambler.N_259_i  (
	.I0(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.O(N_259_i)
);
defparam \training_bit_gen_inst.BIT[0].scrambler.N_259_i .INIT=8'h69;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.O(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.O(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.O(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[1]  (
	.I0(data_in[1]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[1])
);
defparam \un3_data_in_mux_cZ[1] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[0]  (
	.I0(data_in[0]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[0])
);
defparam \un3_data_in_mux_cZ[0] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[3]  (
	.I0(data_in[3]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[3])
);
defparam \un3_data_in_mux_cZ[3] .INIT=4'h2;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[2]  (
	.I0(data_in[2]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[2])
);
defparam \un3_data_in_mux_cZ[2] .INIT=4'h2;
  LUT4 \training_bit_gen_inst.data_to_serdes[3]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[3]),
	.O(data_to_serdes[3])
);
defparam \training_bit_gen_inst.data_to_serdes[3] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[2]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[2]),
	.O(data_to_serdes[2])
);
defparam \training_bit_gen_inst.data_to_serdes[2] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[1]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[1]),
	.O(data_to_serdes[1])
);
defparam \training_bit_gen_inst.data_to_serdes[1] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[0]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[0]),
	.O(data_to_serdes[0])
);
defparam \training_bit_gen_inst.data_to_serdes[0] .INIT=16'h4F40;
// @225:7828
  FD \tx_core.FF.data_in_Z[3]  (
	.Q(\tx_core.FF.data_in [3]),
	.D(data_to_serdes[3]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[2]  (
	.Q(\tx_core.FF.data_in [2]),
	.D(data_to_serdes[2]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[1]  (
	.Q(\tx_core.FF.data_in [1]),
	.D(data_to_serdes[1]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[0]  (
	.Q(\tx_core.FF.data_in [0]),
	.D(data_to_serdes[0]),
	.C(txclkdiv2)
);
  assign VCC = 1'b1;
assign T_out = GND;
endmodule /* hstdm_tx_Z2_4_FB1_uA */

(* n_hstdm_low_latency=1 , DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_tx_Z2_5_FB1_uA (
  txclk,
  txclkdiv4,
  txclkdiv2,
  cpm_data,
  data_in,
  txrst,
  txctrl,
  T_in,
  T_out,
  RX_BIT_CTRL_OUT,
  TX_BIT_CTRL_OUT,
  RX_BIT_CTRL_IN,
  TX_BIT_CTRL_IN,
  RST_DLY,
  BS_RST,
  SIMULATION
)
;
input txclk ;
input txclkdiv4 ;
input txclkdiv2 ;
output cpm_data ;
input [3:0] data_in ;
input txrst ;
input [1:0] txctrl ;
input T_in ;
output T_out ;
output [39:0] RX_BIT_CTRL_OUT ;
output [39:0] TX_BIT_CTRL_OUT ;
input [39:0] RX_BIT_CTRL_IN ;
input [39:0] TX_BIT_CTRL_IN ;
input RST_DLY ;
input BS_RST ;
input SIMULATION ;
wire txclk ;
wire txclkdiv4 ;
wire txclkdiv2 ;
wire cpm_data ;
wire txrst ;
wire T_in ;
wire T_out ;
wire RST_DLY ;
wire BS_RST ;
wire SIMULATION ;
wire [1:0] txctrl_sync;
wire [3:0] data_in_mux;
wire [3:0] data_to_serdes;
wire [7:0] Q;
wire [8:0] RX_CNTVALUEOUT;
wire [8:0] TX_CNTVALUEOUT;
wire [3:0] \tx_core.FF.data_in ;
wire [3:0] \training_bit_gen_inst.scrambler_out ;
wire [13:0] \training_bit_gen_inst.BIT[3].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[2].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[1].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[0].scrambler.shift ;
wire FIFO_EMPTY ;
wire FIFO_WRCLK_OUT ;
wire GND ;
wire \ar_tx_ctrl1.R0  ;
wire \ar_tx_ctrl0.R0  ;
wire N_1 ;
wire N_259_i ;
wire \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i  ;
wire T_outz ;
wire VCC ;
  GND GND_cZ (
	.G(GND)
);
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.D(N_259_i),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [0]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11] .INIT=1'b1;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R1_Z  (
	.Q(txctrl_sync[1]),
	.D(\ar_tx_ctrl1.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R0_Z  (
	.Q(\ar_tx_ctrl0.R0 ),
	.D(txctrl[0]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R0_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R1_Z  (
	.Q(txctrl_sync[0]),
	.D(\ar_tx_ctrl0.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R0_Z  (
	.Q(\ar_tx_ctrl1.R0 ),
	.D(txctrl[1]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R0_Z .INIT=1'b0;
//@226:23924
// @225:7866
  RXTX_BITSLICE \tx_core.bitslice_tx_data  (
	.FIFO_EMPTY(FIFO_EMPTY),
	.FIFO_WRCLK_OUT(FIFO_WRCLK_OUT),
	.O(cpm_data),
	.Q(Q[7:0]),
	.RX_BIT_CTRL_OUT(RX_BIT_CTRL_OUT[39:0]),
	.RX_CNTVALUEOUT(RX_CNTVALUEOUT[8:0]),
	.TX_BIT_CTRL_OUT(TX_BIT_CTRL_OUT[39:0]),
	.TX_CNTVALUEOUT(TX_CNTVALUEOUT[8:0]),
	.T_OUT(T_outz),
	.D({GND, GND, GND, GND, \tx_core.FF.data_in [3:0]}),
	.DATAIN(GND),
	.RX_BIT_CTRL_IN(RX_BIT_CTRL_IN[39:0]),
	.RX_EN_VTC(GND),
	.RX_RST(BS_RST),
	.RX_RST_DLY(RST_DLY),
	.T(GND),
	.TX_BIT_CTRL_IN(TX_BIT_CTRL_IN[39:0]),
	.TX_CE(GND),
	.TX_CLK(GND),
	.TX_CNTVALUEIN({GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_EN_VTC(GND),
	.TX_INC(GND),
	.TX_LOAD(GND),
	.TX_RST(BS_RST),
	.TX_RST_DLY(RST_DLY)
);
defparam \tx_core.bitslice_tx_data .ENABLE_PRE_EMPHASIS="TRUE";
defparam \tx_core.bitslice_tx_data .INIT=1'b0;
defparam \tx_core.bitslice_tx_data .RX_DATA_TYPE="DATA";
defparam \tx_core.bitslice_tx_data .RX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .RX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .RX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .RX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .RX_REFCLK_FREQUENCY=1200.0;
defparam \tx_core.bitslice_tx_data .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \tx_core.bitslice_tx_data .TBYTE_CTL="T";
defparam \tx_core.bitslice_tx_data .TX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .TX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .TX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .TX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .TX_REFCLK_FREQUENCY=1200.0;
//@225:6420
//@225:6420
//@225:6420
//@225:6420
// @225:5095
  LUT3 \training_bit_gen_inst.BIT[0].scrambler.N_259_i  (
	.I0(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.O(N_259_i)
);
defparam \training_bit_gen_inst.BIT[0].scrambler.N_259_i .INIT=8'h69;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.O(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.O(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.O(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[1]  (
	.I0(data_in[1]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[1])
);
defparam \un3_data_in_mux_cZ[1] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[0]  (
	.I0(data_in[0]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[0])
);
defparam \un3_data_in_mux_cZ[0] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[3]  (
	.I0(data_in[3]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[3])
);
defparam \un3_data_in_mux_cZ[3] .INIT=4'h2;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[2]  (
	.I0(data_in[2]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[2])
);
defparam \un3_data_in_mux_cZ[2] .INIT=4'h2;
  LUT4 \training_bit_gen_inst.data_to_serdes[3]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[3]),
	.O(data_to_serdes[3])
);
defparam \training_bit_gen_inst.data_to_serdes[3] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[2]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[2]),
	.O(data_to_serdes[2])
);
defparam \training_bit_gen_inst.data_to_serdes[2] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[1]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[1]),
	.O(data_to_serdes[1])
);
defparam \training_bit_gen_inst.data_to_serdes[1] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[0]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[0]),
	.O(data_to_serdes[0])
);
defparam \training_bit_gen_inst.data_to_serdes[0] .INIT=16'h4F40;
// @225:7828
  FD \tx_core.FF.data_in_Z[3]  (
	.Q(\tx_core.FF.data_in [3]),
	.D(data_to_serdes[3]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[2]  (
	.Q(\tx_core.FF.data_in [2]),
	.D(data_to_serdes[2]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[1]  (
	.Q(\tx_core.FF.data_in [1]),
	.D(data_to_serdes[1]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[0]  (
	.Q(\tx_core.FF.data_in [0]),
	.D(data_to_serdes[0]),
	.C(txclkdiv2)
);
  assign VCC = 1'b1;
assign T_out = GND;
endmodule /* hstdm_tx_Z2_5_FB1_uA */

(* n_hstdm_low_latency=1 , DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_tx_Z2_6_FB1_uA (
  txclk,
  txclkdiv4,
  txclkdiv2,
  cpm_data,
  data_in,
  txrst,
  txctrl,
  T_in,
  T_out,
  RX_BIT_CTRL_OUT,
  TX_BIT_CTRL_OUT,
  RX_BIT_CTRL_IN,
  TX_BIT_CTRL_IN,
  RST_DLY,
  BS_RST,
  SIMULATION
)
;
input txclk ;
input txclkdiv4 ;
input txclkdiv2 ;
output cpm_data ;
input [3:0] data_in ;
input txrst ;
input [1:0] txctrl ;
input T_in ;
output T_out ;
output [39:0] RX_BIT_CTRL_OUT ;
output [39:0] TX_BIT_CTRL_OUT ;
input [39:0] RX_BIT_CTRL_IN ;
input [39:0] TX_BIT_CTRL_IN ;
input RST_DLY ;
input BS_RST ;
input SIMULATION ;
wire txclk ;
wire txclkdiv4 ;
wire txclkdiv2 ;
wire cpm_data ;
wire txrst ;
wire T_in ;
wire T_out ;
wire RST_DLY ;
wire BS_RST ;
wire SIMULATION ;
wire [1:0] txctrl_sync;
wire [3:0] data_in_mux;
wire [3:0] data_to_serdes;
wire [7:0] Q;
wire [8:0] RX_CNTVALUEOUT;
wire [8:0] TX_CNTVALUEOUT;
wire [3:0] \tx_core.FF.data_in ;
wire [3:0] \training_bit_gen_inst.scrambler_out ;
wire [13:0] \training_bit_gen_inst.BIT[3].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[2].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[1].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[0].scrambler.shift ;
wire FIFO_EMPTY ;
wire FIFO_WRCLK_OUT ;
wire GND ;
wire \ar_tx_ctrl1.R0  ;
wire \ar_tx_ctrl0.R0  ;
wire N_1 ;
wire N_259_i ;
wire \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i  ;
wire T_outz ;
wire VCC ;
  GND GND_cZ (
	.G(GND)
);
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.D(N_259_i),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [0]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11] .INIT=1'b1;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R1_Z  (
	.Q(txctrl_sync[1]),
	.D(\ar_tx_ctrl1.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R0_Z  (
	.Q(\ar_tx_ctrl0.R0 ),
	.D(txctrl[0]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R0_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R1_Z  (
	.Q(txctrl_sync[0]),
	.D(\ar_tx_ctrl0.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R0_Z  (
	.Q(\ar_tx_ctrl1.R0 ),
	.D(txctrl[1]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R0_Z .INIT=1'b0;
//@226:23924
// @225:7866
  RXTX_BITSLICE \tx_core.bitslice_tx_data  (
	.FIFO_EMPTY(FIFO_EMPTY),
	.FIFO_WRCLK_OUT(FIFO_WRCLK_OUT),
	.O(cpm_data),
	.Q(Q[7:0]),
	.RX_BIT_CTRL_OUT(RX_BIT_CTRL_OUT[39:0]),
	.RX_CNTVALUEOUT(RX_CNTVALUEOUT[8:0]),
	.TX_BIT_CTRL_OUT(TX_BIT_CTRL_OUT[39:0]),
	.TX_CNTVALUEOUT(TX_CNTVALUEOUT[8:0]),
	.T_OUT(T_outz),
	.D({GND, GND, GND, GND, \tx_core.FF.data_in [3:0]}),
	.DATAIN(GND),
	.RX_BIT_CTRL_IN(RX_BIT_CTRL_IN[39:0]),
	.RX_EN_VTC(GND),
	.RX_RST(BS_RST),
	.RX_RST_DLY(RST_DLY),
	.T(GND),
	.TX_BIT_CTRL_IN(TX_BIT_CTRL_IN[39:0]),
	.TX_CE(GND),
	.TX_CLK(GND),
	.TX_CNTVALUEIN({GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_EN_VTC(GND),
	.TX_INC(GND),
	.TX_LOAD(GND),
	.TX_RST(BS_RST),
	.TX_RST_DLY(RST_DLY)
);
defparam \tx_core.bitslice_tx_data .ENABLE_PRE_EMPHASIS="TRUE";
defparam \tx_core.bitslice_tx_data .INIT=1'b0;
defparam \tx_core.bitslice_tx_data .RX_DATA_TYPE="DATA";
defparam \tx_core.bitslice_tx_data .RX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .RX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .RX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .RX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .RX_REFCLK_FREQUENCY=1200.0;
defparam \tx_core.bitslice_tx_data .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \tx_core.bitslice_tx_data .TBYTE_CTL="T";
defparam \tx_core.bitslice_tx_data .TX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .TX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .TX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .TX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .TX_REFCLK_FREQUENCY=1200.0;
//@225:6420
//@225:6420
//@225:6420
//@225:6420
// @225:5095
  LUT3 \training_bit_gen_inst.BIT[0].scrambler.N_259_i  (
	.I0(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.O(N_259_i)
);
defparam \training_bit_gen_inst.BIT[0].scrambler.N_259_i .INIT=8'h69;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.O(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.O(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.O(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[1]  (
	.I0(data_in[1]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[1])
);
defparam \un3_data_in_mux_cZ[1] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[0]  (
	.I0(data_in[0]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[0])
);
defparam \un3_data_in_mux_cZ[0] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[3]  (
	.I0(data_in[3]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[3])
);
defparam \un3_data_in_mux_cZ[3] .INIT=4'h2;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[2]  (
	.I0(data_in[2]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[2])
);
defparam \un3_data_in_mux_cZ[2] .INIT=4'h2;
  LUT4 \training_bit_gen_inst.data_to_serdes[3]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[3]),
	.O(data_to_serdes[3])
);
defparam \training_bit_gen_inst.data_to_serdes[3] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[2]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[2]),
	.O(data_to_serdes[2])
);
defparam \training_bit_gen_inst.data_to_serdes[2] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[1]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[1]),
	.O(data_to_serdes[1])
);
defparam \training_bit_gen_inst.data_to_serdes[1] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[0]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[0]),
	.O(data_to_serdes[0])
);
defparam \training_bit_gen_inst.data_to_serdes[0] .INIT=16'h4F40;
// @225:7828
  FD \tx_core.FF.data_in_Z[3]  (
	.Q(\tx_core.FF.data_in [3]),
	.D(data_to_serdes[3]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[2]  (
	.Q(\tx_core.FF.data_in [2]),
	.D(data_to_serdes[2]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[1]  (
	.Q(\tx_core.FF.data_in [1]),
	.D(data_to_serdes[1]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[0]  (
	.Q(\tx_core.FF.data_in [0]),
	.D(data_to_serdes[0]),
	.C(txclkdiv2)
);
  assign VCC = 1'b1;
assign T_out = GND;
endmodule /* hstdm_tx_Z2_6_FB1_uA */

(* n_hstdm_low_latency=1 , DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_tx_Z2_7_FB1_uA (
  txclk,
  txclkdiv4,
  txclkdiv2,
  cpm_data,
  data_in,
  txrst,
  txctrl,
  T_in,
  T_out,
  RX_BIT_CTRL_OUT,
  TX_BIT_CTRL_OUT,
  RX_BIT_CTRL_IN,
  TX_BIT_CTRL_IN,
  RST_DLY,
  BS_RST,
  SIMULATION
)
;
input txclk ;
input txclkdiv4 ;
input txclkdiv2 ;
output cpm_data ;
input [3:0] data_in ;
input txrst ;
input [1:0] txctrl ;
input T_in ;
output T_out ;
output [39:0] RX_BIT_CTRL_OUT ;
output [39:0] TX_BIT_CTRL_OUT ;
input [39:0] RX_BIT_CTRL_IN ;
input [39:0] TX_BIT_CTRL_IN ;
input RST_DLY ;
input BS_RST ;
input SIMULATION ;
wire txclk ;
wire txclkdiv4 ;
wire txclkdiv2 ;
wire cpm_data ;
wire txrst ;
wire T_in ;
wire T_out ;
wire RST_DLY ;
wire BS_RST ;
wire SIMULATION ;
wire [1:0] txctrl_sync;
wire [3:0] data_in_mux;
wire [3:0] data_to_serdes;
wire [7:0] Q;
wire [8:0] RX_CNTVALUEOUT;
wire [8:0] TX_CNTVALUEOUT;
wire [3:0] \tx_core.FF.data_in ;
wire [3:0] \training_bit_gen_inst.scrambler_out ;
wire [13:0] \training_bit_gen_inst.BIT[3].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[2].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[1].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[0].scrambler.shift ;
wire FIFO_EMPTY ;
wire FIFO_WRCLK_OUT ;
wire GND ;
wire \ar_tx_ctrl1.R0  ;
wire \ar_tx_ctrl0.R0  ;
wire N_1 ;
wire N_259_i ;
wire \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i  ;
wire T_outz ;
wire VCC ;
  GND GND_cZ (
	.G(GND)
);
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.D(N_259_i),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [0]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11] .INIT=1'b1;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R1_Z  (
	.Q(txctrl_sync[1]),
	.D(\ar_tx_ctrl1.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R0_Z  (
	.Q(\ar_tx_ctrl0.R0 ),
	.D(txctrl[0]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R0_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R1_Z  (
	.Q(txctrl_sync[0]),
	.D(\ar_tx_ctrl0.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R0_Z  (
	.Q(\ar_tx_ctrl1.R0 ),
	.D(txctrl[1]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R0_Z .INIT=1'b0;
//@226:23924
// @225:7866
  RXTX_BITSLICE \tx_core.bitslice_tx_data  (
	.FIFO_EMPTY(FIFO_EMPTY),
	.FIFO_WRCLK_OUT(FIFO_WRCLK_OUT),
	.O(cpm_data),
	.Q(Q[7:0]),
	.RX_BIT_CTRL_OUT(RX_BIT_CTRL_OUT[39:0]),
	.RX_CNTVALUEOUT(RX_CNTVALUEOUT[8:0]),
	.TX_BIT_CTRL_OUT(TX_BIT_CTRL_OUT[39:0]),
	.TX_CNTVALUEOUT(TX_CNTVALUEOUT[8:0]),
	.T_OUT(T_outz),
	.D({GND, GND, GND, GND, \tx_core.FF.data_in [3:0]}),
	.DATAIN(GND),
	.RX_BIT_CTRL_IN(RX_BIT_CTRL_IN[39:0]),
	.RX_EN_VTC(GND),
	.RX_RST(BS_RST),
	.RX_RST_DLY(RST_DLY),
	.T(GND),
	.TX_BIT_CTRL_IN(TX_BIT_CTRL_IN[39:0]),
	.TX_CE(GND),
	.TX_CLK(GND),
	.TX_CNTVALUEIN({GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_EN_VTC(GND),
	.TX_INC(GND),
	.TX_LOAD(GND),
	.TX_RST(BS_RST),
	.TX_RST_DLY(RST_DLY)
);
defparam \tx_core.bitslice_tx_data .ENABLE_PRE_EMPHASIS="TRUE";
defparam \tx_core.bitslice_tx_data .INIT=1'b0;
defparam \tx_core.bitslice_tx_data .RX_DATA_TYPE="DATA";
defparam \tx_core.bitslice_tx_data .RX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .RX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .RX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .RX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .RX_REFCLK_FREQUENCY=1200.0;
defparam \tx_core.bitslice_tx_data .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \tx_core.bitslice_tx_data .TBYTE_CTL="T";
defparam \tx_core.bitslice_tx_data .TX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .TX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .TX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .TX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .TX_REFCLK_FREQUENCY=1200.0;
//@225:6420
//@225:6420
//@225:6420
//@225:6420
// @225:5095
  LUT3 \training_bit_gen_inst.BIT[0].scrambler.N_259_i  (
	.I0(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.O(N_259_i)
);
defparam \training_bit_gen_inst.BIT[0].scrambler.N_259_i .INIT=8'h69;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.O(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.O(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.O(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[1]  (
	.I0(data_in[1]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[1])
);
defparam \un3_data_in_mux_cZ[1] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[0]  (
	.I0(data_in[0]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[0])
);
defparam \un3_data_in_mux_cZ[0] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[3]  (
	.I0(data_in[3]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[3])
);
defparam \un3_data_in_mux_cZ[3] .INIT=4'h2;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[2]  (
	.I0(data_in[2]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[2])
);
defparam \un3_data_in_mux_cZ[2] .INIT=4'h2;
  LUT4 \training_bit_gen_inst.data_to_serdes[3]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[3]),
	.O(data_to_serdes[3])
);
defparam \training_bit_gen_inst.data_to_serdes[3] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[2]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[2]),
	.O(data_to_serdes[2])
);
defparam \training_bit_gen_inst.data_to_serdes[2] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[1]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[1]),
	.O(data_to_serdes[1])
);
defparam \training_bit_gen_inst.data_to_serdes[1] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[0]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[0]),
	.O(data_to_serdes[0])
);
defparam \training_bit_gen_inst.data_to_serdes[0] .INIT=16'h4F40;
// @225:7828
  FD \tx_core.FF.data_in_Z[3]  (
	.Q(\tx_core.FF.data_in [3]),
	.D(data_to_serdes[3]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[2]  (
	.Q(\tx_core.FF.data_in [2]),
	.D(data_to_serdes[2]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[1]  (
	.Q(\tx_core.FF.data_in [1]),
	.D(data_to_serdes[1]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[0]  (
	.Q(\tx_core.FF.data_in [0]),
	.D(data_to_serdes[0]),
	.C(txclkdiv2)
);
  assign VCC = 1'b1;
assign T_out = GND;
endmodule /* hstdm_tx_Z2_7_FB1_uA */

(* n_hstdm_low_latency=1 , DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_tx_Z2_8_FB1_uA (
  txclk,
  txclkdiv4,
  txclkdiv2,
  cpm_data,
  data_in,
  txrst,
  txctrl,
  T_in,
  T_out,
  RX_BIT_CTRL_OUT,
  TX_BIT_CTRL_OUT,
  RX_BIT_CTRL_IN,
  TX_BIT_CTRL_IN,
  RST_DLY,
  BS_RST,
  SIMULATION
)
;
input txclk ;
input txclkdiv4 ;
input txclkdiv2 ;
output cpm_data ;
input [3:0] data_in ;
input txrst ;
input [1:0] txctrl ;
input T_in ;
output T_out ;
output [39:0] RX_BIT_CTRL_OUT ;
output [39:0] TX_BIT_CTRL_OUT ;
input [39:0] RX_BIT_CTRL_IN ;
input [39:0] TX_BIT_CTRL_IN ;
input RST_DLY ;
input BS_RST ;
input SIMULATION ;
wire txclk ;
wire txclkdiv4 ;
wire txclkdiv2 ;
wire cpm_data ;
wire txrst ;
wire T_in ;
wire T_out ;
wire RST_DLY ;
wire BS_RST ;
wire SIMULATION ;
wire [1:0] txctrl_sync;
wire [3:0] data_in_mux;
wire [3:0] data_to_serdes;
wire [7:0] Q;
wire [8:0] RX_CNTVALUEOUT;
wire [8:0] TX_CNTVALUEOUT;
wire [3:0] \tx_core.FF.data_in ;
wire [3:0] \training_bit_gen_inst.scrambler_out ;
wire [13:0] \training_bit_gen_inst.BIT[3].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[2].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[1].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[0].scrambler.shift ;
wire FIFO_EMPTY ;
wire FIFO_WRCLK_OUT ;
wire GND ;
wire \ar_tx_ctrl1.R0  ;
wire \ar_tx_ctrl0.R0  ;
wire N_1 ;
wire N_259_i ;
wire \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i  ;
wire T_outz ;
wire VCC ;
  GND GND_cZ (
	.G(GND)
);
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.D(N_259_i),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [0]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11] .INIT=1'b1;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R1_Z  (
	.Q(txctrl_sync[1]),
	.D(\ar_tx_ctrl1.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R0_Z  (
	.Q(\ar_tx_ctrl0.R0 ),
	.D(txctrl[0]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R0_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R1_Z  (
	.Q(txctrl_sync[0]),
	.D(\ar_tx_ctrl0.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R0_Z  (
	.Q(\ar_tx_ctrl1.R0 ),
	.D(txctrl[1]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R0_Z .INIT=1'b0;
//@226:23924
// @225:7866
  RXTX_BITSLICE \tx_core.bitslice_tx_data  (
	.FIFO_EMPTY(FIFO_EMPTY),
	.FIFO_WRCLK_OUT(FIFO_WRCLK_OUT),
	.O(cpm_data),
	.Q(Q[7:0]),
	.RX_BIT_CTRL_OUT(RX_BIT_CTRL_OUT[39:0]),
	.RX_CNTVALUEOUT(RX_CNTVALUEOUT[8:0]),
	.TX_BIT_CTRL_OUT(TX_BIT_CTRL_OUT[39:0]),
	.TX_CNTVALUEOUT(TX_CNTVALUEOUT[8:0]),
	.T_OUT(T_outz),
	.D({GND, GND, GND, GND, \tx_core.FF.data_in [3:0]}),
	.DATAIN(GND),
	.RX_BIT_CTRL_IN(RX_BIT_CTRL_IN[39:0]),
	.RX_EN_VTC(GND),
	.RX_RST(BS_RST),
	.RX_RST_DLY(RST_DLY),
	.T(GND),
	.TX_BIT_CTRL_IN(TX_BIT_CTRL_IN[39:0]),
	.TX_CE(GND),
	.TX_CLK(GND),
	.TX_CNTVALUEIN({GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_EN_VTC(GND),
	.TX_INC(GND),
	.TX_LOAD(GND),
	.TX_RST(BS_RST),
	.TX_RST_DLY(RST_DLY)
);
defparam \tx_core.bitslice_tx_data .ENABLE_PRE_EMPHASIS="TRUE";
defparam \tx_core.bitslice_tx_data .INIT=1'b0;
defparam \tx_core.bitslice_tx_data .RX_DATA_TYPE="DATA";
defparam \tx_core.bitslice_tx_data .RX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .RX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .RX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .RX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .RX_REFCLK_FREQUENCY=1200.0;
defparam \tx_core.bitslice_tx_data .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \tx_core.bitslice_tx_data .TBYTE_CTL="T";
defparam \tx_core.bitslice_tx_data .TX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .TX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .TX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .TX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .TX_REFCLK_FREQUENCY=1200.0;
//@225:6420
//@225:6420
//@225:6420
//@225:6420
// @225:5095
  LUT3 \training_bit_gen_inst.BIT[0].scrambler.N_259_i  (
	.I0(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.O(N_259_i)
);
defparam \training_bit_gen_inst.BIT[0].scrambler.N_259_i .INIT=8'h69;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.O(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.O(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.O(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[1]  (
	.I0(data_in[1]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[1])
);
defparam \un3_data_in_mux_cZ[1] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[0]  (
	.I0(data_in[0]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[0])
);
defparam \un3_data_in_mux_cZ[0] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[3]  (
	.I0(data_in[3]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[3])
);
defparam \un3_data_in_mux_cZ[3] .INIT=4'h2;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[2]  (
	.I0(data_in[2]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[2])
);
defparam \un3_data_in_mux_cZ[2] .INIT=4'h2;
  LUT4 \training_bit_gen_inst.data_to_serdes[3]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[3]),
	.O(data_to_serdes[3])
);
defparam \training_bit_gen_inst.data_to_serdes[3] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[2]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[2]),
	.O(data_to_serdes[2])
);
defparam \training_bit_gen_inst.data_to_serdes[2] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[1]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[1]),
	.O(data_to_serdes[1])
);
defparam \training_bit_gen_inst.data_to_serdes[1] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[0]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[0]),
	.O(data_to_serdes[0])
);
defparam \training_bit_gen_inst.data_to_serdes[0] .INIT=16'h4F40;
// @225:7828
  FD \tx_core.FF.data_in_Z[3]  (
	.Q(\tx_core.FF.data_in [3]),
	.D(data_to_serdes[3]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[2]  (
	.Q(\tx_core.FF.data_in [2]),
	.D(data_to_serdes[2]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[1]  (
	.Q(\tx_core.FF.data_in [1]),
	.D(data_to_serdes[1]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[0]  (
	.Q(\tx_core.FF.data_in [0]),
	.D(data_to_serdes[0]),
	.C(txclkdiv2)
);
  assign VCC = 1'b1;
assign T_out = GND;
endmodule /* hstdm_tx_Z2_8_FB1_uA */

(* n_hstdm_low_latency=1 , DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_tx_Z2_9_FB1_uA (
  txclk,
  txclkdiv4,
  txclkdiv2,
  cpm_data,
  data_in,
  txrst,
  txctrl,
  T_in,
  T_out,
  RX_BIT_CTRL_OUT,
  TX_BIT_CTRL_OUT,
  RX_BIT_CTRL_IN,
  TX_BIT_CTRL_IN,
  RST_DLY,
  BS_RST,
  SIMULATION
)
;
input txclk ;
input txclkdiv4 ;
input txclkdiv2 ;
output cpm_data ;
input [3:0] data_in ;
input txrst ;
input [1:0] txctrl ;
input T_in ;
output T_out ;
output [39:0] RX_BIT_CTRL_OUT ;
output [39:0] TX_BIT_CTRL_OUT ;
input [39:0] RX_BIT_CTRL_IN ;
input [39:0] TX_BIT_CTRL_IN ;
input RST_DLY ;
input BS_RST ;
input SIMULATION ;
wire txclk ;
wire txclkdiv4 ;
wire txclkdiv2 ;
wire cpm_data ;
wire txrst ;
wire T_in ;
wire T_out ;
wire RST_DLY ;
wire BS_RST ;
wire SIMULATION ;
wire [1:0] txctrl_sync;
wire [3:0] data_in_mux;
wire [3:0] data_to_serdes;
wire [7:0] Q;
wire [8:0] RX_CNTVALUEOUT;
wire [8:0] TX_CNTVALUEOUT;
wire [3:0] \tx_core.FF.data_in ;
wire [3:0] \training_bit_gen_inst.scrambler_out ;
wire [13:0] \training_bit_gen_inst.BIT[3].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[2].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[1].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[0].scrambler.shift ;
wire FIFO_EMPTY ;
wire FIFO_WRCLK_OUT ;
wire GND ;
wire \ar_tx_ctrl1.R0  ;
wire \ar_tx_ctrl0.R0  ;
wire N_1 ;
wire N_259_i ;
wire \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i  ;
wire T_outz ;
wire VCC ;
  GND GND_cZ (
	.G(GND)
);
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.D(N_259_i),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [0]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11] .INIT=1'b1;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R1_Z  (
	.Q(txctrl_sync[1]),
	.D(\ar_tx_ctrl1.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R0_Z  (
	.Q(\ar_tx_ctrl0.R0 ),
	.D(txctrl[0]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R0_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R1_Z  (
	.Q(txctrl_sync[0]),
	.D(\ar_tx_ctrl0.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R0_Z  (
	.Q(\ar_tx_ctrl1.R0 ),
	.D(txctrl[1]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R0_Z .INIT=1'b0;
//@226:23924
// @225:7866
  RXTX_BITSLICE \tx_core.bitslice_tx_data  (
	.FIFO_EMPTY(FIFO_EMPTY),
	.FIFO_WRCLK_OUT(FIFO_WRCLK_OUT),
	.O(cpm_data),
	.Q(Q[7:0]),
	.RX_BIT_CTRL_OUT(RX_BIT_CTRL_OUT[39:0]),
	.RX_CNTVALUEOUT(RX_CNTVALUEOUT[8:0]),
	.TX_BIT_CTRL_OUT(TX_BIT_CTRL_OUT[39:0]),
	.TX_CNTVALUEOUT(TX_CNTVALUEOUT[8:0]),
	.T_OUT(T_outz),
	.D({GND, GND, GND, GND, \tx_core.FF.data_in [3:0]}),
	.DATAIN(GND),
	.RX_BIT_CTRL_IN(RX_BIT_CTRL_IN[39:0]),
	.RX_EN_VTC(GND),
	.RX_RST(BS_RST),
	.RX_RST_DLY(RST_DLY),
	.T(GND),
	.TX_BIT_CTRL_IN(TX_BIT_CTRL_IN[39:0]),
	.TX_CE(GND),
	.TX_CLK(GND),
	.TX_CNTVALUEIN({GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_EN_VTC(GND),
	.TX_INC(GND),
	.TX_LOAD(GND),
	.TX_RST(BS_RST),
	.TX_RST_DLY(RST_DLY)
);
defparam \tx_core.bitslice_tx_data .ENABLE_PRE_EMPHASIS="TRUE";
defparam \tx_core.bitslice_tx_data .INIT=1'b0;
defparam \tx_core.bitslice_tx_data .RX_DATA_TYPE="DATA";
defparam \tx_core.bitslice_tx_data .RX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .RX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .RX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .RX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .RX_REFCLK_FREQUENCY=1200.0;
defparam \tx_core.bitslice_tx_data .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \tx_core.bitslice_tx_data .TBYTE_CTL="T";
defparam \tx_core.bitslice_tx_data .TX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .TX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .TX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .TX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .TX_REFCLK_FREQUENCY=1200.0;
//@225:6420
//@225:6420
//@225:6420
//@225:6420
// @225:5095
  LUT3 \training_bit_gen_inst.BIT[0].scrambler.N_259_i  (
	.I0(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.O(N_259_i)
);
defparam \training_bit_gen_inst.BIT[0].scrambler.N_259_i .INIT=8'h69;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.O(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.O(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.O(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[1]  (
	.I0(data_in[1]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[1])
);
defparam \un3_data_in_mux_cZ[1] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[0]  (
	.I0(data_in[0]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[0])
);
defparam \un3_data_in_mux_cZ[0] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[3]  (
	.I0(data_in[3]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[3])
);
defparam \un3_data_in_mux_cZ[3] .INIT=4'h2;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[2]  (
	.I0(data_in[2]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[2])
);
defparam \un3_data_in_mux_cZ[2] .INIT=4'h2;
  LUT4 \training_bit_gen_inst.data_to_serdes[3]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[3]),
	.O(data_to_serdes[3])
);
defparam \training_bit_gen_inst.data_to_serdes[3] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[2]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[2]),
	.O(data_to_serdes[2])
);
defparam \training_bit_gen_inst.data_to_serdes[2] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[1]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[1]),
	.O(data_to_serdes[1])
);
defparam \training_bit_gen_inst.data_to_serdes[1] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[0]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[0]),
	.O(data_to_serdes[0])
);
defparam \training_bit_gen_inst.data_to_serdes[0] .INIT=16'h4F40;
// @225:7828
  FD \tx_core.FF.data_in_Z[3]  (
	.Q(\tx_core.FF.data_in [3]),
	.D(data_to_serdes[3]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[2]  (
	.Q(\tx_core.FF.data_in [2]),
	.D(data_to_serdes[2]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[1]  (
	.Q(\tx_core.FF.data_in [1]),
	.D(data_to_serdes[1]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[0]  (
	.Q(\tx_core.FF.data_in [0]),
	.D(data_to_serdes[0]),
	.C(txclkdiv2)
);
  assign VCC = 1'b1;
assign T_out = GND;
endmodule /* hstdm_tx_Z2_9_FB1_uA */

(* n_hstdm_low_latency=1 , DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_tx_Z2_10_FB1_uA (
  txclk,
  txclkdiv4,
  txclkdiv2,
  cpm_data,
  data_in,
  txrst,
  txctrl,
  T_in,
  T_out,
  RX_BIT_CTRL_OUT,
  TX_BIT_CTRL_OUT,
  RX_BIT_CTRL_IN,
  TX_BIT_CTRL_IN,
  RST_DLY,
  BS_RST,
  SIMULATION
)
;
input txclk ;
input txclkdiv4 ;
input txclkdiv2 ;
output cpm_data ;
input [3:0] data_in ;
input txrst ;
input [1:0] txctrl ;
input T_in ;
output T_out ;
output [39:0] RX_BIT_CTRL_OUT ;
output [39:0] TX_BIT_CTRL_OUT ;
input [39:0] RX_BIT_CTRL_IN ;
input [39:0] TX_BIT_CTRL_IN ;
input RST_DLY ;
input BS_RST ;
input SIMULATION ;
wire txclk ;
wire txclkdiv4 ;
wire txclkdiv2 ;
wire cpm_data ;
wire txrst ;
wire T_in ;
wire T_out ;
wire RST_DLY ;
wire BS_RST ;
wire SIMULATION ;
wire [1:0] txctrl_sync;
wire [3:0] data_in_mux;
wire [3:0] data_to_serdes;
wire [7:0] Q;
wire [8:0] RX_CNTVALUEOUT;
wire [8:0] TX_CNTVALUEOUT;
wire [3:0] \tx_core.FF.data_in ;
wire [3:0] \training_bit_gen_inst.scrambler_out ;
wire [13:0] \training_bit_gen_inst.BIT[3].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[2].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[1].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[0].scrambler.shift ;
wire FIFO_EMPTY ;
wire FIFO_WRCLK_OUT ;
wire GND ;
wire \ar_tx_ctrl1.R0  ;
wire \ar_tx_ctrl0.R0  ;
wire N_1 ;
wire N_259_i ;
wire \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i  ;
wire T_outz ;
wire VCC ;
  GND GND_cZ (
	.G(GND)
);
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.D(N_259_i),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [0]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11] .INIT=1'b1;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R1_Z  (
	.Q(txctrl_sync[1]),
	.D(\ar_tx_ctrl1.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R0_Z  (
	.Q(\ar_tx_ctrl0.R0 ),
	.D(txctrl[0]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R0_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R1_Z  (
	.Q(txctrl_sync[0]),
	.D(\ar_tx_ctrl0.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R0_Z  (
	.Q(\ar_tx_ctrl1.R0 ),
	.D(txctrl[1]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R0_Z .INIT=1'b0;
//@226:23924
// @225:7866
  RXTX_BITSLICE \tx_core.bitslice_tx_data  (
	.FIFO_EMPTY(FIFO_EMPTY),
	.FIFO_WRCLK_OUT(FIFO_WRCLK_OUT),
	.O(cpm_data),
	.Q(Q[7:0]),
	.RX_BIT_CTRL_OUT(RX_BIT_CTRL_OUT[39:0]),
	.RX_CNTVALUEOUT(RX_CNTVALUEOUT[8:0]),
	.TX_BIT_CTRL_OUT(TX_BIT_CTRL_OUT[39:0]),
	.TX_CNTVALUEOUT(TX_CNTVALUEOUT[8:0]),
	.T_OUT(T_outz),
	.D({GND, GND, GND, GND, \tx_core.FF.data_in [3:0]}),
	.DATAIN(GND),
	.RX_BIT_CTRL_IN(RX_BIT_CTRL_IN[39:0]),
	.RX_EN_VTC(GND),
	.RX_RST(BS_RST),
	.RX_RST_DLY(RST_DLY),
	.T(GND),
	.TX_BIT_CTRL_IN(TX_BIT_CTRL_IN[39:0]),
	.TX_CE(GND),
	.TX_CLK(GND),
	.TX_CNTVALUEIN({GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_EN_VTC(GND),
	.TX_INC(GND),
	.TX_LOAD(GND),
	.TX_RST(BS_RST),
	.TX_RST_DLY(RST_DLY)
);
defparam \tx_core.bitslice_tx_data .ENABLE_PRE_EMPHASIS="TRUE";
defparam \tx_core.bitslice_tx_data .INIT=1'b0;
defparam \tx_core.bitslice_tx_data .RX_DATA_TYPE="DATA";
defparam \tx_core.bitslice_tx_data .RX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .RX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .RX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .RX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .RX_REFCLK_FREQUENCY=1200.0;
defparam \tx_core.bitslice_tx_data .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \tx_core.bitslice_tx_data .TBYTE_CTL="T";
defparam \tx_core.bitslice_tx_data .TX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .TX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .TX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .TX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .TX_REFCLK_FREQUENCY=1200.0;
//@225:6420
//@225:6420
//@225:6420
//@225:6420
// @225:5095
  LUT3 \training_bit_gen_inst.BIT[0].scrambler.N_259_i  (
	.I0(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.O(N_259_i)
);
defparam \training_bit_gen_inst.BIT[0].scrambler.N_259_i .INIT=8'h69;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.O(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.O(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.O(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[1]  (
	.I0(data_in[1]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[1])
);
defparam \un3_data_in_mux_cZ[1] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[0]  (
	.I0(data_in[0]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[0])
);
defparam \un3_data_in_mux_cZ[0] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[3]  (
	.I0(data_in[3]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[3])
);
defparam \un3_data_in_mux_cZ[3] .INIT=4'h2;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[2]  (
	.I0(data_in[2]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[2])
);
defparam \un3_data_in_mux_cZ[2] .INIT=4'h2;
  LUT4 \training_bit_gen_inst.data_to_serdes[3]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[3]),
	.O(data_to_serdes[3])
);
defparam \training_bit_gen_inst.data_to_serdes[3] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[2]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[2]),
	.O(data_to_serdes[2])
);
defparam \training_bit_gen_inst.data_to_serdes[2] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[1]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[1]),
	.O(data_to_serdes[1])
);
defparam \training_bit_gen_inst.data_to_serdes[1] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[0]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[0]),
	.O(data_to_serdes[0])
);
defparam \training_bit_gen_inst.data_to_serdes[0] .INIT=16'h4F40;
// @225:7828
  FD \tx_core.FF.data_in_Z[3]  (
	.Q(\tx_core.FF.data_in [3]),
	.D(data_to_serdes[3]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[2]  (
	.Q(\tx_core.FF.data_in [2]),
	.D(data_to_serdes[2]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[1]  (
	.Q(\tx_core.FF.data_in [1]),
	.D(data_to_serdes[1]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[0]  (
	.Q(\tx_core.FF.data_in [0]),
	.D(data_to_serdes[0]),
	.C(txclkdiv2)
);
  assign VCC = 1'b1;
assign T_out = GND;
endmodule /* hstdm_tx_Z2_10_FB1_uA */

(* n_hstdm_low_latency=1 , DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_tx_Z2_11_FB1_uA (
  txclk,
  txclkdiv4,
  txclkdiv2,
  cpm_data,
  data_in,
  txrst,
  txctrl,
  T_in,
  T_out,
  RX_BIT_CTRL_OUT,
  TX_BIT_CTRL_OUT,
  RX_BIT_CTRL_IN,
  TX_BIT_CTRL_IN,
  RST_DLY,
  BS_RST,
  SIMULATION
)
;
input txclk ;
input txclkdiv4 ;
input txclkdiv2 ;
output cpm_data ;
input [3:0] data_in ;
input txrst ;
input [1:0] txctrl ;
input T_in ;
output T_out ;
output [39:0] RX_BIT_CTRL_OUT ;
output [39:0] TX_BIT_CTRL_OUT ;
input [39:0] RX_BIT_CTRL_IN ;
input [39:0] TX_BIT_CTRL_IN ;
input RST_DLY ;
input BS_RST ;
input SIMULATION ;
wire txclk ;
wire txclkdiv4 ;
wire txclkdiv2 ;
wire cpm_data ;
wire txrst ;
wire T_in ;
wire T_out ;
wire RST_DLY ;
wire BS_RST ;
wire SIMULATION ;
wire [1:0] txctrl_sync;
wire [3:0] data_in_mux;
wire [3:0] data_to_serdes;
wire [7:0] Q;
wire [8:0] RX_CNTVALUEOUT;
wire [8:0] TX_CNTVALUEOUT;
wire [3:0] \tx_core.FF.data_in ;
wire [3:0] \training_bit_gen_inst.scrambler_out ;
wire [13:0] \training_bit_gen_inst.BIT[3].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[2].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[1].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[0].scrambler.shift ;
wire FIFO_EMPTY ;
wire FIFO_WRCLK_OUT ;
wire GND ;
wire \ar_tx_ctrl1.R0  ;
wire \ar_tx_ctrl0.R0  ;
wire N_1 ;
wire N_259_i ;
wire \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i  ;
wire T_outz ;
wire VCC ;
  GND GND_cZ (
	.G(GND)
);
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.D(N_259_i),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [0]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11] .INIT=1'b1;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R1_Z  (
	.Q(txctrl_sync[1]),
	.D(\ar_tx_ctrl1.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R0_Z  (
	.Q(\ar_tx_ctrl0.R0 ),
	.D(txctrl[0]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R0_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R1_Z  (
	.Q(txctrl_sync[0]),
	.D(\ar_tx_ctrl0.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R0_Z  (
	.Q(\ar_tx_ctrl1.R0 ),
	.D(txctrl[1]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R0_Z .INIT=1'b0;
//@226:23924
// @225:7866
  RXTX_BITSLICE \tx_core.bitslice_tx_data  (
	.FIFO_EMPTY(FIFO_EMPTY),
	.FIFO_WRCLK_OUT(FIFO_WRCLK_OUT),
	.O(cpm_data),
	.Q(Q[7:0]),
	.RX_BIT_CTRL_OUT(RX_BIT_CTRL_OUT[39:0]),
	.RX_CNTVALUEOUT(RX_CNTVALUEOUT[8:0]),
	.TX_BIT_CTRL_OUT(TX_BIT_CTRL_OUT[39:0]),
	.TX_CNTVALUEOUT(TX_CNTVALUEOUT[8:0]),
	.T_OUT(T_outz),
	.D({GND, GND, GND, GND, \tx_core.FF.data_in [3:0]}),
	.DATAIN(GND),
	.RX_BIT_CTRL_IN(RX_BIT_CTRL_IN[39:0]),
	.RX_EN_VTC(GND),
	.RX_RST(BS_RST),
	.RX_RST_DLY(RST_DLY),
	.T(GND),
	.TX_BIT_CTRL_IN(TX_BIT_CTRL_IN[39:0]),
	.TX_CE(GND),
	.TX_CLK(GND),
	.TX_CNTVALUEIN({GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_EN_VTC(GND),
	.TX_INC(GND),
	.TX_LOAD(GND),
	.TX_RST(BS_RST),
	.TX_RST_DLY(RST_DLY)
);
defparam \tx_core.bitslice_tx_data .ENABLE_PRE_EMPHASIS="TRUE";
defparam \tx_core.bitslice_tx_data .INIT=1'b0;
defparam \tx_core.bitslice_tx_data .RX_DATA_TYPE="DATA";
defparam \tx_core.bitslice_tx_data .RX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .RX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .RX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .RX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .RX_REFCLK_FREQUENCY=1200.0;
defparam \tx_core.bitslice_tx_data .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \tx_core.bitslice_tx_data .TBYTE_CTL="T";
defparam \tx_core.bitslice_tx_data .TX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .TX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .TX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .TX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .TX_REFCLK_FREQUENCY=1200.0;
//@225:6420
//@225:6420
//@225:6420
//@225:6420
// @225:5095
  LUT3 \training_bit_gen_inst.BIT[0].scrambler.N_259_i  (
	.I0(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.O(N_259_i)
);
defparam \training_bit_gen_inst.BIT[0].scrambler.N_259_i .INIT=8'h69;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.O(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.O(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.O(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[1]  (
	.I0(data_in[1]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[1])
);
defparam \un3_data_in_mux_cZ[1] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[0]  (
	.I0(data_in[0]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[0])
);
defparam \un3_data_in_mux_cZ[0] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[3]  (
	.I0(data_in[3]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[3])
);
defparam \un3_data_in_mux_cZ[3] .INIT=4'h2;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[2]  (
	.I0(data_in[2]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[2])
);
defparam \un3_data_in_mux_cZ[2] .INIT=4'h2;
  LUT4 \training_bit_gen_inst.data_to_serdes[3]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[3]),
	.O(data_to_serdes[3])
);
defparam \training_bit_gen_inst.data_to_serdes[3] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[2]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[2]),
	.O(data_to_serdes[2])
);
defparam \training_bit_gen_inst.data_to_serdes[2] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[1]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[1]),
	.O(data_to_serdes[1])
);
defparam \training_bit_gen_inst.data_to_serdes[1] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[0]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[0]),
	.O(data_to_serdes[0])
);
defparam \training_bit_gen_inst.data_to_serdes[0] .INIT=16'h4F40;
// @225:7828
  FD \tx_core.FF.data_in_Z[3]  (
	.Q(\tx_core.FF.data_in [3]),
	.D(data_to_serdes[3]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[2]  (
	.Q(\tx_core.FF.data_in [2]),
	.D(data_to_serdes[2]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[1]  (
	.Q(\tx_core.FF.data_in [1]),
	.D(data_to_serdes[1]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[0]  (
	.Q(\tx_core.FF.data_in [0]),
	.D(data_to_serdes[0]),
	.C(txclkdiv2)
);
  assign VCC = 1'b1;
assign T_out = GND;
endmodule /* hstdm_tx_Z2_11_FB1_uA */

(* n_hstdm_low_latency=1 , DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_tx_Z2_12_FB1_uA (
  txclk,
  txclkdiv4,
  txclkdiv2,
  cpm_data,
  data_in,
  txrst,
  txctrl,
  T_in,
  T_out,
  RX_BIT_CTRL_OUT,
  TX_BIT_CTRL_OUT,
  RX_BIT_CTRL_IN,
  TX_BIT_CTRL_IN,
  RST_DLY,
  BS_RST,
  SIMULATION
)
;
input txclk ;
input txclkdiv4 ;
input txclkdiv2 ;
output cpm_data ;
input [3:0] data_in ;
input txrst ;
input [1:0] txctrl ;
input T_in ;
output T_out ;
output [39:0] RX_BIT_CTRL_OUT ;
output [39:0] TX_BIT_CTRL_OUT ;
input [39:0] RX_BIT_CTRL_IN ;
input [39:0] TX_BIT_CTRL_IN ;
input RST_DLY ;
input BS_RST ;
input SIMULATION ;
wire txclk ;
wire txclkdiv4 ;
wire txclkdiv2 ;
wire cpm_data ;
wire txrst ;
wire T_in ;
wire T_out ;
wire RST_DLY ;
wire BS_RST ;
wire SIMULATION ;
wire [1:0] txctrl_sync;
wire [3:0] data_in_mux;
wire [3:0] data_to_serdes;
wire [7:0] Q;
wire [8:0] RX_CNTVALUEOUT;
wire [8:0] TX_CNTVALUEOUT;
wire [3:0] \tx_core.FF.data_in ;
wire [3:0] \training_bit_gen_inst.scrambler_out ;
wire [13:0] \training_bit_gen_inst.BIT[3].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[2].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[1].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[0].scrambler.shift ;
wire FIFO_EMPTY ;
wire FIFO_WRCLK_OUT ;
wire GND ;
wire \ar_tx_ctrl1.R0  ;
wire \ar_tx_ctrl0.R0  ;
wire N_1 ;
wire N_259_i ;
wire \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i  ;
wire T_outz ;
wire VCC ;
  GND GND_cZ (
	.G(GND)
);
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.D(N_259_i),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [0]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11] .INIT=1'b1;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R1_Z  (
	.Q(txctrl_sync[1]),
	.D(\ar_tx_ctrl1.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R0_Z  (
	.Q(\ar_tx_ctrl0.R0 ),
	.D(txctrl[0]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R0_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R1_Z  (
	.Q(txctrl_sync[0]),
	.D(\ar_tx_ctrl0.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R0_Z  (
	.Q(\ar_tx_ctrl1.R0 ),
	.D(txctrl[1]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R0_Z .INIT=1'b0;
//@226:23924
// @225:7866
  RXTX_BITSLICE \tx_core.bitslice_tx_data  (
	.FIFO_EMPTY(FIFO_EMPTY),
	.FIFO_WRCLK_OUT(FIFO_WRCLK_OUT),
	.O(cpm_data),
	.Q(Q[7:0]),
	.RX_BIT_CTRL_OUT(RX_BIT_CTRL_OUT[39:0]),
	.RX_CNTVALUEOUT(RX_CNTVALUEOUT[8:0]),
	.TX_BIT_CTRL_OUT(TX_BIT_CTRL_OUT[39:0]),
	.TX_CNTVALUEOUT(TX_CNTVALUEOUT[8:0]),
	.T_OUT(T_outz),
	.D({GND, GND, GND, GND, \tx_core.FF.data_in [3:0]}),
	.DATAIN(GND),
	.RX_BIT_CTRL_IN(RX_BIT_CTRL_IN[39:0]),
	.RX_EN_VTC(GND),
	.RX_RST(BS_RST),
	.RX_RST_DLY(RST_DLY),
	.T(GND),
	.TX_BIT_CTRL_IN(TX_BIT_CTRL_IN[39:0]),
	.TX_CE(GND),
	.TX_CLK(GND),
	.TX_CNTVALUEIN({GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_EN_VTC(GND),
	.TX_INC(GND),
	.TX_LOAD(GND),
	.TX_RST(BS_RST),
	.TX_RST_DLY(RST_DLY)
);
defparam \tx_core.bitslice_tx_data .ENABLE_PRE_EMPHASIS="TRUE";
defparam \tx_core.bitslice_tx_data .INIT=1'b0;
defparam \tx_core.bitslice_tx_data .RX_DATA_TYPE="DATA";
defparam \tx_core.bitslice_tx_data .RX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .RX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .RX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .RX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .RX_REFCLK_FREQUENCY=1200.0;
defparam \tx_core.bitslice_tx_data .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \tx_core.bitslice_tx_data .TBYTE_CTL="T";
defparam \tx_core.bitslice_tx_data .TX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .TX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .TX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .TX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .TX_REFCLK_FREQUENCY=1200.0;
//@225:6420
//@225:6420
//@225:6420
//@225:6420
// @225:5095
  LUT3 \training_bit_gen_inst.BIT[0].scrambler.N_259_i  (
	.I0(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.O(N_259_i)
);
defparam \training_bit_gen_inst.BIT[0].scrambler.N_259_i .INIT=8'h69;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.O(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.O(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.O(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[1]  (
	.I0(data_in[1]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[1])
);
defparam \un3_data_in_mux_cZ[1] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[0]  (
	.I0(data_in[0]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[0])
);
defparam \un3_data_in_mux_cZ[0] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[3]  (
	.I0(data_in[3]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[3])
);
defparam \un3_data_in_mux_cZ[3] .INIT=4'h2;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[2]  (
	.I0(data_in[2]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[2])
);
defparam \un3_data_in_mux_cZ[2] .INIT=4'h2;
  LUT4 \training_bit_gen_inst.data_to_serdes[3]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[3]),
	.O(data_to_serdes[3])
);
defparam \training_bit_gen_inst.data_to_serdes[3] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[2]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[2]),
	.O(data_to_serdes[2])
);
defparam \training_bit_gen_inst.data_to_serdes[2] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[1]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[1]),
	.O(data_to_serdes[1])
);
defparam \training_bit_gen_inst.data_to_serdes[1] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[0]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[0]),
	.O(data_to_serdes[0])
);
defparam \training_bit_gen_inst.data_to_serdes[0] .INIT=16'h4F40;
// @225:7828
  FD \tx_core.FF.data_in_Z[3]  (
	.Q(\tx_core.FF.data_in [3]),
	.D(data_to_serdes[3]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[2]  (
	.Q(\tx_core.FF.data_in [2]),
	.D(data_to_serdes[2]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[1]  (
	.Q(\tx_core.FF.data_in [1]),
	.D(data_to_serdes[1]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[0]  (
	.Q(\tx_core.FF.data_in [0]),
	.D(data_to_serdes[0]),
	.C(txclkdiv2)
);
  assign VCC = 1'b1;
assign T_out = GND;
endmodule /* hstdm_tx_Z2_12_FB1_uA */

(* n_hstdm_low_latency=1 , DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_tx_Z2_13_FB1_uA (
  txclk,
  txclkdiv4,
  txclkdiv2,
  cpm_data,
  data_in,
  txrst,
  txctrl,
  T_in,
  T_out,
  RX_BIT_CTRL_OUT,
  TX_BIT_CTRL_OUT,
  RX_BIT_CTRL_IN,
  TX_BIT_CTRL_IN,
  RST_DLY,
  BS_RST,
  SIMULATION
)
;
input txclk ;
input txclkdiv4 ;
input txclkdiv2 ;
output cpm_data ;
input [3:0] data_in ;
input txrst ;
input [1:0] txctrl ;
input T_in ;
output T_out ;
output [39:0] RX_BIT_CTRL_OUT ;
output [39:0] TX_BIT_CTRL_OUT ;
input [39:0] RX_BIT_CTRL_IN ;
input [39:0] TX_BIT_CTRL_IN ;
input RST_DLY ;
input BS_RST ;
input SIMULATION ;
wire txclk ;
wire txclkdiv4 ;
wire txclkdiv2 ;
wire cpm_data ;
wire txrst ;
wire T_in ;
wire T_out ;
wire RST_DLY ;
wire BS_RST ;
wire SIMULATION ;
wire [1:0] txctrl_sync;
wire [3:0] data_in_mux;
wire [3:0] data_to_serdes;
wire [7:0] Q;
wire [8:0] RX_CNTVALUEOUT;
wire [8:0] TX_CNTVALUEOUT;
wire [3:0] \tx_core.FF.data_in ;
wire [3:0] \training_bit_gen_inst.scrambler_out ;
wire [13:0] \training_bit_gen_inst.BIT[3].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[2].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[1].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[0].scrambler.shift ;
wire FIFO_EMPTY ;
wire FIFO_WRCLK_OUT ;
wire GND ;
wire \ar_tx_ctrl1.R0  ;
wire \ar_tx_ctrl0.R0  ;
wire N_1 ;
wire N_259_i ;
wire \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i  ;
wire T_outz ;
wire VCC ;
  GND GND_cZ (
	.G(GND)
);
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.D(N_259_i),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [0]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11] .INIT=1'b1;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R1_Z  (
	.Q(txctrl_sync[1]),
	.D(\ar_tx_ctrl1.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R0_Z  (
	.Q(\ar_tx_ctrl0.R0 ),
	.D(txctrl[0]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R0_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R1_Z  (
	.Q(txctrl_sync[0]),
	.D(\ar_tx_ctrl0.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R0_Z  (
	.Q(\ar_tx_ctrl1.R0 ),
	.D(txctrl[1]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R0_Z .INIT=1'b0;
//@226:23924
// @225:7866
  RXTX_BITSLICE \tx_core.bitslice_tx_data  (
	.FIFO_EMPTY(FIFO_EMPTY),
	.FIFO_WRCLK_OUT(FIFO_WRCLK_OUT),
	.O(cpm_data),
	.Q(Q[7:0]),
	.RX_BIT_CTRL_OUT(RX_BIT_CTRL_OUT[39:0]),
	.RX_CNTVALUEOUT(RX_CNTVALUEOUT[8:0]),
	.TX_BIT_CTRL_OUT(TX_BIT_CTRL_OUT[39:0]),
	.TX_CNTVALUEOUT(TX_CNTVALUEOUT[8:0]),
	.T_OUT(T_outz),
	.D({GND, GND, GND, GND, \tx_core.FF.data_in [3:0]}),
	.DATAIN(GND),
	.RX_BIT_CTRL_IN(RX_BIT_CTRL_IN[39:0]),
	.RX_EN_VTC(GND),
	.RX_RST(BS_RST),
	.RX_RST_DLY(RST_DLY),
	.T(GND),
	.TX_BIT_CTRL_IN(TX_BIT_CTRL_IN[39:0]),
	.TX_CE(GND),
	.TX_CLK(GND),
	.TX_CNTVALUEIN({GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_EN_VTC(GND),
	.TX_INC(GND),
	.TX_LOAD(GND),
	.TX_RST(BS_RST),
	.TX_RST_DLY(RST_DLY)
);
defparam \tx_core.bitslice_tx_data .ENABLE_PRE_EMPHASIS="TRUE";
defparam \tx_core.bitslice_tx_data .INIT=1'b0;
defparam \tx_core.bitslice_tx_data .RX_DATA_TYPE="DATA";
defparam \tx_core.bitslice_tx_data .RX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .RX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .RX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .RX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .RX_REFCLK_FREQUENCY=1200.0;
defparam \tx_core.bitslice_tx_data .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \tx_core.bitslice_tx_data .TBYTE_CTL="T";
defparam \tx_core.bitslice_tx_data .TX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .TX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .TX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .TX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .TX_REFCLK_FREQUENCY=1200.0;
//@225:6420
//@225:6420
//@225:6420
//@225:6420
// @225:5095
  LUT3 \training_bit_gen_inst.BIT[0].scrambler.N_259_i  (
	.I0(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.O(N_259_i)
);
defparam \training_bit_gen_inst.BIT[0].scrambler.N_259_i .INIT=8'h69;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.O(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.O(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.O(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[1]  (
	.I0(data_in[1]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[1])
);
defparam \un3_data_in_mux_cZ[1] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[0]  (
	.I0(data_in[0]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[0])
);
defparam \un3_data_in_mux_cZ[0] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[3]  (
	.I0(data_in[3]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[3])
);
defparam \un3_data_in_mux_cZ[3] .INIT=4'h2;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[2]  (
	.I0(data_in[2]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[2])
);
defparam \un3_data_in_mux_cZ[2] .INIT=4'h2;
  LUT4 \training_bit_gen_inst.data_to_serdes[3]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[3]),
	.O(data_to_serdes[3])
);
defparam \training_bit_gen_inst.data_to_serdes[3] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[2]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[2]),
	.O(data_to_serdes[2])
);
defparam \training_bit_gen_inst.data_to_serdes[2] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[1]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[1]),
	.O(data_to_serdes[1])
);
defparam \training_bit_gen_inst.data_to_serdes[1] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[0]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[0]),
	.O(data_to_serdes[0])
);
defparam \training_bit_gen_inst.data_to_serdes[0] .INIT=16'h4F40;
// @225:7828
  FD \tx_core.FF.data_in_Z[3]  (
	.Q(\tx_core.FF.data_in [3]),
	.D(data_to_serdes[3]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[2]  (
	.Q(\tx_core.FF.data_in [2]),
	.D(data_to_serdes[2]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[1]  (
	.Q(\tx_core.FF.data_in [1]),
	.D(data_to_serdes[1]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[0]  (
	.Q(\tx_core.FF.data_in [0]),
	.D(data_to_serdes[0]),
	.C(txclkdiv2)
);
  assign VCC = 1'b1;
assign T_out = GND;
endmodule /* hstdm_tx_Z2_13_FB1_uA */

(* n_hstdm_low_latency=1 , DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_tx_Z2_14_FB1_uA (
  txclk,
  txclkdiv4,
  txclkdiv2,
  cpm_data,
  data_in,
  txrst,
  txctrl,
  T_in,
  T_out,
  RX_BIT_CTRL_OUT,
  TX_BIT_CTRL_OUT,
  RX_BIT_CTRL_IN,
  TX_BIT_CTRL_IN,
  RST_DLY,
  BS_RST,
  SIMULATION
)
;
input txclk ;
input txclkdiv4 ;
input txclkdiv2 ;
output cpm_data ;
input [3:0] data_in ;
input txrst ;
input [1:0] txctrl ;
input T_in ;
output T_out ;
output [39:0] RX_BIT_CTRL_OUT ;
output [39:0] TX_BIT_CTRL_OUT ;
input [39:0] RX_BIT_CTRL_IN ;
input [39:0] TX_BIT_CTRL_IN ;
input RST_DLY ;
input BS_RST ;
input SIMULATION ;
wire txclk ;
wire txclkdiv4 ;
wire txclkdiv2 ;
wire cpm_data ;
wire txrst ;
wire T_in ;
wire T_out ;
wire RST_DLY ;
wire BS_RST ;
wire SIMULATION ;
wire [1:0] txctrl_sync;
wire [3:0] data_in_mux;
wire [3:0] data_to_serdes;
wire [7:0] Q;
wire [8:0] RX_CNTVALUEOUT;
wire [8:0] TX_CNTVALUEOUT;
wire [3:0] \tx_core.FF.data_in ;
wire [3:0] \training_bit_gen_inst.scrambler_out ;
wire [13:0] \training_bit_gen_inst.BIT[3].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[2].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[1].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[0].scrambler.shift ;
wire FIFO_EMPTY ;
wire FIFO_WRCLK_OUT ;
wire GND ;
wire \ar_tx_ctrl1.R0  ;
wire \ar_tx_ctrl0.R0  ;
wire N_1 ;
wire N_259_i ;
wire \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i  ;
wire T_outz ;
wire VCC ;
  GND GND_cZ (
	.G(GND)
);
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.D(N_259_i),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [0]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11] .INIT=1'b1;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R1_Z  (
	.Q(txctrl_sync[1]),
	.D(\ar_tx_ctrl1.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R0_Z  (
	.Q(\ar_tx_ctrl0.R0 ),
	.D(txctrl[0]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R0_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R1_Z  (
	.Q(txctrl_sync[0]),
	.D(\ar_tx_ctrl0.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R0_Z  (
	.Q(\ar_tx_ctrl1.R0 ),
	.D(txctrl[1]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R0_Z .INIT=1'b0;
//@226:23924
// @225:7866
  RXTX_BITSLICE \tx_core.bitslice_tx_data  (
	.FIFO_EMPTY(FIFO_EMPTY),
	.FIFO_WRCLK_OUT(FIFO_WRCLK_OUT),
	.O(cpm_data),
	.Q(Q[7:0]),
	.RX_BIT_CTRL_OUT(RX_BIT_CTRL_OUT[39:0]),
	.RX_CNTVALUEOUT(RX_CNTVALUEOUT[8:0]),
	.TX_BIT_CTRL_OUT(TX_BIT_CTRL_OUT[39:0]),
	.TX_CNTVALUEOUT(TX_CNTVALUEOUT[8:0]),
	.T_OUT(T_outz),
	.D({GND, GND, GND, GND, \tx_core.FF.data_in [3:0]}),
	.DATAIN(GND),
	.RX_BIT_CTRL_IN(RX_BIT_CTRL_IN[39:0]),
	.RX_EN_VTC(GND),
	.RX_RST(BS_RST),
	.RX_RST_DLY(RST_DLY),
	.T(GND),
	.TX_BIT_CTRL_IN(TX_BIT_CTRL_IN[39:0]),
	.TX_CE(GND),
	.TX_CLK(GND),
	.TX_CNTVALUEIN({GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_EN_VTC(GND),
	.TX_INC(GND),
	.TX_LOAD(GND),
	.TX_RST(BS_RST),
	.TX_RST_DLY(RST_DLY)
);
defparam \tx_core.bitslice_tx_data .ENABLE_PRE_EMPHASIS="TRUE";
defparam \tx_core.bitslice_tx_data .INIT=1'b0;
defparam \tx_core.bitslice_tx_data .RX_DATA_TYPE="DATA";
defparam \tx_core.bitslice_tx_data .RX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .RX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .RX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .RX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .RX_REFCLK_FREQUENCY=1200.0;
defparam \tx_core.bitslice_tx_data .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \tx_core.bitslice_tx_data .TBYTE_CTL="T";
defparam \tx_core.bitslice_tx_data .TX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .TX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .TX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .TX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .TX_REFCLK_FREQUENCY=1200.0;
//@225:6420
//@225:6420
//@225:6420
//@225:6420
// @225:5095
  LUT3 \training_bit_gen_inst.BIT[0].scrambler.N_259_i  (
	.I0(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.O(N_259_i)
);
defparam \training_bit_gen_inst.BIT[0].scrambler.N_259_i .INIT=8'h69;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.O(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.O(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.O(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[1]  (
	.I0(data_in[1]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[1])
);
defparam \un3_data_in_mux_cZ[1] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[0]  (
	.I0(data_in[0]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[0])
);
defparam \un3_data_in_mux_cZ[0] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[3]  (
	.I0(data_in[3]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[3])
);
defparam \un3_data_in_mux_cZ[3] .INIT=4'h2;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[2]  (
	.I0(data_in[2]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[2])
);
defparam \un3_data_in_mux_cZ[2] .INIT=4'h2;
  LUT4 \training_bit_gen_inst.data_to_serdes[3]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[3]),
	.O(data_to_serdes[3])
);
defparam \training_bit_gen_inst.data_to_serdes[3] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[2]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[2]),
	.O(data_to_serdes[2])
);
defparam \training_bit_gen_inst.data_to_serdes[2] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[1]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[1]),
	.O(data_to_serdes[1])
);
defparam \training_bit_gen_inst.data_to_serdes[1] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[0]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[0]),
	.O(data_to_serdes[0])
);
defparam \training_bit_gen_inst.data_to_serdes[0] .INIT=16'h4F40;
// @225:7828
  FD \tx_core.FF.data_in_Z[3]  (
	.Q(\tx_core.FF.data_in [3]),
	.D(data_to_serdes[3]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[2]  (
	.Q(\tx_core.FF.data_in [2]),
	.D(data_to_serdes[2]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[1]  (
	.Q(\tx_core.FF.data_in [1]),
	.D(data_to_serdes[1]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[0]  (
	.Q(\tx_core.FF.data_in [0]),
	.D(data_to_serdes[0]),
	.C(txclkdiv2)
);
  assign VCC = 1'b1;
assign T_out = GND;
endmodule /* hstdm_tx_Z2_14_FB1_uA */

(* n_hstdm_low_latency=1 , DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_tx_Z2_15_FB1_uA (
  txclk,
  txclkdiv4,
  txclkdiv2,
  cpm_data,
  data_in,
  txrst,
  txctrl,
  T_in,
  T_out,
  RX_BIT_CTRL_OUT,
  TX_BIT_CTRL_OUT,
  RX_BIT_CTRL_IN,
  TX_BIT_CTRL_IN,
  RST_DLY,
  BS_RST,
  SIMULATION
)
;
input txclk ;
input txclkdiv4 ;
input txclkdiv2 ;
output cpm_data ;
input [3:0] data_in ;
input txrst ;
input [1:0] txctrl ;
input T_in ;
output T_out ;
output [39:0] RX_BIT_CTRL_OUT ;
output [39:0] TX_BIT_CTRL_OUT ;
input [39:0] RX_BIT_CTRL_IN ;
input [39:0] TX_BIT_CTRL_IN ;
input RST_DLY ;
input BS_RST ;
input SIMULATION ;
wire txclk ;
wire txclkdiv4 ;
wire txclkdiv2 ;
wire cpm_data ;
wire txrst ;
wire T_in ;
wire T_out ;
wire RST_DLY ;
wire BS_RST ;
wire SIMULATION ;
wire [1:0] txctrl_sync;
wire [3:0] data_in_mux;
wire [3:0] data_to_serdes;
wire [7:0] Q;
wire [8:0] RX_CNTVALUEOUT;
wire [8:0] TX_CNTVALUEOUT;
wire [3:0] \tx_core.FF.data_in ;
wire [3:0] \training_bit_gen_inst.scrambler_out ;
wire [13:0] \training_bit_gen_inst.BIT[3].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[2].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[1].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[0].scrambler.shift ;
wire FIFO_EMPTY ;
wire FIFO_WRCLK_OUT ;
wire GND ;
wire \ar_tx_ctrl1.R0  ;
wire \ar_tx_ctrl0.R0  ;
wire N_1 ;
wire N_259_i ;
wire \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i  ;
wire T_outz ;
wire VCC ;
  GND GND_cZ (
	.G(GND)
);
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.D(N_259_i),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [0]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11] .INIT=1'b1;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R1_Z  (
	.Q(txctrl_sync[1]),
	.D(\ar_tx_ctrl1.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R0_Z  (
	.Q(\ar_tx_ctrl0.R0 ),
	.D(txctrl[0]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R0_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R1_Z  (
	.Q(txctrl_sync[0]),
	.D(\ar_tx_ctrl0.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R0_Z  (
	.Q(\ar_tx_ctrl1.R0 ),
	.D(txctrl[1]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R0_Z .INIT=1'b0;
//@226:23924
// @225:7866
  RXTX_BITSLICE \tx_core.bitslice_tx_data  (
	.FIFO_EMPTY(FIFO_EMPTY),
	.FIFO_WRCLK_OUT(FIFO_WRCLK_OUT),
	.O(cpm_data),
	.Q(Q[7:0]),
	.RX_BIT_CTRL_OUT(RX_BIT_CTRL_OUT[39:0]),
	.RX_CNTVALUEOUT(RX_CNTVALUEOUT[8:0]),
	.TX_BIT_CTRL_OUT(TX_BIT_CTRL_OUT[39:0]),
	.TX_CNTVALUEOUT(TX_CNTVALUEOUT[8:0]),
	.T_OUT(T_outz),
	.D({GND, GND, GND, GND, \tx_core.FF.data_in [3:0]}),
	.DATAIN(GND),
	.RX_BIT_CTRL_IN(RX_BIT_CTRL_IN[39:0]),
	.RX_EN_VTC(GND),
	.RX_RST(BS_RST),
	.RX_RST_DLY(RST_DLY),
	.T(GND),
	.TX_BIT_CTRL_IN(TX_BIT_CTRL_IN[39:0]),
	.TX_CE(GND),
	.TX_CLK(GND),
	.TX_CNTVALUEIN({GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_EN_VTC(GND),
	.TX_INC(GND),
	.TX_LOAD(GND),
	.TX_RST(BS_RST),
	.TX_RST_DLY(RST_DLY)
);
defparam \tx_core.bitslice_tx_data .ENABLE_PRE_EMPHASIS="TRUE";
defparam \tx_core.bitslice_tx_data .INIT=1'b0;
defparam \tx_core.bitslice_tx_data .RX_DATA_TYPE="DATA";
defparam \tx_core.bitslice_tx_data .RX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .RX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .RX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .RX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .RX_REFCLK_FREQUENCY=1200.0;
defparam \tx_core.bitslice_tx_data .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \tx_core.bitslice_tx_data .TBYTE_CTL="T";
defparam \tx_core.bitslice_tx_data .TX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .TX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .TX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .TX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .TX_REFCLK_FREQUENCY=1200.0;
//@225:6420
//@225:6420
//@225:6420
//@225:6420
// @225:5095
  LUT3 \training_bit_gen_inst.BIT[0].scrambler.N_259_i  (
	.I0(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.O(N_259_i)
);
defparam \training_bit_gen_inst.BIT[0].scrambler.N_259_i .INIT=8'h69;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.O(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.O(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.O(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[1]  (
	.I0(data_in[1]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[1])
);
defparam \un3_data_in_mux_cZ[1] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[0]  (
	.I0(data_in[0]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[0])
);
defparam \un3_data_in_mux_cZ[0] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[3]  (
	.I0(data_in[3]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[3])
);
defparam \un3_data_in_mux_cZ[3] .INIT=4'h2;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[2]  (
	.I0(data_in[2]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[2])
);
defparam \un3_data_in_mux_cZ[2] .INIT=4'h2;
  LUT4 \training_bit_gen_inst.data_to_serdes[3]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[3]),
	.O(data_to_serdes[3])
);
defparam \training_bit_gen_inst.data_to_serdes[3] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[2]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[2]),
	.O(data_to_serdes[2])
);
defparam \training_bit_gen_inst.data_to_serdes[2] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[1]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[1]),
	.O(data_to_serdes[1])
);
defparam \training_bit_gen_inst.data_to_serdes[1] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[0]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[0]),
	.O(data_to_serdes[0])
);
defparam \training_bit_gen_inst.data_to_serdes[0] .INIT=16'h4F40;
// @225:7828
  FD \tx_core.FF.data_in_Z[3]  (
	.Q(\tx_core.FF.data_in [3]),
	.D(data_to_serdes[3]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[2]  (
	.Q(\tx_core.FF.data_in [2]),
	.D(data_to_serdes[2]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[1]  (
	.Q(\tx_core.FF.data_in [1]),
	.D(data_to_serdes[1]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[0]  (
	.Q(\tx_core.FF.data_in [0]),
	.D(data_to_serdes[0]),
	.C(txclkdiv2)
);
  assign VCC = 1'b1;
assign T_out = GND;
endmodule /* hstdm_tx_Z2_15_FB1_uA */

(* n_hstdm_low_latency=1 , DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_tx_Z2_16_FB1_uA (
  txclk,
  txclkdiv4,
  txclkdiv2,
  cpm_data,
  data_in,
  txrst,
  txctrl,
  T_in,
  T_out,
  RX_BIT_CTRL_OUT,
  TX_BIT_CTRL_OUT,
  RX_BIT_CTRL_IN,
  TX_BIT_CTRL_IN,
  RST_DLY,
  BS_RST,
  SIMULATION
)
;
input txclk ;
input txclkdiv4 ;
input txclkdiv2 ;
output cpm_data ;
input [3:0] data_in ;
input txrst ;
input [1:0] txctrl ;
input T_in ;
output T_out ;
output [39:0] RX_BIT_CTRL_OUT ;
output [39:0] TX_BIT_CTRL_OUT ;
input [39:0] RX_BIT_CTRL_IN ;
input [39:0] TX_BIT_CTRL_IN ;
input RST_DLY ;
input BS_RST ;
input SIMULATION ;
wire txclk ;
wire txclkdiv4 ;
wire txclkdiv2 ;
wire cpm_data ;
wire txrst ;
wire T_in ;
wire T_out ;
wire RST_DLY ;
wire BS_RST ;
wire SIMULATION ;
wire [1:0] txctrl_sync;
wire [3:0] data_in_mux;
wire [3:0] data_to_serdes;
wire [7:0] Q;
wire [8:0] RX_CNTVALUEOUT;
wire [8:0] TX_CNTVALUEOUT;
wire [3:0] \tx_core.FF.data_in ;
wire [3:0] \training_bit_gen_inst.scrambler_out ;
wire [13:0] \training_bit_gen_inst.BIT[3].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[2].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[1].scrambler.shift ;
wire [13:0] \training_bit_gen_inst.BIT[0].scrambler.shift ;
wire FIFO_EMPTY ;
wire FIFO_WRCLK_OUT ;
wire GND ;
wire \ar_tx_ctrl1.R0  ;
wire \ar_tx_ctrl0.R0  ;
wire N_1 ;
wire N_259_i ;
wire \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i  ;
wire \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i  ;
wire T_outz ;
wire VCC ;
  GND GND_cZ (
	.G(GND)
);
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.D(N_259_i),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [0]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[0] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[0].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[0].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [1]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[0] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[6] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[7] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[8] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[11] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[12] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[1].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[1].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i ),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[0] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [0]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[1] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[2] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[4] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[5] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[6] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [6]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[7] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [7]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[8] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[10] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[11] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[2].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[2].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[12] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [12]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[13] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14]  (
	.Q(\training_bit_gen_inst.scrambler_out [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[14] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [1]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[2] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [2]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[3] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [3]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[4] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [5]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [4]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[5] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [8]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[9] .INIT=1'b0;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [9]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[10] .INIT=1'b1;
  FD \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11]  (
	.Q(\training_bit_gen_inst.BIT[3].scrambler.shift [11]),
	.D(\training_bit_gen_inst.BIT[3].scrambler.shift [10]),
	.C(txclkdiv2)
);
defparam \training_bit_gen_inst.BIT_Z[3].scrambler.shift[11] .INIT=1'b1;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R1_Z  (
	.Q(txctrl_sync[1]),
	.D(\ar_tx_ctrl1.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R0_Z  (
	.Q(\ar_tx_ctrl0.R0 ),
	.D(txctrl[0]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R0_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl0.R1_Z  (
	.Q(txctrl_sync[0]),
	.D(\ar_tx_ctrl0.R0 ),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl0.R1_Z .INIT=1'b0;
// @225:326
(* ASYNC_REG="TRUE" *)  FDC \ar_tx_ctrl1.R0_Z  (
	.Q(\ar_tx_ctrl1.R0 ),
	.D(txctrl[1]),
	.C(txclkdiv2),
	.CLR(txrst)
);
defparam \ar_tx_ctrl1.R0_Z .INIT=1'b0;
//@226:23924
// @225:7866
  RXTX_BITSLICE \tx_core.bitslice_tx_data  (
	.FIFO_EMPTY(FIFO_EMPTY),
	.FIFO_WRCLK_OUT(FIFO_WRCLK_OUT),
	.O(cpm_data),
	.Q(Q[7:0]),
	.RX_BIT_CTRL_OUT(RX_BIT_CTRL_OUT[39:0]),
	.RX_CNTVALUEOUT(RX_CNTVALUEOUT[8:0]),
	.TX_BIT_CTRL_OUT(TX_BIT_CTRL_OUT[39:0]),
	.TX_CNTVALUEOUT(TX_CNTVALUEOUT[8:0]),
	.T_OUT(T_outz),
	.D({GND, GND, GND, GND, \tx_core.FF.data_in [3:0]}),
	.DATAIN(GND),
	.RX_BIT_CTRL_IN(RX_BIT_CTRL_IN[39:0]),
	.RX_EN_VTC(GND),
	.RX_RST(BS_RST),
	.RX_RST_DLY(RST_DLY),
	.T(GND),
	.TX_BIT_CTRL_IN(TX_BIT_CTRL_IN[39:0]),
	.TX_CE(GND),
	.TX_CLK(GND),
	.TX_CNTVALUEIN({GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_EN_VTC(GND),
	.TX_INC(GND),
	.TX_LOAD(GND),
	.TX_RST(BS_RST),
	.TX_RST_DLY(RST_DLY)
);
defparam \tx_core.bitslice_tx_data .ENABLE_PRE_EMPHASIS="TRUE";
defparam \tx_core.bitslice_tx_data .INIT=1'b0;
defparam \tx_core.bitslice_tx_data .RX_DATA_TYPE="DATA";
defparam \tx_core.bitslice_tx_data .RX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .RX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .RX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .RX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .RX_REFCLK_FREQUENCY=1200.0;
defparam \tx_core.bitslice_tx_data .SIM_DEVICE="ULTRASCALE_PLUS";
defparam \tx_core.bitslice_tx_data .TBYTE_CTL="T";
defparam \tx_core.bitslice_tx_data .TX_DATA_WIDTH=4;
defparam \tx_core.bitslice_tx_data .TX_DELAY_FORMAT="COUNT";
defparam \tx_core.bitslice_tx_data .TX_DELAY_TYPE="FIXED";
defparam \tx_core.bitslice_tx_data .TX_DELAY_VALUE=0;
defparam \tx_core.bitslice_tx_data .TX_REFCLK_FREQUENCY=1200.0;
//@225:6420
//@225:6420
//@225:6420
//@225:6420
// @225:5095
  LUT3 \training_bit_gen_inst.BIT[0].scrambler.N_259_i  (
	.I0(\training_bit_gen_inst.BIT[0].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.O(N_259_i)
);
defparam \training_bit_gen_inst.BIT[0].scrambler.N_259_i .INIT=8'h69;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[3].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.O(\training_bit_gen_inst.BIT[3].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[3].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[2].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.O(\training_bit_gen_inst.BIT[2].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[2].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:5095
  LUT2 \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ  (
	.I0(\training_bit_gen_inst.BIT[1].scrambler.shift [13]),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.O(\training_bit_gen_inst.BIT[1].scrambler.feedback_i_i )
);
defparam \training_bit_gen_inst.BIT[1].scrambler.feedback_i_i_cZ .INIT=4'h9;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[1]  (
	.I0(data_in[1]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[1])
);
defparam \un3_data_in_mux_cZ[1] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[0]  (
	.I0(data_in[0]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[0])
);
defparam \un3_data_in_mux_cZ[0] .INIT=4'hE;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[3]  (
	.I0(data_in[3]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[3])
);
defparam \un3_data_in_mux_cZ[3] .INIT=4'h2;
// @225:6421
  LUT2 \un3_data_in_mux_cZ[2]  (
	.I0(data_in[2]),
	.I1(txctrl_sync[1]),
	.O(data_in_mux[2])
);
defparam \un3_data_in_mux_cZ[2] .INIT=4'h2;
  LUT4 \training_bit_gen_inst.data_to_serdes[3]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [3]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[3]),
	.O(data_to_serdes[3])
);
defparam \training_bit_gen_inst.data_to_serdes[3] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[2]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [2]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[2]),
	.O(data_to_serdes[2])
);
defparam \training_bit_gen_inst.data_to_serdes[2] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[1]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [1]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[1]),
	.O(data_to_serdes[1])
);
defparam \training_bit_gen_inst.data_to_serdes[1] .INIT=16'hEFE0;
  LUT4 \training_bit_gen_inst.data_to_serdes[0]  (
	.I0(SIMULATION),
	.I1(\training_bit_gen_inst.scrambler_out [0]),
	.I2(txctrl_sync[0]),
	.I3(data_in_mux[0]),
	.O(data_to_serdes[0])
);
defparam \training_bit_gen_inst.data_to_serdes[0] .INIT=16'h4F40;
// @225:7828
  FD \tx_core.FF.data_in_Z[3]  (
	.Q(\tx_core.FF.data_in [3]),
	.D(data_to_serdes[3]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[2]  (
	.Q(\tx_core.FF.data_in [2]),
	.D(data_to_serdes[2]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[1]  (
	.Q(\tx_core.FF.data_in [1]),
	.D(data_to_serdes[1]),
	.C(txclkdiv2)
);
// @225:7828
  FD \tx_core.FF.data_in_Z[0]  (
	.Q(\tx_core.FF.data_in [0]),
	.D(data_to_serdes[0]),
	.C(txclkdiv2)
);
  assign VCC = 1'b1;
assign T_out = GND;
endmodule /* hstdm_tx_Z2_16_FB1_uA */

(* DONT_TOUCH="TRUE" , haps_ip_type="hstdm" *)module hstdm_memory_Z1_FB1_uA (
  umr_clk,
  umr_reset,
  hstdm_reset_in,
  infopipe_clk,
  infopipe_empty_out,
  infopipe_data_in,
  req_done_out,
  system_capim_data_in,
  system_capim_wr_in,
  system_capim_rd_in,
  system_capim_enable_in,
  system_capim_data_out,
  SIMULATION
)
;
input umr_clk ;
input umr_reset ;
input hstdm_reset_in ;
input infopipe_clk ;
output infopipe_empty_out ;
input [3:0] infopipe_data_in ;
output req_done_out ;
input [31:0] system_capim_data_in ;
input system_capim_wr_in ;
input system_capim_rd_in ;
input system_capim_enable_in ;
output [31:0] system_capim_data_out ;
input SIMULATION ;
wire umr_clk ;
wire umr_reset ;
wire hstdm_reset_in ;
wire infopipe_clk ;
wire infopipe_empty_out ;
wire req_done_out ;
wire system_capim_wr_in ;
wire system_capim_rd_in ;
wire system_capim_enable_in ;
wire SIMULATION ;
wire [5:0] mem_waddr;
wire [31:0] mem_wdata;
wire [31:0] data_received;
wire [15:2] address_received;
wire [1:0] state;
wire [2:0] st_ncnt;
wire [7:0] debug_cnt_ack_rt_flag;
wire [3:0] mem_waddr_7;
wire [3:0] \infopipe_rcv_inst.empty_bit ;
wire [3:0] \infopipe_rcv_inst.ready_bit ;
wire [1:0] \infopipe_rcv_inst.BIT[3].RCV.state ;
wire [3:1] \infopipe_rcv_inst.BIT[3].RCV.rcvcnt ;
wire [1:0] \infopipe_rcv_inst.BIT[2].RCV.state ;
wire [3:1] \infopipe_rcv_inst.BIT[2].RCV.rcvcnt ;
wire [1:0] \infopipe_rcv_inst.BIT[1].RCV.state ;
wire [3:1] \infopipe_rcv_inst.BIT[1].RCV.rcvcnt ;
wire [1:0] \infopipe_rcv_inst.BIT[0].RCV.state ;
wire [3:1] \infopipe_rcv_inst.BIT[0].RCV.rcvcnt ;
wire [1:0] \memory_core.state_rd ;
wire [31:0] \memory_core.memory_out ;
wire [27:1] \memory_core.addr_of_data_out ;
wire [27:0] \memory_core.rd_addr_to_memory ;
wire [31:0] \memory_core.data_out_wire ;
wire [1:0] memory_inst_memory_inst_0_0_DOUTPADOUTP;
wire [1:0] memory_inst_memory_inst_0_0_DOUTPBDOUTP;
wire [5:5] data_out_wire_f0_0_a2_1;
wire [5:5] data_out_wire_f0_0_o2_1;
wire [7:0] debug_cnt_ack_rt_flag_qxu;
wire [6:0] debug_cnt_ack_rt_flag_cry;
wire [7:0] debug_cnt_ack_rt_flag_s;
wire [27:0] \memory_core.rd_addr_to_memory_qxu ;
wire [27:0] \memory_core.rd_addr_to_memory_i ;
wire [26:0] \memory_core.rd_addr_to_memory_cry ;
wire [27:0] \memory_core.rd_addr_to_memory_s ;
wire [4:4] mem_waddr_7_i_o4_0;
wire [4:4] mem_waddr_7_i_o4_2;
wire [5:5] \memory_core.data_out_wire_f0_0_a2_1_0 ;
wire [5:5] \memory_core.data_out_wire_f0_0_a2_1_2 ;
wire [5:5] \memory_core.data_out_wire_f0_0_a2_1_1_3 ;
wire [5:5] \memory_core.data_out_wire_f0_0_a2_1_1_4 ;
wire [1:1] \memory_core.state_rd_4_0_e ;
wire [2:2] rd_addr_to_memory_cry_O;
wire [2:2] debug_cnt_ack_rt_flag_cry_O;
wire [0:0] addr_of_data_out_cry_3_O;
wire [3:3] addr_of_data_out_s_27_CO;
wire mem_we ;
wire infopipe_reset ;
wire infopipe_data_saved ;
wire mem_we_0_sqmuxa ;
wire \infopipe_rcv_inst.BIT[3].RCV.infopipe_data_local  ;
wire un1_rcvcnt_c4_2 ;
wire CO0_0 ;
wire \infopipe_rcv_inst.BIT[2].RCV.infopipe_data_local  ;
wire un1_rcvcnt_c4_1 ;
wire CO0_1 ;
wire \infopipe_rcv_inst.BIT[1].RCV.infopipe_data_local  ;
wire un1_rcvcnt_c4_0 ;
wire CO0_2 ;
wire \infopipe_rcv_inst.BIT[0].RCV.infopipe_data_local  ;
wire un1_rcvcnt_c4 ;
wire CO0_3 ;
wire \ar_infopipe_reset.R0  ;
wire VCC ;
wire \memory_core.mem_rd_en  ;
wire \memory_core.mem_en  ;
wire \memory_core.data_out_1_sqmuxa  ;
wire N_5 ;
wire debug_cnt_ack_rt_flage ;
wire \memory_core.rd_addr_to_memorye  ;
wire \infopipe_rcv_inst.infopipe_empty_out_2  ;
wire infopipe_data_savedc ;
wire N_267 ;
wire N_264 ;
wire \state_5_1_0_.N_3  ;
wire \memory_core.addr_of_data_out_cry_0  ;
wire \memory_core.addr_of_data_out_cry_1  ;
wire \memory_core.addr_of_data_out_cry_2  ;
wire \memory_core.addr_of_data_out_cry_3  ;
wire \memory_core.addr_of_data_out_cry_4  ;
wire \memory_core.addr_of_data_out_cry_5  ;
wire \memory_core.addr_of_data_out_cry_6  ;
wire \memory_core.addr_of_data_out_cry_7  ;
wire \memory_core.addr_of_data_out_cry_8  ;
wire \memory_core.addr_of_data_out_cry_9  ;
wire \memory_core.addr_of_data_out_cry_10  ;
wire \memory_core.addr_of_data_out_cry_11  ;
wire \memory_core.addr_of_data_out_cry_12  ;
wire \memory_core.addr_of_data_out_cry_13  ;
wire \memory_core.addr_of_data_out_cry_14  ;
wire \memory_core.addr_of_data_out_cry_15  ;
wire \memory_core.addr_of_data_out_cry_16  ;
wire \memory_core.addr_of_data_out_cry_17  ;
wire \memory_core.addr_of_data_out_cry_18  ;
wire \memory_core.addr_of_data_out_cry_19  ;
wire \memory_core.addr_of_data_out_cry_20  ;
wire \memory_core.addr_of_data_out_cry_21  ;
wire \memory_core.addr_of_data_out_cry_22  ;
wire \memory_core.addr_of_data_out_cry_23  ;
wire \memory_core.addr_of_data_out_cry_24  ;
wire \memory_core.addr_of_data_out_cry_25  ;
wire \memory_core.addr_of_data_out_cry_26  ;
wire infopipe_reset_i ;
wire CO0_0_i ;
wire \infopipe_rcv_inst.BIT[3].RCV.rcvcnt_1_sqmuxa_i  ;
wire N_67_i ;
wire N_65_i ;
wire N_63_i ;
wire N_61_i ;
wire N_59_i ;
wire N_57_i ;
wire N_55_i ;
wire N_53_i ;
wire N_51_i ;
wire N_49_i ;
wire N_47_i ;
wire N_45_i ;
wire N_43_i ;
wire N_41_i ;
wire N_39_i ;
wire N_37_i ;
wire N_243_i ;
wire N_242_i ;
wire N_29_i ;
wire N_27_i ;
wire N_25_i ;
wire N_23_i ;
wire N_21_i ;
wire N_251_i ;
wire N_250_i ;
wire N_249_i ;
wire N_77_i ;
wire N_248_i ;
wire N_247_i ;
wire N_246_i ;
wire N_245_i ;
wire N_6_mux_i ;
wire \memory_core.rd_addr_to_memory_scalar  ;
wire \infopipe_rcv_inst.BIT[3].RCV.data_ready_outc  ;
wire \infopipe_rcv_inst.BIT[3].RCV.infopipe_empty_outc  ;
wire \infopipe_rcv_inst.BIT[0].RCV.data_ready_outc  ;
wire \infopipe_rcv_inst.BIT[0].RCV.infopipe_empty_outc  ;
wire \infopipe_rcv_inst.BIT[1].RCV.data_ready_outc  ;
wire \infopipe_rcv_inst.BIT[1].RCV.infopipe_empty_outc  ;
wire \infopipe_rcv_inst.BIT[2].RCV.data_ready_outc  ;
wire \infopipe_rcv_inst.BIT[2].RCV.infopipe_empty_outc  ;
wire infopipe_data_ready ;
wire mem_we_0_sqmuxa_0_a2_0 ;
wire mem_we_0_sqmuxa_0_a2_2 ;
wire mem_we_0_sqmuxa_0_a2_0_2 ;
wire mem_we_0_sqmuxa_0_a2_0_3 ;
wire mem_we_0_sqmuxa_0_a2_0_4 ;
wire mem_we_0_sqmuxa_0_a2_0_5 ;
wire mem_we_0_sqmuxa_0_a2_0_6 ;
wire mem_we_0_sqmuxa_0_a2_0_2_3 ;
wire mem_we_0_sqmuxa_0_a2_0_10 ;
wire mem_we_0 ;
wire \memory_core.rd_addr_to_memory_cry_cy  ;
wire debug_cnt_ack_rt_flag_cry_cy ;
wire state_0 ;
wire \infopipe_rcv_inst.BIT[3].RCV.SUM1_0  ;
wire \infopipe_rcv_inst.BIT[3].RCV.SUM3  ;
wire \infopipe_rcv_inst.BIT[3].RCV.SUM2_0  ;
wire m1_e ;
wire m1_e_0 ;
wire m1_e_1 ;
wire m1_e_2 ;
wire m1_e_3 ;
wire m1_e_4 ;
wire \memory_core.state_rd_1_sqmuxa_0_e  ;
wire N_13_i_0_e ;
wire N_239_i_0_e ;
wire N_9_i_0_e ;
wire NC0 ;
wire NC1 ;
wire NC2 ;
wire NC3 ;
wire NC4 ;
wire NC5 ;
wire NC6 ;
wire NC7 ;
wire NC8 ;
wire NC9 ;
wire NC10 ;
wire NC11 ;
wire NC12 ;
wire NC13 ;
wire NC14 ;
wire NC15 ;
wire NC16 ;
wire NC17 ;
wire NC18 ;
wire NC19 ;
wire NC20 ;
wire NC21 ;
wire NC22 ;
wire NC23 ;
wire NC24 ;
wire NC25 ;
wire NC26 ;
wire NC27 ;
wire NC28 ;
wire NC29 ;
wire NC30 ;
wire NC31 ;
wire NC32 ;
wire NC33 ;
wire NC34 ;
wire NC35 ;
wire NC36 ;
wire NC37 ;
wire NC38 ;
wire NC39 ;
wire NC40 ;
wire NC41 ;
wire NC42 ;
wire NC43 ;
wire NC44 ;
wire NC45 ;
wire NC46 ;
wire NC47 ;
wire NC48 ;
wire NC49 ;
wire NC50 ;
wire NC51 ;
wire GND ;
wire \infopipe_rcv_inst.BIT[0].RCV.rcvcntc_2_e_0  ;
wire \infopipe_rcv_inst.BIT[0].RCV.rcvcntc_1_e_0  ;
wire \infopipe_rcv_inst.BIT[0].RCV.rcvcntc_0_e_0  ;
wire \infopipe_rcv_inst.BIT[0].RCV.rcvcntc_e_0  ;
wire \infopipe_rcv_inst.BIT[0].RCV.statec_0_i_e_0  ;
wire \infopipe_rcv_inst.BIT[0].RCV.statec_i_e_0  ;
wire \infopipe_rcv_inst.BIT[3].RCV.statec_0_i_e_0  ;
wire \infopipe_rcv_inst.BIT[3].RCV.statec_i_e_0  ;
wire \infopipe_rcv_inst.BIT[2].RCV.rcvcntc_2_e_0  ;
wire \infopipe_rcv_inst.BIT[2].RCV.rcvcntc_1_e_0  ;
wire \infopipe_rcv_inst.BIT[2].RCV.rcvcntc_0_e_0  ;
wire \infopipe_rcv_inst.BIT[2].RCV.rcvcntc_e_0  ;
wire \infopipe_rcv_inst.BIT[2].RCV.statec_0_i_e_0  ;
wire \infopipe_rcv_inst.BIT[2].RCV.statec_i_e_0  ;
wire \infopipe_rcv_inst.BIT[1].RCV.rcvcntc_2_e_0  ;
wire \infopipe_rcv_inst.BIT[1].RCV.rcvcntc_1_e_0  ;
wire \infopipe_rcv_inst.BIT[1].RCV.rcvcntc_0_e_0  ;
wire \infopipe_rcv_inst.BIT[1].RCV.rcvcntc_e_0  ;
wire \infopipe_rcv_inst.BIT[1].RCV.statec_0_i_e_0  ;
wire \infopipe_rcv_inst.BIT[1].RCV.statec_i_e_0  ;
wire \memory_core.mem_en_e_e_0  ;
  GND GND_cZ (
	.G(GND)
);
  VCC VCC_cZ (
	.P(VCC)
);
  LUT2 m1_e_4_cZ (
	.I0(infopipe_reset),
	.I1(mem_waddr_7[0]),
	.O(m1_e_4)
);
defparam m1_e_4_cZ.INIT=4'h4;
  LUT2 m1_e_3_cZ (
	.I0(infopipe_reset),
	.I1(mem_waddr_7[1]),
	.O(m1_e_3)
);
defparam m1_e_3_cZ.INIT=4'h4;
  LUT3 m1_e_2_cZ (
	.I0(N_264),
	.I1(address_received[2]),
	.I2(infopipe_reset),
	.O(m1_e_2)
);
defparam m1_e_2_cZ.INIT=8'h08;
  LUT2 m1_e_1_cZ (
	.I0(infopipe_reset),
	.I1(mem_waddr_7[3]),
	.O(m1_e_1)
);
defparam m1_e_1_cZ.INIT=4'h4;
  LUT3 m1_e_0_cZ (
	.I0(N_264),
	.I1(address_received[4]),
	.I2(infopipe_reset),
	.O(m1_e_0)
);
defparam m1_e_0_cZ.INIT=8'h08;
  LUT3 m1_e_cZ (
	.I0(N_264),
	.I1(address_received[5]),
	.I2(infopipe_reset),
	.O(m1_e)
);
defparam m1_e_cZ.INIT=8'h08;
// @225:2541
  LUT2 \infopipe_rcv_inst.BIT[3].RCV.SUM2_0_cZ  (
	.I0(\infopipe_rcv_inst.BIT[3].RCV.rcvcnt [1]),
	.I1(\infopipe_rcv_inst.BIT[3].RCV.rcvcnt [2]),
	.O(\infopipe_rcv_inst.BIT[3].RCV.SUM2_0 )
);
defparam \infopipe_rcv_inst.BIT[3].RCV.SUM2_0_cZ .INIT=4'h6;
// @225:2541
  LUT3 \infopipe_rcv_inst.BIT[3].RCV.SUM3_cZ  (
	.I0(CO0_0),
	.I1(\infopipe_rcv_inst.BIT[3].RCV.rcvcnt [1]),
	.I2(\infopipe_rcv_inst.BIT[3].RCV.rcvcnt [3]),
	.O(\infopipe_rcv_inst.BIT[3].RCV.SUM3 )
);
defparam \infopipe_rcv_inst.BIT[3].RCV.SUM3_cZ .INIT=8'h78;
// @225:2541
  LUT1 \infopipe_rcv_inst.BIT[3].RCV.SUM1_0_cZ  (
	.I0(\infopipe_rcv_inst.BIT[3].RCV.rcvcnt [1]),
	.O(\infopipe_rcv_inst.BIT[3].RCV.SUM1_0 )
);
defparam \infopipe_rcv_inst.BIT[3].RCV.SUM1_0_cZ .INIT=2'h1;
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[3].RCV.rcvcnt[1]  (
	.Q(\infopipe_rcv_inst.BIT[3].RCV.rcvcnt [1]),
	.D(\infopipe_rcv_inst.BIT[3].RCV.SUM1_0 ),
	.C(infopipe_clk),
	.R(\infopipe_rcv_inst.BIT[3].RCV.rcvcnt_1_sqmuxa_i ),
	.CE(CO0_0)
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[3].RCV.rcvcnt[3]  (
	.Q(\infopipe_rcv_inst.BIT[3].RCV.rcvcnt [3]),
	.D(\infopipe_rcv_inst.BIT[3].RCV.SUM3 ),
	.C(infopipe_clk),
	.R(\infopipe_rcv_inst.BIT[3].RCV.rcvcnt_1_sqmuxa_i ),
	.CE(\infopipe_rcv_inst.BIT[3].RCV.rcvcnt [2])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[3].RCV.rcvcnt[2]  (
	.Q(\infopipe_rcv_inst.BIT[3].RCV.rcvcnt [2]),
	.D(\infopipe_rcv_inst.BIT[3].RCV.SUM2_0 ),
	.C(infopipe_clk),
	.R(\infopipe_rcv_inst.BIT[3].RCV.rcvcnt_1_sqmuxa_i ),
	.CE(CO0_0)
);
  FDE \mem_waddr_Z[5]  (
	.Q(mem_waddr[5]),
	.D(m1_e),
	.C(infopipe_clk),
	.CE(N_6_mux_i)
);
defparam \mem_waddr_Z[5] .INIT=1'b0;
  FDE \mem_waddr_Z[4]  (
	.Q(mem_waddr[4]),
	.D(m1_e_0),
	.C(infopipe_clk),
	.CE(N_6_mux_i)
);
defparam \mem_waddr_Z[4] .INIT=1'b0;
  FDE \mem_waddr_Z[3]  (
	.Q(mem_waddr[3]),
	.D(m1_e_1),
	.C(infopipe_clk),
	.CE(N_6_mux_i)
);
defparam \mem_waddr_Z[3] .INIT=1'b0;
  FDE \mem_waddr_Z[2]  (
	.Q(mem_waddr[2]),
	.D(m1_e_2),
	.C(infopipe_clk),
	.CE(N_6_mux_i)
);
defparam \mem_waddr_Z[2] .INIT=1'b0;
  FDE \mem_waddr_Z[1]  (
	.Q(mem_waddr[1]),
	.D(m1_e_3),
	.C(infopipe_clk),
	.CE(N_6_mux_i)
);
defparam \mem_waddr_Z[1] .INIT=1'b0;
  FDE \mem_waddr_Z[0]  (
	.Q(mem_waddr[0]),
	.D(m1_e_4),
	.C(infopipe_clk),
	.CE(N_6_mux_i)
);
defparam \mem_waddr_Z[0] .INIT=1'b0;
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[1].RCV.state[0]  (
	.Q(\infopipe_rcv_inst.BIT[1].RCV.state [0]),
	.D(\infopipe_rcv_inst.BIT[1].RCV.statec_i_e_0 ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[1].RCV.state[1]  (
	.Q(\infopipe_rcv_inst.BIT[1].RCV.state [1]),
	.D(\infopipe_rcv_inst.BIT[1].RCV.statec_0_i_e_0 ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[1].RCV.rcvcnt[0]  (
	.Q(CO0_2),
	.D(\infopipe_rcv_inst.BIT[1].RCV.rcvcntc_e_0 ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[1].RCV.rcvcnt[1]  (
	.Q(\infopipe_rcv_inst.BIT[1].RCV.rcvcnt [1]),
	.D(\infopipe_rcv_inst.BIT[1].RCV.rcvcntc_0_e_0 ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[1].RCV.rcvcnt[2]  (
	.Q(\infopipe_rcv_inst.BIT[1].RCV.rcvcnt [2]),
	.D(\infopipe_rcv_inst.BIT[1].RCV.rcvcntc_1_e_0 ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[1].RCV.rcvcnt[3]  (
	.Q(\infopipe_rcv_inst.BIT[1].RCV.rcvcnt [3]),
	.D(\infopipe_rcv_inst.BIT[1].RCV.rcvcntc_2_e_0 ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[2].RCV.state[0]  (
	.Q(\infopipe_rcv_inst.BIT[2].RCV.state [0]),
	.D(\infopipe_rcv_inst.BIT[2].RCV.statec_i_e_0 ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[2].RCV.state[1]  (
	.Q(\infopipe_rcv_inst.BIT[2].RCV.state [1]),
	.D(\infopipe_rcv_inst.BIT[2].RCV.statec_0_i_e_0 ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[2].RCV.rcvcnt[0]  (
	.Q(CO0_1),
	.D(\infopipe_rcv_inst.BIT[2].RCV.rcvcntc_e_0 ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[2].RCV.rcvcnt[1]  (
	.Q(\infopipe_rcv_inst.BIT[2].RCV.rcvcnt [1]),
	.D(\infopipe_rcv_inst.BIT[2].RCV.rcvcntc_0_e_0 ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[2].RCV.rcvcnt[2]  (
	.Q(\infopipe_rcv_inst.BIT[2].RCV.rcvcnt [2]),
	.D(\infopipe_rcv_inst.BIT[2].RCV.rcvcntc_1_e_0 ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[2].RCV.rcvcnt[3]  (
	.Q(\infopipe_rcv_inst.BIT[2].RCV.rcvcnt [3]),
	.D(\infopipe_rcv_inst.BIT[2].RCV.rcvcntc_2_e_0 ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[3].RCV.state[0]  (
	.Q(\infopipe_rcv_inst.BIT[3].RCV.state [0]),
	.D(\infopipe_rcv_inst.BIT[3].RCV.statec_i_e_0 ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[3].RCV.state[1]  (
	.Q(\infopipe_rcv_inst.BIT[3].RCV.state [1]),
	.D(\infopipe_rcv_inst.BIT[3].RCV.statec_0_i_e_0 ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[0].RCV.state[0]  (
	.Q(\infopipe_rcv_inst.BIT[0].RCV.state [0]),
	.D(\infopipe_rcv_inst.BIT[0].RCV.statec_i_e_0 ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[0].RCV.state[1]  (
	.Q(\infopipe_rcv_inst.BIT[0].RCV.state [1]),
	.D(\infopipe_rcv_inst.BIT[0].RCV.statec_0_i_e_0 ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[0].RCV.rcvcnt[0]  (
	.Q(CO0_3),
	.D(\infopipe_rcv_inst.BIT[0].RCV.rcvcntc_e_0 ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[0].RCV.rcvcnt[1]  (
	.Q(\infopipe_rcv_inst.BIT[0].RCV.rcvcnt [1]),
	.D(\infopipe_rcv_inst.BIT[0].RCV.rcvcntc_0_e_0 ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[0].RCV.rcvcnt[2]  (
	.Q(\infopipe_rcv_inst.BIT[0].RCV.rcvcnt [2]),
	.D(\infopipe_rcv_inst.BIT[0].RCV.rcvcntc_1_e_0 ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[0].RCV.rcvcnt[3]  (
	.Q(\infopipe_rcv_inst.BIT[0].RCV.rcvcnt [3]),
	.D(\infopipe_rcv_inst.BIT[0].RCV.rcvcntc_2_e_0 ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
  LUT6 \memory_core.mem_en_e_e_0_cZ  (
	.I0(\memory_core.mem_en ),
	.I1(\memory_core.state_rd [0]),
	.I2(\memory_core.state_rd [1]),
	.I3(system_capim_enable_in),
	.I4(system_capim_wr_in),
	.I5(umr_reset),
	.O(\memory_core.mem_en_e_e_0 )
);
defparam \memory_core.mem_en_e_e_0_cZ .INIT=64'h00000000FFA3A3A3;
  LUT4 \infopipe_rcv_inst.BIT[1].RCV.statec_i_e_0_cZ  (
	.I0(\infopipe_rcv_inst.BIT[1].RCV.infopipe_data_local ),
	.I1(\infopipe_rcv_inst.BIT[1].RCV.state [0]),
	.I2(\infopipe_rcv_inst.BIT[1].RCV.state [1]),
	.I3(un1_rcvcnt_c4_0),
	.O(\infopipe_rcv_inst.BIT[1].RCV.statec_i_e_0 )
);
defparam \infopipe_rcv_inst.BIT[1].RCV.statec_i_e_0_cZ .INIT=16'h0E02;
  LUT4 \infopipe_rcv_inst.BIT[1].RCV.statec_0_i_e_0_cZ  (
	.I0(infopipe_data_saved),
	.I1(\infopipe_rcv_inst.BIT[1].RCV.state [0]),
	.I2(\infopipe_rcv_inst.BIT[1].RCV.state [1]),
	.I3(un1_rcvcnt_c4_0),
	.O(\infopipe_rcv_inst.BIT[1].RCV.statec_0_i_e_0 )
);
defparam \infopipe_rcv_inst.BIT[1].RCV.statec_0_i_e_0_cZ .INIT=16'hD0DC;
  LUT4 \infopipe_rcv_inst.BIT[1].RCV.rcvcntc_e_0_cZ  (
	.I0(CO0_2),
	.I1(\infopipe_rcv_inst.BIT[1].RCV.rcvcnt [2]),
	.I2(\infopipe_rcv_inst.BIT[1].RCV.rcvcnt [3]),
	.I3(\infopipe_rcv_inst.BIT[1].RCV.state [0]),
	.O(\infopipe_rcv_inst.BIT[1].RCV.rcvcntc_e_0 )
);
defparam \infopipe_rcv_inst.BIT[1].RCV.rcvcntc_e_0_cZ .INIT=16'h1500;
  LUT5 \infopipe_rcv_inst.BIT[1].RCV.rcvcntc_0_e_0_cZ  (
	.I0(CO0_2),
	.I1(\infopipe_rcv_inst.BIT[1].RCV.rcvcnt [1]),
	.I2(\infopipe_rcv_inst.BIT[1].RCV.rcvcnt [2]),
	.I3(\infopipe_rcv_inst.BIT[1].RCV.rcvcnt [3]),
	.I4(\infopipe_rcv_inst.BIT[1].RCV.state [0]),
	.O(\infopipe_rcv_inst.BIT[1].RCV.rcvcntc_0_e_0 )
);
defparam \infopipe_rcv_inst.BIT[1].RCV.rcvcntc_0_e_0_cZ .INIT=32'h06660000;
  LUT5 \infopipe_rcv_inst.BIT[1].RCV.rcvcntc_1_e_0_cZ  (
	.I0(CO0_2),
	.I1(\infopipe_rcv_inst.BIT[1].RCV.rcvcnt [1]),
	.I2(\infopipe_rcv_inst.BIT[1].RCV.rcvcnt [2]),
	.I3(\infopipe_rcv_inst.BIT[1].RCV.rcvcnt [3]),
	.I4(\infopipe_rcv_inst.BIT[1].RCV.state [0]),
	.O(\infopipe_rcv_inst.BIT[1].RCV.rcvcntc_1_e_0 )
);
defparam \infopipe_rcv_inst.BIT[1].RCV.rcvcntc_1_e_0_cZ .INIT=32'h00780000;
  LUT5 \infopipe_rcv_inst.BIT[1].RCV.rcvcntc_2_e_0_cZ  (
	.I0(CO0_2),
	.I1(\infopipe_rcv_inst.BIT[1].RCV.rcvcnt [1]),
	.I2(\infopipe_rcv_inst.BIT[1].RCV.rcvcnt [2]),
	.I3(\infopipe_rcv_inst.BIT[1].RCV.rcvcnt [3]),
	.I4(\infopipe_rcv_inst.BIT[1].RCV.state [0]),
	.O(\infopipe_rcv_inst.BIT[1].RCV.rcvcntc_2_e_0 )
);
defparam \infopipe_rcv_inst.BIT[1].RCV.rcvcntc_2_e_0_cZ .INIT=32'h07800000;
  LUT4 \infopipe_rcv_inst.BIT[2].RCV.statec_i_e_0_cZ  (
	.I0(\infopipe_rcv_inst.BIT[2].RCV.infopipe_data_local ),
	.I1(\infopipe_rcv_inst.BIT[2].RCV.state [0]),
	.I2(\infopipe_rcv_inst.BIT[2].RCV.state [1]),
	.I3(un1_rcvcnt_c4_1),
	.O(\infopipe_rcv_inst.BIT[2].RCV.statec_i_e_0 )
);
defparam \infopipe_rcv_inst.BIT[2].RCV.statec_i_e_0_cZ .INIT=16'h0E02;
  LUT4 \infopipe_rcv_inst.BIT[2].RCV.statec_0_i_e_0_cZ  (
	.I0(infopipe_data_saved),
	.I1(\infopipe_rcv_inst.BIT[2].RCV.state [0]),
	.I2(\infopipe_rcv_inst.BIT[2].RCV.state [1]),
	.I3(un1_rcvcnt_c4_1),
	.O(\infopipe_rcv_inst.BIT[2].RCV.statec_0_i_e_0 )
);
defparam \infopipe_rcv_inst.BIT[2].RCV.statec_0_i_e_0_cZ .INIT=16'hD0DC;
  LUT4 \infopipe_rcv_inst.BIT[2].RCV.rcvcntc_e_0_cZ  (
	.I0(CO0_1),
	.I1(\infopipe_rcv_inst.BIT[2].RCV.rcvcnt [2]),
	.I2(\infopipe_rcv_inst.BIT[2].RCV.rcvcnt [3]),
	.I3(\infopipe_rcv_inst.BIT[2].RCV.state [0]),
	.O(\infopipe_rcv_inst.BIT[2].RCV.rcvcntc_e_0 )
);
defparam \infopipe_rcv_inst.BIT[2].RCV.rcvcntc_e_0_cZ .INIT=16'h1500;
  LUT5 \infopipe_rcv_inst.BIT[2].RCV.rcvcntc_0_e_0_cZ  (
	.I0(CO0_1),
	.I1(\infopipe_rcv_inst.BIT[2].RCV.rcvcnt [1]),
	.I2(\infopipe_rcv_inst.BIT[2].RCV.rcvcnt [2]),
	.I3(\infopipe_rcv_inst.BIT[2].RCV.rcvcnt [3]),
	.I4(\infopipe_rcv_inst.BIT[2].RCV.state [0]),
	.O(\infopipe_rcv_inst.BIT[2].RCV.rcvcntc_0_e_0 )
);
defparam \infopipe_rcv_inst.BIT[2].RCV.rcvcntc_0_e_0_cZ .INIT=32'h06660000;
  LUT5 \infopipe_rcv_inst.BIT[2].RCV.rcvcntc_1_e_0_cZ  (
	.I0(CO0_1),
	.I1(\infopipe_rcv_inst.BIT[2].RCV.rcvcnt [1]),
	.I2(\infopipe_rcv_inst.BIT[2].RCV.rcvcnt [2]),
	.I3(\infopipe_rcv_inst.BIT[2].RCV.rcvcnt [3]),
	.I4(\infopipe_rcv_inst.BIT[2].RCV.state [0]),
	.O(\infopipe_rcv_inst.BIT[2].RCV.rcvcntc_1_e_0 )
);
defparam \infopipe_rcv_inst.BIT[2].RCV.rcvcntc_1_e_0_cZ .INIT=32'h00780000;
  LUT5 \infopipe_rcv_inst.BIT[2].RCV.rcvcntc_2_e_0_cZ  (
	.I0(CO0_1),
	.I1(\infopipe_rcv_inst.BIT[2].RCV.rcvcnt [1]),
	.I2(\infopipe_rcv_inst.BIT[2].RCV.rcvcnt [2]),
	.I3(\infopipe_rcv_inst.BIT[2].RCV.rcvcnt [3]),
	.I4(\infopipe_rcv_inst.BIT[2].RCV.state [0]),
	.O(\infopipe_rcv_inst.BIT[2].RCV.rcvcntc_2_e_0 )
);
defparam \infopipe_rcv_inst.BIT[2].RCV.rcvcntc_2_e_0_cZ .INIT=32'h07800000;
  LUT4 \infopipe_rcv_inst.BIT[3].RCV.statec_i_e_0_cZ  (
	.I0(\infopipe_rcv_inst.BIT[3].RCV.infopipe_data_local ),
	.I1(\infopipe_rcv_inst.BIT[3].RCV.state [0]),
	.I2(\infopipe_rcv_inst.BIT[3].RCV.state [1]),
	.I3(un1_rcvcnt_c4_2),
	.O(\infopipe_rcv_inst.BIT[3].RCV.statec_i_e_0 )
);
defparam \infopipe_rcv_inst.BIT[3].RCV.statec_i_e_0_cZ .INIT=16'h0E02;
  LUT4 \infopipe_rcv_inst.BIT[3].RCV.statec_0_i_e_0_cZ  (
	.I0(infopipe_data_saved),
	.I1(\infopipe_rcv_inst.BIT[3].RCV.state [0]),
	.I2(\infopipe_rcv_inst.BIT[3].RCV.state [1]),
	.I3(un1_rcvcnt_c4_2),
	.O(\infopipe_rcv_inst.BIT[3].RCV.statec_0_i_e_0 )
);
defparam \infopipe_rcv_inst.BIT[3].RCV.statec_0_i_e_0_cZ .INIT=16'hD0DC;
  LUT4 \infopipe_rcv_inst.BIT[0].RCV.statec_i_e_0_cZ  (
	.I0(\infopipe_rcv_inst.BIT[0].RCV.infopipe_data_local ),
	.I1(\infopipe_rcv_inst.BIT[0].RCV.state [0]),
	.I2(\infopipe_rcv_inst.BIT[0].RCV.state [1]),
	.I3(un1_rcvcnt_c4),
	.O(\infopipe_rcv_inst.BIT[0].RCV.statec_i_e_0 )
);
defparam \infopipe_rcv_inst.BIT[0].RCV.statec_i_e_0_cZ .INIT=16'h0E02;
  LUT4 \infopipe_rcv_inst.BIT[0].RCV.statec_0_i_e_0_cZ  (
	.I0(infopipe_data_saved),
	.I1(\infopipe_rcv_inst.BIT[0].RCV.state [0]),
	.I2(\infopipe_rcv_inst.BIT[0].RCV.state [1]),
	.I3(un1_rcvcnt_c4),
	.O(\infopipe_rcv_inst.BIT[0].RCV.statec_0_i_e_0 )
);
defparam \infopipe_rcv_inst.BIT[0].RCV.statec_0_i_e_0_cZ .INIT=16'hD0DC;
  LUT4 \infopipe_rcv_inst.BIT[0].RCV.rcvcntc_e_0_cZ  (
	.I0(CO0_3),
	.I1(\infopipe_rcv_inst.BIT[0].RCV.rcvcnt [2]),
	.I2(\infopipe_rcv_inst.BIT[0].RCV.rcvcnt [3]),
	.I3(\infopipe_rcv_inst.BIT[0].RCV.state [0]),
	.O(\infopipe_rcv_inst.BIT[0].RCV.rcvcntc_e_0 )
);
defparam \infopipe_rcv_inst.BIT[0].RCV.rcvcntc_e_0_cZ .INIT=16'h1500;
  LUT5 \infopipe_rcv_inst.BIT[0].RCV.rcvcntc_0_e_0_cZ  (
	.I0(CO0_3),
	.I1(\infopipe_rcv_inst.BIT[0].RCV.rcvcnt [1]),
	.I2(\infopipe_rcv_inst.BIT[0].RCV.rcvcnt [2]),
	.I3(\infopipe_rcv_inst.BIT[0].RCV.rcvcnt [3]),
	.I4(\infopipe_rcv_inst.BIT[0].RCV.state [0]),
	.O(\infopipe_rcv_inst.BIT[0].RCV.rcvcntc_0_e_0 )
);
defparam \infopipe_rcv_inst.BIT[0].RCV.rcvcntc_0_e_0_cZ .INIT=32'h06660000;
  LUT5 \infopipe_rcv_inst.BIT[0].RCV.rcvcntc_1_e_0_cZ  (
	.I0(CO0_3),
	.I1(\infopipe_rcv_inst.BIT[0].RCV.rcvcnt [1]),
	.I2(\infopipe_rcv_inst.BIT[0].RCV.rcvcnt [2]),
	.I3(\infopipe_rcv_inst.BIT[0].RCV.rcvcnt [3]),
	.I4(\infopipe_rcv_inst.BIT[0].RCV.state [0]),
	.O(\infopipe_rcv_inst.BIT[0].RCV.rcvcntc_1_e_0 )
);
defparam \infopipe_rcv_inst.BIT[0].RCV.rcvcntc_1_e_0_cZ .INIT=32'h00780000;
  LUT5 \infopipe_rcv_inst.BIT[0].RCV.rcvcntc_2_e_0_cZ  (
	.I0(CO0_3),
	.I1(\infopipe_rcv_inst.BIT[0].RCV.rcvcnt [1]),
	.I2(\infopipe_rcv_inst.BIT[0].RCV.rcvcnt [2]),
	.I3(\infopipe_rcv_inst.BIT[0].RCV.rcvcnt [3]),
	.I4(\infopipe_rcv_inst.BIT[0].RCV.state [0]),
	.O(\infopipe_rcv_inst.BIT[0].RCV.rcvcntc_2_e_0 )
);
defparam \infopipe_rcv_inst.BIT[0].RCV.rcvcntc_2_e_0_cZ .INIT=32'h07800000;
  FD \st_ncnt_Z[0]  (
	.Q(st_ncnt[0]),
	.D(N_9_i_0_e),
	.C(infopipe_clk)
);
defparam \st_ncnt_Z[0] .INIT=1'b0;
  FD \st_ncnt_Z[1]  (
	.Q(st_ncnt[1]),
	.D(N_239_i_0_e),
	.C(infopipe_clk)
);
defparam \st_ncnt_Z[1] .INIT=1'b0;
  FD \st_ncnt_Z[2]  (
	.Q(st_ncnt[2]),
	.D(N_13_i_0_e),
	.C(infopipe_clk)
);
defparam \st_ncnt_Z[2] .INIT=1'b0;
// @221:473
  INV \memory_core.rd_addr_to_memory_191_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [0]),
	.O(\memory_core.rd_addr_to_memory_i [0])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_192_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [1]),
	.O(\memory_core.rd_addr_to_memory_i [1])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_193_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [2]),
	.O(\memory_core.rd_addr_to_memory_i [2])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_194_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [3]),
	.O(\memory_core.rd_addr_to_memory_i [3])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_195_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [4]),
	.O(\memory_core.rd_addr_to_memory_i [4])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_196_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [5]),
	.O(\memory_core.rd_addr_to_memory_i [5])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_197_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [6]),
	.O(\memory_core.rd_addr_to_memory_i [6])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_198_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [7]),
	.O(\memory_core.rd_addr_to_memory_i [7])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_199_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [8]),
	.O(\memory_core.rd_addr_to_memory_i [8])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_200_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [9]),
	.O(\memory_core.rd_addr_to_memory_i [9])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_201_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [10]),
	.O(\memory_core.rd_addr_to_memory_i [10])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_202_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [11]),
	.O(\memory_core.rd_addr_to_memory_i [11])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_203_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [12]),
	.O(\memory_core.rd_addr_to_memory_i [12])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_204_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [13]),
	.O(\memory_core.rd_addr_to_memory_i [13])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_205_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [14]),
	.O(\memory_core.rd_addr_to_memory_i [14])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_206_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [15]),
	.O(\memory_core.rd_addr_to_memory_i [15])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_207_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [16]),
	.O(\memory_core.rd_addr_to_memory_i [16])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_208_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [17]),
	.O(\memory_core.rd_addr_to_memory_i [17])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_209_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [18]),
	.O(\memory_core.rd_addr_to_memory_i [18])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_210_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [19]),
	.O(\memory_core.rd_addr_to_memory_i [19])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_211_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [20]),
	.O(\memory_core.rd_addr_to_memory_i [20])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_212_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [21]),
	.O(\memory_core.rd_addr_to_memory_i [21])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_213_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [22]),
	.O(\memory_core.rd_addr_to_memory_i [22])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_214_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [23]),
	.O(\memory_core.rd_addr_to_memory_i [23])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_215_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [24]),
	.O(\memory_core.rd_addr_to_memory_i [24])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_216_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [25]),
	.O(\memory_core.rd_addr_to_memory_i [25])
);
// @221:473
  INV \memory_core.rd_addr_to_memory_217_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [26]),
	.O(\memory_core.rd_addr_to_memory_i [26])
);
// @225:2522
  INV \ar_infopipe_reset.infopipe_reset_i  (
	.I(infopipe_reset),
	.O(infopipe_reset_i)
);
// @221:473
  INV \memory_core.rd_addr_to_memory_218_memory_core.rd_addr_to_memory_1  (
	.I(\memory_core.rd_addr_to_memory [27]),
	.O(\memory_core.rd_addr_to_memory_i [27])
);
// @225:2536
  INV \infopipe_rcv_inst.BIT[3].RCV.CO0_0_i.O  (
	.I(CO0_0),
	.O(CO0_0_i)
);
// @225:326
(* ASYNC_REG="TRUE" *)  FDP \ar_infopipe_reset.R0_Z  (
	.Q(\ar_infopipe_reset.R0 ),
	.D(GND),
	.C(infopipe_clk),
	.PRE(hstdm_reset_in)
);
defparam \ar_infopipe_reset.R0_Z .INIT=1'b1;
// @225:326
(* ASYNC_REG="TRUE" *)  FDP \ar_infopipe_reset.R1_Z  (
	.Q(infopipe_reset),
	.D(\ar_infopipe_reset.R0 ),
	.C(infopipe_clk),
	.PRE(hstdm_reset_in)
);
defparam \ar_infopipe_reset.R1_Z .INIT=1'b1;
// @225:2590
  FDR \infopipe_rcv_inst.infopipe_empty_out_Z  (
	.Q(infopipe_empty_out),
	.D(\infopipe_rcv_inst.infopipe_empty_out_2 ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[3].RCV.data_out[0]  (
	.Q(data_received[3]),
	.D(\infopipe_rcv_inst.BIT[3].RCV.infopipe_data_local ),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[3].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[3].RCV.data_out[1]  (
	.Q(data_received[7]),
	.D(data_received[3]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[3].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[3].RCV.data_out[2]  (
	.Q(data_received[11]),
	.D(data_received[7]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[3].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[3].RCV.data_out[3]  (
	.Q(data_received[15]),
	.D(data_received[11]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[3].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[3].RCV.data_out[4]  (
	.Q(data_received[19]),
	.D(data_received[15]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[3].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[3].RCV.data_out[5]  (
	.Q(data_received[23]),
	.D(data_received[19]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[3].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[3].RCV.data_out[6]  (
	.Q(data_received[27]),
	.D(data_received[23]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[3].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[3].RCV.data_out[7]  (
	.Q(data_received[31]),
	.D(data_received[27]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[3].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[3].RCV.data_out[8]  (
	.Q(mem_waddr_7[3]),
	.D(data_received[31]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[3].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[3].RCV.data_out[9]  (
	.Q(address_received[7]),
	.D(mem_waddr_7[3]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[3].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[3].RCV.data_out[10]  (
	.Q(address_received[11]),
	.D(address_received[7]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[3].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[3].RCV.data_out[11]  (
	.Q(address_received[15]),
	.D(address_received[11]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[3].RCV.state [0])
);
// @225:2502
  FDR \infopipe_rcv_inst.BIT_Z[3].RCV.infopipe_data_local  (
	.Q(\infopipe_rcv_inst.BIT[3].RCV.infopipe_data_local ),
	.D(infopipe_data_in[3]),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[2].RCV.data_out[0]  (
	.Q(data_received[2]),
	.D(\infopipe_rcv_inst.BIT[2].RCV.infopipe_data_local ),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[2].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[2].RCV.data_out[1]  (
	.Q(data_received[6]),
	.D(data_received[2]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[2].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[2].RCV.data_out[2]  (
	.Q(data_received[10]),
	.D(data_received[6]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[2].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[2].RCV.data_out[3]  (
	.Q(data_received[14]),
	.D(data_received[10]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[2].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[2].RCV.data_out[4]  (
	.Q(data_received[18]),
	.D(data_received[14]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[2].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[2].RCV.data_out[5]  (
	.Q(data_received[22]),
	.D(data_received[18]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[2].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[2].RCV.data_out[6]  (
	.Q(data_received[26]),
	.D(data_received[22]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[2].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[2].RCV.data_out[7]  (
	.Q(data_received[30]),
	.D(data_received[26]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[2].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[2].RCV.data_out[8]  (
	.Q(address_received[2]),
	.D(data_received[30]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[2].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[2].RCV.data_out[9]  (
	.Q(address_received[6]),
	.D(address_received[2]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[2].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[2].RCV.data_out[10]  (
	.Q(address_received[10]),
	.D(address_received[6]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[2].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[2].RCV.data_out[11]  (
	.Q(address_received[14]),
	.D(address_received[10]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[2].RCV.state [0])
);
// @225:2502
  FDR \infopipe_rcv_inst.BIT_Z[2].RCV.infopipe_data_local  (
	.Q(\infopipe_rcv_inst.BIT[2].RCV.infopipe_data_local ),
	.D(infopipe_data_in[2]),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[1].RCV.data_out[0]  (
	.Q(data_received[1]),
	.D(\infopipe_rcv_inst.BIT[1].RCV.infopipe_data_local ),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[1].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[1].RCV.data_out[1]  (
	.Q(data_received[5]),
	.D(data_received[1]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[1].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[1].RCV.data_out[2]  (
	.Q(data_received[9]),
	.D(data_received[5]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[1].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[1].RCV.data_out[3]  (
	.Q(data_received[13]),
	.D(data_received[9]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[1].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[1].RCV.data_out[4]  (
	.Q(data_received[17]),
	.D(data_received[13]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[1].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[1].RCV.data_out[5]  (
	.Q(data_received[21]),
	.D(data_received[17]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[1].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[1].RCV.data_out[6]  (
	.Q(data_received[25]),
	.D(data_received[21]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[1].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[1].RCV.data_out[7]  (
	.Q(data_received[29]),
	.D(data_received[25]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[1].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[1].RCV.data_out[8]  (
	.Q(mem_waddr_7[1]),
	.D(data_received[29]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[1].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[1].RCV.data_out[9]  (
	.Q(address_received[5]),
	.D(mem_waddr_7[1]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[1].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[1].RCV.data_out[10]  (
	.Q(address_received[9]),
	.D(address_received[5]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[1].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[1].RCV.data_out[11]  (
	.Q(address_received[13]),
	.D(address_received[9]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[1].RCV.state [0])
);
// @225:2502
  FDR \infopipe_rcv_inst.BIT_Z[1].RCV.infopipe_data_local  (
	.Q(\infopipe_rcv_inst.BIT[1].RCV.infopipe_data_local ),
	.D(infopipe_data_in[1]),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[0].RCV.data_out[0]  (
	.Q(data_received[0]),
	.D(\infopipe_rcv_inst.BIT[0].RCV.infopipe_data_local ),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[0].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[0].RCV.data_out[1]  (
	.Q(data_received[4]),
	.D(data_received[0]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[0].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[0].RCV.data_out[2]  (
	.Q(data_received[8]),
	.D(data_received[4]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[0].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[0].RCV.data_out[3]  (
	.Q(data_received[12]),
	.D(data_received[8]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[0].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[0].RCV.data_out[4]  (
	.Q(data_received[16]),
	.D(data_received[12]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[0].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[0].RCV.data_out[5]  (
	.Q(data_received[20]),
	.D(data_received[16]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[0].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[0].RCV.data_out[6]  (
	.Q(data_received[24]),
	.D(data_received[20]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[0].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[0].RCV.data_out[7]  (
	.Q(data_received[28]),
	.D(data_received[24]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[0].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[0].RCV.data_out[8]  (
	.Q(mem_waddr_7[0]),
	.D(data_received[28]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[0].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[0].RCV.data_out[9]  (
	.Q(address_received[4]),
	.D(mem_waddr_7[0]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[0].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[0].RCV.data_out[10]  (
	.Q(address_received[8]),
	.D(address_received[4]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[0].RCV.state [0])
);
// @225:2514
  FDRE \infopipe_rcv_inst.BIT_Z[0].RCV.data_out[11]  (
	.Q(address_received[12]),
	.D(address_received[8]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(\infopipe_rcv_inst.BIT[0].RCV.state [0])
);
// @225:2502
  FDR \infopipe_rcv_inst.BIT_Z[0].RCV.infopipe_data_local  (
	.Q(\infopipe_rcv_inst.BIT[0].RCV.infopipe_data_local ),
	.D(infopipe_data_in[0]),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2311
  FDRE \mem_wdata_Z[31]  (
	.Q(mem_wdata[31]),
	.D(N_245_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[30]  (
	.Q(mem_wdata[30]),
	.D(N_246_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[29]  (
	.Q(mem_wdata[29]),
	.D(N_247_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[28]  (
	.Q(mem_wdata[28]),
	.D(N_248_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[27]  (
	.Q(mem_wdata[27]),
	.D(N_77_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[26]  (
	.Q(mem_wdata[26]),
	.D(N_249_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[25]  (
	.Q(mem_wdata[25]),
	.D(N_250_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[24]  (
	.Q(mem_wdata[24]),
	.D(N_251_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[23]  (
	.Q(mem_wdata[23]),
	.D(N_21_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[22]  (
	.Q(mem_wdata[22]),
	.D(N_23_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[21]  (
	.Q(mem_wdata[21]),
	.D(N_25_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[20]  (
	.Q(mem_wdata[20]),
	.D(N_27_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[19]  (
	.Q(mem_wdata[19]),
	.D(N_29_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[18]  (
	.Q(mem_wdata[18]),
	.D(N_242_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[17]  (
	.Q(mem_wdata[17]),
	.D(N_243_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[16]  (
	.Q(mem_wdata[16]),
	.D(data_received[16]),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[15]  (
	.Q(mem_wdata[15]),
	.D(N_37_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[14]  (
	.Q(mem_wdata[14]),
	.D(N_39_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[13]  (
	.Q(mem_wdata[13]),
	.D(N_41_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[12]  (
	.Q(mem_wdata[12]),
	.D(N_43_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[11]  (
	.Q(mem_wdata[11]),
	.D(N_45_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[10]  (
	.Q(mem_wdata[10]),
	.D(N_47_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[9]  (
	.Q(mem_wdata[9]),
	.D(N_49_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[8]  (
	.Q(mem_wdata[8]),
	.D(N_51_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[7]  (
	.Q(mem_wdata[7]),
	.D(N_53_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[6]  (
	.Q(mem_wdata[6]),
	.D(N_55_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[5]  (
	.Q(mem_wdata[5]),
	.D(N_57_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[4]  (
	.Q(mem_wdata[4]),
	.D(N_59_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[3]  (
	.Q(mem_wdata[3]),
	.D(N_61_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[2]  (
	.Q(mem_wdata[2]),
	.D(N_63_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[1]  (
	.Q(mem_wdata[1]),
	.D(N_65_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @225:2311
  FDRE \mem_wdata_Z[0]  (
	.Q(mem_wdata[0]),
	.D(N_67_i),
	.C(infopipe_clk),
	.R(infopipe_reset),
	.CE(mem_we_0_sqmuxa)
);
// @221:427
  RAMB18E2 \memory_core.memory_inst_memory_inst_0_0  (
	.CASDOUTA({NC31, NC30, NC29, NC28, NC27, NC26, NC25, NC24, NC23, NC22, NC21, NC20, NC19, NC18, NC17, NC16}),
	.CASDOUTB({NC47, NC46, NC45, NC44, NC43, NC42, NC41, NC40, NC39, NC38, NC37, NC36, NC35, NC34, NC33, NC32}),
	.DOUTADOUT(\memory_core.memory_out [15:0]),
	.DOUTBDOUT(\memory_core.memory_out [31:16]),
	.CASDOUTPA({NC49, NC48}),
	.CASDOUTPB({NC51, NC50}),
	.DOUTPADOUTP(memory_inst_memory_inst_0_0_DOUTPADOUTP[1:0]),
	.DOUTPBDOUTP(memory_inst_memory_inst_0_0_DOUTPBDOUTP[1:0]),
	.ADDRENA(VCC),
	.ADDRENB(VCC),
	.CASDIMUXA(GND),
	.CASDIMUXB(GND),
	.CASDOMUXA(GND),
	.CASDOMUXB(GND),
	.CASOREGIMUXA(GND),
	.CASOREGIMUXB(GND),
	.CASDOMUXEN_A(GND),
	.CASDOMUXEN_B(GND),
	.CASOREGIMUXEN_A(GND),
	.CASOREGIMUXEN_B(GND),
	.CLKARDCLK(umr_clk),
	.CLKBWRCLK(infopipe_clk),
	.ENARDEN(\memory_core.mem_rd_en ),
	.ENBWREN(VCC),
	.REGCEAREGCE(GND),
	.REGCEB(GND),
	.RSTRAMARSTRAM(GND),
	.RSTRAMB(GND),
	.RSTREGARSTREG(GND),
	.RSTREGB(GND),
	.SLEEP(GND),
	.ADDRARDADDR({GND, GND, GND, \memory_core.rd_addr_to_memory [5:0], VCC, VCC, VCC, VCC, VCC}),
	.ADDRBWRADDR({GND, GND, GND, mem_waddr[5:0], VCC, VCC, VCC, VCC, VCC}),
	.CASDINA({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.CASDINB({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.DINADIN(mem_wdata[15:0]),
	.DINBDIN(mem_wdata[31:16]),
	.CASDINPA({GND, GND}),
	.CASDINPB({GND, GND}),
	.DINPADINP({GND, GND}),
	.DINPBDINP({GND, GND}),
	.WEA({GND, GND}),
	.WEBWE({mem_we, mem_we, mem_we, mem_we})
);
defparam \memory_core.memory_inst_memory_inst_0_0 .DOA_REG=0;
defparam \memory_core.memory_inst_memory_inst_0_0 .DOB_REG=0;
defparam \memory_core.memory_inst_memory_inst_0_0 .READ_WIDTH_A=36;
defparam \memory_core.memory_inst_memory_inst_0_0 .READ_WIDTH_B=18;
defparam \memory_core.memory_inst_memory_inst_0_0 .SRVAL_A=18'h00000;
defparam \memory_core.memory_inst_memory_inst_0_0 .SRVAL_B=18'h00000;
defparam \memory_core.memory_inst_memory_inst_0_0 .WRITE_MODE_A="READ_FIRST";
defparam \memory_core.memory_inst_memory_inst_0_0 .WRITE_MODE_B="READ_FIRST";
defparam \memory_core.memory_inst_memory_inst_0_0 .WRITE_WIDTH_A=18;
defparam \memory_core.memory_inst_memory_inst_0_0 .WRITE_WIDTH_B=36;
defparam \memory_core.memory_inst_memory_inst_0_0 .INIT_00=256'h00000003000000290005000500000010000100000000000CABCF000000000029;
defparam \memory_core.memory_inst_memory_inst_0_0 .INIT_01=256'h302E31312E30332E3230323000000003000000004000000000000001C0000008;
defparam \memory_core.memory_inst_memory_inst_0_0 .INIT_02=256'hFFFF0004FFFF04B0000200470000000000000000FFFF0002FFFF04B000010045;
defparam \memory_core.memory_inst_memory_inst_0_0 .INIT_03=256'h0004003D0000000000000000FFFF0004FFFF04B00003003C0000000000000000;
defparam \memory_core.memory_inst_memory_inst_0_0 .INIT_04=256'h00000000FFFF0004FFFF04B00005003E0000000000000000FFFF0004FFFF04B0;
defparam \memory_core.memory_inst_memory_inst_0_0 .RSTREG_PRIORITY_A="REGCE";
defparam \memory_core.memory_inst_memory_inst_0_0 .RSTREG_PRIORITY_B="REGCE";
defparam \memory_core.memory_inst_memory_inst_0_0 .IS_CLKARDCLK_INVERTED=1'b0;
defparam \memory_core.memory_inst_memory_inst_0_0 .IS_CLKBWRCLK_INVERTED=1'b0;
// @225:2311
  FDR \state_Z[1]  (
	.Q(state[1]),
	.D(\state_5_1_0_.N_3 ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2311
  FDR infopipe_data_saved_Z (
	.Q(infopipe_data_saved),
	.D(infopipe_data_savedc),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[3].RCV.data_ready_out  (
	.Q(\infopipe_rcv_inst.ready_bit [3]),
	.D(\infopipe_rcv_inst.BIT[3].RCV.data_ready_outc ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[3].RCV.infopipe_empty_out  (
	.Q(\infopipe_rcv_inst.empty_bit [3]),
	.D(\infopipe_rcv_inst.BIT[3].RCV.infopipe_empty_outc ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[0].RCV.data_ready_out  (
	.Q(\infopipe_rcv_inst.ready_bit [0]),
	.D(\infopipe_rcv_inst.BIT[0].RCV.data_ready_outc ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[0].RCV.infopipe_empty_out  (
	.Q(\infopipe_rcv_inst.empty_bit [0]),
	.D(\infopipe_rcv_inst.BIT[0].RCV.infopipe_empty_outc ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[1].RCV.data_ready_out  (
	.Q(\infopipe_rcv_inst.ready_bit [1]),
	.D(\infopipe_rcv_inst.BIT[1].RCV.data_ready_outc ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[1].RCV.infopipe_empty_out  (
	.Q(\infopipe_rcv_inst.empty_bit [1]),
	.D(\infopipe_rcv_inst.BIT[1].RCV.infopipe_empty_outc ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[2].RCV.data_ready_out  (
	.Q(\infopipe_rcv_inst.ready_bit [2]),
	.D(\infopipe_rcv_inst.BIT[2].RCV.data_ready_outc ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[2].RCV.infopipe_empty_out  (
	.Q(\infopipe_rcv_inst.empty_bit [2]),
	.D(\infopipe_rcv_inst.BIT[2].RCV.infopipe_empty_outc ),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
  LUT3 mem_we_e (
	.I0(state[0]),
	.I1(mem_we),
	.I2(mem_we_0_sqmuxa),
	.O(mem_we_0)
);
defparam mem_we_e.INIT=8'hF8;
// @225:2311
  LUT2 N_6_mux_i_cZ (
	.I0(infopipe_reset),
	.I1(mem_we_0_sqmuxa),
	.O(N_6_mux_i)
);
defparam N_6_mux_i_cZ.INIT=4'hE;
// @225:2311
  LUT5 N_245_i_cZ (
	.I0(debug_cnt_ack_rt_flag[7]),
	.I1(address_received[5]),
	.I2(data_received[31]),
	.I3(address_received[4]),
	.I4(N_264),
	.O(N_245_i)
);
defparam N_245_i_cZ.INIT=32'hF0F0B8F0;
// @225:2311
  LUT5 N_246_i_cZ (
	.I0(data_received[30]),
	.I1(address_received[5]),
	.I2(debug_cnt_ack_rt_flag[6]),
	.I3(address_received[4]),
	.I4(N_264),
	.O(N_246_i)
);
defparam N_246_i_cZ.INIT=32'hAAAAE2AA;
// @225:2311
  LUT5 N_247_i_cZ (
	.I0(data_received[29]),
	.I1(address_received[5]),
	.I2(debug_cnt_ack_rt_flag[5]),
	.I3(address_received[4]),
	.I4(N_264),
	.O(N_247_i)
);
defparam N_247_i_cZ.INIT=32'hAAAAE2AA;
// @225:2311
  LUT5 N_248_i_cZ (
	.I0(debug_cnt_ack_rt_flag[4]),
	.I1(address_received[5]),
	.I2(data_received[28]),
	.I3(address_received[4]),
	.I4(N_264),
	.O(N_248_i)
);
defparam N_248_i_cZ.INIT=32'hF0F0B8F0;
// @225:2311
  LUT5 N_77_i_cZ (
	.I0(data_received[27]),
	.I1(debug_cnt_ack_rt_flag[3]),
	.I2(address_received[4]),
	.I3(address_received[5]),
	.I4(N_264),
	.O(N_77_i)
);
defparam N_77_i_cZ.INIT=32'hAAAACAAA;
// @225:2311
  LUT5 N_249_i_cZ (
	.I0(address_received[5]),
	.I1(debug_cnt_ack_rt_flag[2]),
	.I2(data_received[26]),
	.I3(address_received[4]),
	.I4(N_264),
	.O(N_249_i)
);
defparam N_249_i_cZ.INIT=32'hF0F0D8F0;
// @225:2311
  LUT5 N_250_i_cZ (
	.I0(data_received[25]),
	.I1(address_received[5]),
	.I2(debug_cnt_ack_rt_flag[1]),
	.I3(address_received[4]),
	.I4(N_264),
	.O(N_250_i)
);
defparam N_250_i_cZ.INIT=32'hAAAAE2AA;
// @225:2311
  LUT5 N_251_i_cZ (
	.I0(data_received[24]),
	.I1(address_received[4]),
	.I2(debug_cnt_ack_rt_flag[0]),
	.I3(address_received[5]),
	.I4(N_264),
	.O(N_251_i)
);
defparam N_251_i_cZ.INIT=32'hAAAAE2AA;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[20]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(data_out_wire_f0_0_o2_1[5]),
	.I4(\memory_core.memory_out [20]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [20])
);
defparam \memory_core.data_out_wire_cZ[20] .INIT=64'h1F3E000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[19]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(data_out_wire_f0_0_o2_1[5]),
	.I4(\memory_core.memory_out [19]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [19])
);
defparam \memory_core.data_out_wire_cZ[19] .INIT=64'h1F3E000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[14]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(data_out_wire_f0_0_o2_1[5]),
	.I4(\memory_core.memory_out [14]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [14])
);
defparam \memory_core.data_out_wire_cZ[14] .INIT=64'h1F3E000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[13]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(data_out_wire_f0_0_o2_1[5]),
	.I4(\memory_core.memory_out [13]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [13])
);
defparam \memory_core.data_out_wire_cZ[13] .INIT=64'h1F3E000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[12]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(data_out_wire_f0_0_o2_1[5]),
	.I4(\memory_core.memory_out [12]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [12])
);
defparam \memory_core.data_out_wire_cZ[12] .INIT=64'h1F3E000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[11]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(data_out_wire_f0_0_o2_1[5]),
	.I4(\memory_core.memory_out [11]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [11])
);
defparam \memory_core.data_out_wire_cZ[11] .INIT=64'h1F3E000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[10]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(data_out_wire_f0_0_o2_1[5]),
	.I4(\memory_core.memory_out [10]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [10])
);
defparam \memory_core.data_out_wire_cZ[10] .INIT=64'h1F3E000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[9]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(data_out_wire_f0_0_o2_1[5]),
	.I4(\memory_core.memory_out [9]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [9])
);
defparam \memory_core.data_out_wire_cZ[9] .INIT=64'h1F3E000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[8]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(\memory_core.memory_out [8]),
	.I4(data_out_wire_f0_0_o2_1[5]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [8])
);
defparam \memory_core.data_out_wire_cZ[8] .INIT=64'h1F003E0000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[7]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(data_out_wire_f0_0_o2_1[5]),
	.I4(\memory_core.memory_out [7]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [7])
);
defparam \memory_core.data_out_wire_cZ[7] .INIT=64'h1F3E000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[6]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(data_out_wire_f0_0_o2_1[5]),
	.I4(\memory_core.memory_out [6]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [6])
);
defparam \memory_core.data_out_wire_cZ[6] .INIT=64'h1F3E000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[4]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(data_out_wire_f0_0_o2_1[5]),
	.I4(\memory_core.memory_out [4]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [4])
);
defparam \memory_core.data_out_wire_cZ[4] .INIT=64'h1F3E000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[2]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(data_out_wire_f0_0_o2_1[5]),
	.I4(\memory_core.memory_out [2]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [2])
);
defparam \memory_core.data_out_wire_cZ[2] .INIT=64'h1F3E000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[1]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(data_out_wire_f0_0_o2_1[5]),
	.I4(\memory_core.memory_out [1]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [1])
);
defparam \memory_core.data_out_wire_cZ[1] .INIT=64'h1F3E000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_f0_0[0]  (
	.I0(data_out_wire_f0_0_o2_1[5]),
	.I1(\memory_core.addr_of_data_out [3]),
	.I2(\memory_core.addr_of_data_out [4]),
	.I3(\memory_core.addr_of_data_out [5]),
	.I4(\memory_core.memory_out [0]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [0])
);
defparam \memory_core.data_out_wire_f0_0[0] .INIT=64'h07FF000100000000;
// @221:459
  LUT6 \memory_core.data_out_wire_f0_0[3]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(data_out_wire_f0_0_o2_1[5]),
	.I4(\memory_core.memory_out [3]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [3])
);
defparam \memory_core.data_out_wire_f0_0[3] .INIT=64'h1F3F000100000000;
// @221:459
  LUT6 \memory_core.data_out_wire_f0_0[5]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(\memory_core.memory_out [5]),
	.I4(data_out_wire_f0_0_o2_1[5]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [5])
);
defparam \memory_core.data_out_wire_f0_0[5] .INIT=64'h1F003F0100000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[15]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(data_out_wire_f0_0_o2_1[5]),
	.I4(\memory_core.memory_out [15]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [15])
);
defparam \memory_core.data_out_wire_cZ[15] .INIT=64'h1F3E000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[16]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(data_out_wire_f0_0_o2_1[5]),
	.I4(\memory_core.memory_out [16]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [16])
);
defparam \memory_core.data_out_wire_cZ[16] .INIT=64'h1F3E000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[17]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(data_out_wire_f0_0_o2_1[5]),
	.I4(\memory_core.memory_out [17]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [17])
);
defparam \memory_core.data_out_wire_cZ[17] .INIT=64'h1F3E000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[18]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(data_out_wire_f0_0_o2_1[5]),
	.I4(\memory_core.memory_out [18]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [18])
);
defparam \memory_core.data_out_wire_cZ[18] .INIT=64'h1F3E000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[21]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(data_out_wire_f0_0_o2_1[5]),
	.I4(\memory_core.memory_out [21]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [21])
);
defparam \memory_core.data_out_wire_cZ[21] .INIT=64'h1F3E000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[22]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(data_out_wire_f0_0_o2_1[5]),
	.I4(\memory_core.memory_out [22]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [22])
);
defparam \memory_core.data_out_wire_cZ[22] .INIT=64'h1F3E000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[23]  (
	.I0(data_out_wire_f0_0_o2_1[5]),
	.I1(\memory_core.addr_of_data_out [3]),
	.I2(\memory_core.addr_of_data_out [4]),
	.I3(\memory_core.addr_of_data_out [5]),
	.I4(\memory_core.memory_out [23]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [23])
);
defparam \memory_core.data_out_wire_cZ[23] .INIT=64'h07FE000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[24]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(\memory_core.memory_out [24]),
	.I4(data_out_wire_f0_0_o2_1[5]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [24])
);
defparam \memory_core.data_out_wire_cZ[24] .INIT=64'h1F003E0000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[25]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(data_out_wire_f0_0_o2_1[5]),
	.I4(\memory_core.memory_out [25]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [25])
);
defparam \memory_core.data_out_wire_cZ[25] .INIT=64'h1F3E000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[26]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(data_out_wire_f0_0_o2_1[5]),
	.I4(\memory_core.memory_out [26]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [26])
);
defparam \memory_core.data_out_wire_cZ[26] .INIT=64'h1F3E000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[27]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(\memory_core.memory_out [27]),
	.I4(data_out_wire_f0_0_o2_1[5]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [27])
);
defparam \memory_core.data_out_wire_cZ[27] .INIT=64'h1F003E0000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[28]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(data_out_wire_f0_0_o2_1[5]),
	.I4(\memory_core.memory_out [28]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [28])
);
defparam \memory_core.data_out_wire_cZ[28] .INIT=64'h1F3E000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[29]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(data_out_wire_f0_0_o2_1[5]),
	.I4(\memory_core.memory_out [29]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [29])
);
defparam \memory_core.data_out_wire_cZ[29] .INIT=64'h1F3E000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[30]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(data_out_wire_f0_0_o2_1[5]),
	.I4(\memory_core.memory_out [30]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [30])
);
defparam \memory_core.data_out_wire_cZ[30] .INIT=64'h1F3E000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_cZ[31]  (
	.I0(\memory_core.addr_of_data_out [3]),
	.I1(\memory_core.addr_of_data_out [4]),
	.I2(\memory_core.addr_of_data_out [5]),
	.I3(\memory_core.memory_out [31]),
	.I4(data_out_wire_f0_0_o2_1[5]),
	.I5(data_out_wire_f0_0_a2_1[5]),
	.O(\memory_core.data_out_wire [31])
);
defparam \memory_core.data_out_wire_cZ[31] .INIT=64'h1F003E0000000000;
  LUT5 debug_cnt_ack_rt_flaglde_0 (
	.I0(address_received[5]),
	.I1(address_received[4]),
	.I2(infopipe_reset),
	.I3(N_264),
	.I4(mem_we_0_sqmuxa_0_a2_0_10),
	.O(debug_cnt_ack_rt_flage)
);
defparam debug_cnt_ack_rt_flaglde_0.INIT=32'hF0F8F0F0;
// @225:2326
  LUT6 mem_we_0_sqmuxa_0 (
	.I0(address_received[5]),
	.I1(address_received[4]),
	.I2(N_267),
	.I3(mem_we_0_sqmuxa_0_a2_2),
	.I4(N_264),
	.I5(mem_we_0_sqmuxa_0_a2_0_10),
	.O(mem_we_0_sqmuxa)
);
defparam mem_we_0_sqmuxa_0.INIT=64'h7500FD8875007500;
// @225:2311
  LUT3 N_21_i_cZ (
	.I0(address_received[4]),
	.I1(data_received[23]),
	.I2(N_264),
	.O(N_21_i)
);
defparam N_21_i_cZ.INIT=8'hC4;
// @225:2311
  LUT3 N_23_i_cZ (
	.I0(address_received[4]),
	.I1(data_received[22]),
	.I2(N_264),
	.O(N_23_i)
);
defparam N_23_i_cZ.INIT=8'hC4;
// @225:2311
  LUT3 N_25_i_cZ (
	.I0(address_received[4]),
	.I1(data_received[21]),
	.I2(N_264),
	.O(N_25_i)
);
defparam N_25_i_cZ.INIT=8'hC4;
// @225:2311
  LUT3 N_27_i_cZ (
	.I0(data_received[20]),
	.I1(address_received[4]),
	.I2(N_264),
	.O(N_27_i)
);
defparam N_27_i_cZ.INIT=8'hA2;
// @225:2311
  LUT3 N_29_i_cZ (
	.I0(data_received[19]),
	.I1(address_received[4]),
	.I2(N_264),
	.O(N_29_i)
);
defparam N_29_i_cZ.INIT=8'hA2;
// @225:2311
  LUT3 N_242_i_cZ (
	.I0(data_received[18]),
	.I1(address_received[4]),
	.I2(N_264),
	.O(N_242_i)
);
defparam N_242_i_cZ.INIT=8'hA2;
// @225:2311
  LUT3 N_243_i_cZ (
	.I0(data_received[17]),
	.I1(address_received[4]),
	.I2(N_264),
	.O(N_243_i)
);
defparam N_243_i_cZ.INIT=8'hA2;
// @225:2311
  LUT3 N_37_i_cZ (
	.I0(data_received[15]),
	.I1(address_received[4]),
	.I2(N_264),
	.O(N_37_i)
);
defparam N_37_i_cZ.INIT=8'hA2;
// @225:2311
  LUT3 N_39_i_cZ (
	.I0(data_received[14]),
	.I1(address_received[4]),
	.I2(N_264),
	.O(N_39_i)
);
defparam N_39_i_cZ.INIT=8'hA2;
// @225:2311
  LUT3 N_41_i_cZ (
	.I0(data_received[13]),
	.I1(address_received[4]),
	.I2(N_264),
	.O(N_41_i)
);
defparam N_41_i_cZ.INIT=8'hA2;
// @225:2311
  LUT3 N_43_i_cZ (
	.I0(data_received[12]),
	.I1(address_received[4]),
	.I2(N_264),
	.O(N_43_i)
);
defparam N_43_i_cZ.INIT=8'hA2;
// @225:2311
  LUT3 N_45_i_cZ (
	.I0(data_received[11]),
	.I1(address_received[4]),
	.I2(N_264),
	.O(N_45_i)
);
defparam N_45_i_cZ.INIT=8'hA2;
// @225:2311
  LUT3 N_47_i_cZ (
	.I0(data_received[10]),
	.I1(address_received[4]),
	.I2(N_264),
	.O(N_47_i)
);
defparam N_47_i_cZ.INIT=8'hA2;
// @225:2311
  LUT3 N_49_i_cZ (
	.I0(data_received[9]),
	.I1(address_received[4]),
	.I2(N_264),
	.O(N_49_i)
);
defparam N_49_i_cZ.INIT=8'hA2;
// @225:2311
  LUT3 N_51_i_cZ (
	.I0(data_received[8]),
	.I1(address_received[4]),
	.I2(N_264),
	.O(N_51_i)
);
defparam N_51_i_cZ.INIT=8'hA2;
// @225:2311
  LUT3 N_53_i_cZ (
	.I0(data_received[7]),
	.I1(address_received[4]),
	.I2(N_264),
	.O(N_53_i)
);
defparam N_53_i_cZ.INIT=8'hA2;
// @225:2311
  LUT3 N_55_i_cZ (
	.I0(data_received[6]),
	.I1(address_received[4]),
	.I2(N_264),
	.O(N_55_i)
);
defparam N_55_i_cZ.INIT=8'hA2;
// @225:2311
  LUT3 N_57_i_cZ (
	.I0(address_received[4]),
	.I1(data_received[5]),
	.I2(N_264),
	.O(N_57_i)
);
defparam N_57_i_cZ.INIT=8'hC4;
// @225:2311
  LUT3 N_59_i_cZ (
	.I0(address_received[4]),
	.I1(data_received[4]),
	.I2(N_264),
	.O(N_59_i)
);
defparam N_59_i_cZ.INIT=8'hC4;
// @225:2311
  LUT3 N_61_i_cZ (
	.I0(data_received[3]),
	.I1(address_received[4]),
	.I2(N_264),
	.O(N_61_i)
);
defparam N_61_i_cZ.INIT=8'hA2;
// @225:2311
  LUT3 N_63_i_cZ (
	.I0(data_received[2]),
	.I1(address_received[4]),
	.I2(N_264),
	.O(N_63_i)
);
defparam N_63_i_cZ.INIT=8'hA2;
// @225:2311
  LUT3 N_65_i_cZ (
	.I0(address_received[4]),
	.I1(data_received[1]),
	.I2(N_264),
	.O(N_65_i)
);
defparam N_65_i_cZ.INIT=8'hC4;
// @225:2311
  LUT3 N_67_i_cZ (
	.I0(address_received[4]),
	.I1(data_received[0]),
	.I2(N_264),
	.O(N_67_i)
);
defparam N_67_i_cZ.INIT=8'hC4;
// @225:2326
  LUT5 mem_we_0_sqmuxa_0_a2_0_11 (
	.I0(mem_we_0_sqmuxa_0_a2_0_2),
	.I1(mem_we_0_sqmuxa_0_a2_0_5),
	.I2(mem_we_0_sqmuxa_0_a2_0_4),
	.I3(mem_we_0_sqmuxa_0_a2_0_3),
	.I4(mem_we_0_sqmuxa_0_a2_0_6),
	.O(mem_we_0_sqmuxa_0_a2_0_10)
);
defparam mem_we_0_sqmuxa_0_a2_0_11.INIT=32'h80000000;
// @221:459
  LUT6 \memory_core.data_out_wire_f0_0_a2_1[5]  (
	.I0(\memory_core.addr_of_data_out [12]),
	.I1(\memory_core.addr_of_data_out [13]),
	.I2(\memory_core.data_out_wire_f0_0_a2_1_0 [5]),
	.I3(\memory_core.data_out_wire_f0_0_a2_1_1_3 [5]),
	.I4(\memory_core.data_out_wire_f0_0_a2_1_2 [5]),
	.I5(\memory_core.data_out_wire_f0_0_a2_1_1_4 [5]),
	.O(data_out_wire_f0_0_a2_1[5])
);
defparam \memory_core.data_out_wire_f0_0_a2_1[5] .INIT=64'h1000000000000000;
// @225:2326
  LUT6 mem_we_0_sqmuxa_0_a2_2_cZ (
	.I0(address_received[6]),
	.I1(address_received[9]),
	.I2(address_received[7]),
	.I3(address_received[8]),
	.I4(infopipe_data_savedc),
	.I5(mem_we_0_sqmuxa_0_a2_0),
	.O(mem_we_0_sqmuxa_0_a2_2)
);
defparam mem_we_0_sqmuxa_0_a2_2_cZ.INIT=64'h0001000000000000;
// @225:2326
  LUT6 mem_we_0_sqmuxa_0_a2_0_7 (
	.I0(data_received[26]),
	.I1(data_received[16]),
	.I2(data_received[1]),
	.I3(data_received[24]),
	.I4(infopipe_data_savedc),
	.I5(mem_we_0_sqmuxa_0_a2_0_2_3),
	.O(mem_we_0_sqmuxa_0_a2_0_6)
);
defparam mem_we_0_sqmuxa_0_a2_0_7.INIT=64'h2000000000000000;
// @225:2536
  LUT4 \infopipe_rcv_inst.BIT[3].RCV.un1_rcvcnt_c4  (
	.I0(CO0_0),
	.I1(\infopipe_rcv_inst.BIT[3].RCV.rcvcnt [2]),
	.I2(\infopipe_rcv_inst.BIT[3].RCV.rcvcnt [1]),
	.I3(\infopipe_rcv_inst.BIT[3].RCV.rcvcnt [3]),
	.O(un1_rcvcnt_c4_2)
);
defparam \infopipe_rcv_inst.BIT[3].RCV.un1_rcvcnt_c4 .INIT=16'h13FF;
// @225:2536
  LUT4 \infopipe_rcv_inst.BIT[2].RCV.un1_rcvcnt_c4  (
	.I0(\infopipe_rcv_inst.BIT[2].RCV.rcvcnt [3]),
	.I1(CO0_1),
	.I2(\infopipe_rcv_inst.BIT[2].RCV.rcvcnt [1]),
	.I3(\infopipe_rcv_inst.BIT[2].RCV.rcvcnt [2]),
	.O(un1_rcvcnt_c4_1)
);
defparam \infopipe_rcv_inst.BIT[2].RCV.un1_rcvcnt_c4 .INIT=16'h557F;
// @225:2536
  LUT4 \infopipe_rcv_inst.BIT[1].RCV.un1_rcvcnt_c4  (
	.I0(\infopipe_rcv_inst.BIT[1].RCV.rcvcnt [2]),
	.I1(CO0_2),
	.I2(\infopipe_rcv_inst.BIT[1].RCV.rcvcnt [1]),
	.I3(\infopipe_rcv_inst.BIT[1].RCV.rcvcnt [3]),
	.O(un1_rcvcnt_c4_0)
);
defparam \infopipe_rcv_inst.BIT[1].RCV.un1_rcvcnt_c4 .INIT=16'h15FF;
// @225:2536
  LUT4 \infopipe_rcv_inst.BIT[0].RCV.un1_rcvcnt_c4  (
	.I0(CO0_3),
	.I1(\infopipe_rcv_inst.BIT[0].RCV.rcvcnt [2]),
	.I2(\infopipe_rcv_inst.BIT[0].RCV.rcvcnt [1]),
	.I3(\infopipe_rcv_inst.BIT[0].RCV.rcvcnt [3]),
	.O(un1_rcvcnt_c4)
);
defparam \infopipe_rcv_inst.BIT[0].RCV.un1_rcvcnt_c4 .INIT=16'h13FF;
// @225:2312
  LUT6 \mem_waddr_7_i_o4[4]  (
	.I0(address_received[6]),
	.I1(mem_waddr_7_i_o4_0[4]),
	.I2(address_received[10]),
	.I3(address_received[11]),
	.I4(address_received[9]),
	.I5(mem_waddr_7_i_o4_2[4]),
	.O(N_264)
);
defparam \mem_waddr_7_i_o4[4] .INIT=64'hFFFFFFFFDFFFFFFF;
// @225:2326
  LUT4 mem_we_0_sqmuxa_0_o4_0 (
	.I0(mem_waddr_7[0]),
	.I1(mem_waddr_7[3]),
	.I2(mem_waddr_7[1]),
	.I3(address_received[2]),
	.O(N_267)
);
defparam mem_we_0_sqmuxa_0_o4_0.INIT=16'h3337;
// @225:2312
  LUT6 \mem_waddr_7_i_o4_0_cZ[4]  (
	.I0(address_received[8]),
	.I1(address_received[12]),
	.I2(address_received[14]),
	.I3(address_received[15]),
	.I4(address_received[7]),
	.I5(address_received[13]),
	.O(mem_waddr_7_i_o4_0[4])
);
defparam \mem_waddr_7_i_o4_0_cZ[4] .INIT=64'h7FFFFFFFFFFFFFFF;
// @225:2326
  LUT6 mem_we_0_sqmuxa_0_a2_0_0 (
	.I0(address_received[14]),
	.I1(address_received[12]),
	.I2(address_received[13]),
	.I3(address_received[15]),
	.I4(address_received[11]),
	.I5(address_received[10]),
	.O(mem_we_0_sqmuxa_0_a2_0)
);
defparam mem_we_0_sqmuxa_0_a2_0_0.INIT=64'h0000000000000001;
// @225:2326
  LUT6 mem_we_0_sqmuxa_0_a2_0_3_cZ (
	.I0(data_received[20]),
	.I1(data_received[14]),
	.I2(data_received[18]),
	.I3(data_received[15]),
	.I4(data_received[12]),
	.I5(data_received[17]),
	.O(mem_we_0_sqmuxa_0_a2_0_2)
);
defparam mem_we_0_sqmuxa_0_a2_0_3_cZ.INIT=64'h8000000000000000;
// @225:2326
  LUT6 mem_we_0_sqmuxa_0_a2_0_4_cZ (
	.I0(data_received[11]),
	.I1(data_received[13]),
	.I2(data_received[8]),
	.I3(data_received[10]),
	.I4(data_received[6]),
	.I5(data_received[9]),
	.O(mem_we_0_sqmuxa_0_a2_0_3)
);
defparam mem_we_0_sqmuxa_0_a2_0_4_cZ.INIT=64'h8000000000000000;
// @225:2326
  LUT6 mem_we_0_sqmuxa_0_a2_0_5_cZ (
	.I0(data_received[2]),
	.I1(data_received[5]),
	.I2(data_received[4]),
	.I3(data_received[7]),
	.I4(data_received[3]),
	.I5(data_received[0]),
	.O(mem_we_0_sqmuxa_0_a2_0_4)
);
defparam mem_we_0_sqmuxa_0_a2_0_5_cZ.INIT=64'h8000000000000000;
// @225:2326
  LUT6 mem_we_0_sqmuxa_0_a2_0_6_cZ (
	.I0(data_received[29]),
	.I1(data_received[25]),
	.I2(data_received[30]),
	.I3(data_received[28]),
	.I4(data_received[27]),
	.I5(data_received[31]),
	.O(mem_we_0_sqmuxa_0_a2_0_5)
);
defparam mem_we_0_sqmuxa_0_a2_0_6_cZ.INIT=64'h8000000000000000;
// @221:459
  LUT6 \memory_core.data_out_wire_f0_0_a2_1_0_cZ[5]  (
	.I0(\memory_core.addr_of_data_out [6]),
	.I1(\memory_core.addr_of_data_out [7]),
	.I2(\memory_core.addr_of_data_out [8]),
	.I3(\memory_core.addr_of_data_out [9]),
	.I4(\memory_core.addr_of_data_out [10]),
	.I5(\memory_core.addr_of_data_out [11]),
	.O(\memory_core.data_out_wire_f0_0_a2_1_0 [5])
);
defparam \memory_core.data_out_wire_f0_0_a2_1_0_cZ[5] .INIT=64'h0000000000000001;
// @221:459
  LUT6 \memory_core.data_out_wire_f0_0_a2_1_2_cZ[5]  (
	.I0(\memory_core.addr_of_data_out [18]),
	.I1(\memory_core.addr_of_data_out [19]),
	.I2(\memory_core.addr_of_data_out [20]),
	.I3(\memory_core.addr_of_data_out [22]),
	.I4(\memory_core.addr_of_data_out [21]),
	.I5(\memory_core.addr_of_data_out [27]),
	.O(\memory_core.data_out_wire_f0_0_a2_1_2 [5])
);
defparam \memory_core.data_out_wire_f0_0_a2_1_2_cZ[5] .INIT=64'h0000000000000001;
// @225:2514
  LUT3 \infopipe_rcv_inst.BIT[2].RCV.infopipe_empty_outc_cZ  (
	.I0(\infopipe_rcv_inst.BIT[2].RCV.infopipe_data_local ),
	.I1(\infopipe_rcv_inst.BIT[2].RCV.state [0]),
	.I2(\infopipe_rcv_inst.BIT[2].RCV.state [1]),
	.O(\infopipe_rcv_inst.BIT[2].RCV.infopipe_empty_outc )
);
defparam \infopipe_rcv_inst.BIT[2].RCV.infopipe_empty_outc_cZ .INIT=8'h01;
// @225:2514
  LUT3 \infopipe_rcv_inst.BIT[1].RCV.infopipe_empty_outc_cZ  (
	.I0(\infopipe_rcv_inst.BIT[1].RCV.state [0]),
	.I1(\infopipe_rcv_inst.BIT[1].RCV.infopipe_data_local ),
	.I2(\infopipe_rcv_inst.BIT[1].RCV.state [1]),
	.O(\infopipe_rcv_inst.BIT[1].RCV.infopipe_empty_outc )
);
defparam \infopipe_rcv_inst.BIT[1].RCV.infopipe_empty_outc_cZ .INIT=8'h01;
// @225:2514
  LUT3 \infopipe_rcv_inst.BIT[0].RCV.infopipe_empty_outc_cZ  (
	.I0(\infopipe_rcv_inst.BIT[0].RCV.state [1]),
	.I1(\infopipe_rcv_inst.BIT[0].RCV.state [0]),
	.I2(\infopipe_rcv_inst.BIT[0].RCV.infopipe_data_local ),
	.O(\infopipe_rcv_inst.BIT[0].RCV.infopipe_empty_outc )
);
defparam \infopipe_rcv_inst.BIT[0].RCV.infopipe_empty_outc_cZ .INIT=8'h01;
// @225:2514
  LUT3 \infopipe_rcv_inst.BIT[3].RCV.infopipe_empty_outc_cZ  (
	.I0(\infopipe_rcv_inst.BIT[3].RCV.state [0]),
	.I1(\infopipe_rcv_inst.BIT[3].RCV.infopipe_data_local ),
	.I2(\infopipe_rcv_inst.BIT[3].RCV.state [1]),
	.O(\infopipe_rcv_inst.BIT[3].RCV.infopipe_empty_outc )
);
defparam \infopipe_rcv_inst.BIT[3].RCV.infopipe_empty_outc_cZ .INIT=8'h01;
// @225:2311
  LUT4 infopipe_data_savedc_3 (
	.I0(\infopipe_rcv_inst.ready_bit [0]),
	.I1(\infopipe_rcv_inst.ready_bit [2]),
	.I2(\infopipe_rcv_inst.ready_bit [3]),
	.I3(\infopipe_rcv_inst.ready_bit [1]),
	.O(infopipe_data_ready)
);
defparam infopipe_data_savedc_3.INIT=16'h8000;
// @221:459
  LUT3 \memory_core.data_out_wire_f0_0_o2_1[5]  (
	.I0(\memory_core.rd_addr_to_memory [0]),
	.I1(\memory_core.addr_of_data_out [1]),
	.I2(\memory_core.addr_of_data_out [2]),
	.O(data_out_wire_f0_0_o2_1[5])
);
defparam \memory_core.data_out_wire_f0_0_o2_1[5] .INIT=8'hFD;
// @225:2594
  LUT4 \infopipe_rcv_inst.infopipe_empty_out_2_cZ  (
	.I0(\infopipe_rcv_inst.empty_bit [1]),
	.I1(\infopipe_rcv_inst.empty_bit [3]),
	.I2(\infopipe_rcv_inst.empty_bit [0]),
	.I3(\infopipe_rcv_inst.empty_bit [2]),
	.O(\infopipe_rcv_inst.infopipe_empty_out_2 )
);
defparam \infopipe_rcv_inst.infopipe_empty_out_2_cZ .INIT=16'h8000;
// @225:2312
  LUT4 \mem_waddr_7_i_o4_2_cZ[4]  (
	.I0(mem_waddr_7[0]),
	.I1(mem_waddr_7[3]),
	.I2(mem_waddr_7[1]),
	.I3(address_received[2]),
	.O(mem_waddr_7_i_o4_2[4])
);
defparam \mem_waddr_7_i_o4_2_cZ[4] .INIT=16'h7FFF;
// @225:2326
  LUT4 mem_we_0_sqmuxa_0_a2_0_2_3_cZ (
	.I0(data_received[22]),
	.I1(data_received[23]),
	.I2(data_received[19]),
	.I3(data_received[21]),
	.O(mem_we_0_sqmuxa_0_a2_0_2_3)
);
defparam mem_we_0_sqmuxa_0_a2_0_2_3_cZ.INIT=16'h8000;
// @221:459
  LUT4 \memory_core.data_out_wire_f0_0_a2_1_1_3_cZ[5]  (
	.I0(\memory_core.addr_of_data_out [14]),
	.I1(\memory_core.addr_of_data_out [15]),
	.I2(\memory_core.addr_of_data_out [16]),
	.I3(\memory_core.addr_of_data_out [17]),
	.O(\memory_core.data_out_wire_f0_0_a2_1_1_3 [5])
);
defparam \memory_core.data_out_wire_f0_0_a2_1_1_3_cZ[5] .INIT=16'h0001;
// @221:459
  LUT4 \memory_core.data_out_wire_f0_0_a2_1_1_4_cZ[5]  (
	.I0(\memory_core.addr_of_data_out [24]),
	.I1(\memory_core.addr_of_data_out [23]),
	.I2(\memory_core.addr_of_data_out [25]),
	.I3(\memory_core.addr_of_data_out [26]),
	.O(\memory_core.data_out_wire_f0_0_a2_1_1_4 [5])
);
defparam \memory_core.data_out_wire_f0_0_a2_1_1_4_cZ[5] .INIT=16'h0001;
// @221:511
  LUT3 \memory_core.mem_rd_en_cZ  (
	.I0(\memory_core.state_rd [1]),
	.I1(\memory_core.mem_en ),
	.I2(system_capim_rd_in),
	.O(\memory_core.mem_rd_en )
);
defparam \memory_core.mem_rd_en_cZ .INIT=8'hE4;
// @225:2311
  LUT2 debug_cnt_ack_rt_flag_190_m1 (
	.I0(debug_cnt_ack_rt_flag[7]),
	.I1(infopipe_reset),
	.O(debug_cnt_ack_rt_flag_qxu[7])
);
defparam debug_cnt_ack_rt_flag_190_m1.INIT=4'h2;
// @225:2514
  LUT2 \infopipe_rcv_inst.BIT[3].RCV.data_ready_outc_cZ  (
	.I0(infopipe_data_saved),
	.I1(\infopipe_rcv_inst.BIT[3].RCV.state [1]),
	.O(\infopipe_rcv_inst.BIT[3].RCV.data_ready_outc )
);
defparam \infopipe_rcv_inst.BIT[3].RCV.data_ready_outc_cZ .INIT=4'h4;
// @225:2514
  LUT2 \infopipe_rcv_inst.BIT[0].RCV.data_ready_outc_cZ  (
	.I0(\infopipe_rcv_inst.BIT[0].RCV.state [1]),
	.I1(infopipe_data_saved),
	.O(\infopipe_rcv_inst.BIT[0].RCV.data_ready_outc )
);
defparam \infopipe_rcv_inst.BIT[0].RCV.data_ready_outc_cZ .INIT=4'h2;
// @225:2514
  LUT2 \infopipe_rcv_inst.BIT[1].RCV.data_ready_outc_cZ  (
	.I0(infopipe_data_saved),
	.I1(\infopipe_rcv_inst.BIT[1].RCV.state [1]),
	.O(\infopipe_rcv_inst.BIT[1].RCV.data_ready_outc )
);
defparam \infopipe_rcv_inst.BIT[1].RCV.data_ready_outc_cZ .INIT=4'h4;
// @225:2514
  LUT2 \infopipe_rcv_inst.BIT[2].RCV.data_ready_outc_cZ  (
	.I0(infopipe_data_saved),
	.I1(\infopipe_rcv_inst.BIT[2].RCV.state [1]),
	.O(\infopipe_rcv_inst.BIT[2].RCV.data_ready_outc )
);
defparam \infopipe_rcv_inst.BIT[2].RCV.data_ready_outc_cZ .INIT=4'h4;
// @225:2311
  FD \state_Z[0]  (
	.Q(state[0]),
	.D(state_0),
	.C(infopipe_clk)
);
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_197_b0  (
	.I0(\memory_core.rd_addr_to_memory [6]),
	.I1(system_capim_data_in[6]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [6])
);
defparam \memory_core.rd_addr_to_memory_197_b0 .INIT=32'h0000CAAA;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_196_b0  (
	.I0(\memory_core.rd_addr_to_memory [5]),
	.I1(system_capim_data_in[5]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [5])
);
defparam \memory_core.rd_addr_to_memory_196_b0 .INIT=32'h0000CAAA;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_195_b0  (
	.I0(\memory_core.rd_addr_to_memory [4]),
	.I1(system_capim_data_in[4]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [4])
);
defparam \memory_core.rd_addr_to_memory_195_b0 .INIT=32'h0000CAAA;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_194_b0  (
	.I0(\memory_core.rd_addr_to_memory [3]),
	.I1(system_capim_data_in[3]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [3])
);
defparam \memory_core.rd_addr_to_memory_194_b0 .INIT=32'h0000CAAA;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_198_b0  (
	.I0(\memory_core.rd_addr_to_memory [7]),
	.I1(system_capim_data_in[7]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [7])
);
defparam \memory_core.rd_addr_to_memory_198_b0 .INIT=32'h0000CAAA;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_200_b0  (
	.I0(\memory_core.rd_addr_to_memory [9]),
	.I1(system_capim_data_in[9]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [9])
);
defparam \memory_core.rd_addr_to_memory_200_b0 .INIT=32'h0000CAAA;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_199_b0  (
	.I0(\memory_core.rd_addr_to_memory [8]),
	.I1(system_capim_data_in[8]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [8])
);
defparam \memory_core.rd_addr_to_memory_199_b0 .INIT=32'h0000CAAA;
// @225:2514
  LUT6 \infopipe_rcv_inst.BIT[3].RCV.rcvcnt_1_sqmuxa_i_cZ  (
	.I0(\infopipe_rcv_inst.BIT[3].RCV.rcvcnt [2]),
	.I1(CO0_0),
	.I2(\infopipe_rcv_inst.BIT[3].RCV.rcvcnt [3]),
	.I3(\infopipe_rcv_inst.BIT[3].RCV.rcvcnt [1]),
	.I4(\infopipe_rcv_inst.BIT[3].RCV.state [0]),
	.I5(infopipe_reset),
	.O(\infopipe_rcv_inst.BIT[3].RCV.rcvcnt_1_sqmuxa_i )
);
defparam \infopipe_rcv_inst.BIT[3].RCV.rcvcnt_1_sqmuxa_i_cZ .INIT=64'hFFFFFFFFE0A0FFFF;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_201_b0  (
	.I0(\memory_core.rd_addr_to_memory [10]),
	.I1(system_capim_data_in[10]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [10])
);
defparam \memory_core.rd_addr_to_memory_201_b0 .INIT=32'h0000CAAA;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_193_b0  (
	.I0(\memory_core.rd_addr_to_memory [2]),
	.I1(system_capim_data_in[2]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [2])
);
defparam \memory_core.rd_addr_to_memory_193_b0 .INIT=32'h0000CAAA;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_191_b0  (
	.I0(\memory_core.rd_addr_to_memory [0]),
	.I1(system_capim_data_in[0]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [0])
);
defparam \memory_core.rd_addr_to_memory_191_b0 .INIT=32'h0000CAAA;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_218_b0  (
	.I0(\memory_core.rd_addr_to_memory [27]),
	.I1(system_capim_data_in[27]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [27])
);
defparam \memory_core.rd_addr_to_memory_218_b0 .INIT=32'h0000CAAA;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_212_b0  (
	.I0(\memory_core.rd_addr_to_memory [21]),
	.I1(system_capim_data_in[21]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [21])
);
defparam \memory_core.rd_addr_to_memory_212_b0 .INIT=32'h0000CAAA;
// @225:2312
  LUT5 \st_ncnt_5_i_a4[1]  (
	.I0(\infopipe_rcv_inst.ready_bit [3]),
	.I1(\infopipe_rcv_inst.ready_bit [0]),
	.I2(\infopipe_rcv_inst.ready_bit [1]),
	.I3(state[0]),
	.I4(\infopipe_rcv_inst.ready_bit [2]),
	.O(infopipe_data_savedc)
);
defparam \st_ncnt_5_i_a4[1] .INIT=32'h80000000;
  LUT5 \memory_core.rd_addr_to_memorylde  (
	.I0(\memory_core.state_rd [1]),
	.I1(system_capim_rd_in),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memorye )
);
defparam \memory_core.rd_addr_to_memorylde .INIT=32'hFFFFFDDD;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_217_b0  (
	.I0(\memory_core.rd_addr_to_memory [26]),
	.I1(system_capim_data_in[26]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [26])
);
defparam \memory_core.rd_addr_to_memory_217_b0 .INIT=32'h0000CAAA;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_216_b0  (
	.I0(\memory_core.rd_addr_to_memory [25]),
	.I1(system_capim_data_in[25]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [25])
);
defparam \memory_core.rd_addr_to_memory_216_b0 .INIT=32'h0000CAAA;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_215_b0  (
	.I0(\memory_core.rd_addr_to_memory [24]),
	.I1(system_capim_data_in[24]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [24])
);
defparam \memory_core.rd_addr_to_memory_215_b0 .INIT=32'h0000CAAA;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_213_b0  (
	.I0(\memory_core.rd_addr_to_memory [22]),
	.I1(system_capim_data_in[22]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [22])
);
defparam \memory_core.rd_addr_to_memory_213_b0 .INIT=32'h0000CAAA;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_210_b0  (
	.I0(\memory_core.rd_addr_to_memory [19]),
	.I1(system_capim_data_in[19]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [19])
);
defparam \memory_core.rd_addr_to_memory_210_b0 .INIT=32'h0000CAAA;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_192_b0  (
	.I0(\memory_core.rd_addr_to_memory [1]),
	.I1(system_capim_data_in[1]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [1])
);
defparam \memory_core.rd_addr_to_memory_192_b0 .INIT=32'h0000CAAA;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_208_b0  (
	.I0(\memory_core.rd_addr_to_memory [17]),
	.I1(system_capim_data_in[17]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [17])
);
defparam \memory_core.rd_addr_to_memory_208_b0 .INIT=32'h0000CAAA;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_207_b0  (
	.I0(\memory_core.rd_addr_to_memory [16]),
	.I1(system_capim_data_in[16]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [16])
);
defparam \memory_core.rd_addr_to_memory_207_b0 .INIT=32'h0000CAAA;
// @225:2312
  LUT6 \state_5_1_0_.m2  (
	.I0(\infopipe_rcv_inst.ready_bit [3]),
	.I1(\infopipe_rcv_inst.ready_bit [0]),
	.I2(\infopipe_rcv_inst.ready_bit [2]),
	.I3(\infopipe_rcv_inst.ready_bit [1]),
	.I4(st_ncnt[2]),
	.I5(state[1]),
	.O(\state_5_1_0_.N_3 )
);
defparam \state_5_1_0_.m2 .INIT=64'h0000FFFF80008000;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_214_b0  (
	.I0(\memory_core.rd_addr_to_memory [23]),
	.I1(system_capim_data_in[23]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [23])
);
defparam \memory_core.rd_addr_to_memory_214_b0 .INIT=32'h0000CAAA;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_211_b0  (
	.I0(\memory_core.rd_addr_to_memory [20]),
	.I1(system_capim_data_in[20]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [20])
);
defparam \memory_core.rd_addr_to_memory_211_b0 .INIT=32'h0000CAAA;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_209_b0  (
	.I0(\memory_core.rd_addr_to_memory [18]),
	.I1(system_capim_data_in[18]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [18])
);
defparam \memory_core.rd_addr_to_memory_209_b0 .INIT=32'h0000CAAA;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_205_b0  (
	.I0(\memory_core.rd_addr_to_memory [14]),
	.I1(system_capim_data_in[14]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [14])
);
defparam \memory_core.rd_addr_to_memory_205_b0 .INIT=32'h0000CAAA;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_202_b0  (
	.I0(\memory_core.rd_addr_to_memory [11]),
	.I1(system_capim_data_in[11]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [11])
);
defparam \memory_core.rd_addr_to_memory_202_b0 .INIT=32'h0000CAAA;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_203_b0  (
	.I0(\memory_core.rd_addr_to_memory [12]),
	.I1(system_capim_data_in[12]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [12])
);
defparam \memory_core.rd_addr_to_memory_203_b0 .INIT=32'h0000CAAA;
// @221:479
  LUT6 \memory_core.data_out_1_sqmuxa_cZ  (
	.I0(\memory_core.state_rd [0]),
	.I1(\memory_core.state_rd [1]),
	.I2(system_capim_rd_in),
	.I3(system_capim_enable_in),
	.I4(system_capim_wr_in),
	.I5(umr_reset),
	.O(\memory_core.data_out_1_sqmuxa )
);
defparam \memory_core.data_out_1_sqmuxa_cZ .INIT=64'h0000000000E2E2E2;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_206_b0  (
	.I0(\memory_core.rd_addr_to_memory [15]),
	.I1(system_capim_data_in[15]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [15])
);
defparam \memory_core.rd_addr_to_memory_206_b0 .INIT=32'h0000CAAA;
// @221:473
  LUT5 \memory_core.rd_addr_to_memory_204_b0  (
	.I0(\memory_core.rd_addr_to_memory [13]),
	.I1(system_capim_data_in[13]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.rd_addr_to_memory_qxu [13])
);
defparam \memory_core.rd_addr_to_memory_204_b0 .INIT=32'h0000CAAA;
  FDR mem_we_Z (
	.Q(mem_we),
	.D(mem_we_0),
	.C(infopipe_clk),
	.R(infopipe_reset)
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[27]  (
	.Q(\memory_core.rd_addr_to_memory [27]),
	.D(\memory_core.rd_addr_to_memory_s [27]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[26]  (
	.Q(\memory_core.rd_addr_to_memory [26]),
	.D(\memory_core.rd_addr_to_memory_s [26]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[25]  (
	.Q(\memory_core.rd_addr_to_memory [25]),
	.D(\memory_core.rd_addr_to_memory_s [25]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[24]  (
	.Q(\memory_core.rd_addr_to_memory [24]),
	.D(\memory_core.rd_addr_to_memory_s [24]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[23]  (
	.Q(\memory_core.rd_addr_to_memory [23]),
	.D(\memory_core.rd_addr_to_memory_s [23]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[22]  (
	.Q(\memory_core.rd_addr_to_memory [22]),
	.D(\memory_core.rd_addr_to_memory_s [22]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[21]  (
	.Q(\memory_core.rd_addr_to_memory [21]),
	.D(\memory_core.rd_addr_to_memory_s [21]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[20]  (
	.Q(\memory_core.rd_addr_to_memory [20]),
	.D(\memory_core.rd_addr_to_memory_s [20]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[19]  (
	.Q(\memory_core.rd_addr_to_memory [19]),
	.D(\memory_core.rd_addr_to_memory_s [19]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[18]  (
	.Q(\memory_core.rd_addr_to_memory [18]),
	.D(\memory_core.rd_addr_to_memory_s [18]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[17]  (
	.Q(\memory_core.rd_addr_to_memory [17]),
	.D(\memory_core.rd_addr_to_memory_s [17]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[16]  (
	.Q(\memory_core.rd_addr_to_memory [16]),
	.D(\memory_core.rd_addr_to_memory_s [16]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[15]  (
	.Q(\memory_core.rd_addr_to_memory [15]),
	.D(\memory_core.rd_addr_to_memory_s [15]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[14]  (
	.Q(\memory_core.rd_addr_to_memory [14]),
	.D(\memory_core.rd_addr_to_memory_s [14]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[13]  (
	.Q(\memory_core.rd_addr_to_memory [13]),
	.D(\memory_core.rd_addr_to_memory_s [13]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[12]  (
	.Q(\memory_core.rd_addr_to_memory [12]),
	.D(\memory_core.rd_addr_to_memory_s [12]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[11]  (
	.Q(\memory_core.rd_addr_to_memory [11]),
	.D(\memory_core.rd_addr_to_memory_s [11]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[10]  (
	.Q(\memory_core.rd_addr_to_memory [10]),
	.D(\memory_core.rd_addr_to_memory_s [10]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[9]  (
	.Q(\memory_core.rd_addr_to_memory [9]),
	.D(\memory_core.rd_addr_to_memory_s [9]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[8]  (
	.Q(\memory_core.rd_addr_to_memory [8]),
	.D(\memory_core.rd_addr_to_memory_s [8]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[7]  (
	.Q(\memory_core.rd_addr_to_memory [7]),
	.D(\memory_core.rd_addr_to_memory_s [7]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[6]  (
	.Q(\memory_core.rd_addr_to_memory [6]),
	.D(\memory_core.rd_addr_to_memory_s [6]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[5]  (
	.Q(\memory_core.rd_addr_to_memory [5]),
	.D(\memory_core.rd_addr_to_memory_s [5]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[4]  (
	.Q(\memory_core.rd_addr_to_memory [4]),
	.D(\memory_core.rd_addr_to_memory_s [4]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[3]  (
	.Q(\memory_core.rd_addr_to_memory [3]),
	.D(\memory_core.rd_addr_to_memory_s [3]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[2]  (
	.Q(\memory_core.rd_addr_to_memory [2]),
	.D(\memory_core.rd_addr_to_memory_s [2]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[1]  (
	.Q(\memory_core.rd_addr_to_memory [1]),
	.D(\memory_core.rd_addr_to_memory_s [1]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @221:473
  FDE \memory_core.rd_addr_to_memory_Z[0]  (
	.Q(\memory_core.rd_addr_to_memory [0]),
	.D(\memory_core.rd_addr_to_memory_s [0]),
	.C(umr_clk),
	.CE(\memory_core.rd_addr_to_memorye )
);
// @225:2311
  FDE \debug_cnt_ack_rt_flag_Z[7]  (
	.Q(debug_cnt_ack_rt_flag[7]),
	.D(debug_cnt_ack_rt_flag_s[7]),
	.C(infopipe_clk),
	.CE(debug_cnt_ack_rt_flage)
);
// @225:2311
  FDE \debug_cnt_ack_rt_flag_Z[6]  (
	.Q(debug_cnt_ack_rt_flag[6]),
	.D(debug_cnt_ack_rt_flag_s[6]),
	.C(infopipe_clk),
	.CE(debug_cnt_ack_rt_flage)
);
// @225:2311
  FDE \debug_cnt_ack_rt_flag_Z[5]  (
	.Q(debug_cnt_ack_rt_flag[5]),
	.D(debug_cnt_ack_rt_flag_s[5]),
	.C(infopipe_clk),
	.CE(debug_cnt_ack_rt_flage)
);
// @225:2311
  FDE \debug_cnt_ack_rt_flag_Z[4]  (
	.Q(debug_cnt_ack_rt_flag[4]),
	.D(debug_cnt_ack_rt_flag_s[4]),
	.C(infopipe_clk),
	.CE(debug_cnt_ack_rt_flage)
);
// @225:2311
  FDE \debug_cnt_ack_rt_flag_Z[3]  (
	.Q(debug_cnt_ack_rt_flag[3]),
	.D(debug_cnt_ack_rt_flag_s[3]),
	.C(infopipe_clk),
	.CE(debug_cnt_ack_rt_flage)
);
// @225:2311
  FDE \debug_cnt_ack_rt_flag_Z[2]  (
	.Q(debug_cnt_ack_rt_flag[2]),
	.D(debug_cnt_ack_rt_flag_s[2]),
	.C(infopipe_clk),
	.CE(debug_cnt_ack_rt_flage)
);
// @225:2311
  FDE \debug_cnt_ack_rt_flag_Z[1]  (
	.Q(debug_cnt_ack_rt_flag[1]),
	.D(debug_cnt_ack_rt_flag_s[1]),
	.C(infopipe_clk),
	.CE(debug_cnt_ack_rt_flage)
);
// @225:2311
  FDE \debug_cnt_ack_rt_flag_Z[0]  (
	.Q(debug_cnt_ack_rt_flag[0]),
	.D(debug_cnt_ack_rt_flag_s[0]),
	.C(infopipe_clk),
	.CE(debug_cnt_ack_rt_flage)
);
// @225:2514
  FDR \infopipe_rcv_inst.BIT_Z[3].RCV.rcvcnt[0]  (
	.Q(CO0_0),
	.D(CO0_0_i),
	.C(infopipe_clk),
	.R(\infopipe_rcv_inst.BIT[3].RCV.rcvcnt_1_sqmuxa_i )
);
// @221:473
  FDE \memory_core.data_out_Z[31]  (
	.Q(system_capim_data_out[31]),
	.D(\memory_core.data_out_wire [31]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[30]  (
	.Q(system_capim_data_out[30]),
	.D(\memory_core.data_out_wire [30]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[29]  (
	.Q(system_capim_data_out[29]),
	.D(\memory_core.data_out_wire [29]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[28]  (
	.Q(system_capim_data_out[28]),
	.D(\memory_core.data_out_wire [28]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[27]  (
	.Q(system_capim_data_out[27]),
	.D(\memory_core.data_out_wire [27]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[26]  (
	.Q(system_capim_data_out[26]),
	.D(\memory_core.data_out_wire [26]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[25]  (
	.Q(system_capim_data_out[25]),
	.D(\memory_core.data_out_wire [25]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[24]  (
	.Q(system_capim_data_out[24]),
	.D(\memory_core.data_out_wire [24]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[23]  (
	.Q(system_capim_data_out[23]),
	.D(\memory_core.data_out_wire [23]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[22]  (
	.Q(system_capim_data_out[22]),
	.D(\memory_core.data_out_wire [22]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[21]  (
	.Q(system_capim_data_out[21]),
	.D(\memory_core.data_out_wire [21]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[20]  (
	.Q(system_capim_data_out[20]),
	.D(\memory_core.data_out_wire [20]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[19]  (
	.Q(system_capim_data_out[19]),
	.D(\memory_core.data_out_wire [19]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[18]  (
	.Q(system_capim_data_out[18]),
	.D(\memory_core.data_out_wire [18]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[17]  (
	.Q(system_capim_data_out[17]),
	.D(\memory_core.data_out_wire [17]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[16]  (
	.Q(system_capim_data_out[16]),
	.D(\memory_core.data_out_wire [16]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[15]  (
	.Q(system_capim_data_out[15]),
	.D(\memory_core.data_out_wire [15]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[14]  (
	.Q(system_capim_data_out[14]),
	.D(\memory_core.data_out_wire [14]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[13]  (
	.Q(system_capim_data_out[13]),
	.D(\memory_core.data_out_wire [13]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[12]  (
	.Q(system_capim_data_out[12]),
	.D(\memory_core.data_out_wire [12]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[11]  (
	.Q(system_capim_data_out[11]),
	.D(\memory_core.data_out_wire [11]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[10]  (
	.Q(system_capim_data_out[10]),
	.D(\memory_core.data_out_wire [10]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[9]  (
	.Q(system_capim_data_out[9]),
	.D(\memory_core.data_out_wire [9]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[8]  (
	.Q(system_capim_data_out[8]),
	.D(\memory_core.data_out_wire [8]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[7]  (
	.Q(system_capim_data_out[7]),
	.D(\memory_core.data_out_wire [7]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[6]  (
	.Q(system_capim_data_out[6]),
	.D(\memory_core.data_out_wire [6]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[5]  (
	.Q(system_capim_data_out[5]),
	.D(\memory_core.data_out_wire [5]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[4]  (
	.Q(system_capim_data_out[4]),
	.D(\memory_core.data_out_wire [4]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[3]  (
	.Q(system_capim_data_out[3]),
	.D(\memory_core.data_out_wire [3]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[2]  (
	.Q(system_capim_data_out[2]),
	.D(\memory_core.data_out_wire [2]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[1]  (
	.Q(system_capim_data_out[1]),
	.D(\memory_core.data_out_wire [1]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:473
  FDE \memory_core.data_out_Z[0]  (
	.Q(system_capim_data_out[0]),
	.D(\memory_core.data_out_wire [0]),
	.C(umr_clk),
	.CE(\memory_core.data_out_1_sqmuxa )
);
// @221:479
  LUT3 \memory_core.data_out_1_sqmuxa_0dup  (
	.I0(system_capim_enable_in),
	.I1(system_capim_wr_in),
	.I2(umr_reset),
	.O(\memory_core.rd_addr_to_memory_scalar )
);
defparam \memory_core.data_out_1_sqmuxa_0dup .INIT=8'h07;
// @225:2311
  LUT2 debug_cnt_ack_rt_flag_189_m1 (
	.I0(debug_cnt_ack_rt_flag[6]),
	.I1(infopipe_reset),
	.O(debug_cnt_ack_rt_flag_qxu[6])
);
defparam debug_cnt_ack_rt_flag_189_m1.INIT=4'h2;
// @225:2311
  LUT2 debug_cnt_ack_rt_flag_188_m1 (
	.I0(debug_cnt_ack_rt_flag[5]),
	.I1(infopipe_reset),
	.O(debug_cnt_ack_rt_flag_qxu[5])
);
defparam debug_cnt_ack_rt_flag_188_m1.INIT=4'h2;
// @225:2311
  LUT2 debug_cnt_ack_rt_flag_187_m1 (
	.I0(debug_cnt_ack_rt_flag[4]),
	.I1(infopipe_reset),
	.O(debug_cnt_ack_rt_flag_qxu[4])
);
defparam debug_cnt_ack_rt_flag_187_m1.INIT=4'h2;
// @225:2311
  LUT2 debug_cnt_ack_rt_flag_186_m1 (
	.I0(debug_cnt_ack_rt_flag[3]),
	.I1(infopipe_reset),
	.O(debug_cnt_ack_rt_flag_qxu[3])
);
defparam debug_cnt_ack_rt_flag_186_m1.INIT=4'h2;
// @225:2311
  LUT2 debug_cnt_ack_rt_flag_185_m1 (
	.I0(debug_cnt_ack_rt_flag[2]),
	.I1(infopipe_reset),
	.O(debug_cnt_ack_rt_flag_qxu[2])
);
defparam debug_cnt_ack_rt_flag_185_m1.INIT=4'h2;
// @225:2311
  LUT2 debug_cnt_ack_rt_flag_184_m1 (
	.I0(debug_cnt_ack_rt_flag[1]),
	.I1(infopipe_reset),
	.O(debug_cnt_ack_rt_flag_qxu[1])
);
defparam debug_cnt_ack_rt_flag_184_m1.INIT=4'h2;
// @225:2311
  LUT2 debug_cnt_ack_rt_flag_183_m1 (
	.I0(debug_cnt_ack_rt_flag[0]),
	.I1(infopipe_reset),
	.O(debug_cnt_ack_rt_flag_qxu[0])
);
defparam debug_cnt_ack_rt_flag_183_m1.INIT=4'h2;
  LUT4 \state_s_0[0]  (
	.I0(state[1]),
	.I1(st_ncnt[2]),
	.I2(infopipe_data_ready),
	.I3(infopipe_reset),
	.O(state_0)
);
defparam \state_s_0[0] .INIT=16'hFF8D;
  LUT5 \memory_core.state_rd_1_sqmuxa_0_e_cZ  (
	.I0(\memory_core.state_rd [0]),
	.I1(\memory_core.state_rd [1]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.state_rd_1_sqmuxa_0_e )
);
defparam \memory_core.state_rd_1_sqmuxa_0_e_cZ .INIT=32'h00000111;
  LUT5 \memory_core.state_rd_4_0_e_cZ[1]  (
	.I0(\memory_core.state_rd [0]),
	.I1(\memory_core.state_rd [1]),
	.I2(system_capim_enable_in),
	.I3(system_capim_wr_in),
	.I4(umr_reset),
	.O(\memory_core.state_rd_4_0_e [1])
);
defparam \memory_core.state_rd_4_0_e_cZ[1] .INIT=32'h00000EEE;
  LUT6 N_13_i_0_e_cZ (
	.I0(state[0]),
	.I1(st_ncnt[1]),
	.I2(st_ncnt[0]),
	.I3(st_ncnt[2]),
	.I4(infopipe_data_ready),
	.I5(infopipe_reset),
	.O(N_13_i_0_e)
);
defparam N_13_i_0_e_cZ.INIT=64'h000000001540BF40;
  LUT5 N_239_i_0_e_cZ (
	.I0(st_ncnt[1]),
	.I1(st_ncnt[0]),
	.I2(state[0]),
	.I3(infopipe_data_ready),
	.I4(infopipe_reset),
	.O(N_239_i_0_e)
);
defparam N_239_i_0_e_cZ.INIT=32'h000006A6;
  LUT4 N_9_i_0_e_cZ (
	.I0(state[0]),
	.I1(st_ncnt[0]),
	.I2(infopipe_data_ready),
	.I3(infopipe_reset),
	.O(N_9_i_0_e)
);
defparam N_9_i_0_e_cZ.INIT=16'h0019;
// @221:473
  FD \memory_core.state_rd_Z[0]  (
	.Q(\memory_core.state_rd [0]),
	.D(\memory_core.state_rd_1_sqmuxa_0_e ),
	.C(umr_clk)
);
// @221:473
  FD \memory_core.state_rd_Z[1]  (
	.Q(\memory_core.state_rd [1]),
	.D(\memory_core.state_rd_4_0_e [1]),
	.C(umr_clk)
);
  FD \memory_core.mem_en_Z  (
	.Q(\memory_core.mem_en ),
	.D(\memory_core.mem_en_e_e_0 ),
	.C(umr_clk)
);
  CARRY8 \memory_core.addr_of_data_out_cry_3_cZ  (
	.CO({\memory_core.addr_of_data_out_cry_7 , \memory_core.addr_of_data_out_cry_6 , \memory_core.addr_of_data_out_cry_5 , \memory_core.addr_of_data_out_cry_4 , \memory_core.addr_of_data_out_cry_3 , \memory_core.addr_of_data_out_cry_2 , \memory_core.addr_of_data_out_cry_1 , \memory_core.addr_of_data_out_cry_0 }),
	.O({\memory_core.addr_of_data_out [7:1], addr_of_data_out_cry_3_O[0]}),
	.CI(GND),
	.CI_TOP(GND),
	.DI({VCC, VCC, VCC, VCC, VCC, VCC, VCC, VCC}),
	.S(\memory_core.rd_addr_to_memory_i [7:0])
);
  CARRY8 \memory_core.addr_of_data_out_cry_11_cZ  (
	.CO({\memory_core.addr_of_data_out_cry_15 , \memory_core.addr_of_data_out_cry_14 , \memory_core.addr_of_data_out_cry_13 , \memory_core.addr_of_data_out_cry_12 , \memory_core.addr_of_data_out_cry_11 , \memory_core.addr_of_data_out_cry_10 , \memory_core.addr_of_data_out_cry_9 , \memory_core.addr_of_data_out_cry_8 }),
	.O(\memory_core.addr_of_data_out [15:8]),
	.CI(\memory_core.addr_of_data_out_cry_7 ),
	.CI_TOP(GND),
	.DI({VCC, VCC, VCC, VCC, VCC, VCC, VCC, VCC}),
	.S(\memory_core.rd_addr_to_memory_i [15:8])
);
  CARRY8 \memory_core.addr_of_data_out_cry_19_cZ  (
	.CO({\memory_core.addr_of_data_out_cry_23 , \memory_core.addr_of_data_out_cry_22 , \memory_core.addr_of_data_out_cry_21 , \memory_core.addr_of_data_out_cry_20 , \memory_core.addr_of_data_out_cry_19 , \memory_core.addr_of_data_out_cry_18 , \memory_core.addr_of_data_out_cry_17 , \memory_core.addr_of_data_out_cry_16 }),
	.O(\memory_core.addr_of_data_out [23:16]),
	.CI(\memory_core.addr_of_data_out_cry_15 ),
	.CI_TOP(GND),
	.DI({VCC, VCC, VCC, VCC, VCC, VCC, VCC, VCC}),
	.S(\memory_core.rd_addr_to_memory_i [23:16])
);
  CARRY8 \memory_core.addr_of_data_out_s_27  (
	.CO({NC11, NC10, NC9, NC8, addr_of_data_out_s_27_CO[3], \memory_core.addr_of_data_out_cry_26 , \memory_core.addr_of_data_out_cry_25 , \memory_core.addr_of_data_out_cry_24 }),
	.O({NC15, NC14, NC13, NC12, \memory_core.addr_of_data_out [27:24]}),
	.CI(\memory_core.addr_of_data_out_cry_23 ),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, VCC, VCC, VCC}),
	.S({GND, GND, GND, GND, \memory_core.rd_addr_to_memory_i [27:24]})
);
  CARRY8 \debug_cnt_ack_rt_flag_cry_cZ[2]  (
	.CO({debug_cnt_ack_rt_flag_cry[6:0], debug_cnt_ack_rt_flag_cry_cy}),
	.O({debug_cnt_ack_rt_flag_s[6:0], debug_cnt_ack_rt_flag_cry_O[2]}),
	.CI(VCC),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, GND}),
	.S({debug_cnt_ack_rt_flag_qxu[6:0], infopipe_reset_i})
);
  CARRY8 \memory_core.rd_addr_to_memory_cry_cZ[2]  (
	.CO({\memory_core.rd_addr_to_memory_cry [6:0], \memory_core.rd_addr_to_memory_cry_cy }),
	.O({\memory_core.rd_addr_to_memory_s [6:0], rd_addr_to_memory_cry_O[2]}),
	.CI(VCC),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, GND}),
	.S({\memory_core.rd_addr_to_memory_qxu [6:0], \memory_core.rd_addr_to_memory_scalar })
);
  CARRY8 \memory_core.rd_addr_to_memory_cry_cZ[10]  (
	.CO(\memory_core.rd_addr_to_memory_cry [14:7]),
	.O(\memory_core.rd_addr_to_memory_s [14:7]),
	.CI(\memory_core.rd_addr_to_memory_cry [6]),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, GND}),
	.S(\memory_core.rd_addr_to_memory_qxu [14:7])
);
  CARRY8 \memory_core.rd_addr_to_memory_cry_cZ[18]  (
	.CO(\memory_core.rd_addr_to_memory_cry [22:15]),
	.O(\memory_core.rd_addr_to_memory_s [22:15]),
	.CI(\memory_core.rd_addr_to_memory_cry [14]),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, GND}),
	.S(\memory_core.rd_addr_to_memory_qxu [22:15])
);
  CARRY8 \memory_core.rd_addr_to_memory_cry_cZ[26]  (
	.CO({NC3, NC2, NC1, NC0, \memory_core.rd_addr_to_memory_cry [26:23]}),
	.O({NC7, NC6, NC5, NC4, \memory_core.rd_addr_to_memory_s [26:23]}),
	.CI(\memory_core.rd_addr_to_memory_cry [22]),
	.CI_TOP(GND),
	.DI({GND, GND, GND, GND, GND, GND, GND, GND}),
	.S({GND, GND, GND, GND, \memory_core.rd_addr_to_memory_qxu [26:23]})
);
// @221:473
  LUT2 \memory_core.rd_addr_to_memory_s_cZ[27]  (
	.I0(\memory_core.rd_addr_to_memory_qxu [27]),
	.I1(\memory_core.rd_addr_to_memory_cry [26]),
	.O(\memory_core.rd_addr_to_memory_s [27])
);
defparam \memory_core.rd_addr_to_memory_s_cZ[27] .INIT=4'h6;
// @225:2311
  LUT2 \debug_cnt_ack_rt_flag_s_cZ[7]  (
	.I0(debug_cnt_ack_rt_flag_qxu[7]),
	.I1(debug_cnt_ack_rt_flag_cry[6]),
	.O(debug_cnt_ack_rt_flag_s[7])
);
defparam \debug_cnt_ack_rt_flag_s_cZ[7] .INIT=4'h6;
assign req_done_out = GND;
endmodule /* hstdm_memory_Z1_FB1_uA */

(* haps_ip_type="bsa19_system_ip" , DONT_TOUCH="TRUE" *)
`ifndef PC_SIMULATION
module bsa19_system_ip (
  umr3_sib_link_in,
  umr3_sib_link_out,
  afpga_glnk_out,
  afpga_lock_cdo_glnk_i,
  afpga_lock_clk_i,
  afpga_lock_ce_i,
  afpga_lock_cdi_o,
  ref_clk_p,
  ref_clk_n,
  ref_reset,
  dummy_port,
  mnglink_tx,
  mnglink_rx,
  gt1_refclk_p,
  gt1_refclk_n,
  gt1_txp,
  gt1_txn,
  gt1_rxp,
  gt1_rxn,
  DBG_RXP,
  DBG_RXN,
  DBG_TXP,
  DBG_TXN,
  DBG_REFCLKP_0,
  DBG_REFCLKN_0,
  dbg_xcvr_user_clk,
  dbg_dtd_reset,
  dbg_capiclk,
  dbg_inta,
  dbg_intr,
  dbg_dout_wr,
  dbg_bram_dout,
  dbg_din_rd,
  dbg_bram_din,
  dbg_snps_dtdpipe_inbus,
  dbg_snps_dtdpipe_outbus,
  zpl_out_sib_rst,
  zpl_out_sib_clk,
  zpl_out_dsib_tdata,
  zpl_out_dsib_tsop,
  zpl_out_dsib_tlast,
  zpl_out_dsib_twkeep,
  zpl_out_dsib_tvalid,
  zpl_iwa_dsib_tready,
  zpl_iwo_usib_tdata,
  zpl_iwo_usib_tsop,
  zpl_iwo_usib_tlast,
  zpl_iwo_usib_twkeep,
  zpl_iwo_usib_tvalid,
  zpl_out_usib_tready,
  zpl1ton_usib_in0_req,
  zpl1ton_usib_gnt,
  zpl_out_wc_ip_clk,
  zpl_out_srb_clk,
  zpl_out_srb_rst,
  zpl_out_srb_addr,
  zpl_out_srb_data_wr,
  zpl_iwo_srb_data_rd,
  zpl_out_srb_wr,
  umr3_ds0,
  umr3_ds1,
  haps_fpga_id,
  ufpga_lock_clk_o,
  ufpga_lock_ce_o,
  ufpga_lock_cdo_o,
  ufpga_lock_cdi_i,
  ufpga_hstdm_ctrl_o,
  ufpga_hstdm_status_i,
  ufpga_scratch_o,
  ufpga_scratch_i,
  ufpga_reset_n_o,
  ufpga_type_id_o,
  ufpga_loc_id_o,
  ufpga_id_o,
  ufpga_usr_id_o,
  ufpga_handle_o,
  ufpga_timestamp_o,
  HAPS_SIGNATURE_i,
  capim2_data_in_0,
  capim2_data_out_0,
  capim2_rd_out_0,
  capim2_wr_out_0,
  capim2_enable_out_0,
  capim2_data_in_1,
  capim2_data_out_1,
  capim2_rd_out_1,
  capim2_wr_out_1,
  capim2_enable_out_1,
  capim2_data_in_2,
  capim2_data_out_2,
  capim2_rd_out_2,
  capim2_wr_out_2,
  capim2_enable_out_2,
  capim2_data_in_3,
  capim2_data_out_3,
  capim2_rd_out_3,
  capim2_wr_out_3,
  capim2_enable_out_3,
  capim2_data_in_4,
  capim2_data_out_4,
  capim2_rd_out_4,
  capim2_wr_out_4,
  capim2_enable_out_4,
  capim2_data_in_6,
  capim2_data_out_6,
  capim2_rd_out_6,
  capim2_wr_out_6,
  capim2_enable_out_6,
  capim2_data_in_7,
  capim2_data_out_7,
  capim2_rd_out_7,
  capim2_wr_out_7,
  capim2_enable_out_7,
  capim3_enable_out_0,
  capim3_command_out_0,
  capim3_command_valid_out_0,
  capim3_count_out_0,
  capim3_dout_out_0,
  capim3_dout_valid_out_0,
  capim3_din_in_0,
  capim3_din_valid_in_0,
  capim3_din_ready_out_0,
  capim3_inti_type_in_0,
  capim3_inti_req_in_0,
  capim3_inti_ack_out_0,
  reg_if_wr,
  reg_if_addr,
  reg_if_din,
  reg_if_dout_0,
  reg_if_en_0,
  reg_if_dout_1,
  reg_if_en_1,
  sys_clk,
  sys_reset_n,
  gclk0,
  umr3_clk,
  umr3_reset,
  umr2_clk,
  umr2_reset,
  haps_clk_200,
  haps_clk_10,
  umr3_clk_div_val,
  haps_clk_160,
  haps_clk_10_2_sync,
  haps_clk_50_2_sync,
  hstdm_refclk_100
)
;
parameter UMR3_DATA_BITWIDTH=256;
input [1:0] umr3_sib_link_in ;
output [1:0] umr3_sib_link_out ;
output afpga_glnk_out ;
input afpga_lock_cdo_glnk_i ;
input afpga_lock_clk_i ;
input afpga_lock_ce_i ;
output afpga_lock_cdi_o ;
input ref_clk_p ;
input ref_clk_n ;
input ref_reset ;
output dummy_port ;
output mnglink_tx ;
input mnglink_rx ;
input gt1_refclk_p ;
input gt1_refclk_n ;
output [0:3] gt1_txp ;
output [0:3] gt1_txn ;
input [0:3] gt1_rxp ;
input [0:3] gt1_rxn ;
input [7:0] DBG_RXP ;
input [7:0] DBG_RXN ;
output [7:0] DBG_TXP ;
output [7:0] DBG_TXN ;
input [3:0] DBG_REFCLKP_0 ;
input [3:0] DBG_REFCLKN_0 ;
output [3:0] dbg_xcvr_user_clk ;
output dbg_dtd_reset ;
output dbg_capiclk ;
output dbg_inta ;
input dbg_intr ;
output dbg_dout_wr ;
output [31:0] dbg_bram_dout ;
output dbg_din_rd ;
input [31:0] dbg_bram_din ;
input [3999:0] dbg_snps_dtdpipe_inbus ;
output [3999:0] dbg_snps_dtdpipe_outbus ;
output zpl_out_sib_rst ;
output zpl_out_sib_clk ;
output [255:0] zpl_out_dsib_tdata ;
output zpl_out_dsib_tsop ;
output zpl_out_dsib_tlast ;
output [7:0] zpl_out_dsib_twkeep ;
output zpl_out_dsib_tvalid ;
input zpl_iwa_dsib_tready ;
input [255:0] zpl_iwo_usib_tdata ;
input zpl_iwo_usib_tsop ;
input zpl_iwo_usib_tlast ;
input [7:0] zpl_iwo_usib_twkeep ;
input zpl_iwo_usib_tvalid ;
output zpl_out_usib_tready ;
input [5:0] zpl1ton_usib_in0_req ;
output [5:0] zpl1ton_usib_gnt ;
output zpl_out_wc_ip_clk ;
output zpl_out_srb_clk ;
output zpl_out_srb_rst ;
output [15:0] zpl_out_srb_addr ;
output [31:0] zpl_out_srb_data_wr ;
input [31:0] zpl_iwo_srb_data_rd ;
output zpl_out_srb_wr ;
inout [519:0] umr3_ds0 /* synthesis syn_tristate = 1 */ ;
inout [519:0] umr3_ds1 /* synthesis syn_tristate = 1 */ ;
output [2:0] haps_fpga_id ;
output ufpga_lock_clk_o ;
output ufpga_lock_ce_o ;
output ufpga_lock_cdo_o ;
input ufpga_lock_cdi_i ;
output [31:0] ufpga_hstdm_ctrl_o ;
input [31:0] ufpga_hstdm_status_i ;
output [31:0] ufpga_scratch_o ;
input [31:0] ufpga_scratch_i ;
output ufpga_reset_n_o ;
output [31:0] ufpga_type_id_o ;
output [31:0] ufpga_loc_id_o ;
output [31:0] ufpga_id_o ;
output [31:0] ufpga_usr_id_o ;
output [31:0] ufpga_handle_o ;
output [31:0] ufpga_timestamp_o ;
input [31:0] HAPS_SIGNATURE_i ;
input [31:0] capim2_data_in_0 ;
output [31:0] capim2_data_out_0 ;
output capim2_rd_out_0 ;
output capim2_wr_out_0 ;
output capim2_enable_out_0 ;
input [31:0] capim2_data_in_1 ;
output [31:0] capim2_data_out_1 ;
output capim2_rd_out_1 ;
output capim2_wr_out_1 ;
output capim2_enable_out_1 ;
input [31:0] capim2_data_in_2 ;
output [31:0] capim2_data_out_2 ;
output capim2_rd_out_2 ;
output capim2_wr_out_2 ;
output capim2_enable_out_2 ;
input [31:0] capim2_data_in_3 ;
output [31:0] capim2_data_out_3 ;
output capim2_rd_out_3 ;
output capim2_wr_out_3 ;
output capim2_enable_out_3 ;
input [31:0] capim2_data_in_4 ;
output [31:0] capim2_data_out_4 ;
output capim2_rd_out_4 ;
output capim2_wr_out_4 ;
output capim2_enable_out_4 ;
input [31:0] capim2_data_in_6 ;
output [31:0] capim2_data_out_6 ;
output capim2_rd_out_6 ;
output capim2_wr_out_6 ;
output capim2_enable_out_6 ;
input [31:0] capim2_data_in_7 ;
output [31:0] capim2_data_out_7 ;
output capim2_rd_out_7 ;
output capim2_wr_out_7 ;
output capim2_enable_out_7 ;
output capim3_enable_out_0 ;
output [31:0] capim3_command_out_0 ;
output capim3_command_valid_out_0 ;
output [31:0] capim3_count_out_0 ;
output [31:0] capim3_dout_out_0 ;
output capim3_dout_valid_out_0 ;
input [31:0] capim3_din_in_0 ;
input capim3_din_valid_in_0 ;
output capim3_din_ready_out_0 ;
input [31:0] capim3_inti_type_in_0 ;
input capim3_inti_req_in_0 ;
output capim3_inti_ack_out_0 ;
output reg_if_wr ;
output [15:0] reg_if_addr ;
output [31:0] reg_if_din ;
input [31:0] reg_if_dout_0 ;
output reg_if_en_0 ;
input [31:0] reg_if_dout_1 ;
output reg_if_en_1 ;
output sys_clk ;
output sys_reset_n ;
output gclk0 ;
output umr3_clk ;
output umr3_reset ;
output umr2_clk ;
output umr2_reset ;
output haps_clk_200 ;
output haps_clk_10 ;
output [3:0] umr3_clk_div_val ;
output haps_clk_160 ;
output haps_clk_10_2_sync ;
output haps_clk_50_2_sync ;
output hstdm_refclk_100 ;
endmodule /* bsa19_system_ip */


`endif
(* haps_ip_type="bsa19_system_ip_wrapper" , DONT_TOUCH="TRUE" *)module bsa19_system_ip_wrapper_256s_0_25s_1_1_1_1_1611514078 (
  hstdm_system_capim_interface_ctrl_data_out,
  hstdm_controller_system_capim_data_out,
  hstdm_system_capim_interface_mem_data_out,
  hstdm_memory_system_capim_data_out,
  haps_system_memory_interface_raddr_raw,
  haps_system_memory_data_out,
  DBG_REFCLKN_0,
  DBG_REFCLKP_0,
  DBG_TXN,
  DBG_TXP,
  DBG_RXN,
  DBG_RXP,
  GT1_RXN,
  GT1_RXP,
  GT1_TXN,
  GT1_TXP,
  AFPGA_LOCK_CDO_GLNK_I_c_0,
  UMR3_SIB_LINK_OUT_c,
  UMR3_SIB_LINK_IN_c,
  umr2_clk,
  umr3_clk,
  hstdm_refclk_100,
  ufpga_lock_cdi_i,
  umr3_reset,
  hstdm_system_capim_interface_enable_ctrl_out,
  hstdm_system_capim_interface_ctrl_wr_out,
  hstdm_system_capim_interface_ctrl_rd_out,
  hstdm_system_capim_interface_enable_memory_out,
  hstdm_system_capim_interface_mem_wr_out,
  hstdm_system_capim_interface_mem_rd_out,
  haps_system_memory_interface_enable_in,
  haps_system_memory_interface_wr_raw,
  haps_system_memory_interface_rd_raw,
  ufpga_reset_n_o,
  ufpga_lock_cdo_o,
  ufpga_lock_ce_o,
  ufpga_lock_clk_o,
  DUMMY_GSR_PORT_c,
  GT1_REFCLK_N,
  GT1_REFCLK_P,
  MNGLINK_RX_c,
  MNGLINK_TX_c,
  DUMMY_PORT_c,
  REF_RESET_c,
  REF_CLK_N,
  REF_CLK_P,
  AFPGA_LOCK_CDi_O_c,
  AFPGA_LOCK_CE_I_c,
  AFPGA_LOCK_CLK_I_c,
  AFPGA_GLNK_OUT_c
)
;
output [27:0] hstdm_system_capim_interface_ctrl_data_out ;
input [31:0] hstdm_controller_system_capim_data_out ;
output [27:0] hstdm_system_capim_interface_mem_data_out ;
input [31:0] hstdm_memory_system_capim_data_out ;
output [27:0] haps_system_memory_interface_raddr_raw ;
input [31:0] haps_system_memory_data_out ;
input [3:0] DBG_REFCLKN_0 ;
input [3:0] DBG_REFCLKP_0 ;
output [7:0] DBG_TXN ;
output [7:0] DBG_TXP ;
input [7:0] DBG_RXN ;
input [7:0] DBG_RXP ;
input [3:0] GT1_RXN ;
input [3:0] GT1_RXP ;
output [3:0] GT1_TXN ;
output [3:0] GT1_TXP ;
input AFPGA_LOCK_CDO_GLNK_I_c_0 ;
output [1:0] UMR3_SIB_LINK_OUT_c ;
input [1:0] UMR3_SIB_LINK_IN_c ;
output umr2_clk ;
output umr3_clk ;
output hstdm_refclk_100 ;
input ufpga_lock_cdi_i ;
output umr3_reset ;
output hstdm_system_capim_interface_enable_ctrl_out ;
output hstdm_system_capim_interface_ctrl_wr_out ;
output hstdm_system_capim_interface_ctrl_rd_out ;
output hstdm_system_capim_interface_enable_memory_out ;
output hstdm_system_capim_interface_mem_wr_out ;
output hstdm_system_capim_interface_mem_rd_out ;
output haps_system_memory_interface_enable_in ;
output haps_system_memory_interface_wr_raw ;
output haps_system_memory_interface_rd_raw ;
output ufpga_reset_n_o ;
output ufpga_lock_cdo_o ;
inout ufpga_lock_ce_o /* synthesis syn_tristate = 1 */ ;
inout ufpga_lock_clk_o /* synthesis syn_tristate = 1 */ ;
output DUMMY_GSR_PORT_c ;
input GT1_REFCLK_N ;
input GT1_REFCLK_P ;
input MNGLINK_RX_c ;
output MNGLINK_TX_c ;
output DUMMY_PORT_c ;
input REF_RESET_c ;
input REF_CLK_N ;
input REF_CLK_P ;
output AFPGA_LOCK_CDi_O_c ;
input AFPGA_LOCK_CE_I_c ;
input AFPGA_LOCK_CLK_I_c ;
output AFPGA_GLNK_OUT_c ;
wire AFPGA_LOCK_CDO_GLNK_I_c_0 ;
wire umr2_clk ;
wire umr3_clk ;
wire hstdm_refclk_100 ;
wire ufpga_lock_cdi_i ;
wire umr3_reset ;
wire hstdm_system_capim_interface_enable_ctrl_out ;
wire hstdm_system_capim_interface_ctrl_wr_out ;
wire hstdm_system_capim_interface_ctrl_rd_out ;
wire hstdm_system_capim_interface_enable_memory_out ;
wire hstdm_system_capim_interface_mem_wr_out ;
wire hstdm_system_capim_interface_mem_rd_out ;
wire haps_system_memory_interface_enable_in ;
wire haps_system_memory_interface_wr_raw ;
wire haps_system_memory_interface_rd_raw ;
wire ufpga_reset_n_o ;
wire ufpga_lock_cdo_o ;
wire ufpga_lock_ce_o ;
wire ufpga_lock_clk_o ;
wire DUMMY_GSR_PORT_c ;
wire GT1_REFCLK_N ;
wire GT1_REFCLK_P ;
wire MNGLINK_RX_c ;
wire MNGLINK_TX_c ;
wire DUMMY_PORT_c ;
wire REF_RESET_c ;
wire REF_CLK_N ;
wire REF_CLK_P ;
wire AFPGA_LOCK_CDi_O_c ;
wire AFPGA_LOCK_CE_I_c ;
wire AFPGA_LOCK_CLK_I_c ;
wire AFPGA_GLNK_OUT_c ;
wire [3:0] dbg_xcvr_user_clk;
wire [31:0] dbg_bram_dout;
wire [3999:0] dbg_snps_dtdpipe_outbus;
wire [255:0] zpl_out_dsib_tdata;
wire [7:0] zpl_out_dsib_twkeep;
wire [5:0] zpl1ton_usib_gnt;
wire [15:0] zpl_out_srb_addr;
wire [31:0] zpl_out_srb_data_wr;
wire [2:0] haps_fpga_id;
wire [31:0] capim2_data_out_0;
wire [31:28] capim2_data_out_1;
wire [31:28] capim2_data_out_2;
wire [31:28] capim2_data_out_3;
wire [31:0] capim2_data_out_4;
wire [31:0] capim2_data_out_6;
wire [31:0] capim2_data_out_7;
wire [31:0] capim3_command_out_0;
wire [31:0] capim3_count_out_0;
wire [31:0] capim3_dout_out_0;
wire [15:0] reg_if_addr;
wire [31:0] reg_if_din;
wire dbg_capiclk ;
wire dbg_inta ;
wire GND ;
wire dbg_dout_wr ;
wire dbg_din_rd ;
wire zpl_out_sib_rst ;
wire zpl_out_sib_clk ;
wire zpl_out_dsib_tsop ;
wire zpl_out_dsib_tlast ;
wire zpl_out_dsib_tvalid ;
wire VCC ;
wire zpl_out_usib_tready ;
wire zpl_out_wc_ip_clk ;
wire zpl_out_srb_clk ;
wire zpl_out_srb_rst ;
wire zpl_out_srb_wr ;
wire N_8792 ;
wire N_8793 ;
wire N_8794 ;
wire N_8795 ;
wire N_8796 ;
wire N_8797 ;
wire N_8798 ;
wire N_8799 ;
wire N_8800 ;
wire N_8801 ;
wire N_8802 ;
wire N_8803 ;
wire N_8804 ;
wire N_8805 ;
wire N_8806 ;
wire N_8807 ;
wire N_8808 ;
wire N_8809 ;
wire N_8810 ;
wire N_8811 ;
wire N_8812 ;
wire N_8813 ;
wire N_8814 ;
wire N_8815 ;
wire N_8816 ;
wire N_8817 ;
wire N_8818 ;
wire N_8819 ;
wire N_8820 ;
wire N_8821 ;
wire N_8822 ;
wire N_8823 ;
wire N_8824 ;
wire N_8825 ;
wire N_8826 ;
wire N_8827 ;
wire N_8828 ;
wire N_8829 ;
wire N_8830 ;
wire N_8831 ;
wire N_8832 ;
wire N_8833 ;
wire N_8834 ;
wire N_8835 ;
wire N_8836 ;
wire N_8837 ;
wire N_8838 ;
wire N_8839 ;
wire N_8840 ;
wire N_8841 ;
wire N_8842 ;
wire N_8843 ;
wire N_8844 ;
wire N_8845 ;
wire N_8846 ;
wire N_8847 ;
wire N_8848 ;
wire N_8849 ;
wire N_8850 ;
wire N_8851 ;
wire N_8852 ;
wire N_8853 ;
wire N_8854 ;
wire N_8855 ;
wire N_8856 ;
wire N_8857 ;
wire N_8858 ;
wire N_8859 ;
wire N_8860 ;
wire N_8861 ;
wire N_8862 ;
wire N_8863 ;
wire N_8864 ;
wire N_8865 ;
wire N_8866 ;
wire N_8867 ;
wire N_8868 ;
wire N_8869 ;
wire N_8870 ;
wire N_8871 ;
wire N_8872 ;
wire N_8873 ;
wire N_8874 ;
wire N_8875 ;
wire N_8876 ;
wire N_8877 ;
wire N_8878 ;
wire N_8879 ;
wire N_8880 ;
wire N_8881 ;
wire N_8882 ;
wire N_8883 ;
wire N_8884 ;
wire N_8885 ;
wire N_8886 ;
wire N_8887 ;
wire N_8888 ;
wire N_8889 ;
wire N_8890 ;
wire N_8891 ;
wire N_8892 ;
wire N_8893 ;
wire N_8894 ;
wire N_8895 ;
wire N_8896 ;
wire N_8897 ;
wire N_8898 ;
wire N_8899 ;
wire N_8900 ;
wire N_8901 ;
wire N_8902 ;
wire N_8903 ;
wire N_8904 ;
wire N_8905 ;
wire N_8906 ;
wire N_8907 ;
wire N_8908 ;
wire N_8909 ;
wire N_8910 ;
wire N_8911 ;
wire N_8912 ;
wire N_8913 ;
wire N_8914 ;
wire N_8915 ;
wire N_8916 ;
wire N_8917 ;
wire N_8918 ;
wire N_8919 ;
wire N_8920 ;
wire N_8921 ;
wire N_8922 ;
wire N_8923 ;
wire N_8924 ;
wire N_8925 ;
wire N_8926 ;
wire N_8927 ;
wire N_8928 ;
wire N_8929 ;
wire N_8930 ;
wire N_8931 ;
wire N_8932 ;
wire N_8933 ;
wire N_8934 ;
wire N_8935 ;
wire N_8936 ;
wire N_8937 ;
wire N_8938 ;
wire N_8939 ;
wire N_8940 ;
wire N_8941 ;
wire N_8942 ;
wire N_8943 ;
wire N_8944 ;
wire N_8945 ;
wire N_8946 ;
wire N_8947 ;
wire N_8948 ;
wire N_8949 ;
wire N_8950 ;
wire N_8951 ;
wire N_8952 ;
wire N_8953 ;
wire N_8954 ;
wire N_8955 ;
wire N_8956 ;
wire N_8957 ;
wire N_8958 ;
wire N_8959 ;
wire N_8960 ;
wire N_8961 ;
wire N_8962 ;
wire N_8963 ;
wire N_8964 ;
wire N_8965 ;
wire N_8966 ;
wire N_8967 ;
wire N_8968 ;
wire N_8969 ;
wire N_8970 ;
wire N_8971 ;
wire N_8972 ;
wire N_8973 ;
wire N_8974 ;
wire N_8975 ;
wire N_8976 ;
wire N_8977 ;
wire N_8978 ;
wire N_8979 ;
wire N_8980 ;
wire N_8981 ;
wire N_8982 ;
wire N_8983 ;
wire N_8984 ;
wire N_8985 ;
wire N_8986 ;
wire N_8987 ;
wire N_8988 ;
wire N_8989 ;
wire N_8990 ;
wire N_8991 ;
wire N_8992 ;
wire N_8993 ;
wire N_8994 ;
wire N_8995 ;
wire N_8996 ;
wire N_8997 ;
wire N_8998 ;
wire N_8999 ;
wire N_9000 ;
wire N_9001 ;
wire N_9002 ;
wire N_9003 ;
wire N_9004 ;
wire N_9005 ;
wire N_9006 ;
wire N_9007 ;
wire N_9008 ;
wire N_9009 ;
wire N_9010 ;
wire N_9011 ;
wire N_9012 ;
wire N_9013 ;
wire N_9014 ;
wire N_9015 ;
wire N_9016 ;
wire N_9017 ;
wire N_9018 ;
wire N_9019 ;
wire N_9020 ;
wire N_9021 ;
wire N_9022 ;
wire N_9023 ;
wire N_9024 ;
wire N_9025 ;
wire N_9026 ;
wire N_9027 ;
wire N_9028 ;
wire N_9029 ;
wire N_9030 ;
wire N_9031 ;
wire N_9032 ;
wire N_9033 ;
wire N_9034 ;
wire N_9035 ;
wire N_9036 ;
wire N_9037 ;
wire N_9038 ;
wire N_9039 ;
wire N_9040 ;
wire N_9041 ;
wire N_9042 ;
wire N_9043 ;
wire N_9044 ;
wire N_9045 ;
wire N_9046 ;
wire N_9047 ;
wire N_9048 ;
wire N_9049 ;
wire N_9050 ;
wire N_9312 ;
wire N_9313 ;
wire N_9314 ;
wire N_9315 ;
wire N_9316 ;
wire N_9317 ;
wire N_9318 ;
wire N_9319 ;
wire N_9320 ;
wire N_9321 ;
wire N_9322 ;
wire N_9323 ;
wire N_9324 ;
wire N_9325 ;
wire N_9326 ;
wire N_9327 ;
wire N_9328 ;
wire N_9329 ;
wire N_9330 ;
wire N_9331 ;
wire N_9332 ;
wire N_9333 ;
wire N_9334 ;
wire N_9335 ;
wire N_9336 ;
wire N_9337 ;
wire N_9338 ;
wire N_9339 ;
wire N_9340 ;
wire N_9341 ;
wire N_9342 ;
wire N_9343 ;
wire N_9344 ;
wire N_9345 ;
wire N_9346 ;
wire N_9347 ;
wire N_9348 ;
wire N_9349 ;
wire N_9350 ;
wire N_9351 ;
wire N_9352 ;
wire N_9353 ;
wire N_9354 ;
wire N_9355 ;
wire N_9356 ;
wire N_9357 ;
wire N_9358 ;
wire N_9359 ;
wire N_9360 ;
wire N_9361 ;
wire N_9362 ;
wire N_9363 ;
wire N_9364 ;
wire N_9365 ;
wire N_9366 ;
wire N_9367 ;
wire N_9368 ;
wire N_9369 ;
wire N_9370 ;
wire N_9371 ;
wire N_9372 ;
wire N_9373 ;
wire N_9374 ;
wire N_9375 ;
wire N_9376 ;
wire N_9377 ;
wire N_9378 ;
wire N_9379 ;
wire N_9380 ;
wire N_9381 ;
wire N_9382 ;
wire N_9383 ;
wire N_9384 ;
wire N_9385 ;
wire N_9386 ;
wire N_9387 ;
wire N_9388 ;
wire N_9389 ;
wire N_9390 ;
wire N_9391 ;
wire N_9392 ;
wire N_9393 ;
wire N_9394 ;
wire N_9395 ;
wire N_9396 ;
wire N_9397 ;
wire N_9398 ;
wire N_9399 ;
wire N_9400 ;
wire N_9401 ;
wire N_9402 ;
wire N_9403 ;
wire N_9404 ;
wire N_9405 ;
wire N_9406 ;
wire N_9407 ;
wire N_9408 ;
wire N_9409 ;
wire N_9410 ;
wire N_9411 ;
wire N_9412 ;
wire N_9413 ;
wire N_9414 ;
wire N_9415 ;
wire N_9416 ;
wire N_9417 ;
wire N_9418 ;
wire N_9419 ;
wire N_9420 ;
wire N_9421 ;
wire N_9422 ;
wire N_9423 ;
wire N_9424 ;
wire N_9425 ;
wire N_9426 ;
wire N_9427 ;
wire N_9428 ;
wire N_9429 ;
wire N_9430 ;
wire N_9431 ;
wire N_9432 ;
wire N_9433 ;
wire N_9434 ;
wire N_9435 ;
wire N_9436 ;
wire N_9437 ;
wire N_9438 ;
wire N_9439 ;
wire N_9440 ;
wire N_9441 ;
wire N_9442 ;
wire N_9443 ;
wire N_9444 ;
wire N_9445 ;
wire N_9446 ;
wire N_9447 ;
wire N_9448 ;
wire N_9449 ;
wire N_9450 ;
wire N_9451 ;
wire N_9452 ;
wire N_9453 ;
wire N_9454 ;
wire N_9455 ;
wire N_9456 ;
wire N_9457 ;
wire N_9458 ;
wire N_9459 ;
wire N_9460 ;
wire N_9461 ;
wire N_9462 ;
wire N_9463 ;
wire N_9464 ;
wire N_9465 ;
wire N_9466 ;
wire N_9467 ;
wire N_9468 ;
wire N_9469 ;
wire N_9470 ;
wire N_9471 ;
wire N_9472 ;
wire N_9473 ;
wire N_9474 ;
wire N_9475 ;
wire N_9476 ;
wire N_9477 ;
wire N_9478 ;
wire N_9479 ;
wire N_9480 ;
wire N_9481 ;
wire N_9482 ;
wire N_9483 ;
wire N_9484 ;
wire N_9485 ;
wire N_9486 ;
wire N_9487 ;
wire N_9488 ;
wire N_9489 ;
wire N_9490 ;
wire N_9491 ;
wire N_9492 ;
wire N_9493 ;
wire N_9494 ;
wire N_9495 ;
wire N_9496 ;
wire N_9497 ;
wire N_9498 ;
wire N_9499 ;
wire N_9500 ;
wire N_9501 ;
wire N_9502 ;
wire N_9503 ;
wire N_9504 ;
wire N_9505 ;
wire N_9506 ;
wire N_9507 ;
wire N_9508 ;
wire N_9509 ;
wire N_9510 ;
wire N_9511 ;
wire N_9512 ;
wire N_9513 ;
wire N_9514 ;
wire N_9515 ;
wire N_9516 ;
wire N_9517 ;
wire N_9518 ;
wire N_9519 ;
wire N_9520 ;
wire N_9521 ;
wire N_9522 ;
wire N_9523 ;
wire N_9524 ;
wire N_9525 ;
wire N_9526 ;
wire N_9527 ;
wire N_9528 ;
wire N_9529 ;
wire N_9530 ;
wire N_9531 ;
wire N_9532 ;
wire N_9533 ;
wire N_9534 ;
wire N_9535 ;
wire N_9536 ;
wire N_9537 ;
wire N_9538 ;
wire N_9539 ;
wire N_9540 ;
wire N_9541 ;
wire N_9542 ;
wire N_9543 ;
wire N_9544 ;
wire N_9545 ;
wire N_9546 ;
wire N_9547 ;
wire N_9548 ;
wire N_9549 ;
wire N_9550 ;
wire N_9551 ;
wire N_9552 ;
wire N_9553 ;
wire N_9554 ;
wire N_9555 ;
wire N_9556 ;
wire N_9557 ;
wire N_9558 ;
wire N_9559 ;
wire N_9560 ;
wire N_9561 ;
wire N_9562 ;
wire N_9563 ;
wire N_9564 ;
wire N_9565 ;
wire N_9566 ;
wire N_9567 ;
wire N_9568 ;
wire N_9569 ;
wire N_9570 ;
wire ufpga_lock_cdi_i_bb ;
wire ufpga_hstdm_ctrl_o ;
wire ufpga_hstdm_ctrl_o_0 ;
wire ufpga_hstdm_ctrl_o_1 ;
wire ufpga_hstdm_ctrl_o_2 ;
wire ufpga_hstdm_ctrl_o_3 ;
wire ufpga_hstdm_ctrl_o_4 ;
wire ufpga_hstdm_ctrl_o_5 ;
wire ufpga_hstdm_ctrl_o_6 ;
wire ufpga_hstdm_ctrl_o_7 ;
wire ufpga_hstdm_ctrl_o_8 ;
wire ufpga_hstdm_ctrl_o_9 ;
wire ufpga_hstdm_ctrl_o_10 ;
wire ufpga_hstdm_ctrl_o_11 ;
wire ufpga_hstdm_ctrl_o_12 ;
wire ufpga_hstdm_ctrl_o_13 ;
wire ufpga_hstdm_ctrl_o_14 ;
wire ufpga_hstdm_ctrl_o_15 ;
wire ufpga_hstdm_ctrl_o_16 ;
wire ufpga_hstdm_ctrl_o_17 ;
wire ufpga_hstdm_ctrl_o_18 ;
wire ufpga_hstdm_ctrl_o_19 ;
wire ufpga_hstdm_ctrl_o_20 ;
wire ufpga_hstdm_ctrl_o_21 ;
wire ufpga_hstdm_ctrl_o_22 ;
wire ufpga_hstdm_ctrl_o_23 ;
wire ufpga_hstdm_ctrl_o_24 ;
wire ufpga_hstdm_ctrl_o_25 ;
wire ufpga_hstdm_ctrl_o_26 ;
wire ufpga_hstdm_ctrl_o_27 ;
wire ufpga_hstdm_ctrl_o_28 ;
wire ufpga_hstdm_ctrl_o_29 ;
wire ufpga_hstdm_ctrl_o_30 ;
wire ufpga_scratch_o ;
wire ufpga_scratch_o_0 ;
wire ufpga_scratch_o_1 ;
wire ufpga_scratch_o_2 ;
wire ufpga_scratch_o_3 ;
wire ufpga_scratch_o_4 ;
wire ufpga_scratch_o_5 ;
wire ufpga_scratch_o_6 ;
wire ufpga_scratch_o_7 ;
wire ufpga_scratch_o_8 ;
wire ufpga_scratch_o_9 ;
wire ufpga_scratch_o_10 ;
wire ufpga_scratch_o_11 ;
wire ufpga_scratch_o_12 ;
wire ufpga_scratch_o_13 ;
wire ufpga_scratch_o_14 ;
wire ufpga_scratch_o_15 ;
wire ufpga_scratch_o_16 ;
wire ufpga_scratch_o_17 ;
wire ufpga_scratch_o_18 ;
wire ufpga_scratch_o_19 ;
wire ufpga_scratch_o_20 ;
wire ufpga_scratch_o_21 ;
wire ufpga_scratch_o_22 ;
wire ufpga_scratch_o_23 ;
wire ufpga_scratch_o_24 ;
wire ufpga_scratch_o_25 ;
wire ufpga_scratch_o_26 ;
wire ufpga_scratch_o_27 ;
wire ufpga_scratch_o_28 ;
wire ufpga_scratch_o_29 ;
wire ufpga_scratch_o_30 ;
wire ufpga_type_id_o ;
wire ufpga_type_id_o_0 ;
wire ufpga_type_id_o_1 ;
wire ufpga_type_id_o_2 ;
wire ufpga_type_id_o_3 ;
wire ufpga_type_id_o_4 ;
wire ufpga_type_id_o_5 ;
wire ufpga_type_id_o_6 ;
wire ufpga_type_id_o_7 ;
wire ufpga_type_id_o_8 ;
wire ufpga_type_id_o_9 ;
wire ufpga_type_id_o_10 ;
wire ufpga_type_id_o_11 ;
wire ufpga_type_id_o_12 ;
wire ufpga_type_id_o_13 ;
wire ufpga_type_id_o_14 ;
wire ufpga_type_id_o_15 ;
wire ufpga_type_id_o_16 ;
wire ufpga_type_id_o_17 ;
wire ufpga_type_id_o_18 ;
wire ufpga_type_id_o_19 ;
wire ufpga_type_id_o_20 ;
wire ufpga_type_id_o_21 ;
wire ufpga_type_id_o_22 ;
wire ufpga_type_id_o_23 ;
wire ufpga_type_id_o_24 ;
wire ufpga_type_id_o_25 ;
wire ufpga_type_id_o_26 ;
wire ufpga_type_id_o_27 ;
wire ufpga_type_id_o_28 ;
wire ufpga_type_id_o_29 ;
wire ufpga_type_id_o_30 ;
wire ufpga_loc_id_o ;
wire ufpga_loc_id_o_0 ;
wire ufpga_loc_id_o_1 ;
wire ufpga_loc_id_o_2 ;
wire ufpga_loc_id_o_3 ;
wire ufpga_loc_id_o_4 ;
wire ufpga_loc_id_o_5 ;
wire ufpga_loc_id_o_6 ;
wire ufpga_loc_id_o_7 ;
wire ufpga_loc_id_o_8 ;
wire ufpga_loc_id_o_9 ;
wire ufpga_loc_id_o_10 ;
wire ufpga_loc_id_o_11 ;
wire ufpga_loc_id_o_12 ;
wire ufpga_loc_id_o_13 ;
wire ufpga_loc_id_o_14 ;
wire ufpga_loc_id_o_15 ;
wire ufpga_loc_id_o_16 ;
wire ufpga_loc_id_o_17 ;
wire ufpga_loc_id_o_18 ;
wire ufpga_loc_id_o_19 ;
wire ufpga_loc_id_o_20 ;
wire ufpga_loc_id_o_21 ;
wire ufpga_loc_id_o_22 ;
wire ufpga_loc_id_o_23 ;
wire ufpga_loc_id_o_24 ;
wire ufpga_loc_id_o_25 ;
wire ufpga_loc_id_o_26 ;
wire ufpga_loc_id_o_27 ;
wire ufpga_loc_id_o_28 ;
wire ufpga_loc_id_o_29 ;
wire ufpga_loc_id_o_30 ;
wire ufpga_id_o ;
wire ufpga_id_o_0 ;
wire ufpga_id_o_1 ;
wire ufpga_id_o_2 ;
wire ufpga_id_o_3 ;
wire ufpga_id_o_4 ;
wire ufpga_id_o_5 ;
wire ufpga_id_o_6 ;
wire ufpga_id_o_7 ;
wire ufpga_id_o_8 ;
wire ufpga_id_o_9 ;
wire ufpga_id_o_10 ;
wire ufpga_id_o_11 ;
wire ufpga_id_o_12 ;
wire ufpga_id_o_13 ;
wire ufpga_id_o_14 ;
wire ufpga_id_o_15 ;
wire ufpga_id_o_16 ;
wire ufpga_id_o_17 ;
wire ufpga_id_o_18 ;
wire ufpga_id_o_19 ;
wire ufpga_id_o_20 ;
wire ufpga_id_o_21 ;
wire ufpga_id_o_22 ;
wire ufpga_id_o_23 ;
wire ufpga_id_o_24 ;
wire ufpga_id_o_25 ;
wire ufpga_id_o_26 ;
wire ufpga_id_o_27 ;
wire ufpga_id_o_28 ;
wire ufpga_id_o_29 ;
wire ufpga_id_o_30 ;
wire ufpga_usr_id_o ;
wire ufpga_usr_id_o_0 ;
wire ufpga_usr_id_o_1 ;
wire ufpga_usr_id_o_2 ;
wire ufpga_usr_id_o_3 ;
wire ufpga_usr_id_o_4 ;
wire ufpga_usr_id_o_5 ;
wire ufpga_usr_id_o_6 ;
wire ufpga_usr_id_o_7 ;
wire ufpga_usr_id_o_8 ;
wire ufpga_usr_id_o_9 ;
wire ufpga_usr_id_o_10 ;
wire ufpga_usr_id_o_11 ;
wire ufpga_usr_id_o_12 ;
wire ufpga_usr_id_o_13 ;
wire ufpga_usr_id_o_14 ;
wire ufpga_usr_id_o_15 ;
wire ufpga_usr_id_o_16 ;
wire ufpga_usr_id_o_17 ;
wire ufpga_usr_id_o_18 ;
wire ufpga_usr_id_o_19 ;
wire ufpga_usr_id_o_20 ;
wire ufpga_usr_id_o_21 ;
wire ufpga_usr_id_o_22 ;
wire ufpga_usr_id_o_23 ;
wire ufpga_usr_id_o_24 ;
wire ufpga_usr_id_o_25 ;
wire ufpga_usr_id_o_26 ;
wire ufpga_usr_id_o_27 ;
wire ufpga_usr_id_o_28 ;
wire ufpga_usr_id_o_29 ;
wire ufpga_usr_id_o_30 ;
wire ufpga_handle_o ;
wire ufpga_handle_o_0 ;
wire ufpga_handle_o_1 ;
wire ufpga_handle_o_2 ;
wire ufpga_handle_o_3 ;
wire ufpga_handle_o_4 ;
wire ufpga_handle_o_5 ;
wire ufpga_handle_o_6 ;
wire ufpga_handle_o_7 ;
wire ufpga_handle_o_8 ;
wire ufpga_handle_o_9 ;
wire ufpga_handle_o_10 ;
wire ufpga_handle_o_11 ;
wire ufpga_handle_o_12 ;
wire ufpga_handle_o_13 ;
wire ufpga_handle_o_14 ;
wire ufpga_handle_o_15 ;
wire ufpga_handle_o_16 ;
wire ufpga_handle_o_17 ;
wire ufpga_handle_o_18 ;
wire ufpga_handle_o_19 ;
wire ufpga_handle_o_20 ;
wire ufpga_handle_o_21 ;
wire ufpga_handle_o_22 ;
wire ufpga_handle_o_23 ;
wire ufpga_handle_o_24 ;
wire ufpga_handle_o_25 ;
wire ufpga_handle_o_26 ;
wire ufpga_handle_o_27 ;
wire ufpga_handle_o_28 ;
wire ufpga_handle_o_29 ;
wire ufpga_handle_o_30 ;
wire ufpga_timestamp_o ;
wire ufpga_timestamp_o_0 ;
wire ufpga_timestamp_o_1 ;
wire ufpga_timestamp_o_2 ;
wire ufpga_timestamp_o_3 ;
wire ufpga_timestamp_o_4 ;
wire ufpga_timestamp_o_5 ;
wire ufpga_timestamp_o_6 ;
wire ufpga_timestamp_o_7 ;
wire ufpga_timestamp_o_8 ;
wire ufpga_timestamp_o_9 ;
wire ufpga_timestamp_o_10 ;
wire ufpga_timestamp_o_11 ;
wire ufpga_timestamp_o_12 ;
wire ufpga_timestamp_o_13 ;
wire ufpga_timestamp_o_14 ;
wire ufpga_timestamp_o_15 ;
wire ufpga_timestamp_o_16 ;
wire ufpga_timestamp_o_17 ;
wire ufpga_timestamp_o_18 ;
wire ufpga_timestamp_o_19 ;
wire ufpga_timestamp_o_20 ;
wire ufpga_timestamp_o_21 ;
wire ufpga_timestamp_o_22 ;
wire ufpga_timestamp_o_23 ;
wire ufpga_timestamp_o_24 ;
wire ufpga_timestamp_o_25 ;
wire ufpga_timestamp_o_26 ;
wire ufpga_timestamp_o_27 ;
wire ufpga_timestamp_o_28 ;
wire ufpga_timestamp_o_29 ;
wire ufpga_timestamp_o_30 ;
wire capim2_rd_out_0 ;
wire capim2_wr_out_0 ;
wire capim2_enable_out_0 ;
wire capim2_rd_out_4 ;
wire capim2_wr_out_4 ;
wire capim2_enable_out_4 ;
wire capim2_rd_out_6 ;
wire capim2_wr_out_6 ;
wire capim2_enable_out_6 ;
wire capim2_rd_out_7 ;
wire capim2_wr_out_7 ;
wire capim2_enable_out_7 ;
wire capim3_enable_out_0 ;
wire capim3_command_valid_out_0 ;
wire capim3_dout_valid_out_0 ;
wire capim3_din_ready_out_0 ;
wire capim3_inti_ack_out_0 ;
wire reg_if_wr ;
wire reg_if_en_0 ;
wire reg_if_en_1 ;
wire sys_clk ;
wire sys_reset_n ;
wire gclk0 ;
wire umr3_clk_c ;
wire umr2_clk_c ;
wire umr2_reset ;
wire haps_clk_200 ;
wire haps_clk_10 ;
wire haps_umr3_clk_div ;
wire haps_umr3_clk_div_0 ;
wire haps_umr3_clk_div_1 ;
wire haps_umr3_clk_div_2 ;
wire haps_clk_160 ;
wire haps_clk_10_2_sync ;
wire haps_clk_50_2_sync ;
wire hstdm_refclk_100_c ;
wire features_cdo ;
wire I_haps_features_O5 ;
wire I_haps_features_O6 ;
wire signature_cdo ;
wire I_haps_signature_O5 ;
wire I_haps_signature_O6 ;
wire I_haps_magic_word_O5 ;
wire I_haps_magic_word_O6 ;
wire N_545 ;
wire N_546 ;
wire N_547 ;
wire N_548 ;
wire N_549 ;
// @217:546
(* haps_ip_type="bsa19_system_ip" *)  bsa19_system_ip bsa19_system_ip_u (
	.umr3_sib_link_in(UMR3_SIB_LINK_IN_c[1:0]),
	.umr3_sib_link_out(UMR3_SIB_LINK_OUT_c[1:0]),
	.afpga_glnk_out(AFPGA_GLNK_OUT_c),
	.afpga_lock_cdo_glnk_i(AFPGA_LOCK_CDO_GLNK_I_c_0),
	.afpga_lock_clk_i(AFPGA_LOCK_CLK_I_c),
	.afpga_lock_ce_i(AFPGA_LOCK_CE_I_c),
	.afpga_lock_cdi_o(AFPGA_LOCK_CDi_O_c),
	.ref_clk_p(REF_CLK_P),
	.ref_clk_n(REF_CLK_N),
	.ref_reset(REF_RESET_c),
	.dummy_port(DUMMY_PORT_c),
	.mnglink_tx(MNGLINK_TX_c),
	.mnglink_rx(MNGLINK_RX_c),
	.gt1_refclk_p(GT1_REFCLK_P),
	.gt1_refclk_n(GT1_REFCLK_N),
	.gt1_txp({GT1_TXP[0], GT1_TXP[1], GT1_TXP[2], GT1_TXP[3]}),
	.gt1_txn({GT1_TXN[0], GT1_TXN[1], GT1_TXN[2], GT1_TXN[3]}),
	.gt1_rxp({GT1_RXP[0], GT1_RXP[1], GT1_RXP[2], GT1_RXP[3]}),
	.gt1_rxn({GT1_RXN[0], GT1_RXN[1], GT1_RXN[2], GT1_RXN[3]}),
	.DBG_RXP(DBG_RXP[7:0]),
	.DBG_RXN(DBG_RXN[7:0]),
	.DBG_TXP(DBG_TXP[7:0]),
	.DBG_TXN(DBG_TXN[7:0]),
	.DBG_REFCLKP_0(DBG_REFCLKP_0[3:0]),
	.DBG_REFCLKN_0(DBG_REFCLKN_0[3:0]),
	.dbg_xcvr_user_clk(dbg_xcvr_user_clk[3:0]),
	.dbg_dtd_reset(DUMMY_GSR_PORT_c),
	.dbg_capiclk(dbg_capiclk),
	.dbg_inta(dbg_inta),
	.dbg_intr(GND),
	.dbg_dout_wr(dbg_dout_wr),
	.dbg_bram_dout(dbg_bram_dout[31:0]),
	.dbg_din_rd(dbg_din_rd),
	.dbg_bram_din({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.dbg_snps_dtdpipe_inbus({}),
	.dbg_snps_dtdpipe_outbus(dbg_snps_dtdpipe_outbus[3999:0]),
	.zpl_out_sib_rst(zpl_out_sib_rst),
	.zpl_out_sib_clk(zpl_out_sib_clk),
	.zpl_out_dsib_tdata(zpl_out_dsib_tdata[255:0]),
	.zpl_out_dsib_tsop(zpl_out_dsib_tsop),
	.zpl_out_dsib_tlast(zpl_out_dsib_tlast),
	.zpl_out_dsib_twkeep(zpl_out_dsib_twkeep[7:0]),
	.zpl_out_dsib_tvalid(zpl_out_dsib_tvalid),
	.zpl_iwa_dsib_tready(VCC),
	.zpl_iwo_usib_tdata({}),
	.zpl_iwo_usib_tsop(GND),
	.zpl_iwo_usib_tlast(GND),
	.zpl_iwo_usib_twkeep({GND, GND, GND, GND, GND, GND, GND, GND}),
	.zpl_iwo_usib_tvalid(GND),
	.zpl_out_usib_tready(zpl_out_usib_tready),
	.zpl1ton_usib_in0_req({GND, GND, GND, GND, GND, GND}),
	.zpl1ton_usib_gnt(zpl1ton_usib_gnt[5:0]),
	.zpl_out_wc_ip_clk(zpl_out_wc_ip_clk),
	.zpl_out_srb_clk(zpl_out_srb_clk),
	.zpl_out_srb_rst(zpl_out_srb_rst),
	.zpl_out_srb_addr(zpl_out_srb_addr[15:0]),
	.zpl_out_srb_data_wr(zpl_out_srb_data_wr[31:0]),
	.zpl_iwo_srb_data_rd({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.zpl_out_srb_wr(zpl_out_srb_wr),
	.umr3_ds0({GND, GND, N_9050, N_9049, N_9048, N_9047, N_9046, N_9045, N_9044, N_9043, N_9042, N_9041, N_9040, N_9039, N_9038, N_9037, N_9036, N_9035, N_9034, N_9033, N_9032, N_9031, N_9030, N_9029, N_9028, N_9027, N_9026, N_9025, N_9024, N_9023, N_9022, N_9021, N_9020, N_9019, N_9018, N_9017, N_9016, N_9015, N_9014, N_9013, N_9012, N_9011, N_9010, N_9009, N_9008, N_9007, N_9006, N_9005, N_9004, N_9003, N_9002, N_9001, N_9000, N_8999, N_8998, N_8997, N_8996, N_8995, N_8994, N_8993, N_8992, N_8991, N_8990, N_8989, N_8988, N_8987, N_8986, N_8985, N_8984, N_8983, N_8982, N_8981, N_8980, N_8979, N_8978, N_8977, N_8976, N_8975, N_8974, N_8973, N_8972, N_8971, N_8970, N_8969, N_8968, N_8967, N_8966, N_8965, N_8964, N_8963, N_8962, N_8961, N_8960, N_8959, N_8958, N_8957, N_8956, N_8955, N_8954, N_8953, N_8952, N_8951, N_8950, N_8949, N_8948, N_8947, N_8946, N_8945, N_8944, N_8943, N_8942, N_8941, N_8940, N_8939, N_8938, N_8937, N_8936, N_8935, N_8934, N_8933, N_8932, N_8931, N_8930, N_8929, N_8928, N_8927, N_8926, N_8925, N_8924, N_8923, N_8922, N_8921, N_8920, N_8919, N_8918, N_8917, N_8916, N_8915, N_8914, N_8913, N_8912, N_8911, N_8910, N_8909, N_8908, N_8907, N_8906, N_8905, N_8904, N_8903, N_8902, N_8901, N_8900, N_8899, N_8898, N_8897, N_8896, N_8895, N_8894, N_8893, N_8892, N_8891, N_8890, N_8889, N_8888, N_8887, N_8886, N_8885, N_8884, N_8883, N_8882, N_8881, N_8880, N_8879, N_8878, N_8877, N_8876, N_8875, N_8874, N_8873, N_8872, N_8871, N_8870, N_8869, N_8868, N_8867, N_8866, N_8865, N_8864, N_8863, N_8862, N_8861, N_8860, N_8859, N_8858, N_8857, N_8856, N_8855, N_8854, N_8853, N_8852, N_8851, N_8850, N_8849, N_8848, N_8847, N_8846, N_8845, N_8844, N_8843, N_8842, N_8841, N_8840, N_8839, N_8838, N_8837, N_8836, N_8835, N_8834, N_8833, N_8832, N_8831, N_8830, N_8829, N_8828, N_8827, N_8826, N_8825, N_8824, N_8823, N_8822, N_8821, N_8820, N_8819, N_8818, N_8817, N_8816, N_8815, N_8814, N_8813, N_8812, N_8811, N_8810, N_8809, N_8808, N_8807, N_8806, N_8805, N_8804, N_8803, N_8802, N_8801, N_8800, N_8799, N_8798, N_8797, N_8796, N_8795, N_8794, N_8793, N_8792, N_9050, N_9049, N_9048, N_9047, N_9046, N_9045, N_9044, N_9043, N_9042, N_9041, N_9040, N_9039, N_9038, N_9037, N_9036, N_9035, N_9034, N_9033, N_9032, N_9031, N_9030, N_9029, N_9028, N_9027, N_9026, N_9025, N_9024, N_9023, N_9022, N_9021, N_9020, N_9019, N_9018, N_9017, N_9016, N_9015, N_9014, N_9013, N_9012, N_9011, N_9010, N_9009, N_9008, N_9007, N_9006, N_9005, N_9004, N_9003, N_9002, N_9001, N_9000, N_8999, N_8998, N_8997, N_8996, N_8995, N_8994, N_8993, N_8992, N_8991, N_8990, N_8989, N_8988, N_8987, N_8986, N_8985, N_8984, N_8983, N_8982, N_8981, N_8980, N_8979, N_8978, N_8977, N_8976, N_8975, N_8974, N_8973, N_8972, N_8971, N_8970, N_8969, N_8968, N_8967, N_8966, N_8965, N_8964, N_8963, N_8962, N_8961, N_8960, N_8959, N_8958, N_8957, N_8956, N_8955, N_8954, N_8953, N_8952, N_8951, N_8950, N_8949, N_8948, N_8947, N_8946, N_8945, N_8944, N_8943, N_8942, N_8941, N_8940, N_8939, N_8938, N_8937, N_8936, N_8935, N_8934, N_8933, N_8932, N_8931, N_8930, N_8929, N_8928, N_8927, N_8926, N_8925, N_8924, N_8923, N_8922, N_8921, N_8920, N_8919, N_8918, N_8917, N_8916, N_8915, N_8914, N_8913, N_8912, N_8911, N_8910, N_8909, N_8908, N_8907, N_8906, N_8905, N_8904, N_8903, N_8902, N_8901, N_8900, N_8899, N_8898, N_8897, N_8896, N_8895, N_8894, N_8893, N_8892, N_8891, N_8890, N_8889, N_8888, N_8887, N_8886, N_8885, N_8884, N_8883, N_8882, N_8881, N_8880, N_8879, N_8878, N_8877, N_8876, N_8875, N_8874, N_8873, N_8872, N_8871, N_8870, N_8869, N_8868, N_8867, N_8866, N_8865, N_8864, N_8863, N_8862, N_8861, N_8860, N_8859, N_8858, N_8857, N_8856, N_8855, N_8854, N_8853, N_8852, N_8851, N_8850, N_8849, N_8848, N_8847, N_8846, N_8845, N_8844, N_8843, N_8842, N_8841, N_8840, N_8839, N_8838, N_8837, N_8836, N_8835, N_8834, N_8833, N_8832, N_8831, N_8830, N_8829, N_8828, N_8827, N_8826, N_8825, N_8824, N_8823, N_8822, N_8821, N_8820, N_8819, N_8818, N_8817, N_8816, N_8815, N_8814, N_8813, N_8812, N_8811, N_8810, N_8809, N_8808, N_8807, N_8806, N_8805, N_8804, N_8803, N_8802, N_8801, N_8800, N_8799, N_8798, N_8797, N_8796, N_8795, N_8794, N_8793, N_8792}),
	.umr3_ds1({GND, GND, N_9570, N_9569, N_9568, N_9567, N_9566, N_9565, N_9564, N_9563, N_9562, N_9561, N_9560, N_9559, N_9558, N_9557, N_9556, N_9555, N_9554, N_9553, N_9552, N_9551, N_9550, N_9549, N_9548, N_9547, N_9546, N_9545, N_9544, N_9543, N_9542, N_9541, N_9540, N_9539, N_9538, N_9537, N_9536, N_9535, N_9534, N_9533, N_9532, N_9531, N_9530, N_9529, N_9528, N_9527, N_9526, N_9525, N_9524, N_9523, N_9522, N_9521, N_9520, N_9519, N_9518, N_9517, N_9516, N_9515, N_9514, N_9513, N_9512, N_9511, N_9510, N_9509, N_9508, N_9507, N_9506, N_9505, N_9504, N_9503, N_9502, N_9501, N_9500, N_9499, N_9498, N_9497, N_9496, N_9495, N_9494, N_9493, N_9492, N_9491, N_9490, N_9489, N_9488, N_9487, N_9486, N_9485, N_9484, N_9483, N_9482, N_9481, N_9480, N_9479, N_9478, N_9477, N_9476, N_9475, N_9474, N_9473, N_9472, N_9471, N_9470, N_9469, N_9468, N_9467, N_9466, N_9465, N_9464, N_9463, N_9462, N_9461, N_9460, N_9459, N_9458, N_9457, N_9456, N_9455, N_9454, N_9453, N_9452, N_9451, N_9450, N_9449, N_9448, N_9447, N_9446, N_9445, N_9444, N_9443, N_9442, N_9441, N_9440, N_9439, N_9438, N_9437, N_9436, N_9435, N_9434, N_9433, N_9432, N_9431, N_9430, N_9429, N_9428, N_9427, N_9426, N_9425, N_9424, N_9423, N_9422, N_9421, N_9420, N_9419, N_9418, N_9417, N_9416, N_9415, N_9414, N_9413, N_9412, N_9411, N_9410, N_9409, N_9408, N_9407, N_9406, N_9405, N_9404, N_9403, N_9402, N_9401, N_9400, N_9399, N_9398, N_9397, N_9396, N_9395, N_9394, N_9393, N_9392, N_9391, N_9390, N_9389, N_9388, N_9387, N_9386, N_9385, N_9384, N_9383, N_9382, N_9381, N_9380, N_9379, N_9378, N_9377, N_9376, N_9375, N_9374, N_9373, N_9372, N_9371, N_9370, N_9369, N_9368, N_9367, N_9366, N_9365, N_9364, N_9363, N_9362, N_9361, N_9360, N_9359, N_9358, N_9357, N_9356, N_9355, N_9354, N_9353, N_9352, N_9351, N_9350, N_9349, N_9348, N_9347, N_9346, N_9345, N_9344, N_9343, N_9342, N_9341, N_9340, N_9339, N_9338, N_9337, N_9336, N_9335, N_9334, N_9333, N_9332, N_9331, N_9330, N_9329, N_9328, N_9327, N_9326, N_9325, N_9324, N_9323, N_9322, N_9321, N_9320, N_9319, N_9318, N_9317, N_9316, N_9315, N_9314, N_9313, N_9312, N_9570, N_9569, N_9568, N_9567, N_9566, N_9565, N_9564, N_9563, N_9562, N_9561, N_9560, N_9559, N_9558, N_9557, N_9556, N_9555, N_9554, N_9553, N_9552, N_9551, N_9550, N_9549, N_9548, N_9547, N_9546, N_9545, N_9544, N_9543, N_9542, N_9541, N_9540, N_9539, N_9538, N_9537, N_9536, N_9535, N_9534, N_9533, N_9532, N_9531, N_9530, N_9529, N_9528, N_9527, N_9526, N_9525, N_9524, N_9523, N_9522, N_9521, N_9520, N_9519, N_9518, N_9517, N_9516, N_9515, N_9514, N_9513, N_9512, N_9511, N_9510, N_9509, N_9508, N_9507, N_9506, N_9505, N_9504, N_9503, N_9502, N_9501, N_9500, N_9499, N_9498, N_9497, N_9496, N_9495, N_9494, N_9493, N_9492, N_9491, N_9490, N_9489, N_9488, N_9487, N_9486, N_9485, N_9484, N_9483, N_9482, N_9481, N_9480, N_9479, N_9478, N_9477, N_9476, N_9475, N_9474, N_9473, N_9472, N_9471, N_9470, N_9469, N_9468, N_9467, N_9466, N_9465, N_9464, N_9463, N_9462, N_9461, N_9460, N_9459, N_9458, N_9457, N_9456, N_9455, N_9454, N_9453, N_9452, N_9451, N_9450, N_9449, N_9448, N_9447, N_9446, N_9445, N_9444, N_9443, N_9442, N_9441, N_9440, N_9439, N_9438, N_9437, N_9436, N_9435, N_9434, N_9433, N_9432, N_9431, N_9430, N_9429, N_9428, N_9427, N_9426, N_9425, N_9424, N_9423, N_9422, N_9421, N_9420, N_9419, N_9418, N_9417, N_9416, N_9415, N_9414, N_9413, N_9412, N_9411, N_9410, N_9409, N_9408, N_9407, N_9406, N_9405, N_9404, N_9403, N_9402, N_9401, N_9400, N_9399, N_9398, N_9397, N_9396, N_9395, N_9394, N_9393, N_9392, N_9391, N_9390, N_9389, N_9388, N_9387, N_9386, N_9385, N_9384, N_9383, N_9382, N_9381, N_9380, N_9379, N_9378, N_9377, N_9376, N_9375, N_9374, N_9373, N_9372, N_9371, N_9370, N_9369, N_9368, N_9367, N_9366, N_9365, N_9364, N_9363, N_9362, N_9361, N_9360, N_9359, N_9358, N_9357, N_9356, N_9355, N_9354, N_9353, N_9352, N_9351, N_9350, N_9349, N_9348, N_9347, N_9346, N_9345, N_9344, N_9343, N_9342, N_9341, N_9340, N_9339, N_9338, N_9337, N_9336, N_9335, N_9334, N_9333, N_9332, N_9331, N_9330, N_9329, N_9328, N_9327, N_9326, N_9325, N_9324, N_9323, N_9322, N_9321, N_9320, N_9319, N_9318, N_9317, N_9316, N_9315, N_9314, N_9313, N_9312}),
	.haps_fpga_id(haps_fpga_id[2:0]),
	.ufpga_lock_clk_o(ufpga_lock_clk_o),
	.ufpga_lock_ce_o(ufpga_lock_ce_o),
	.ufpga_lock_cdo_o(ufpga_lock_cdo_o),
	.ufpga_lock_cdi_i(ufpga_lock_cdi_i_bb),
	.ufpga_hstdm_ctrl_o({ufpga_hstdm_ctrl_o_30, ufpga_hstdm_ctrl_o_29, ufpga_hstdm_ctrl_o_28, ufpga_hstdm_ctrl_o_27, ufpga_hstdm_ctrl_o_26, ufpga_hstdm_ctrl_o_25, ufpga_hstdm_ctrl_o_24, ufpga_hstdm_ctrl_o_23, ufpga_hstdm_ctrl_o_22, ufpga_hstdm_ctrl_o_21, ufpga_hstdm_ctrl_o_20, ufpga_hstdm_ctrl_o_19, ufpga_hstdm_ctrl_o_18, ufpga_hstdm_ctrl_o_17, ufpga_hstdm_ctrl_o_16, ufpga_hstdm_ctrl_o_15, ufpga_hstdm_ctrl_o_14, ufpga_hstdm_ctrl_o_13, ufpga_hstdm_ctrl_o_12, ufpga_hstdm_ctrl_o_11, ufpga_hstdm_ctrl_o_10, ufpga_hstdm_ctrl_o_9, ufpga_hstdm_ctrl_o_8, ufpga_hstdm_ctrl_o_7, ufpga_hstdm_ctrl_o_6, ufpga_hstdm_ctrl_o_5, ufpga_hstdm_ctrl_o_4, ufpga_hstdm_ctrl_o_3, ufpga_hstdm_ctrl_o_2, ufpga_hstdm_ctrl_o_1, ufpga_hstdm_ctrl_o_0, ufpga_hstdm_ctrl_o}),
	.ufpga_hstdm_status_i({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.ufpga_scratch_o({ufpga_scratch_o_30, ufpga_scratch_o_29, ufpga_scratch_o_28, ufpga_scratch_o_27, ufpga_scratch_o_26, ufpga_scratch_o_25, ufpga_scratch_o_24, ufpga_scratch_o_23, ufpga_scratch_o_22, ufpga_scratch_o_21, ufpga_scratch_o_20, ufpga_scratch_o_19, ufpga_scratch_o_18, ufpga_scratch_o_17, ufpga_scratch_o_16, ufpga_scratch_o_15, ufpga_scratch_o_14, ufpga_scratch_o_13, ufpga_scratch_o_12, ufpga_scratch_o_11, ufpga_scratch_o_10, ufpga_scratch_o_9, ufpga_scratch_o_8, ufpga_scratch_o_7, ufpga_scratch_o_6, ufpga_scratch_o_5, ufpga_scratch_o_4, ufpga_scratch_o_3, ufpga_scratch_o_2, ufpga_scratch_o_1, ufpga_scratch_o_0, ufpga_scratch_o}),
	.ufpga_scratch_i({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.ufpga_reset_n_o(ufpga_reset_n_o),
	.ufpga_type_id_o({ufpga_type_id_o_30, ufpga_type_id_o_29, ufpga_type_id_o_28, ufpga_type_id_o_27, ufpga_type_id_o_26, ufpga_type_id_o_25, ufpga_type_id_o_24, ufpga_type_id_o_23, ufpga_type_id_o_22, ufpga_type_id_o_21, ufpga_type_id_o_20, ufpga_type_id_o_19, ufpga_type_id_o_18, ufpga_type_id_o_17, ufpga_type_id_o_16, ufpga_type_id_o_15, ufpga_type_id_o_14, ufpga_type_id_o_13, ufpga_type_id_o_12, ufpga_type_id_o_11, ufpga_type_id_o_10, ufpga_type_id_o_9, ufpga_type_id_o_8, ufpga_type_id_o_7, ufpga_type_id_o_6, ufpga_type_id_o_5, ufpga_type_id_o_4, ufpga_type_id_o_3, ufpga_type_id_o_2, ufpga_type_id_o_1, ufpga_type_id_o_0, ufpga_type_id_o}),
	.ufpga_loc_id_o({ufpga_loc_id_o_30, ufpga_loc_id_o_29, ufpga_loc_id_o_28, ufpga_loc_id_o_27, ufpga_loc_id_o_26, ufpga_loc_id_o_25, ufpga_loc_id_o_24, ufpga_loc_id_o_23, ufpga_loc_id_o_22, ufpga_loc_id_o_21, ufpga_loc_id_o_20, ufpga_loc_id_o_19, ufpga_loc_id_o_18, ufpga_loc_id_o_17, ufpga_loc_id_o_16, ufpga_loc_id_o_15, ufpga_loc_id_o_14, ufpga_loc_id_o_13, ufpga_loc_id_o_12, ufpga_loc_id_o_11, ufpga_loc_id_o_10, ufpga_loc_id_o_9, ufpga_loc_id_o_8, ufpga_loc_id_o_7, ufpga_loc_id_o_6, ufpga_loc_id_o_5, ufpga_loc_id_o_4, ufpga_loc_id_o_3, ufpga_loc_id_o_2, ufpga_loc_id_o_1, ufpga_loc_id_o_0, ufpga_loc_id_o}),
	.ufpga_id_o({ufpga_id_o_30, ufpga_id_o_29, ufpga_id_o_28, ufpga_id_o_27, ufpga_id_o_26, ufpga_id_o_25, ufpga_id_o_24, ufpga_id_o_23, ufpga_id_o_22, ufpga_id_o_21, ufpga_id_o_20, ufpga_id_o_19, ufpga_id_o_18, ufpga_id_o_17, ufpga_id_o_16, ufpga_id_o_15, ufpga_id_o_14, ufpga_id_o_13, ufpga_id_o_12, ufpga_id_o_11, ufpga_id_o_10, ufpga_id_o_9, ufpga_id_o_8, ufpga_id_o_7, ufpga_id_o_6, ufpga_id_o_5, ufpga_id_o_4, ufpga_id_o_3, ufpga_id_o_2, ufpga_id_o_1, ufpga_id_o_0, ufpga_id_o}),
	.ufpga_usr_id_o({ufpga_usr_id_o_30, ufpga_usr_id_o_29, ufpga_usr_id_o_28, ufpga_usr_id_o_27, ufpga_usr_id_o_26, ufpga_usr_id_o_25, ufpga_usr_id_o_24, ufpga_usr_id_o_23, ufpga_usr_id_o_22, ufpga_usr_id_o_21, ufpga_usr_id_o_20, ufpga_usr_id_o_19, ufpga_usr_id_o_18, ufpga_usr_id_o_17, ufpga_usr_id_o_16, ufpga_usr_id_o_15, ufpga_usr_id_o_14, ufpga_usr_id_o_13, ufpga_usr_id_o_12, ufpga_usr_id_o_11, ufpga_usr_id_o_10, ufpga_usr_id_o_9, ufpga_usr_id_o_8, ufpga_usr_id_o_7, ufpga_usr_id_o_6, ufpga_usr_id_o_5, ufpga_usr_id_o_4, ufpga_usr_id_o_3, ufpga_usr_id_o_2, ufpga_usr_id_o_1, ufpga_usr_id_o_0, ufpga_usr_id_o}),
	.ufpga_handle_o({ufpga_handle_o_30, ufpga_handle_o_29, ufpga_handle_o_28, ufpga_handle_o_27, ufpga_handle_o_26, ufpga_handle_o_25, ufpga_handle_o_24, ufpga_handle_o_23, ufpga_handle_o_22, ufpga_handle_o_21, ufpga_handle_o_20, ufpga_handle_o_19, ufpga_handle_o_18, ufpga_handle_o_17, ufpga_handle_o_16, ufpga_handle_o_15, ufpga_handle_o_14, ufpga_handle_o_13, ufpga_handle_o_12, ufpga_handle_o_11, ufpga_handle_o_10, ufpga_handle_o_9, ufpga_handle_o_8, ufpga_handle_o_7, ufpga_handle_o_6, ufpga_handle_o_5, ufpga_handle_o_4, ufpga_handle_o_3, ufpga_handle_o_2, ufpga_handle_o_1, ufpga_handle_o_0, ufpga_handle_o}),
	.ufpga_timestamp_o({ufpga_timestamp_o_30, ufpga_timestamp_o_29, ufpga_timestamp_o_28, ufpga_timestamp_o_27, ufpga_timestamp_o_26, ufpga_timestamp_o_25, ufpga_timestamp_o_24, ufpga_timestamp_o_23, ufpga_timestamp_o_22, ufpga_timestamp_o_21, ufpga_timestamp_o_20, ufpga_timestamp_o_19, ufpga_timestamp_o_18, ufpga_timestamp_o_17, ufpga_timestamp_o_16, ufpga_timestamp_o_15, ufpga_timestamp_o_14, ufpga_timestamp_o_13, ufpga_timestamp_o_12, ufpga_timestamp_o_11, ufpga_timestamp_o_10, ufpga_timestamp_o_9, ufpga_timestamp_o_8, ufpga_timestamp_o_7, ufpga_timestamp_o_6, ufpga_timestamp_o_5, ufpga_timestamp_o_4, ufpga_timestamp_o_3, ufpga_timestamp_o_2, ufpga_timestamp_o_1, ufpga_timestamp_o_0, ufpga_timestamp_o}),
	.HAPS_SIGNATURE_i({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.capim2_data_in_0({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.capim2_data_out_0(capim2_data_out_0[31:0]),
	.capim2_rd_out_0(capim2_rd_out_0),
	.capim2_wr_out_0(capim2_wr_out_0),
	.capim2_enable_out_0(capim2_enable_out_0),
	.capim2_data_in_1(haps_system_memory_data_out[31:0]),
	.capim2_data_out_1({capim2_data_out_1[31:28], haps_system_memory_interface_raddr_raw[27:0]}),
	.capim2_rd_out_1(haps_system_memory_interface_rd_raw),
	.capim2_wr_out_1(haps_system_memory_interface_wr_raw),
	.capim2_enable_out_1(haps_system_memory_interface_enable_in),
	.capim2_data_in_2(hstdm_memory_system_capim_data_out[31:0]),
	.capim2_data_out_2({capim2_data_out_2[31:28], hstdm_system_capim_interface_mem_data_out[27:0]}),
	.capim2_rd_out_2(hstdm_system_capim_interface_mem_rd_out),
	.capim2_wr_out_2(hstdm_system_capim_interface_mem_wr_out),
	.capim2_enable_out_2(hstdm_system_capim_interface_enable_memory_out),
	.capim2_data_in_3(hstdm_controller_system_capim_data_out[31:0]),
	.capim2_data_out_3({capim2_data_out_3[31:28], hstdm_system_capim_interface_ctrl_data_out[27:0]}),
	.capim2_rd_out_3(hstdm_system_capim_interface_ctrl_rd_out),
	.capim2_wr_out_3(hstdm_system_capim_interface_ctrl_wr_out),
	.capim2_enable_out_3(hstdm_system_capim_interface_enable_ctrl_out),
	.capim2_data_in_4({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.capim2_data_out_4(capim2_data_out_4[31:0]),
	.capim2_rd_out_4(capim2_rd_out_4),
	.capim2_wr_out_4(capim2_wr_out_4),
	.capim2_enable_out_4(capim2_enable_out_4),
	.capim2_data_in_6({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.capim2_data_out_6(capim2_data_out_6[31:0]),
	.capim2_rd_out_6(capim2_rd_out_6),
	.capim2_wr_out_6(capim2_wr_out_6),
	.capim2_enable_out_6(capim2_enable_out_6),
	.capim2_data_in_7({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.capim2_data_out_7(capim2_data_out_7[31:0]),
	.capim2_rd_out_7(capim2_rd_out_7),
	.capim2_wr_out_7(capim2_wr_out_7),
	.capim2_enable_out_7(capim2_enable_out_7),
	.capim3_enable_out_0(capim3_enable_out_0),
	.capim3_command_out_0(capim3_command_out_0[31:0]),
	.capim3_command_valid_out_0(capim3_command_valid_out_0),
	.capim3_count_out_0(capim3_count_out_0[31:0]),
	.capim3_dout_out_0(capim3_dout_out_0[31:0]),
	.capim3_dout_valid_out_0(capim3_dout_valid_out_0),
	.capim3_din_in_0({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.capim3_din_valid_in_0(GND),
	.capim3_din_ready_out_0(capim3_din_ready_out_0),
	.capim3_inti_type_in_0({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.capim3_inti_req_in_0(GND),
	.capim3_inti_ack_out_0(capim3_inti_ack_out_0),
	.reg_if_wr(reg_if_wr),
	.reg_if_addr(reg_if_addr[15:0]),
	.reg_if_din(reg_if_din[31:0]),
	.reg_if_dout_0({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.reg_if_en_0(reg_if_en_0),
	.reg_if_dout_1({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.reg_if_en_1(reg_if_en_1),
	.sys_clk(sys_clk),
	.sys_reset_n(sys_reset_n),
	.gclk0(gclk0),
	.umr3_clk(umr3_clk_c),
	.umr3_reset(umr3_reset),
	.umr2_clk(umr2_clk_c),
	.umr2_reset(umr2_reset),
	.haps_clk_200(haps_clk_200),
	.haps_clk_10(haps_clk_10),
	.umr3_clk_div_val({haps_umr3_clk_div_2, haps_umr3_clk_div_1, haps_umr3_clk_div_0, haps_umr3_clk_div}),
	.haps_clk_160(haps_clk_160),
	.haps_clk_10_2_sync(haps_clk_10_2_sync),
	.haps_clk_50_2_sync(haps_clk_50_2_sync),
	.hstdm_refclk_100(hstdm_refclk_100_c)
);
// @217:851
  CFGLUT5 I_haps_features (
	.I0(GND),
	.I1(GND),
	.I2(GND),
	.I3(GND),
	.I4(GND),
	.CDI(ufpga_lock_cdi_i),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(features_cdo),
	.O5(I_haps_features_O5),
	.O6(I_haps_features_O6)
);
defparam I_haps_features.INIT=32'h00001901;
// @217:870
  CFGLUT5 I_haps_signature (
	.I0(GND),
	.I1(GND),
	.I2(GND),
	.I3(GND),
	.I4(GND),
	.CDI(features_cdo),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(signature_cdo),
	.O5(I_haps_signature_O5),
	.O6(I_haps_signature_O6)
);
defparam I_haps_signature.INIT=32'h6432CF4C;
// @217:888
  CFGLUT5 I_haps_magic_word (
	.I0(GND),
	.I1(GND),
	.I2(GND),
	.I3(GND),
	.I4(GND),
	.CDI(signature_cdo),
	.CE(ufpga_lock_ce_o),
	.CLK(ufpga_lock_clk_o),
	.CDO(ufpga_lock_cdi_i_bb),
	.O5(I_haps_magic_word_O5),
	.O6(I_haps_magic_word_O6)
);
defparam I_haps_magic_word.INIT=32'h600DC0DE;
// @217:546
  BUFG bsa19_system_ip_u_cb (
	.I(hstdm_refclk_100_c),
	.O(hstdm_refclk_100)
);
// @217:546
  BUFG bsa19_system_ip_u_cb_0 (
	.I(umr3_clk_c),
	.O(umr3_clk)
);
// @217:546
  BUFG bsa19_system_ip_u_cb_1 (
	.I(umr2_clk_c),
	.O(umr2_clk)
);
  GND GND_cZ (
	.G(GND)
);
  VCC VCC_cZ (
	.P(VCC)
);
endmodule /* bsa19_system_ip_wrapper_256s_0_25s_1_1_1_1_1611514078 */

(* slppartitionflownetlist=1 , speedgrade="-1-e" , V7="A7" , V10="A10" , V11="A11" , V12="A12" , V17="A17" , V22="A22" , V27="A27" , V32="A32" , VR_IOBANK_83="A1" , VR_IOBANK_88="A1" , VR_IOBANK_60="A2" , VR_IOBANK_61="A3" , VR_IOBANK_62="A4" , VR_IOBANK_63="A5" , VR_IOBANK_19="A6" , VR_IOBANK_20="A7" , VR_IOBANK_21="A8" , VR_IOBANK_22="A9" , VR_IOBANK_23="A10" , VR_IOBANK_34="A11" , VR_IOBANK_66="A12" , VR_IOBANK_64="A13" , VR_IOBANK_24="A14" , VR_IOBANK_25="A15" , VR_IOBANK_26="A16" , VR_IOBANK_27="A17" , VR_IOBANK_28="A18" , VR_IOBANK_35="A19" , VR_IOBANK_36="A20" , VR_IOBANK_37="A21" , VR_IOBANK_38="A22" , VR_IOBANK_74="A23" , VR_IOBANK_75="A24" , VR_IOBANK_76="A25" , VR_IOBANK_77="A26" , VR_IOBANK_78="A27" , VR_IOBANK_59="A28" , VR_IOBANK_73="A29" , VR_IOBANK_93="A30" , VR_IOBANK_98="A30" , VR_IOBANK_72="A31" , VR_IOBANK_33="A32" , VR_IOBANK_32="A33" , VR_IOBANK_31="A34" , VR_IOBANK_30="A35" , VR_IOBANK_29="A36" , VR_IOBANK_69="1.2v" , VR_IOBANK_70="1.2v" , VR_IOBANK_71="1.2v" , VR_IOBANK_65="1.8v" , haps_dut_cell_name="FB1_uA_dut" , haps_dut_top_srp_name="top" , min_row=1 , min_col=1 , max_row=1 , max_col=1 , VR_IOBANK_237="unknown" , VR_IOBANK_236="unknown" , VR_IOBANK_235="unknown" , VR_IOBANK_232="unknown" , VR_IOBANK_231="unknown" , VR_IOBANK_230="unknown" , VR_IOBANK_227="unknown" , VR_IOBANK_226="unknown" , VR_IOBANK_225="unknown" , VR_IOBANK_222="unknown" , VR_IOBANK_221="unknown" , VR_IOBANK_220="unknown" *)module FB1_uA (
  clk,
  rst_n,
  IMMID,
  N_1,
  ADDOUTID_63_0,
  PCSRCID,
  PC,
  in_enable,
  in_instruc,
  Addr,
  stall_0,
  IMMID_11_to_20,
  IMMID_22_to_22,
  IMMID_24_to_26,
  IMMID_28_to_51,
  MEMREADEX,
  MEMREADEX_aptn_ft,
  MEMREADMEM_aptn_ft,
  MEMREADMEM_aptn_ft_0,
  REGWRITEWB_0,
  REGWRITEWB_aptn_ft,
  rst_n_aptn_s,
  ALUOUTMEM_aptn_ft,
  ALUOUTMEM_aptn_ft_0,
  DMOUTWB,
  DMOUTWB_aptn_ft,
  WREX,
  WREX_aptn_ft,
  WRITEDATAWB,
  WRITEDATAWB_aptn_ft,
  WRMEM_aptn_ft,
  WRMEM_aptn_ft_0,
  WRWB,
  WRWB_aptn_ft,
  cpm_s_HSTDM_4_FB1_AI1_N_18,
  pin_G39,
  cpm_s_HSTDM_4_FB1_AI1_P_18,
  pin_H39,
  pin_H31,
  cpm_s_HSTDM_4_FB1_BI3_N_8,
  cpm_s_HSTDM_4_FB1_BI3_N_7,
  pin_J31,
  cpm_s_HSTDM_4_FB1_BI3_P_8,
  cpm_s_HSTDM_4_FB1_BI3_P_7,
  cpm_s_HSTDM_4_FB1_A2_C_0,
  cpm_s_HSTDM_4_FB1_A2_C_1,
  pin_BP13,
  pin_BR13,
  cpm_s_HSTDM_4_FB1_A2_D_2,
  cpm_s_HSTDM_4_FB1_A2_D_3,
  cpm_s_HSTDM_4_FB1_A3_C_0,
  cpm_s_HSTDM_4_FB1_A3_C_1,
  pin_BN21,
  pin_BN20,
  cpm_s_HSTDM_4_FB1_A3_D_2,
  cpm_s_HSTDM_4_FB1_A3_D_3,
  cpm_s_HSTDM_4_FB1_A4_C_0,
  cpm_s_HSTDM_4_FB1_A4_C_1,
  pin_BM29,
  pin_BN29,
  cpm_s_HSTDM_4_FB1_A4_D_2,
  cpm_s_HSTDM_4_FB1_A4_D_3,
  INSTRUCID_0_11,
  INSTRUCID_15_26,
  INSTRUCID_28_29,
  INSTRUCID_31,
  UMR3_SIB_LINK_IN,
  UMR3_SIB_LINK_OUT,
  AFPGA_GLNK_OUT,
  AFPGA_LOCK_CDO_GLNK_I,
  AFPGA_LOCK_CLK_I,
  AFPGA_LOCK_CE_I,
  AFPGA_LOCK_CDi_O,
  REF_CLK_P,
  REF_CLK_N,
  REF_RESET,
  DUMMY_PORT,
  DUMMY_GSR_PORT,
  MNGLINK_TX,
  MNGLINK_RX,
  GT1_REFCLK_P,
  GT1_REFCLK_N,
  GT1_TXP,
  GT1_TXN,
  GT1_RXP,
  GT1_RXN,
  DBG_DOUT_0,
  DBG_DOUT_1,
  DBG_DOUT_2,
  DBG_DOUT_3,
  DBG_DOUT_4,
  DBG_DOUT_5,
  DBG_DOUT_6,
  DBG_DOUT_7,
  DBG_RXP,
  DBG_RXN,
  DBG_TXP,
  DBG_TXN,
  DBG_REFCLKP_0,
  DBG_REFCLKN_0,
  clk_0
)
;
(* WIRE=1 *)input clk ;
output rst_n ;
output [63:53] IMMID ;
input N_1 ;
(* WIRE=1 *)input [63:0] ADDOUTID_63_0 ;
input PCSRCID ;
(* WIRE=1 *)output [63:0] PC ;
(* WIRE=1 *)input in_enable ;
(* WIRE=1 *)input [31:0] in_instruc ;
input [63:2] Addr ;
(* WIRE=1 *)input stall_0 ;
output [20:11] IMMID_11_to_20 ;
output [22:22] IMMID_22_to_22 ;
output [26:24] IMMID_24_to_26 ;
output [51:28] IMMID_28_to_51 ;
input MEMREADEX ;
output MEMREADEX_aptn_ft ;
input MEMREADMEM_aptn_ft ;
output MEMREADMEM_aptn_ft_0 ;
input REGWRITEWB_0 ;
output REGWRITEWB_aptn_ft ;
output rst_n_aptn_s ;
input [10:0] ALUOUTMEM_aptn_ft ;
output [10:0] ALUOUTMEM_aptn_ft_0 ;
input [63:0] DMOUTWB ;
output [63:0] DMOUTWB_aptn_ft ;
input [3:0] WREX ;
output [3:0] WREX_aptn_ft ;
input [63:0] WRITEDATAWB ;
output [63:0] WRITEDATAWB_aptn_ft ;
input [4:0] WRMEM_aptn_ft ;
output [4:0] WRMEM_aptn_ft_0 ;
input [4:0] WRWB ;
output [4:0] WRWB_aptn_ft ;
output cpm_s_HSTDM_4_FB1_AI1_N_18 ;
output pin_G39 ;
output cpm_s_HSTDM_4_FB1_AI1_P_18 ;
output pin_H39 ;
output pin_H31 ;
output cpm_s_HSTDM_4_FB1_BI3_N_8 ;
output cpm_s_HSTDM_4_FB1_BI3_N_7 ;
output pin_J31 ;
output cpm_s_HSTDM_4_FB1_BI3_P_8 ;
output cpm_s_HSTDM_4_FB1_BI3_P_7 ;
output cpm_s_HSTDM_4_FB1_A2_C_0 ;
output cpm_s_HSTDM_4_FB1_A2_C_1 ;
output pin_BP13 ;
output pin_BR13 ;
output cpm_s_HSTDM_4_FB1_A2_D_2 ;
output cpm_s_HSTDM_4_FB1_A2_D_3 ;
output cpm_s_HSTDM_4_FB1_A3_C_0 ;
output cpm_s_HSTDM_4_FB1_A3_C_1 ;
output pin_BN21 ;
output pin_BN20 ;
output cpm_s_HSTDM_4_FB1_A3_D_2 ;
output cpm_s_HSTDM_4_FB1_A3_D_3 ;
output cpm_s_HSTDM_4_FB1_A4_C_0 ;
output cpm_s_HSTDM_4_FB1_A4_C_1 ;
output pin_BM29 ;
output pin_BN29 ;
output cpm_s_HSTDM_4_FB1_A4_D_2 ;
output cpm_s_HSTDM_4_FB1_A4_D_3 ;
output [0:11] INSTRUCID_0_11 ;
output [15:26] INSTRUCID_15_26 ;
output [28:29] INSTRUCID_28_29 ;
output [31:31] INSTRUCID_31 ;
input [1:0] UMR3_SIB_LINK_IN ;
output [1:0] UMR3_SIB_LINK_OUT ;
output AFPGA_GLNK_OUT ;
input [0:0] AFPGA_LOCK_CDO_GLNK_I ;
input AFPGA_LOCK_CLK_I ;
input AFPGA_LOCK_CE_I ;
output AFPGA_LOCK_CDi_O ;
input REF_CLK_P ;
input REF_CLK_N ;
input REF_RESET ;
output DUMMY_PORT ;
output DUMMY_GSR_PORT ;
output MNGLINK_TX ;
input MNGLINK_RX ;
input GT1_REFCLK_P ;
input GT1_REFCLK_N ;
output [0:3] GT1_TXP ;
output [0:3] GT1_TXN ;
input [0:3] GT1_RXP ;
input [0:3] GT1_RXN ;
output DBG_DOUT_0 ;
output DBG_DOUT_1 ;
output DBG_DOUT_2 ;
output DBG_DOUT_3 ;
output DBG_DOUT_4 ;
output DBG_DOUT_5 ;
output DBG_DOUT_6 ;
output DBG_DOUT_7 ;
input [7:0] DBG_RXP ;
input [7:0] DBG_RXN ;
output [7:0] DBG_TXP ;
output [7:0] DBG_TXN ;
input [3:0] DBG_REFCLKP_0 ;
input [3:0] DBG_REFCLKN_0 ;
input clk_0 ;
wire clk ;
wire rst_n ;
wire N_1 ;
wire PCSRCID ;
wire in_enable ;
wire stall_0 ;
wire MEMREADEX ;
wire MEMREADEX_aptn_ft ;
wire MEMREADMEM_aptn_ft ;
wire MEMREADMEM_aptn_ft_0 ;
wire REGWRITEWB_0 ;
wire REGWRITEWB_aptn_ft ;
wire rst_n_aptn_s ;
wire cpm_s_HSTDM_4_FB1_AI1_N_18 ;
wire pin_G39 ;
wire cpm_s_HSTDM_4_FB1_AI1_P_18 ;
wire pin_H39 ;
wire pin_H31 ;
wire cpm_s_HSTDM_4_FB1_BI3_N_8 ;
wire cpm_s_HSTDM_4_FB1_BI3_N_7 ;
wire pin_J31 ;
wire cpm_s_HSTDM_4_FB1_BI3_P_8 ;
wire cpm_s_HSTDM_4_FB1_BI3_P_7 ;
wire cpm_s_HSTDM_4_FB1_A2_C_0 ;
wire cpm_s_HSTDM_4_FB1_A2_C_1 ;
wire pin_BP13 ;
wire pin_BR13 ;
wire cpm_s_HSTDM_4_FB1_A2_D_2 ;
wire cpm_s_HSTDM_4_FB1_A2_D_3 ;
wire cpm_s_HSTDM_4_FB1_A3_C_0 ;
wire cpm_s_HSTDM_4_FB1_A3_C_1 ;
wire pin_BN21 ;
wire pin_BN20 ;
wire cpm_s_HSTDM_4_FB1_A3_D_2 ;
wire cpm_s_HSTDM_4_FB1_A3_D_3 ;
wire cpm_s_HSTDM_4_FB1_A4_C_0 ;
wire cpm_s_HSTDM_4_FB1_A4_C_1 ;
wire pin_BM29 ;
wire pin_BN29 ;
wire cpm_s_HSTDM_4_FB1_A4_D_2 ;
wire cpm_s_HSTDM_4_FB1_A4_D_3 ;
wire AFPGA_GLNK_OUT ;
wire AFPGA_LOCK_CLK_I ;
wire AFPGA_LOCK_CE_I ;
wire AFPGA_LOCK_CDi_O ;
wire REF_CLK_P ;
wire REF_CLK_N ;
wire REF_RESET ;
wire DUMMY_PORT ;
wire DUMMY_GSR_PORT ;
wire MNGLINK_TX ;
wire MNGLINK_RX ;
wire GT1_REFCLK_P ;
wire GT1_REFCLK_N ;
wire DBG_DOUT_0 ;
wire DBG_DOUT_1 ;
wire DBG_DOUT_2 ;
wire DBG_DOUT_3 ;
wire DBG_DOUT_4 ;
wire DBG_DOUT_5 ;
wire DBG_DOUT_6 ;
wire DBG_DOUT_7 ;
wire clk_0 ;
wire [63:0] PCID;
wire [30:12] INSTRUCID;
wire [31:0] haps_system_memory_data_out;
wire [31:0] hstdm_memory_system_capim_data_out;
wire [31:0] hstdm_controller_system_capim_data_out;
wire [27:0] haps_system_memory_interface_raddr_raw;
wire [2:0] hstdm_controller_sim_flags_out;
wire [1:0] hstdm_controller_training_ctrl_tx_out;
wire [1:0] hstdm_controller_self_test_start_rx_out;
wire [3:0] hstdm_controller_infopipe_data_out;
wire [3:1] hstdm_bitslice_ctrl_bank60_VTC_RDY;
wire [3:1] hstdm_bitslice_ctrl_bank60_DLY_RDY;
wire [319:0] hstdm_bitslice_ctrl_bank60_TX_BIT_CTRL_OUT6;
wire [319:0] hstdm_bitslice_ctrl_bank60_TX_BIT_CTRL_OUT5;
wire [319:0] hstdm_bitslice_ctrl_bank60_TX_BIT_CTRL_OUT4;
wire [319:0] hstdm_bitslice_ctrl_bank60_TX_BIT_CTRL_OUT3;
wire [319:0] hstdm_bitslice_ctrl_bank60_TX_BIT_CTRL_OUT2;
wire [319:0] hstdm_bitslice_ctrl_bank60_TX_BIT_CTRL_OUT1;
wire [319:0] hstdm_bitslice_ctrl_bank60_TX_BIT_CTRL_OUT0;
wire [319:0] hstdm_bitslice_ctrl_bank60_RX_BIT_CTRL_OUT6;
wire [319:0] hstdm_bitslice_ctrl_bank60_RX_BIT_CTRL_OUT5;
wire [319:0] hstdm_bitslice_ctrl_bank60_RX_BIT_CTRL_OUT4;
wire [319:0] hstdm_bitslice_ctrl_bank60_RX_BIT_CTRL_OUT3;
wire [319:0] hstdm_bitslice_ctrl_bank60_RX_BIT_CTRL_OUT2;
wire [319:0] hstdm_bitslice_ctrl_bank60_RX_BIT_CTRL_OUT1;
wire [319:0] hstdm_bitslice_ctrl_bank60_RX_BIT_CTRL_OUT0;
wire [3:1] hstdm_bitslice_ctrl_bank61_VTC_RDY;
wire [3:1] hstdm_bitslice_ctrl_bank61_DLY_RDY;
wire [319:0] hstdm_bitslice_ctrl_bank61_TX_BIT_CTRL_OUT6;
wire [319:0] hstdm_bitslice_ctrl_bank61_TX_BIT_CTRL_OUT5;
wire [319:0] hstdm_bitslice_ctrl_bank61_TX_BIT_CTRL_OUT4;
wire [319:0] hstdm_bitslice_ctrl_bank61_TX_BIT_CTRL_OUT3;
wire [319:0] hstdm_bitslice_ctrl_bank61_TX_BIT_CTRL_OUT2;
wire [319:0] hstdm_bitslice_ctrl_bank61_TX_BIT_CTRL_OUT1;
wire [319:0] hstdm_bitslice_ctrl_bank61_TX_BIT_CTRL_OUT0;
wire [319:0] hstdm_bitslice_ctrl_bank61_RX_BIT_CTRL_OUT6;
wire [319:0] hstdm_bitslice_ctrl_bank61_RX_BIT_CTRL_OUT5;
wire [319:0] hstdm_bitslice_ctrl_bank61_RX_BIT_CTRL_OUT4;
wire [319:0] hstdm_bitslice_ctrl_bank61_RX_BIT_CTRL_OUT3;
wire [319:0] hstdm_bitslice_ctrl_bank61_RX_BIT_CTRL_OUT2;
wire [319:0] hstdm_bitslice_ctrl_bank61_RX_BIT_CTRL_OUT1;
wire [319:0] hstdm_bitslice_ctrl_bank61_RX_BIT_CTRL_OUT0;
wire [3:1] hstdm_bitslice_ctrl_bank62_VTC_RDY;
wire [3:1] hstdm_bitslice_ctrl_bank62_DLY_RDY;
wire [319:0] hstdm_bitslice_ctrl_bank62_TX_BIT_CTRL_OUT6;
wire [319:0] hstdm_bitslice_ctrl_bank62_TX_BIT_CTRL_OUT5;
wire [319:0] hstdm_bitslice_ctrl_bank62_TX_BIT_CTRL_OUT4;
wire [319:0] hstdm_bitslice_ctrl_bank62_TX_BIT_CTRL_OUT3;
wire [319:0] hstdm_bitslice_ctrl_bank62_TX_BIT_CTRL_OUT2;
wire [319:0] hstdm_bitslice_ctrl_bank62_TX_BIT_CTRL_OUT1;
wire [319:0] hstdm_bitslice_ctrl_bank62_TX_BIT_CTRL_OUT0;
wire [319:0] hstdm_bitslice_ctrl_bank62_RX_BIT_CTRL_OUT6;
wire [319:0] hstdm_bitslice_ctrl_bank62_RX_BIT_CTRL_OUT5;
wire [319:0] hstdm_bitslice_ctrl_bank62_RX_BIT_CTRL_OUT4;
wire [319:0] hstdm_bitslice_ctrl_bank62_RX_BIT_CTRL_OUT3;
wire [319:0] hstdm_bitslice_ctrl_bank62_RX_BIT_CTRL_OUT2;
wire [319:0] hstdm_bitslice_ctrl_bank62_RX_BIT_CTRL_OUT1;
wire [319:0] hstdm_bitslice_ctrl_bank62_RX_BIT_CTRL_OUT0;
wire [6:5] hstdm_bitslice_ctrl_bank69_VTC_RDY;
wire [6:5] hstdm_bitslice_ctrl_bank69_DLY_RDY;
wire [319:0] hstdm_bitslice_ctrl_bank69_TX_BIT_CTRL_OUT6;
wire [319:0] hstdm_bitslice_ctrl_bank69_TX_BIT_CTRL_OUT5;
wire [319:0] hstdm_bitslice_ctrl_bank69_TX_BIT_CTRL_OUT4;
wire [319:0] hstdm_bitslice_ctrl_bank69_TX_BIT_CTRL_OUT3;
wire [319:0] hstdm_bitslice_ctrl_bank69_TX_BIT_CTRL_OUT2;
wire [319:0] hstdm_bitslice_ctrl_bank69_TX_BIT_CTRL_OUT1;
wire [319:0] hstdm_bitslice_ctrl_bank69_TX_BIT_CTRL_OUT0;
wire [319:0] hstdm_bitslice_ctrl_bank69_RX_BIT_CTRL_OUT6;
wire [319:0] hstdm_bitslice_ctrl_bank69_RX_BIT_CTRL_OUT5;
wire [319:0] hstdm_bitslice_ctrl_bank69_RX_BIT_CTRL_OUT4;
wire [319:0] hstdm_bitslice_ctrl_bank69_RX_BIT_CTRL_OUT3;
wire [319:0] hstdm_bitslice_ctrl_bank69_RX_BIT_CTRL_OUT2;
wire [319:0] hstdm_bitslice_ctrl_bank69_RX_BIT_CTRL_OUT1;
wire [319:0] hstdm_bitslice_ctrl_bank69_RX_BIT_CTRL_OUT0;
wire [5:4] hstdm_bitslice_ctrl_bank71_VTC_RDY;
wire [5:4] hstdm_bitslice_ctrl_bank71_DLY_RDY;
wire [319:0] hstdm_bitslice_ctrl_bank71_TX_BIT_CTRL_OUT6;
wire [319:0] hstdm_bitslice_ctrl_bank71_TX_BIT_CTRL_OUT5;
wire [319:0] hstdm_bitslice_ctrl_bank71_TX_BIT_CTRL_OUT4;
wire [319:0] hstdm_bitslice_ctrl_bank71_TX_BIT_CTRL_OUT3;
wire [319:0] hstdm_bitslice_ctrl_bank71_TX_BIT_CTRL_OUT2;
wire [319:0] hstdm_bitslice_ctrl_bank71_TX_BIT_CTRL_OUT1;
wire [319:0] hstdm_bitslice_ctrl_bank71_TX_BIT_CTRL_OUT0;
wire [319:0] hstdm_bitslice_ctrl_bank71_RX_BIT_CTRL_OUT6;
wire [319:0] hstdm_bitslice_ctrl_bank71_RX_BIT_CTRL_OUT5;
wire [319:0] hstdm_bitslice_ctrl_bank71_RX_BIT_CTRL_OUT4;
wire [319:0] hstdm_bitslice_ctrl_bank71_RX_BIT_CTRL_OUT3;
wire [319:0] hstdm_bitslice_ctrl_bank71_RX_BIT_CTRL_OUT2;
wire [319:0] hstdm_bitslice_ctrl_bank71_RX_BIT_CTRL_OUT1;
wire [319:0] hstdm_bitslice_ctrl_bank71_RX_BIT_CTRL_OUT0;
wire [39:0] hstdm_clkgen_1200_tx_bank69_block1_TX_BIT_CTRL_OUT;
wire [39:0] hstdm_clkgen_1200_tx_bank69_block1_RX_BIT_CTRL_OUT;
wire [39:0] hstdm_clkgen_1200_tx_bank71_block2_TX_BIT_CTRL_OUT;
wire [39:0] hstdm_clkgen_1200_tx_bank71_block2_RX_BIT_CTRL_OUT;
wire [39:0] hstdm_clkgen_1200_tx_bank60_block3_TX_BIT_CTRL_OUT;
wire [39:0] hstdm_clkgen_1200_tx_bank60_block3_RX_BIT_CTRL_OUT;
wire [39:0] hstdm_clkgen_1200_tx_bank61_block4_TX_BIT_CTRL_OUT;
wire [39:0] hstdm_clkgen_1200_tx_bank61_block4_RX_BIT_CTRL_OUT;
wire [39:0] hstdm_clkgen_1200_tx_bank62_block5_TX_BIT_CTRL_OUT;
wire [39:0] hstdm_clkgen_1200_tx_bank62_block5_RX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_AI1_N_18_TX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_AI1_N_18_RX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_AI1_P_18_TX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_AI1_P_18_RX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_BI3_N_7_TX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_BI3_N_7_RX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_BI3_P_7_TX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_BI3_P_7_RX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_BI3_N_8_TX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_BI3_N_8_RX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_BI3_P_8_TX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_BI3_P_8_RX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_A2_C_1_TX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_A2_C_1_RX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_A2_C_0_TX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_A2_C_0_RX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_A2_D_3_TX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_A2_D_3_RX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_A2_D_2_TX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_A2_D_2_RX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_A3_C_1_TX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_A3_C_1_RX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_A3_C_0_TX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_A3_C_0_RX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_A3_D_3_TX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_A3_D_3_RX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_A3_D_2_TX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_A3_D_2_RX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_A4_C_1_TX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_A4_C_1_RX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_A4_C_0_TX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_A4_C_0_RX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_A4_D_3_TX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_A4_D_3_RX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_A4_D_2_TX_BIT_CTRL_OUT;
wire [39:0] cpm_snd_HSTDM_4_FB1_A4_D_2_RX_BIT_CTRL_OUT;
wire [27:0] hstdm_system_capim_interface_mem_data_out;
wire [27:0] hstdm_system_capim_interface_ctrl_data_out;
wire [7:0] flags_out;
wire [1:1] sim_flags_out;
wire [5:0] RIU_ADDR_3;
wire [15:0] RIU_WR_DATA_3;
wire [5:0] RIU_ADDR_2;
wire [15:0] RIU_WR_DATA_2;
wire [5:0] RIU_ADDR_1;
wire [15:0] RIU_WR_DATA_1;
wire [5:0] RIU_ADDR_0;
wire [15:0] RIU_WR_DATA_0;
wire [5:0] RIU_ADDR;
wire [15:0] RIU_WR_DATA;
wire [7:0] DLY_RDY_3;
wire [7:0] DLY_RDY_2;
wire [7:0] DLY_RDY_1;
wire [7:0] VTC_RDY_3;
wire [7:0] VTC_RDY_2;
wire [7:0] VTC_RDY_1;
wire [7:0] DLY_RDY_0;
wire [7:0] VTC_RDY_0;
wire [7:0] DLY_RDY;
wire [7:0] VTC_RDY;
wire [63:0] ADDOUTID_63_0_c;
wire [31:0] in_instruc_c;
wire [63:2] Addr_c;
wire [10:0] ALUOUTMEM_aptn_ft_c;
wire [63:0] DMOUTWB_c;
wire [3:0] WREX_c;
wire [63:0] WRITEDATAWB_c;
wire [4:0] WRMEM_aptn_ft_c;
wire [4:0] WRWB_c;
wire [1:0] UMR3_SIB_LINK_IN_c;
wire [0:0] AFPGA_LOCK_CDO_GLNK_I_c;
wire [63:53] IMMID_c;
wire [63:0] PC_c;
wire [20:11] IMMID_11_to_20_c;
wire [22:22] IMMID_22_to_22_c;
wire [26:24] IMMID_24_to_26_c;
wire [51:28] IMMID_28_to_51_c;
wire [10:0] ALUOUTMEM_aptn_ft_0_c;
wire [63:0] DMOUTWB_aptn_ft_c;
wire [3:0] WREX_aptn_ft_c;
wire [63:0] WRITEDATAWB_aptn_ft_c;
wire [4:0] WRMEM_aptn_ft_0_c;
wire [4:0] WRWB_aptn_ft_c;
wire [11:0] INSTRUCID_0_11_c;
wire [26:15] INSTRUCID_15_26_c;
wire [29:28] INSTRUCID_28_29_c;
wire [31:31] INSTRUCID_31_c;
wire [1:0] UMR3_SIB_LINK_OUT_c;
wire GND ;
wire VCC ;
wire ufpga_reset_n_o ;
wire ufpga_lock_cdo_o ;
wire ufpga_lock_clk_o ;
wire ufpga_lock_ce_o ;
wire umr3_clk ;
wire umr3_reset ;
wire umr2_clk ;
wire hstdm_refclk_100 ;
wire haps_system_memory_interface_enable_in ;
wire haps_system_memory_interface_rd_raw ;
wire haps_system_memory_interface_wr_raw ;
wire hstdm_reset ;
wire hstdm_reset_rx ;
wire hstdm_training_done_net ;
wire hstdm_controller_training_ctrl_rx_out ;
wire hstdm_controller_reset_tx_out ;
wire hstdm_controller_reset_erd_flag_out ;
wire hstdm_controller_infopipe_empty_out ;
wire hstdm_controller_reset_clock_out ;
wire hstdm_simulation_net ;
wire hstdm_clkgeninst_SIMULATION_DISABLE_TRAINING ;
wire hstdm_txclk_1200_bank60_div2_net ;
wire hstdm_txclk_1200_bank60_clkoutphy_net ;
wire hstdm_idlyctrlclk_1200_bank60 ;
wire hstdm_plllocked_bank60 ;
wire hstdm_dly_rst_bank60 ;
wire hstdm_bs_rst_bank60 ;
wire hstdm_bsc_rst_bank60 ;
wire hstdm_clkgen_1200_bank60_RIU_CLK ;
wire hstdm_clkgen_1200_bank60_BSC_RDY ;
wire hstdm_clkgen_1200_bank60_BSC_EN_VTC ;
wire hstdm_txclk_1200_bank61_div2_net ;
wire hstdm_txclk_1200_bank61_clkoutphy_net ;
wire hstdm_idlyctrlclk_1200_bank61 ;
wire hstdm_plllocked_bank61 ;
wire hstdm_dly_rst_bank61 ;
wire hstdm_bs_rst_bank61 ;
wire hstdm_bsc_rst_bank61 ;
wire hstdm_clkgen_1200_bank61_RIU_CLK ;
wire hstdm_clkgen_1200_bank61_BSC_RDY ;
wire hstdm_clkgen_1200_bank61_BSC_EN_VTC ;
wire hstdm_txclk_1200_bank62_div2_net ;
wire hstdm_txclk_1200_bank62_clkoutphy_net ;
wire hstdm_idlyctrlclk_1200_bank62 ;
wire hstdm_plllocked_bank62 ;
wire hstdm_dly_rst_bank62 ;
wire hstdm_bs_rst_bank62 ;
wire hstdm_bsc_rst_bank62 ;
wire hstdm_clkgen_1200_bank62_RIU_CLK ;
wire hstdm_clkgen_1200_bank62_BSC_RDY ;
wire hstdm_clkgen_1200_bank62_BSC_EN_VTC ;
wire hstdm_txclk_1200_bank69_div2_net ;
wire hstdm_txclk_1200_bank69_clkoutphy_net ;
wire hstdm_idlyctrlclk_1200_bank69 ;
wire hstdm_plllocked_bank69 ;
wire hstdm_dly_rst_bank69 ;
wire hstdm_bs_rst_bank69 ;
wire hstdm_bsc_rst_bank69 ;
wire hstdm_clkgen_1200_bank69_RIU_CLK ;
wire hstdm_clkgen_1200_bank69_BSC_RDY ;
wire hstdm_clkgen_1200_bank69_BSC_EN_VTC ;
wire hstdm_txclk_1200_bank71_div2_net ;
wire hstdm_txclk_1200_bank71_clkoutphy_net ;
wire hstdm_idlyctrlclk_1200_bank71 ;
wire hstdm_plllocked_bank71 ;
wire hstdm_dly_rst_bank71 ;
wire hstdm_bs_rst_bank71 ;
wire hstdm_bsc_rst_bank71 ;
wire hstdm_clkgen_1200_bank71_RIU_CLK ;
wire hstdm_clkgen_1200_bank71_BSC_RDY ;
wire hstdm_clkgen_1200_bank71_BSC_EN_VTC ;
wire tx_3 ;
wire hstdm_clkgen_1200_tx_bank69_block1_T_out ;
wire tx_2 ;
wire hstdm_clkgen_1200_tx_bank71_block2_T_out ;
wire tx_1 ;
wire hstdm_clkgen_1200_tx_bank60_block3_T_out ;
wire tx_0 ;
wire hstdm_clkgen_1200_tx_bank61_block4_T_out ;
wire tx ;
wire hstdm_clkgen_1200_tx_bank62_block5_T_out ;
wire cpm_snd_HSTDM_4_FB1_AI1_N_18_T_out ;
wire cpm_snd_HSTDM_4_FB1_AI1_P_18_T_out ;
wire cpm_snd_HSTDM_4_FB1_BI3_N_7_T_out ;
wire cpm_snd_HSTDM_4_FB1_BI3_P_7_T_out ;
wire cpm_snd_HSTDM_4_FB1_BI3_N_8_T_out ;
wire cpm_snd_HSTDM_4_FB1_BI3_P_8_T_out ;
wire cpm_snd_HSTDM_4_FB1_A2_C_1_T_out ;
wire cpm_snd_HSTDM_4_FB1_A2_C_0_T_out ;
wire cpm_snd_HSTDM_4_FB1_A2_D_3_T_out ;
wire cpm_snd_HSTDM_4_FB1_A2_D_2_T_out ;
wire cpm_snd_HSTDM_4_FB1_A3_C_1_T_out ;
wire cpm_snd_HSTDM_4_FB1_A3_C_0_T_out ;
wire cpm_snd_HSTDM_4_FB1_A3_D_3_T_out ;
wire cpm_snd_HSTDM_4_FB1_A3_D_2_T_out ;
wire cpm_snd_HSTDM_4_FB1_A4_C_1_T_out ;
wire cpm_snd_HSTDM_4_FB1_A4_C_0_T_out ;
wire cpm_snd_HSTDM_4_FB1_A4_D_3_T_out ;
wire cpm_snd_HSTDM_4_FB1_A4_D_2_T_out ;
wire hstdm_memory_infopipe_empty_out ;
wire hstdm_memory_req_done_out ;
wire hstdm_system_capim_interface_enable_memory_out ;
wire hstdm_system_capim_interface_enable_ctrl_out ;
wire hstdm_system_capim_interface_mem_rd_out ;
wire hstdm_system_capim_interface_mem_wr_out ;
wire hstdm_system_capim_interface_ctrl_rd_out ;
wire hstdm_system_capim_interface_ctrl_wr_out ;
wire RIU_NIBBLE_SEL_LOWER_3 ;
wire RIU_NIBBLE_SEL_UPPER_3 ;
wire RIU_WR_EN_3 ;
wire txclk_3 ;
wire txclkdiv4_3 ;
wire RIU_NIBBLE_SEL_LOWER_2 ;
wire RIU_NIBBLE_SEL_UPPER_2 ;
wire RIU_WR_EN_2 ;
wire txclk_2 ;
wire txclkdiv4_2 ;
wire RIU_NIBBLE_SEL_LOWER_1 ;
wire RIU_NIBBLE_SEL_UPPER_1 ;
wire RIU_WR_EN_1 ;
wire txclk_1 ;
wire txclkdiv4_1 ;
wire RIU_NIBBLE_SEL_LOWER_0 ;
wire RIU_NIBBLE_SEL_UPPER_0 ;
wire RIU_WR_EN_0 ;
wire txclk_0 ;
wire txclkdiv4_0 ;
wire RIU_NIBBLE_SEL_LOWER ;
wire RIU_NIBBLE_SEL_UPPER ;
wire RIU_WR_EN ;
wire txclk ;
wire txclkdiv4 ;
wire N_1_c ;
wire PCSRCID_c ;
wire in_enable_c ;
wire stall_0_c ;
wire MEMREADEX_c ;
wire MEMREADMEM_aptn_ft_c ;
wire REGWRITEWB_0_c ;
wire AFPGA_LOCK_CLK_I_c ;
wire AFPGA_LOCK_CE_I_c ;
wire REF_RESET_c ;
wire MNGLINK_RX_c ;
wire rst_n_c ;
wire MEMREADEX_aptn_ft_c ;
wire MEMREADMEM_aptn_ft_0_c ;
wire REGWRITEWB_aptn_ft_c ;
wire rst_n_aptn_s_c ;
wire AFPGA_GLNK_OUT_c ;
wire AFPGA_LOCK_CDi_O_c ;
wire DUMMY_PORT_c ;
wire DUMMY_GSR_PORT_c ;
wire MNGLINK_TX_c ;
wire clk_bufg ;
wire clkz ;
wire cpm_s_HSTDM_4_FB1_AI1_N_18z ;
wire cpm_s_HSTDM_4_FB1_AI1_P_18z ;
wire cpm_s_HSTDM_4_FB1_BI3_N_8z ;
wire cpm_s_HSTDM_4_FB1_BI3_N_7z ;
wire cpm_s_HSTDM_4_FB1_BI3_P_8z ;
wire cpm_s_HSTDM_4_FB1_BI3_P_7z ;
wire cpm_s_HSTDM_4_FB1_A2_C_0z ;
wire cpm_s_HSTDM_4_FB1_A2_C_1z ;
wire cpm_s_HSTDM_4_FB1_A2_D_2z ;
wire cpm_s_HSTDM_4_FB1_A2_D_3z ;
wire cpm_s_HSTDM_4_FB1_A3_C_0z ;
wire cpm_s_HSTDM_4_FB1_A3_C_1z ;
wire cpm_s_HSTDM_4_FB1_A3_D_2z ;
wire cpm_s_HSTDM_4_FB1_A3_D_3z ;
wire cpm_s_HSTDM_4_FB1_A4_C_0z ;
wire cpm_s_HSTDM_4_FB1_A4_C_1z ;
wire cpm_s_HSTDM_4_FB1_A4_D_2z ;
wire cpm_s_HSTDM_4_FB1_A4_D_3z ;
wire CDO_28 ;
  GND GND_cZ (
	.G(GND)
);
  VCC VCC_cZ (
	.P(VCC)
);
(* haps_dut_fpga_name="FB1_uA" , haps_dut_hierarchy=1 *)  FB1_uA_dut dut_inst (
	.clk(clkz),
	.rst_n(rst_n_c),
	.IMMID(IMMID_c[63:53]),
	.N_1(N_1_c),
	.ADDOUTID(ADDOUTID_63_0_c[63:0]),
	.PCSRCID(PCSRCID_c),
	.PC(PC_c[63:0]),
	.in_enable(in_enable_c),
	.in_instruc(in_instruc_c[31:0]),
	.Addr(Addr_c[63:2]),
	.stall(stall_0_c),
	.PCID(PCID[63:0]),
	.INSTRUCID({INSTRUCID_31_c[31], INSTRUCID[30], INSTRUCID_28_29_c[29:28], INSTRUCID[27], INSTRUCID_15_26_c[26:15], INSTRUCID[14:12], INSTRUCID_0_11_c[11:0]}),
	.IMMID_11_to_20(IMMID_11_to_20_c[20:11]),
	.IMMID_22_to_22(IMMID_22_to_22_c[22]),
	.IMMID_24_to_26(IMMID_24_to_26_c[26:24]),
	.IMMID_28_to_51(IMMID_28_to_51_c[51:28]),
	.MEMREADEX(MEMREADEX_c),
	.MEMREADEX_aptn_ft(MEMREADEX_aptn_ft_c),
	.MEMREADMEM_aptn_ft(MEMREADMEM_aptn_ft_c),
	.MEMREADMEM_aptn_ft_0(MEMREADMEM_aptn_ft_0_c),
	.REGWRITEWB(REGWRITEWB_0_c),
	.REGWRITEWB_aptn_ft(REGWRITEWB_aptn_ft_c),
	.rst_n_aptn_s(rst_n_aptn_s_c),
	.ALUOUTMEM_aptn_ft(ALUOUTMEM_aptn_ft_c[10:0]),
	.ALUOUTMEM_aptn_ft_0(ALUOUTMEM_aptn_ft_0_c[10:0]),
	.DMOUTWB(DMOUTWB_c[63:0]),
	.DMOUTWB_aptn_ft(DMOUTWB_aptn_ft_c[63:0]),
	.WREX(WREX_c[3:0]),
	.WREX_aptn_ft(WREX_aptn_ft_c[3:0]),
	.WRITEDATAWB(WRITEDATAWB_c[63:0]),
	.WRITEDATAWB_aptn_ft(WRITEDATAWB_aptn_ft_c[63:0]),
	.WRMEM_aptn_ft(WRMEM_aptn_ft_c[4:0]),
	.WRMEM_aptn_ft_0(WRMEM_aptn_ft_0_c[4:0]),
	.WRWB(WRWB_c[4:0]),
	.WRWB_aptn_ft(WRWB_aptn_ft_c[4:0]),
	.N_9835(ufpga_reset_n_o),
	.ufpga_lock_clk_o(ufpga_lock_clk_o),
	.ufpga_lock_ce_o(ufpga_lock_ce_o),
	.ufpga_lock_cdo_o(ufpga_lock_cdo_o),
	.CDO_28(CDO_28)
);
(* haps_ip_type="haps_system_memory" *)  haps_system_memory_32s_28s_32s_haps_system_memoryDini_156s_123s_122s_1s_Z2_FB1_uA haps_system_memory (
	.umr_clk(umr3_clk),
	.umr_reset(umr3_reset),
	.raddr_raw({GND, GND, GND, GND, haps_system_memory_interface_raddr_raw[27:0]}),
	.wr_raw(haps_system_memory_interface_wr_raw),
	.rd_raw(haps_system_memory_interface_rd_raw),
	.enable_in(haps_system_memory_interface_enable_in),
	.data_out(haps_system_memory_data_out[31:0])
);
(* haps_ip_type="hstdm_controller" *)  hstdm_controller_0s_1048576s_0s_4s_12s_48s_32s_2s_FB1_uA hstdm_controller (
	.umr_clk(umr3_clk),
	.umr_reset(umr3_reset),
	.infopipe_clk(umr2_clk),
	.resetn_from_user_in(GND),
	.locked_in(VCC),
	.reset_clock_out(hstdm_controller_reset_clock_out),
	.reset_hstdm_out(hstdm_reset),
	.training_done_out(hstdm_training_done_net),
	.infopipe_empty_in(hstdm_memory_infopipe_empty_out),
	.infopipe_data_out(hstdm_controller_infopipe_data_out[3:0]),
	.infopipe_empty_out(hstdm_controller_infopipe_empty_out),
	.infopipe_data_in({GND, GND, GND, GND}),
	.req_done_in(GND),
	.resetn_to_user_in(VCC),
	.flags_in({VCC, GND, VCC, VCC, GND, GND, GND, GND}),
	.flags_out(flags_out[7:0]),
	.self_test_start_rx_out(hstdm_controller_self_test_start_rx_out[1:0]),
	.reset_erd_flag_out(hstdm_controller_reset_erd_flag_out),
	.reset_tx_out(hstdm_controller_reset_tx_out),
	.training_ctrl_tx_out(hstdm_controller_training_ctrl_tx_out[1:0]),
	.reset_rx_out(hstdm_reset_rx),
	.training_ctrl_rx_out(hstdm_controller_training_ctrl_rx_out),
	.system_capim_data_in({GND, GND, GND, GND, hstdm_system_capim_interface_ctrl_data_out[27:0]}),
	.system_capim_wr_in(hstdm_system_capim_interface_ctrl_wr_out),
	.system_capim_rd_in(hstdm_system_capim_interface_ctrl_rd_out),
	.system_capim_enable_in(hstdm_system_capim_interface_enable_ctrl_out),
	.system_capim_data_out(hstdm_controller_system_capim_data_out[31:0]),
	.SIMULATION(hstdm_simulation_net),
	.SIMULATION_DISABLE_TRAINING(hstdm_clkgeninst_SIMULATION_DISABLE_TRAINING),
	.sim_flags_out({hstdm_controller_sim_flags_out[2], sim_flags_out[1], hstdm_controller_sim_flags_out[0]})
);
(* haps_ip_type="hstdm_simulation" *)  hstdm_simulation_FB1_uA hstdm_clkgeninst (
	.umr_clk(umr3_clk),
	.umr_reset(umr3_reset),
	.sim_flags_in({hstdm_controller_sim_flags_out[2], GND, hstdm_controller_sim_flags_out[0]}),
	.SIMULATION(hstdm_simulation_net),
	.SIMULATION_DISABLE_TRAINING(hstdm_clkgeninst_SIMULATION_DISABLE_TRAINING)
);
(* haps_ip_type="hstdm_clkgen_local" *)  hstdm_ultrascale_plle3_Z1_FB1_uA hstdm_clkgen_1200_bank60 (
	.clk_in(hstdm_refclk_100),
	.reset_in(hstdm_reset),
	.txclk(txclk_3),
	.txclkdiv2(hstdm_txclk_1200_bank60_div2_net),
	.txclkdiv4(txclkdiv4_3),
	.idlyctrlclk(hstdm_idlyctrlclk_1200_bank60),
	.clkoutphy(hstdm_txclk_1200_bank60_clkoutphy_net),
	.locked(hstdm_plllocked_bank60),
	.RST_DLY(hstdm_dly_rst_bank60),
	.BS_RST(hstdm_bs_rst_bank60),
	.BSC_RST(hstdm_bsc_rst_bank60),
	.DLY_RDY({VCC, VCC, VCC, VCC, GND, VCC, GND, VCC}),
	.VTC_RDY({VCC, VCC, VCC, VCC, GND, VCC, GND, VCC}),
	.BSC_EN_VTC(hstdm_clkgen_1200_bank60_BSC_EN_VTC),
	.BSC_RDY(hstdm_clkgen_1200_bank60_BSC_RDY),
	.RIU_CLK(hstdm_clkgen_1200_bank60_RIU_CLK),
	.RIU_NIBBLE_SEL_UPPER(RIU_NIBBLE_SEL_UPPER_3),
	.RIU_NIBBLE_SEL_LOWER(RIU_NIBBLE_SEL_LOWER_3),
	.RIU_WR_EN(RIU_WR_EN_3),
	.RIU_ADDR(RIU_ADDR_3[5:0]),
	.RIU_WR_DATA(RIU_WR_DATA_3[15:0])
);
(* haps_ip_type="hstdm_clkgen_local" *)  hstdm_ultrascale_plle3_Z1_0_FB1_uA hstdm_clkgen_1200_bank61 (
	.clk_in(hstdm_refclk_100),
	.reset_in(hstdm_reset),
	.txclk(txclk_2),
	.txclkdiv2(hstdm_txclk_1200_bank61_div2_net),
	.txclkdiv4(txclkdiv4_2),
	.idlyctrlclk(hstdm_idlyctrlclk_1200_bank61),
	.clkoutphy(hstdm_txclk_1200_bank61_clkoutphy_net),
	.locked(hstdm_plllocked_bank61),
	.RST_DLY(hstdm_dly_rst_bank61),
	.BS_RST(hstdm_bs_rst_bank61),
	.BSC_RST(hstdm_bsc_rst_bank61),
	.DLY_RDY({VCC, VCC, VCC, VCC, GND, VCC, GND, VCC}),
	.VTC_RDY({VCC, VCC, VCC, VCC, GND, VCC, GND, VCC}),
	.BSC_EN_VTC(hstdm_clkgen_1200_bank61_BSC_EN_VTC),
	.BSC_RDY(hstdm_clkgen_1200_bank61_BSC_RDY),
	.RIU_CLK(hstdm_clkgen_1200_bank61_RIU_CLK),
	.RIU_NIBBLE_SEL_UPPER(RIU_NIBBLE_SEL_UPPER_2),
	.RIU_NIBBLE_SEL_LOWER(RIU_NIBBLE_SEL_LOWER_2),
	.RIU_WR_EN(RIU_WR_EN_2),
	.RIU_ADDR(RIU_ADDR_2[5:0]),
	.RIU_WR_DATA(RIU_WR_DATA_2[15:0])
);
(* haps_ip_type="hstdm_clkgen_local" *)  hstdm_ultrascale_plle3_Z1_1_FB1_uA hstdm_clkgen_1200_bank62 (
	.clk_in(hstdm_refclk_100),
	.reset_in(hstdm_reset),
	.txclk(txclk_1),
	.txclkdiv2(hstdm_txclk_1200_bank62_div2_net),
	.txclkdiv4(txclkdiv4_1),
	.idlyctrlclk(hstdm_idlyctrlclk_1200_bank62),
	.clkoutphy(hstdm_txclk_1200_bank62_clkoutphy_net),
	.locked(hstdm_plllocked_bank62),
	.RST_DLY(hstdm_dly_rst_bank62),
	.BS_RST(hstdm_bs_rst_bank62),
	.BSC_RST(hstdm_bsc_rst_bank62),
	.DLY_RDY({VCC, VCC, VCC, VCC, GND, VCC, GND, VCC}),
	.VTC_RDY({VCC, VCC, VCC, VCC, GND, VCC, GND, VCC}),
	.BSC_EN_VTC(hstdm_clkgen_1200_bank62_BSC_EN_VTC),
	.BSC_RDY(hstdm_clkgen_1200_bank62_BSC_RDY),
	.RIU_CLK(hstdm_clkgen_1200_bank62_RIU_CLK),
	.RIU_NIBBLE_SEL_UPPER(RIU_NIBBLE_SEL_UPPER_1),
	.RIU_NIBBLE_SEL_LOWER(RIU_NIBBLE_SEL_LOWER_1),
	.RIU_WR_EN(RIU_WR_EN_1),
	.RIU_ADDR(RIU_ADDR_1[5:0]),
	.RIU_WR_DATA(RIU_WR_DATA_1[15:0])
);
(* haps_ip_type="hstdm_clkgen_local" *)  hstdm_ultrascale_plle3_Z1_2_FB1_uA hstdm_clkgen_1200_bank69 (
	.clk_in(hstdm_refclk_100),
	.reset_in(hstdm_reset),
	.txclk(txclk_0),
	.txclkdiv2(hstdm_txclk_1200_bank69_div2_net),
	.txclkdiv4(txclkdiv4_0),
	.idlyctrlclk(hstdm_idlyctrlclk_1200_bank69),
	.clkoutphy(hstdm_txclk_1200_bank69_clkoutphy_net),
	.locked(hstdm_plllocked_bank69),
	.RST_DLY(hstdm_dly_rst_bank69),
	.BS_RST(hstdm_bs_rst_bank69),
	.BSC_RST(hstdm_bsc_rst_bank69),
	.DLY_RDY({VCC, GND, GND, VCC, VCC, VCC, VCC, VCC}),
	.VTC_RDY({VCC, GND, GND, VCC, VCC, VCC, VCC, VCC}),
	.BSC_EN_VTC(hstdm_clkgen_1200_bank69_BSC_EN_VTC),
	.BSC_RDY(hstdm_clkgen_1200_bank69_BSC_RDY),
	.RIU_CLK(hstdm_clkgen_1200_bank69_RIU_CLK),
	.RIU_NIBBLE_SEL_UPPER(RIU_NIBBLE_SEL_UPPER_0),
	.RIU_NIBBLE_SEL_LOWER(RIU_NIBBLE_SEL_LOWER_0),
	.RIU_WR_EN(RIU_WR_EN_0),
	.RIU_ADDR(RIU_ADDR_0[5:0]),
	.RIU_WR_DATA(RIU_WR_DATA_0[15:0])
);
(* haps_ip_type="hstdm_clkgen_local" *)  hstdm_ultrascale_plle3_Z1_3_FB1_uA hstdm_clkgen_1200_bank71 (
	.clk_in(hstdm_refclk_100),
	.reset_in(hstdm_reset),
	.txclk(txclk),
	.txclkdiv2(hstdm_txclk_1200_bank71_div2_net),
	.txclkdiv4(txclkdiv4),
	.idlyctrlclk(hstdm_idlyctrlclk_1200_bank71),
	.clkoutphy(hstdm_txclk_1200_bank71_clkoutphy_net),
	.locked(hstdm_plllocked_bank71),
	.RST_DLY(hstdm_dly_rst_bank71),
	.BS_RST(hstdm_bs_rst_bank71),
	.BSC_RST(hstdm_bsc_rst_bank71),
	.DLY_RDY({VCC, VCC, GND, GND, VCC, VCC, VCC, VCC}),
	.VTC_RDY({VCC, VCC, GND, GND, VCC, VCC, VCC, VCC}),
	.BSC_EN_VTC(hstdm_clkgen_1200_bank71_BSC_EN_VTC),
	.BSC_RDY(hstdm_clkgen_1200_bank71_BSC_RDY),
	.RIU_CLK(hstdm_clkgen_1200_bank71_RIU_CLK),
	.RIU_NIBBLE_SEL_UPPER(RIU_NIBBLE_SEL_UPPER),
	.RIU_NIBBLE_SEL_LOWER(RIU_NIBBLE_SEL_LOWER),
	.RIU_WR_EN(RIU_WR_EN),
	.RIU_ADDR(RIU_ADDR[5:0]),
	.RIU_WR_DATA(RIU_WR_DATA[15:0])
);
(* haps_ip_type="hstdm_native_bitslice_ctrl" *)  hstdm_ultrascale_bitslice_control_8s_40s_DIV2_10s_10s_0s_0s_0s_0s_ULTRASCALE_PLUS_Z1_FB1_uA hstdm_bitslice_ctrl_bank60 (
	.RX_BIT_CTRL_OUT0(hstdm_bitslice_ctrl_bank60_RX_BIT_CTRL_OUT0[319:0]),
	.RX_BIT_CTRL_OUT1(hstdm_bitslice_ctrl_bank60_RX_BIT_CTRL_OUT1[319:0]),
	.RX_BIT_CTRL_OUT2(hstdm_bitslice_ctrl_bank60_RX_BIT_CTRL_OUT2[319:0]),
	.RX_BIT_CTRL_OUT3(hstdm_bitslice_ctrl_bank60_RX_BIT_CTRL_OUT3[319:0]),
	.RX_BIT_CTRL_OUT4(hstdm_bitslice_ctrl_bank60_RX_BIT_CTRL_OUT4[319:0]),
	.RX_BIT_CTRL_OUT5(hstdm_bitslice_ctrl_bank60_RX_BIT_CTRL_OUT5[319:0]),
	.RX_BIT_CTRL_OUT6(hstdm_bitslice_ctrl_bank60_RX_BIT_CTRL_OUT6[319:0]),
	.TX_BIT_CTRL_OUT0(hstdm_bitslice_ctrl_bank60_TX_BIT_CTRL_OUT0[319:0]),
	.TX_BIT_CTRL_OUT1(hstdm_bitslice_ctrl_bank60_TX_BIT_CTRL_OUT1[319:0]),
	.TX_BIT_CTRL_OUT2(hstdm_bitslice_ctrl_bank60_TX_BIT_CTRL_OUT2[319:0]),
	.TX_BIT_CTRL_OUT3(hstdm_bitslice_ctrl_bank60_TX_BIT_CTRL_OUT3[319:0]),
	.TX_BIT_CTRL_OUT4(hstdm_bitslice_ctrl_bank60_TX_BIT_CTRL_OUT4[319:0]),
	.TX_BIT_CTRL_OUT5(hstdm_bitslice_ctrl_bank60_TX_BIT_CTRL_OUT5[319:0]),
	.TX_BIT_CTRL_OUT6(hstdm_bitslice_ctrl_bank60_TX_BIT_CTRL_OUT6[319:0]),
	.RX_BIT_CTRL_IN0({hstdm_clkgen_1200_tx_bank60_block3_RX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN1({}),
	.RX_BIT_CTRL_IN2({cpm_snd_HSTDM_4_FB1_A2_D_2_RX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN3({cpm_snd_HSTDM_4_FB1_A2_D_3_RX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN4({cpm_snd_HSTDM_4_FB1_A2_C_0_RX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN5({cpm_snd_HSTDM_4_FB1_A2_C_1_RX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN6({}),
	.TX_BIT_CTRL_IN0({hstdm_clkgen_1200_tx_bank60_block3_TX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN1({}),
	.TX_BIT_CTRL_IN2({cpm_snd_HSTDM_4_FB1_A2_D_2_TX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN3({cpm_snd_HSTDM_4_FB1_A2_D_3_TX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN4({cpm_snd_HSTDM_4_FB1_A2_C_0_TX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN5({cpm_snd_HSTDM_4_FB1_A2_C_1_TX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN6({}),
	.DLY_RDY({DLY_RDY_3[7], DLY_RDY_2[6], DLY_RDY_1[5], DLY_RDY_2[4], hstdm_bitslice_ctrl_bank60_DLY_RDY[3], DLY_RDY_3[2], hstdm_bitslice_ctrl_bank60_DLY_RDY[1], DLY_RDY_3[0]}),
	.VTC_RDY({VTC_RDY_3[7], VTC_RDY_2[6], VTC_RDY_1[5], VTC_RDY_2[4], hstdm_bitslice_ctrl_bank60_VTC_RDY[3], VTC_RDY_3[2], hstdm_bitslice_ctrl_bank60_VTC_RDY[1], VTC_RDY_3[0]}),
	.PLL_CLK(hstdm_txclk_1200_bank60_clkoutphy_net),
	.RST(hstdm_bsc_rst_bank60),
	.EN_VTC(GND),
	.RIU_ADDR({GND, GND, GND, GND, GND, GND}),
	.RIU_CLK(hstdm_clkgen_1200_bank60_RIU_CLK),
	.RIU_NIBBLE_SEL_LOWER(GND),
	.RIU_NIBBLE_SEL_UPPER(GND),
	.RIU_WR_DATA({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RIU_WR_EN(GND)
);
(* haps_ip_type="hstdm_native_bitslice_ctrl" *)  hstdm_ultrascale_bitslice_control_8s_40s_DIV2_10s_10s_0s_0s_0s_0s_ULTRASCALE_PLUS_Z1_0_FB1_uA hstdm_bitslice_ctrl_bank61 (
	.RX_BIT_CTRL_OUT0(hstdm_bitslice_ctrl_bank61_RX_BIT_CTRL_OUT0[319:0]),
	.RX_BIT_CTRL_OUT1(hstdm_bitslice_ctrl_bank61_RX_BIT_CTRL_OUT1[319:0]),
	.RX_BIT_CTRL_OUT2(hstdm_bitslice_ctrl_bank61_RX_BIT_CTRL_OUT2[319:0]),
	.RX_BIT_CTRL_OUT3(hstdm_bitslice_ctrl_bank61_RX_BIT_CTRL_OUT3[319:0]),
	.RX_BIT_CTRL_OUT4(hstdm_bitslice_ctrl_bank61_RX_BIT_CTRL_OUT4[319:0]),
	.RX_BIT_CTRL_OUT5(hstdm_bitslice_ctrl_bank61_RX_BIT_CTRL_OUT5[319:0]),
	.RX_BIT_CTRL_OUT6(hstdm_bitslice_ctrl_bank61_RX_BIT_CTRL_OUT6[319:0]),
	.TX_BIT_CTRL_OUT0(hstdm_bitslice_ctrl_bank61_TX_BIT_CTRL_OUT0[319:0]),
	.TX_BIT_CTRL_OUT1(hstdm_bitslice_ctrl_bank61_TX_BIT_CTRL_OUT1[319:0]),
	.TX_BIT_CTRL_OUT2(hstdm_bitslice_ctrl_bank61_TX_BIT_CTRL_OUT2[319:0]),
	.TX_BIT_CTRL_OUT3(hstdm_bitslice_ctrl_bank61_TX_BIT_CTRL_OUT3[319:0]),
	.TX_BIT_CTRL_OUT4(hstdm_bitslice_ctrl_bank61_TX_BIT_CTRL_OUT4[319:0]),
	.TX_BIT_CTRL_OUT5(hstdm_bitslice_ctrl_bank61_TX_BIT_CTRL_OUT5[319:0]),
	.TX_BIT_CTRL_OUT6(hstdm_bitslice_ctrl_bank61_TX_BIT_CTRL_OUT6[319:0]),
	.RX_BIT_CTRL_IN0({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, hstdm_clkgen_1200_tx_bank61_block4_RX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN1({}),
	.RX_BIT_CTRL_IN2({cpm_snd_HSTDM_4_FB1_A3_D_2_RX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN3({cpm_snd_HSTDM_4_FB1_A3_D_3_RX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN4({cpm_snd_HSTDM_4_FB1_A3_C_0_RX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN5({cpm_snd_HSTDM_4_FB1_A3_C_1_RX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN6({}),
	.TX_BIT_CTRL_IN0({hstdm_clkgen_1200_tx_bank61_block4_TX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN1({}),
	.TX_BIT_CTRL_IN2({cpm_snd_HSTDM_4_FB1_A3_D_2_TX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN3({cpm_snd_HSTDM_4_FB1_A3_D_3_TX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN4({cpm_snd_HSTDM_4_FB1_A3_C_0_TX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN5({cpm_snd_HSTDM_4_FB1_A3_C_1_TX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN6({}),
	.DLY_RDY({DLY_RDY_2[7], DLY_RDY_1[6], DLY_RDY_0[5], DLY_RDY_1[4], hstdm_bitslice_ctrl_bank61_DLY_RDY[3], DLY_RDY_2[2], hstdm_bitslice_ctrl_bank61_DLY_RDY[1], DLY_RDY_2[0]}),
	.VTC_RDY({VTC_RDY_2[7], VTC_RDY_1[6], VTC_RDY_0[5], VTC_RDY_1[4], hstdm_bitslice_ctrl_bank61_VTC_RDY[3], VTC_RDY_2[2], hstdm_bitslice_ctrl_bank61_VTC_RDY[1], VTC_RDY_2[0]}),
	.PLL_CLK(hstdm_txclk_1200_bank61_clkoutphy_net),
	.RST(hstdm_bsc_rst_bank61),
	.EN_VTC(GND),
	.RIU_ADDR({GND, GND, GND, GND, GND, GND}),
	.RIU_CLK(hstdm_clkgen_1200_bank61_RIU_CLK),
	.RIU_NIBBLE_SEL_LOWER(GND),
	.RIU_NIBBLE_SEL_UPPER(GND),
	.RIU_WR_DATA({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RIU_WR_EN(GND)
);
(* haps_ip_type="hstdm_native_bitslice_ctrl" *)  hstdm_ultrascale_bitslice_control_8s_40s_DIV2_10s_10s_0s_0s_0s_0s_ULTRASCALE_PLUS_Z1_1_FB1_uA hstdm_bitslice_ctrl_bank62 (
	.RX_BIT_CTRL_OUT0(hstdm_bitslice_ctrl_bank62_RX_BIT_CTRL_OUT0[319:0]),
	.RX_BIT_CTRL_OUT1(hstdm_bitslice_ctrl_bank62_RX_BIT_CTRL_OUT1[319:0]),
	.RX_BIT_CTRL_OUT2(hstdm_bitslice_ctrl_bank62_RX_BIT_CTRL_OUT2[319:0]),
	.RX_BIT_CTRL_OUT3(hstdm_bitslice_ctrl_bank62_RX_BIT_CTRL_OUT3[319:0]),
	.RX_BIT_CTRL_OUT4(hstdm_bitslice_ctrl_bank62_RX_BIT_CTRL_OUT4[319:0]),
	.RX_BIT_CTRL_OUT5(hstdm_bitslice_ctrl_bank62_RX_BIT_CTRL_OUT5[319:0]),
	.RX_BIT_CTRL_OUT6(hstdm_bitslice_ctrl_bank62_RX_BIT_CTRL_OUT6[319:0]),
	.TX_BIT_CTRL_OUT0(hstdm_bitslice_ctrl_bank62_TX_BIT_CTRL_OUT0[319:0]),
	.TX_BIT_CTRL_OUT1(hstdm_bitslice_ctrl_bank62_TX_BIT_CTRL_OUT1[319:0]),
	.TX_BIT_CTRL_OUT2(hstdm_bitslice_ctrl_bank62_TX_BIT_CTRL_OUT2[319:0]),
	.TX_BIT_CTRL_OUT3(hstdm_bitslice_ctrl_bank62_TX_BIT_CTRL_OUT3[319:0]),
	.TX_BIT_CTRL_OUT4(hstdm_bitslice_ctrl_bank62_TX_BIT_CTRL_OUT4[319:0]),
	.TX_BIT_CTRL_OUT5(hstdm_bitslice_ctrl_bank62_TX_BIT_CTRL_OUT5[319:0]),
	.TX_BIT_CTRL_OUT6(hstdm_bitslice_ctrl_bank62_TX_BIT_CTRL_OUT6[319:0]),
	.RX_BIT_CTRL_IN0({hstdm_clkgen_1200_tx_bank62_block5_RX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN1({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN2({cpm_snd_HSTDM_4_FB1_A4_D_2_RX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN3({cpm_snd_HSTDM_4_FB1_A4_D_3_RX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN4({cpm_snd_HSTDM_4_FB1_A4_C_0_RX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN5({cpm_snd_HSTDM_4_FB1_A4_C_1_RX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN6({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN0({hstdm_clkgen_1200_tx_bank62_block5_TX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN1({}),
	.TX_BIT_CTRL_IN2({cpm_snd_HSTDM_4_FB1_A4_D_2_TX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN3({cpm_snd_HSTDM_4_FB1_A4_D_3_TX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN4({cpm_snd_HSTDM_4_FB1_A4_C_0_TX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN5({cpm_snd_HSTDM_4_FB1_A4_C_1_TX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN6({}),
	.DLY_RDY({DLY_RDY_1[7], DLY_RDY_0[6], DLY_RDY[5], DLY_RDY_0[4], hstdm_bitslice_ctrl_bank62_DLY_RDY[3], DLY_RDY_1[2], hstdm_bitslice_ctrl_bank62_DLY_RDY[1], DLY_RDY_1[0]}),
	.VTC_RDY({VTC_RDY_1[7], VTC_RDY_0[6], VTC_RDY[5], VTC_RDY_0[4], hstdm_bitslice_ctrl_bank62_VTC_RDY[3], VTC_RDY_1[2], hstdm_bitslice_ctrl_bank62_VTC_RDY[1], VTC_RDY_1[0]}),
	.PLL_CLK(hstdm_txclk_1200_bank62_clkoutphy_net),
	.RST(hstdm_bsc_rst_bank62),
	.EN_VTC(GND),
	.RIU_ADDR({GND, GND, GND, GND, GND, GND}),
	.RIU_CLK(hstdm_clkgen_1200_bank62_RIU_CLK),
	.RIU_NIBBLE_SEL_LOWER(GND),
	.RIU_NIBBLE_SEL_UPPER(GND),
	.RIU_WR_DATA({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RIU_WR_EN(GND)
);
(* haps_ip_type="hstdm_native_bitslice_ctrl" *)  hstdm_ultrascale_bitslice_control_8s_40s_DIV2_96s_96s_0s_0s_0s_0s_ULTRASCALE_PLUS_Z1_FB1_uA hstdm_bitslice_ctrl_bank69 (
	.RX_BIT_CTRL_OUT0(hstdm_bitslice_ctrl_bank69_RX_BIT_CTRL_OUT0[319:0]),
	.RX_BIT_CTRL_OUT1(hstdm_bitslice_ctrl_bank69_RX_BIT_CTRL_OUT1[319:0]),
	.RX_BIT_CTRL_OUT2(hstdm_bitslice_ctrl_bank69_RX_BIT_CTRL_OUT2[319:0]),
	.RX_BIT_CTRL_OUT3(hstdm_bitslice_ctrl_bank69_RX_BIT_CTRL_OUT3[319:0]),
	.RX_BIT_CTRL_OUT4(hstdm_bitslice_ctrl_bank69_RX_BIT_CTRL_OUT4[319:0]),
	.RX_BIT_CTRL_OUT5(hstdm_bitslice_ctrl_bank69_RX_BIT_CTRL_OUT5[319:0]),
	.RX_BIT_CTRL_OUT6(hstdm_bitslice_ctrl_bank69_RX_BIT_CTRL_OUT6[319:0]),
	.TX_BIT_CTRL_OUT0(hstdm_bitslice_ctrl_bank69_TX_BIT_CTRL_OUT0[319:0]),
	.TX_BIT_CTRL_OUT1(hstdm_bitslice_ctrl_bank69_TX_BIT_CTRL_OUT1[319:0]),
	.TX_BIT_CTRL_OUT2(hstdm_bitslice_ctrl_bank69_TX_BIT_CTRL_OUT2[319:0]),
	.TX_BIT_CTRL_OUT3(hstdm_bitslice_ctrl_bank69_TX_BIT_CTRL_OUT3[319:0]),
	.TX_BIT_CTRL_OUT4(hstdm_bitslice_ctrl_bank69_TX_BIT_CTRL_OUT4[319:0]),
	.TX_BIT_CTRL_OUT5(hstdm_bitslice_ctrl_bank69_TX_BIT_CTRL_OUT5[319:0]),
	.TX_BIT_CTRL_OUT6(hstdm_bitslice_ctrl_bank69_TX_BIT_CTRL_OUT6[319:0]),
	.RX_BIT_CTRL_IN0({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, hstdm_clkgen_1200_tx_bank69_block1_RX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN1({}),
	.RX_BIT_CTRL_IN2({}),
	.RX_BIT_CTRL_IN3({}),
	.RX_BIT_CTRL_IN4({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, cpm_snd_HSTDM_4_FB1_AI1_P_18_RX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN5({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, cpm_snd_HSTDM_4_FB1_AI1_N_18_RX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN6({}),
	.TX_BIT_CTRL_IN0({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, hstdm_clkgen_1200_tx_bank69_block1_TX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN1({}),
	.TX_BIT_CTRL_IN2({}),
	.TX_BIT_CTRL_IN3({}),
	.TX_BIT_CTRL_IN4({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, cpm_snd_HSTDM_4_FB1_AI1_P_18_TX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN5({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, cpm_snd_HSTDM_4_FB1_AI1_N_18_TX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN6({}),
	.DLY_RDY({DLY_RDY_0[7], hstdm_bitslice_ctrl_bank69_DLY_RDY[6:5], DLY_RDY[4], DLY_RDY_0[3:0]}),
	.VTC_RDY({VTC_RDY_0[7], hstdm_bitslice_ctrl_bank69_VTC_RDY[6:5], VTC_RDY[4], VTC_RDY_0[3:0]}),
	.PLL_CLK(hstdm_txclk_1200_bank69_clkoutphy_net),
	.RST(hstdm_bsc_rst_bank69),
	.EN_VTC(GND),
	.RIU_ADDR({GND, GND, GND, GND, GND, GND}),
	.RIU_CLK(hstdm_clkgen_1200_bank69_RIU_CLK),
	.RIU_NIBBLE_SEL_LOWER(GND),
	.RIU_NIBBLE_SEL_UPPER(GND),
	.RIU_WR_DATA({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RIU_WR_EN(GND)
);
(* haps_ip_type="hstdm_native_bitslice_ctrl" *)  hstdm_ultrascale_bitslice_control_8s_40s_DIV2_48s_48s_0s_0s_0s_0s_ULTRASCALE_PLUS_Z1_FB1_uA hstdm_bitslice_ctrl_bank71 (
	.RX_BIT_CTRL_OUT0(hstdm_bitslice_ctrl_bank71_RX_BIT_CTRL_OUT0[319:0]),
	.RX_BIT_CTRL_OUT1(hstdm_bitslice_ctrl_bank71_RX_BIT_CTRL_OUT1[319:0]),
	.RX_BIT_CTRL_OUT2(hstdm_bitslice_ctrl_bank71_RX_BIT_CTRL_OUT2[319:0]),
	.RX_BIT_CTRL_OUT3(hstdm_bitslice_ctrl_bank71_RX_BIT_CTRL_OUT3[319:0]),
	.RX_BIT_CTRL_OUT4(hstdm_bitslice_ctrl_bank71_RX_BIT_CTRL_OUT4[319:0]),
	.RX_BIT_CTRL_OUT5(hstdm_bitslice_ctrl_bank71_RX_BIT_CTRL_OUT5[319:0]),
	.RX_BIT_CTRL_OUT6(hstdm_bitslice_ctrl_bank71_RX_BIT_CTRL_OUT6[319:0]),
	.TX_BIT_CTRL_OUT0(hstdm_bitslice_ctrl_bank71_TX_BIT_CTRL_OUT0[319:0]),
	.TX_BIT_CTRL_OUT1(hstdm_bitslice_ctrl_bank71_TX_BIT_CTRL_OUT1[319:0]),
	.TX_BIT_CTRL_OUT2(hstdm_bitslice_ctrl_bank71_TX_BIT_CTRL_OUT2[319:0]),
	.TX_BIT_CTRL_OUT3(hstdm_bitslice_ctrl_bank71_TX_BIT_CTRL_OUT3[319:0]),
	.TX_BIT_CTRL_OUT4(hstdm_bitslice_ctrl_bank71_TX_BIT_CTRL_OUT4[319:0]),
	.TX_BIT_CTRL_OUT5(hstdm_bitslice_ctrl_bank71_TX_BIT_CTRL_OUT5[319:0]),
	.TX_BIT_CTRL_OUT6(hstdm_bitslice_ctrl_bank71_TX_BIT_CTRL_OUT6[319:0]),
	.RX_BIT_CTRL_IN0({}),
	.RX_BIT_CTRL_IN1({}),
	.RX_BIT_CTRL_IN2({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, cpm_snd_HSTDM_4_FB1_BI3_P_8_RX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN3({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, cpm_snd_HSTDM_4_FB1_BI3_N_8_RX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN4({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, cpm_snd_HSTDM_4_FB1_BI3_P_7_RX_BIT_CTRL_OUT[39:0], hstdm_clkgen_1200_tx_bank71_block2_RX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN5({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, cpm_snd_HSTDM_4_FB1_BI3_N_7_RX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RX_BIT_CTRL_IN6({}),
	.TX_BIT_CTRL_IN0({}),
	.TX_BIT_CTRL_IN1({}),
	.TX_BIT_CTRL_IN2({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, cpm_snd_HSTDM_4_FB1_BI3_P_8_TX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN3({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, cpm_snd_HSTDM_4_FB1_BI3_N_8_TX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN4({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, cpm_snd_HSTDM_4_FB1_BI3_P_7_TX_BIT_CTRL_OUT[39:0], hstdm_clkgen_1200_tx_bank71_block2_TX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN5({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, cpm_snd_HSTDM_4_FB1_BI3_N_7_TX_BIT_CTRL_OUT[39:0], GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.TX_BIT_CTRL_IN6({}),
	.DLY_RDY({DLY_RDY[7:6], hstdm_bitslice_ctrl_bank71_DLY_RDY[5:4], DLY_RDY[3:0]}),
	.VTC_RDY({VTC_RDY[7:6], hstdm_bitslice_ctrl_bank71_VTC_RDY[5:4], VTC_RDY[3:0]}),
	.PLL_CLK(hstdm_txclk_1200_bank71_clkoutphy_net),
	.RST(hstdm_bsc_rst_bank71),
	.EN_VTC(GND),
	.RIU_ADDR({GND, GND, GND, GND, GND, GND}),
	.RIU_CLK(hstdm_clkgen_1200_bank71_RIU_CLK),
	.RIU_NIBBLE_SEL_LOWER(GND),
	.RIU_NIBBLE_SEL_UPPER(GND),
	.RIU_WR_DATA({GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND, GND}),
	.RIU_WR_EN(GND)
);
(* haps_ip_type="hstdm_clkgen_tx" *)  hstdm_tx_clkgen_0s_4s_1200s_150s_DATA_AND_CLOCK_1s_TRUE_40s_ULTRASCALE_PLUS_Z1_FB1_uA hstdm_clkgen_1200_tx_bank69_block1 (
	.txclk_in(GND),
	.tx(tx_3),
	.T_in(GND),
	.T_out(hstdm_clkgen_1200_tx_bank69_block1_T_out),
	.txctrl0(GND),
	.RX_BIT_CTRL_OUT(hstdm_clkgen_1200_tx_bank69_block1_RX_BIT_CTRL_OUT[39:0]),
	.TX_BIT_CTRL_OUT(hstdm_clkgen_1200_tx_bank69_block1_TX_BIT_CTRL_OUT[39:0]),
	.RX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank69_RX_BIT_CTRL_OUT0[279:240]),
	.TX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank69_TX_BIT_CTRL_OUT0[279:240]),
	.RST_DLY(hstdm_dly_rst_bank69),
	.BS_RST(hstdm_bs_rst_bank69)
);
(* haps_ip_type="hstdm_obuf_clock" *)  OBUFDS obufds_pin_H39 (
	.O(pin_H39),
	.OB(pin_G39),
	.I(tx_3)
);
defparam obufds_pin_H39.IOSTANDARD="DIFF_SSTL12_DCI";
(* haps_ip_type="hstdm_clkgen_tx" *)  hstdm_tx_clkgen_0s_4s_1200s_150s_DATA_0s_FALSE_40s_ULTRASCALE_PLUS_Z1_FB1_uA hstdm_clkgen_1200_tx_bank71_block2 (
	.txclk_in(GND),
	.tx(tx_2),
	.T_in(GND),
	.T_out(hstdm_clkgen_1200_tx_bank71_block2_T_out),
	.txctrl0(GND),
	.RX_BIT_CTRL_OUT(hstdm_clkgen_1200_tx_bank71_block2_RX_BIT_CTRL_OUT[39:0]),
	.TX_BIT_CTRL_OUT(hstdm_clkgen_1200_tx_bank71_block2_TX_BIT_CTRL_OUT[39:0]),
	.RX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank71_RX_BIT_CTRL_OUT4[199:160]),
	.TX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank71_TX_BIT_CTRL_OUT4[199:160]),
	.RST_DLY(hstdm_dly_rst_bank71),
	.BS_RST(hstdm_bs_rst_bank71)
);
(* haps_ip_type="hstdm_obuf_clock" *)  OBUFDS obufds_pin_J31 (
	.O(pin_J31),
	.OB(pin_H31),
	.I(tx_2)
);
defparam obufds_pin_J31.IOSTANDARD="DIFF_SSTL12_DCI";
(* haps_ip_type="hstdm_clkgen_tx" *)  hstdm_tx_clkgen_0s_4s_1200s_150s_DATA_AND_CLOCK_1s_TRUE_40s_ULTRASCALE_PLUS_Z1_0_FB1_uA hstdm_clkgen_1200_tx_bank60_block3 (
	.txclk_in(GND),
	.tx(tx_1),
	.T_in(GND),
	.T_out(hstdm_clkgen_1200_tx_bank60_block3_T_out),
	.txctrl0(GND),
	.RX_BIT_CTRL_OUT(hstdm_clkgen_1200_tx_bank60_block3_RX_BIT_CTRL_OUT[39:0]),
	.TX_BIT_CTRL_OUT(hstdm_clkgen_1200_tx_bank60_block3_TX_BIT_CTRL_OUT[39:0]),
	.RX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank60_RX_BIT_CTRL_OUT0[159:120]),
	.TX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank60_TX_BIT_CTRL_OUT0[159:120]),
	.RST_DLY(hstdm_dly_rst_bank60),
	.BS_RST(hstdm_bs_rst_bank60)
);
(* haps_ip_type="hstdm_obuf_clock" *)  OBUFDS obufds_pin_BP13 (
	.O(pin_BP13),
	.OB(pin_BR13),
	.I(tx_1)
);
defparam obufds_pin_BP13.IOSTANDARD="DIFF_POD12_DCI";
(* haps_ip_type="hstdm_clkgen_tx" *)  hstdm_tx_clkgen_0s_4s_1200s_150s_DATA_AND_CLOCK_1s_TRUE_40s_ULTRASCALE_PLUS_Z1_1_FB1_uA hstdm_clkgen_1200_tx_bank61_block4 (
	.txclk_in(GND),
	.tx(tx_0),
	.T_in(GND),
	.T_out(hstdm_clkgen_1200_tx_bank61_block4_T_out),
	.txctrl0(GND),
	.RX_BIT_CTRL_OUT(hstdm_clkgen_1200_tx_bank61_block4_RX_BIT_CTRL_OUT[39:0]),
	.TX_BIT_CTRL_OUT(hstdm_clkgen_1200_tx_bank61_block4_TX_BIT_CTRL_OUT[39:0]),
	.RX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank61_RX_BIT_CTRL_OUT0[159:120]),
	.TX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank61_TX_BIT_CTRL_OUT0[159:120]),
	.RST_DLY(hstdm_dly_rst_bank61),
	.BS_RST(hstdm_bs_rst_bank61)
);
(* haps_ip_type="hstdm_obuf_clock" *)  OBUFDS obufds_pin_BN21 (
	.O(pin_BN21),
	.OB(pin_BN20),
	.I(tx_0)
);
defparam obufds_pin_BN21.IOSTANDARD="DIFF_POD12_DCI";
(* haps_ip_type="hstdm_clkgen_tx" *)  hstdm_tx_clkgen_0s_4s_1200s_150s_DATA_AND_CLOCK_1s_TRUE_40s_ULTRASCALE_PLUS_Z1_2_FB1_uA hstdm_clkgen_1200_tx_bank62_block5 (
	.txclk_in(GND),
	.tx(tx),
	.T_in(GND),
	.T_out(hstdm_clkgen_1200_tx_bank62_block5_T_out),
	.txctrl0(GND),
	.RX_BIT_CTRL_OUT(hstdm_clkgen_1200_tx_bank62_block5_RX_BIT_CTRL_OUT[39:0]),
	.TX_BIT_CTRL_OUT(hstdm_clkgen_1200_tx_bank62_block5_TX_BIT_CTRL_OUT[39:0]),
	.RX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank62_RX_BIT_CTRL_OUT0[159:120]),
	.TX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank62_TX_BIT_CTRL_OUT0[159:120]),
	.RST_DLY(hstdm_dly_rst_bank62),
	.BS_RST(hstdm_bs_rst_bank62)
);
(* haps_ip_type="hstdm_obuf_clock" *)  OBUFDS obufds_pin_BM29 (
	.O(pin_BM29),
	.OB(pin_BN29),
	.I(tx)
);
defparam obufds_pin_BM29.IOSTANDARD="DIFF_POD12_DCI";
(* n_hstdm_low_latency=1 , haps_ip_type="hstdm_tx" *)  hstdm_tx_Z2_FB1_uA cpm_snd_HSTDM_4_FB1_AI1_N_18 (
	.txclk(GND),
	.txclkdiv4(GND),
	.txclkdiv2(hstdm_txclk_1200_bank69_div2_net),
	.cpm_data(cpm_s_HSTDM_4_FB1_AI1_N_18z),
	.data_in(PCID[11:8]),
	.txrst(hstdm_controller_reset_tx_out),
	.txctrl(hstdm_controller_training_ctrl_tx_out[1:0]),
	.T_in(GND),
	.T_out(cpm_snd_HSTDM_4_FB1_AI1_N_18_T_out),
	.RX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_AI1_N_18_RX_BIT_CTRL_OUT[39:0]),
	.TX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_AI1_N_18_TX_BIT_CTRL_OUT[39:0]),
	.RX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank69_RX_BIT_CTRL_OUT5[239:200]),
	.TX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank69_TX_BIT_CTRL_OUT5[239:200]),
	.RST_DLY(hstdm_dly_rst_bank69),
	.BS_RST(hstdm_bs_rst_bank69),
	.SIMULATION(hstdm_simulation_net)
);
(* haps_ip_type="hstdm_obuf_data" *)  OBUF obuf_cpm_s_HSTDM_4_FB1_AI1_N_18 (
	.O(cpm_s_HSTDM_4_FB1_AI1_N_18),
	.I(cpm_s_HSTDM_4_FB1_AI1_N_18z)
);
defparam obuf_cpm_s_HSTDM_4_FB1_AI1_N_18.IOSTANDARD="SSTL12_DCI";
(* n_hstdm_low_latency=1 , haps_ip_type="hstdm_tx" *)  hstdm_tx_Z2_0_FB1_uA cpm_snd_HSTDM_4_FB1_AI1_P_18 (
	.txclk(GND),
	.txclkdiv4(GND),
	.txclkdiv2(hstdm_txclk_1200_bank69_div2_net),
	.cpm_data(cpm_s_HSTDM_4_FB1_AI1_P_18z),
	.data_in(PCID[15:12]),
	.txrst(hstdm_controller_reset_tx_out),
	.txctrl(hstdm_controller_training_ctrl_tx_out[1:0]),
	.T_in(GND),
	.T_out(cpm_snd_HSTDM_4_FB1_AI1_P_18_T_out),
	.RX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_AI1_P_18_RX_BIT_CTRL_OUT[39:0]),
	.TX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_AI1_P_18_TX_BIT_CTRL_OUT[39:0]),
	.RX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank69_RX_BIT_CTRL_OUT4[239:200]),
	.TX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank69_TX_BIT_CTRL_OUT4[239:200]),
	.RST_DLY(hstdm_dly_rst_bank69),
	.BS_RST(hstdm_bs_rst_bank69),
	.SIMULATION(hstdm_simulation_net)
);
(* haps_ip_type="hstdm_obuf_data" *)  OBUF obuf_cpm_s_HSTDM_4_FB1_AI1_P_18 (
	.O(cpm_s_HSTDM_4_FB1_AI1_P_18),
	.I(cpm_s_HSTDM_4_FB1_AI1_P_18z)
);
defparam obuf_cpm_s_HSTDM_4_FB1_AI1_P_18.IOSTANDARD="SSTL12_DCI";
(* n_hstdm_low_latency=1 , haps_ip_type="hstdm_tx" *)  hstdm_tx_Z2_1_FB1_uA cpm_snd_HSTDM_4_FB1_BI3_N_7 (
	.txclk(GND),
	.txclkdiv4(GND),
	.txclkdiv2(hstdm_txclk_1200_bank71_div2_net),
	.cpm_data(cpm_s_HSTDM_4_FB1_BI3_N_7z),
	.data_in(PCID[3:0]),
	.txrst(hstdm_controller_reset_tx_out),
	.txctrl(hstdm_controller_training_ctrl_tx_out[1:0]),
	.T_in(GND),
	.T_out(cpm_snd_HSTDM_4_FB1_BI3_N_7_T_out),
	.RX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_BI3_N_7_RX_BIT_CTRL_OUT[39:0]),
	.TX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_BI3_N_7_TX_BIT_CTRL_OUT[39:0]),
	.RX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank71_RX_BIT_CTRL_OUT5[239:200]),
	.TX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank71_TX_BIT_CTRL_OUT5[239:200]),
	.RST_DLY(hstdm_dly_rst_bank71),
	.BS_RST(hstdm_bs_rst_bank71),
	.SIMULATION(hstdm_simulation_net)
);
(* haps_ip_type="hstdm_obuf_data" *)  OBUF obuf_cpm_s_HSTDM_4_FB1_BI3_N_7 (
	.O(cpm_s_HSTDM_4_FB1_BI3_N_7),
	.I(cpm_s_HSTDM_4_FB1_BI3_N_7z)
);
defparam obuf_cpm_s_HSTDM_4_FB1_BI3_N_7.IOSTANDARD="SSTL12_DCI";
(* n_hstdm_low_latency=1 , haps_ip_type="hstdm_tx" *)  hstdm_tx_Z2_2_FB1_uA cpm_snd_HSTDM_4_FB1_BI3_P_7 (
	.txclk(GND),
	.txclkdiv4(GND),
	.txclkdiv2(hstdm_txclk_1200_bank71_div2_net),
	.cpm_data(cpm_s_HSTDM_4_FB1_BI3_P_7z),
	.data_in(PCID[7:4]),
	.txrst(hstdm_controller_reset_tx_out),
	.txctrl(hstdm_controller_training_ctrl_tx_out[1:0]),
	.T_in(GND),
	.T_out(cpm_snd_HSTDM_4_FB1_BI3_P_7_T_out),
	.RX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_BI3_P_7_RX_BIT_CTRL_OUT[39:0]),
	.TX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_BI3_P_7_TX_BIT_CTRL_OUT[39:0]),
	.RX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank71_RX_BIT_CTRL_OUT4[239:200]),
	.TX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank71_TX_BIT_CTRL_OUT4[239:200]),
	.RST_DLY(hstdm_dly_rst_bank71),
	.BS_RST(hstdm_bs_rst_bank71),
	.SIMULATION(hstdm_simulation_net)
);
(* haps_ip_type="hstdm_obuf_data" *)  OBUF obuf_cpm_s_HSTDM_4_FB1_BI3_P_7 (
	.O(cpm_s_HSTDM_4_FB1_BI3_P_7),
	.I(cpm_s_HSTDM_4_FB1_BI3_P_7z)
);
defparam obuf_cpm_s_HSTDM_4_FB1_BI3_P_7.IOSTANDARD="SSTL12_DCI";
(* n_hstdm_low_latency=1 , haps_ip_type="hstdm_tx" *)  hstdm_tx_Z2_3_FB1_uA cpm_snd_HSTDM_4_FB1_BI3_N_8 (
	.txclk(GND),
	.txclkdiv4(GND),
	.txclkdiv2(hstdm_txclk_1200_bank71_div2_net),
	.cpm_data(cpm_s_HSTDM_4_FB1_BI3_N_8z),
	.data_in({GND, GND, GND, INSTRUCID[12]}),
	.txrst(hstdm_controller_reset_tx_out),
	.txctrl(hstdm_controller_training_ctrl_tx_out[1:0]),
	.T_in(GND),
	.T_out(cpm_snd_HSTDM_4_FB1_BI3_N_8_T_out),
	.RX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_BI3_N_8_RX_BIT_CTRL_OUT[39:0]),
	.TX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_BI3_N_8_TX_BIT_CTRL_OUT[39:0]),
	.RX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank71_RX_BIT_CTRL_OUT3[239:200]),
	.TX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank71_TX_BIT_CTRL_OUT3[239:200]),
	.RST_DLY(hstdm_dly_rst_bank71),
	.BS_RST(hstdm_bs_rst_bank71),
	.SIMULATION(hstdm_simulation_net)
);
(* haps_ip_type="hstdm_obuf_data" *)  OBUF obuf_cpm_s_HSTDM_4_FB1_BI3_N_8 (
	.O(cpm_s_HSTDM_4_FB1_BI3_N_8),
	.I(cpm_s_HSTDM_4_FB1_BI3_N_8z)
);
defparam obuf_cpm_s_HSTDM_4_FB1_BI3_N_8.IOSTANDARD="SSTL12_DCI";
(* n_hstdm_low_latency=1 , haps_ip_type="hstdm_tx" *)  hstdm_tx_Z2_4_FB1_uA cpm_snd_HSTDM_4_FB1_BI3_P_8 (
	.txclk(GND),
	.txclkdiv4(GND),
	.txclkdiv2(hstdm_txclk_1200_bank71_div2_net),
	.cpm_data(cpm_s_HSTDM_4_FB1_BI3_P_8z),
	.data_in({INSTRUCID[30], INSTRUCID[27], INSTRUCID[14:13]}),
	.txrst(hstdm_controller_reset_tx_out),
	.txctrl(hstdm_controller_training_ctrl_tx_out[1:0]),
	.T_in(GND),
	.T_out(cpm_snd_HSTDM_4_FB1_BI3_P_8_T_out),
	.RX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_BI3_P_8_RX_BIT_CTRL_OUT[39:0]),
	.TX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_BI3_P_8_TX_BIT_CTRL_OUT[39:0]),
	.RX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank71_RX_BIT_CTRL_OUT2[239:200]),
	.TX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank71_TX_BIT_CTRL_OUT2[239:200]),
	.RST_DLY(hstdm_dly_rst_bank71),
	.BS_RST(hstdm_bs_rst_bank71),
	.SIMULATION(hstdm_simulation_net)
);
(* haps_ip_type="hstdm_obuf_data" *)  OBUF obuf_cpm_s_HSTDM_4_FB1_BI3_P_8 (
	.O(cpm_s_HSTDM_4_FB1_BI3_P_8),
	.I(cpm_s_HSTDM_4_FB1_BI3_P_8z)
);
defparam obuf_cpm_s_HSTDM_4_FB1_BI3_P_8.IOSTANDARD="SSTL12_DCI";
(* n_hstdm_low_latency=1 , haps_ip_type="hstdm_tx" *)  hstdm_tx_Z2_5_FB1_uA cpm_snd_HSTDM_4_FB1_A2_C_1 (
	.txclk(GND),
	.txclkdiv4(GND),
	.txclkdiv2(hstdm_txclk_1200_bank60_div2_net),
	.cpm_data(cpm_s_HSTDM_4_FB1_A2_C_1z),
	.data_in(PCID[51:48]),
	.txrst(hstdm_controller_reset_tx_out),
	.txctrl(hstdm_controller_training_ctrl_tx_out[1:0]),
	.T_in(GND),
	.T_out(cpm_snd_HSTDM_4_FB1_A2_C_1_T_out),
	.RX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_A2_C_1_RX_BIT_CTRL_OUT[39:0]),
	.TX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_A2_C_1_TX_BIT_CTRL_OUT[39:0]),
	.RX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank60_RX_BIT_CTRL_OUT5[159:120]),
	.TX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank60_TX_BIT_CTRL_OUT5[159:120]),
	.RST_DLY(hstdm_dly_rst_bank60),
	.BS_RST(hstdm_bs_rst_bank60),
	.SIMULATION(hstdm_simulation_net)
);
(* haps_ip_type="hstdm_obuf_data" *)  OBUF obuf_cpm_s_HSTDM_4_FB1_A2_C_1 (
	.O(cpm_s_HSTDM_4_FB1_A2_C_1),
	.I(cpm_s_HSTDM_4_FB1_A2_C_1z)
);
defparam obuf_cpm_s_HSTDM_4_FB1_A2_C_1.IOSTANDARD="POD12_DCI";
(* n_hstdm_low_latency=1 , haps_ip_type="hstdm_tx" *)  hstdm_tx_Z2_6_FB1_uA cpm_snd_HSTDM_4_FB1_A2_C_0 (
	.txclk(GND),
	.txclkdiv4(GND),
	.txclkdiv2(hstdm_txclk_1200_bank60_div2_net),
	.cpm_data(cpm_s_HSTDM_4_FB1_A2_C_0z),
	.data_in(PCID[55:52]),
	.txrst(hstdm_controller_reset_tx_out),
	.txctrl(hstdm_controller_training_ctrl_tx_out[1:0]),
	.T_in(GND),
	.T_out(cpm_snd_HSTDM_4_FB1_A2_C_0_T_out),
	.RX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_A2_C_0_RX_BIT_CTRL_OUT[39:0]),
	.TX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_A2_C_0_TX_BIT_CTRL_OUT[39:0]),
	.RX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank60_RX_BIT_CTRL_OUT4[159:120]),
	.TX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank60_TX_BIT_CTRL_OUT4[159:120]),
	.RST_DLY(hstdm_dly_rst_bank60),
	.BS_RST(hstdm_bs_rst_bank60),
	.SIMULATION(hstdm_simulation_net)
);
(* haps_ip_type="hstdm_obuf_data" *)  OBUF obuf_cpm_s_HSTDM_4_FB1_A2_C_0 (
	.O(cpm_s_HSTDM_4_FB1_A2_C_0),
	.I(cpm_s_HSTDM_4_FB1_A2_C_0z)
);
defparam obuf_cpm_s_HSTDM_4_FB1_A2_C_0.IOSTANDARD="POD12_DCI";
(* n_hstdm_low_latency=1 , haps_ip_type="hstdm_tx" *)  hstdm_tx_Z2_7_FB1_uA cpm_snd_HSTDM_4_FB1_A2_D_3 (
	.txclk(GND),
	.txclkdiv4(GND),
	.txclkdiv2(hstdm_txclk_1200_bank60_div2_net),
	.cpm_data(cpm_s_HSTDM_4_FB1_A2_D_3z),
	.data_in(PCID[59:56]),
	.txrst(hstdm_controller_reset_tx_out),
	.txctrl(hstdm_controller_training_ctrl_tx_out[1:0]),
	.T_in(GND),
	.T_out(cpm_snd_HSTDM_4_FB1_A2_D_3_T_out),
	.RX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_A2_D_3_RX_BIT_CTRL_OUT[39:0]),
	.TX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_A2_D_3_TX_BIT_CTRL_OUT[39:0]),
	.RX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank60_RX_BIT_CTRL_OUT3[79:40]),
	.TX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank60_TX_BIT_CTRL_OUT3[79:40]),
	.RST_DLY(hstdm_dly_rst_bank60),
	.BS_RST(hstdm_bs_rst_bank60),
	.SIMULATION(hstdm_simulation_net)
);
(* haps_ip_type="hstdm_obuf_data" *)  OBUF obuf_cpm_s_HSTDM_4_FB1_A2_D_3 (
	.O(cpm_s_HSTDM_4_FB1_A2_D_3),
	.I(cpm_s_HSTDM_4_FB1_A2_D_3z)
);
defparam obuf_cpm_s_HSTDM_4_FB1_A2_D_3.IOSTANDARD="POD12_DCI";
(* n_hstdm_low_latency=1 , haps_ip_type="hstdm_tx" *)  hstdm_tx_Z2_8_FB1_uA cpm_snd_HSTDM_4_FB1_A2_D_2 (
	.txclk(GND),
	.txclkdiv4(GND),
	.txclkdiv2(hstdm_txclk_1200_bank60_div2_net),
	.cpm_data(cpm_s_HSTDM_4_FB1_A2_D_2z),
	.data_in(PCID[63:60]),
	.txrst(hstdm_controller_reset_tx_out),
	.txctrl(hstdm_controller_training_ctrl_tx_out[1:0]),
	.T_in(GND),
	.T_out(cpm_snd_HSTDM_4_FB1_A2_D_2_T_out),
	.RX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_A2_D_2_RX_BIT_CTRL_OUT[39:0]),
	.TX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_A2_D_2_TX_BIT_CTRL_OUT[39:0]),
	.RX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank60_RX_BIT_CTRL_OUT2[79:40]),
	.TX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank60_TX_BIT_CTRL_OUT2[79:40]),
	.RST_DLY(hstdm_dly_rst_bank60),
	.BS_RST(hstdm_bs_rst_bank60),
	.SIMULATION(hstdm_simulation_net)
);
(* haps_ip_type="hstdm_obuf_data" *)  OBUF obuf_cpm_s_HSTDM_4_FB1_A2_D_2 (
	.O(cpm_s_HSTDM_4_FB1_A2_D_2),
	.I(cpm_s_HSTDM_4_FB1_A2_D_2z)
);
defparam obuf_cpm_s_HSTDM_4_FB1_A2_D_2.IOSTANDARD="POD12_DCI";
(* n_hstdm_low_latency=1 , haps_ip_type="hstdm_tx" *)  hstdm_tx_Z2_9_FB1_uA cpm_snd_HSTDM_4_FB1_A3_C_1 (
	.txclk(GND),
	.txclkdiv4(GND),
	.txclkdiv2(hstdm_txclk_1200_bank61_div2_net),
	.cpm_data(cpm_s_HSTDM_4_FB1_A3_C_1z),
	.data_in(PCID[35:32]),
	.txrst(hstdm_controller_reset_tx_out),
	.txctrl(hstdm_controller_training_ctrl_tx_out[1:0]),
	.T_in(GND),
	.T_out(cpm_snd_HSTDM_4_FB1_A3_C_1_T_out),
	.RX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_A3_C_1_RX_BIT_CTRL_OUT[39:0]),
	.TX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_A3_C_1_TX_BIT_CTRL_OUT[39:0]),
	.RX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank61_RX_BIT_CTRL_OUT5[159:120]),
	.TX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank61_TX_BIT_CTRL_OUT5[159:120]),
	.RST_DLY(hstdm_dly_rst_bank61),
	.BS_RST(hstdm_bs_rst_bank61),
	.SIMULATION(hstdm_simulation_net)
);
(* haps_ip_type="hstdm_obuf_data" *)  OBUF obuf_cpm_s_HSTDM_4_FB1_A3_C_1 (
	.O(cpm_s_HSTDM_4_FB1_A3_C_1),
	.I(cpm_s_HSTDM_4_FB1_A3_C_1z)
);
defparam obuf_cpm_s_HSTDM_4_FB1_A3_C_1.IOSTANDARD="POD12_DCI";
(* n_hstdm_low_latency=1 , haps_ip_type="hstdm_tx" *)  hstdm_tx_Z2_10_FB1_uA cpm_snd_HSTDM_4_FB1_A3_C_0 (
	.txclk(GND),
	.txclkdiv4(GND),
	.txclkdiv2(hstdm_txclk_1200_bank61_div2_net),
	.cpm_data(cpm_s_HSTDM_4_FB1_A3_C_0z),
	.data_in(PCID[39:36]),
	.txrst(hstdm_controller_reset_tx_out),
	.txctrl(hstdm_controller_training_ctrl_tx_out[1:0]),
	.T_in(GND),
	.T_out(cpm_snd_HSTDM_4_FB1_A3_C_0_T_out),
	.RX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_A3_C_0_RX_BIT_CTRL_OUT[39:0]),
	.TX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_A3_C_0_TX_BIT_CTRL_OUT[39:0]),
	.RX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank61_RX_BIT_CTRL_OUT4[159:120]),
	.TX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank61_TX_BIT_CTRL_OUT4[159:120]),
	.RST_DLY(hstdm_dly_rst_bank61),
	.BS_RST(hstdm_bs_rst_bank61),
	.SIMULATION(hstdm_simulation_net)
);
(* haps_ip_type="hstdm_obuf_data" *)  OBUF obuf_cpm_s_HSTDM_4_FB1_A3_C_0 (
	.O(cpm_s_HSTDM_4_FB1_A3_C_0),
	.I(cpm_s_HSTDM_4_FB1_A3_C_0z)
);
defparam obuf_cpm_s_HSTDM_4_FB1_A3_C_0.IOSTANDARD="POD12_DCI";
(* n_hstdm_low_latency=1 , haps_ip_type="hstdm_tx" *)  hstdm_tx_Z2_11_FB1_uA cpm_snd_HSTDM_4_FB1_A3_D_3 (
	.txclk(GND),
	.txclkdiv4(GND),
	.txclkdiv2(hstdm_txclk_1200_bank61_div2_net),
	.cpm_data(cpm_s_HSTDM_4_FB1_A3_D_3z),
	.data_in(PCID[43:40]),
	.txrst(hstdm_controller_reset_tx_out),
	.txctrl(hstdm_controller_training_ctrl_tx_out[1:0]),
	.T_in(GND),
	.T_out(cpm_snd_HSTDM_4_FB1_A3_D_3_T_out),
	.RX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_A3_D_3_RX_BIT_CTRL_OUT[39:0]),
	.TX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_A3_D_3_TX_BIT_CTRL_OUT[39:0]),
	.RX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank61_RX_BIT_CTRL_OUT3[79:40]),
	.TX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank61_TX_BIT_CTRL_OUT3[79:40]),
	.RST_DLY(hstdm_dly_rst_bank61),
	.BS_RST(hstdm_bs_rst_bank61),
	.SIMULATION(hstdm_simulation_net)
);
(* haps_ip_type="hstdm_obuf_data" *)  OBUF obuf_cpm_s_HSTDM_4_FB1_A3_D_3 (
	.O(cpm_s_HSTDM_4_FB1_A3_D_3),
	.I(cpm_s_HSTDM_4_FB1_A3_D_3z)
);
defparam obuf_cpm_s_HSTDM_4_FB1_A3_D_3.IOSTANDARD="POD12_DCI";
(* n_hstdm_low_latency=1 , haps_ip_type="hstdm_tx" *)  hstdm_tx_Z2_12_FB1_uA cpm_snd_HSTDM_4_FB1_A3_D_2 (
	.txclk(GND),
	.txclkdiv4(GND),
	.txclkdiv2(hstdm_txclk_1200_bank61_div2_net),
	.cpm_data(cpm_s_HSTDM_4_FB1_A3_D_2z),
	.data_in(PCID[47:44]),
	.txrst(hstdm_controller_reset_tx_out),
	.txctrl(hstdm_controller_training_ctrl_tx_out[1:0]),
	.T_in(GND),
	.T_out(cpm_snd_HSTDM_4_FB1_A3_D_2_T_out),
	.RX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_A3_D_2_RX_BIT_CTRL_OUT[39:0]),
	.TX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_A3_D_2_TX_BIT_CTRL_OUT[39:0]),
	.RX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank61_RX_BIT_CTRL_OUT2[79:40]),
	.TX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank61_TX_BIT_CTRL_OUT2[79:40]),
	.RST_DLY(hstdm_dly_rst_bank61),
	.BS_RST(hstdm_bs_rst_bank61),
	.SIMULATION(hstdm_simulation_net)
);
(* haps_ip_type="hstdm_obuf_data" *)  OBUF obuf_cpm_s_HSTDM_4_FB1_A3_D_2 (
	.O(cpm_s_HSTDM_4_FB1_A3_D_2),
	.I(cpm_s_HSTDM_4_FB1_A3_D_2z)
);
defparam obuf_cpm_s_HSTDM_4_FB1_A3_D_2.IOSTANDARD="POD12_DCI";
(* n_hstdm_low_latency=1 , haps_ip_type="hstdm_tx" *)  hstdm_tx_Z2_13_FB1_uA cpm_snd_HSTDM_4_FB1_A4_C_1 (
	.txclk(GND),
	.txclkdiv4(GND),
	.txclkdiv2(hstdm_txclk_1200_bank62_div2_net),
	.cpm_data(cpm_s_HSTDM_4_FB1_A4_C_1z),
	.data_in(PCID[19:16]),
	.txrst(hstdm_controller_reset_tx_out),
	.txctrl(hstdm_controller_training_ctrl_tx_out[1:0]),
	.T_in(GND),
	.T_out(cpm_snd_HSTDM_4_FB1_A4_C_1_T_out),
	.RX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_A4_C_1_RX_BIT_CTRL_OUT[39:0]),
	.TX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_A4_C_1_TX_BIT_CTRL_OUT[39:0]),
	.RX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank62_RX_BIT_CTRL_OUT5[159:120]),
	.TX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank62_TX_BIT_CTRL_OUT5[159:120]),
	.RST_DLY(hstdm_dly_rst_bank62),
	.BS_RST(hstdm_bs_rst_bank62),
	.SIMULATION(hstdm_simulation_net)
);
(* haps_ip_type="hstdm_obuf_data" *)  OBUF obuf_cpm_s_HSTDM_4_FB1_A4_C_1 (
	.O(cpm_s_HSTDM_4_FB1_A4_C_1),
	.I(cpm_s_HSTDM_4_FB1_A4_C_1z)
);
defparam obuf_cpm_s_HSTDM_4_FB1_A4_C_1.IOSTANDARD="POD12_DCI";
(* n_hstdm_low_latency=1 , haps_ip_type="hstdm_tx" *)  hstdm_tx_Z2_14_FB1_uA cpm_snd_HSTDM_4_FB1_A4_C_0 (
	.txclk(GND),
	.txclkdiv4(GND),
	.txclkdiv2(hstdm_txclk_1200_bank62_div2_net),
	.cpm_data(cpm_s_HSTDM_4_FB1_A4_C_0z),
	.data_in(PCID[23:20]),
	.txrst(hstdm_controller_reset_tx_out),
	.txctrl(hstdm_controller_training_ctrl_tx_out[1:0]),
	.T_in(GND),
	.T_out(cpm_snd_HSTDM_4_FB1_A4_C_0_T_out),
	.RX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_A4_C_0_RX_BIT_CTRL_OUT[39:0]),
	.TX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_A4_C_0_TX_BIT_CTRL_OUT[39:0]),
	.RX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank62_RX_BIT_CTRL_OUT4[159:120]),
	.TX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank62_TX_BIT_CTRL_OUT4[159:120]),
	.RST_DLY(hstdm_dly_rst_bank62),
	.BS_RST(hstdm_bs_rst_bank62),
	.SIMULATION(hstdm_simulation_net)
);
(* haps_ip_type="hstdm_obuf_data" *)  OBUF obuf_cpm_s_HSTDM_4_FB1_A4_C_0 (
	.O(cpm_s_HSTDM_4_FB1_A4_C_0),
	.I(cpm_s_HSTDM_4_FB1_A4_C_0z)
);
defparam obuf_cpm_s_HSTDM_4_FB1_A4_C_0.IOSTANDARD="POD12_DCI";
(* n_hstdm_low_latency=1 , haps_ip_type="hstdm_tx" *)  hstdm_tx_Z2_15_FB1_uA cpm_snd_HSTDM_4_FB1_A4_D_3 (
	.txclk(GND),
	.txclkdiv4(GND),
	.txclkdiv2(hstdm_txclk_1200_bank62_div2_net),
	.cpm_data(cpm_s_HSTDM_4_FB1_A4_D_3z),
	.data_in(PCID[27:24]),
	.txrst(hstdm_controller_reset_tx_out),
	.txctrl(hstdm_controller_training_ctrl_tx_out[1:0]),
	.T_in(GND),
	.T_out(cpm_snd_HSTDM_4_FB1_A4_D_3_T_out),
	.RX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_A4_D_3_RX_BIT_CTRL_OUT[39:0]),
	.TX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_A4_D_3_TX_BIT_CTRL_OUT[39:0]),
	.RX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank62_RX_BIT_CTRL_OUT3[79:40]),
	.TX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank62_TX_BIT_CTRL_OUT3[79:40]),
	.RST_DLY(hstdm_dly_rst_bank62),
	.BS_RST(hstdm_bs_rst_bank62),
	.SIMULATION(hstdm_simulation_net)
);
(* haps_ip_type="hstdm_obuf_data" *)  OBUF obuf_cpm_s_HSTDM_4_FB1_A4_D_3 (
	.O(cpm_s_HSTDM_4_FB1_A4_D_3),
	.I(cpm_s_HSTDM_4_FB1_A4_D_3z)
);
defparam obuf_cpm_s_HSTDM_4_FB1_A4_D_3.IOSTANDARD="POD12_DCI";
(* n_hstdm_low_latency=1 , haps_ip_type="hstdm_tx" *)  hstdm_tx_Z2_16_FB1_uA cpm_snd_HSTDM_4_FB1_A4_D_2 (
	.txclk(GND),
	.txclkdiv4(GND),
	.txclkdiv2(hstdm_txclk_1200_bank62_div2_net),
	.cpm_data(cpm_s_HSTDM_4_FB1_A4_D_2z),
	.data_in(PCID[31:28]),
	.txrst(hstdm_controller_reset_tx_out),
	.txctrl(hstdm_controller_training_ctrl_tx_out[1:0]),
	.T_in(GND),
	.T_out(cpm_snd_HSTDM_4_FB1_A4_D_2_T_out),
	.RX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_A4_D_2_RX_BIT_CTRL_OUT[39:0]),
	.TX_BIT_CTRL_OUT(cpm_snd_HSTDM_4_FB1_A4_D_2_TX_BIT_CTRL_OUT[39:0]),
	.RX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank62_RX_BIT_CTRL_OUT2[79:40]),
	.TX_BIT_CTRL_IN(hstdm_bitslice_ctrl_bank62_TX_BIT_CTRL_OUT2[79:40]),
	.RST_DLY(hstdm_dly_rst_bank62),
	.BS_RST(hstdm_bs_rst_bank62),
	.SIMULATION(hstdm_simulation_net)
);
(* haps_ip_type="hstdm_obuf_data" *)  OBUF obuf_cpm_s_HSTDM_4_FB1_A4_D_2 (
	.O(cpm_s_HSTDM_4_FB1_A4_D_2),
	.I(cpm_s_HSTDM_4_FB1_A4_D_2z)
);
defparam obuf_cpm_s_HSTDM_4_FB1_A4_D_2.IOSTANDARD="POD12_DCI";
(* haps_ip_type="hstdm_memory" *)  hstdm_memory_Z1_FB1_uA hstdm_memory (
	.umr_clk(umr3_clk),
	.umr_reset(umr3_reset),
	.hstdm_reset_in(hstdm_reset),
	.infopipe_clk(umr2_clk),
	.infopipe_empty_out(hstdm_memory_infopipe_empty_out),
	.infopipe_data_in(hstdm_controller_infopipe_data_out[3:0]),
	.req_done_out(hstdm_memory_req_done_out),
	.system_capim_data_in({GND, GND, GND, GND, hstdm_system_capim_interface_mem_data_out[27:0]}),
	.system_capim_wr_in(hstdm_system_capim_interface_mem_wr_out),
	.system_capim_rd_in(hstdm_system_capim_interface_mem_rd_out),
	.system_capim_enable_in(hstdm_system_capim_interface_enable_memory_out),
	.system_capim_data_out(hstdm_memory_system_capim_data_out[31:0]),
	.SIMULATION(GND)
);
  IBUF N_1_ibuf (
	.O(N_1_c),
	.I(N_1)
);
defparam N_1_ibuf.IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[0]  (
	.O(ADDOUTID_63_0_c[0]),
	.I(ADDOUTID_63_0[0])
);
defparam \ADDOUTID_63_0_ibuf[0] .IOSTANDARD="LVCMOS12";
  IBUF \ADDOUTID_63_0_ibuf[1]  (
	.O(ADDOUTID_63_0_c[1]),
	.I(ADDOUTID_63_0[1])
);
defparam \ADDOUTID_63_0_ibuf[1] .IOSTANDARD="LVCMOS12";
  IBUF \ADDOUTID_63_0_ibuf[2]  (
	.O(ADDOUTID_63_0_c[2]),
	.I(ADDOUTID_63_0[2])
);
defparam \ADDOUTID_63_0_ibuf[2] .IOSTANDARD="LVCMOS12";
  IBUF \ADDOUTID_63_0_ibuf[3]  (
	.O(ADDOUTID_63_0_c[3]),
	.I(ADDOUTID_63_0[3])
);
defparam \ADDOUTID_63_0_ibuf[3] .IOSTANDARD="SSTL12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[4]  (
	.O(ADDOUTID_63_0_c[4]),
	.I(ADDOUTID_63_0[4])
);
defparam \ADDOUTID_63_0_ibuf[4] .IOSTANDARD="SSTL12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[5]  (
	.O(ADDOUTID_63_0_c[5]),
	.I(ADDOUTID_63_0[5])
);
defparam \ADDOUTID_63_0_ibuf[5] .IOSTANDARD="SSTL12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[6]  (
	.O(ADDOUTID_63_0_c[6]),
	.I(ADDOUTID_63_0[6])
);
defparam \ADDOUTID_63_0_ibuf[6] .IOSTANDARD="SSTL12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[7]  (
	.O(ADDOUTID_63_0_c[7]),
	.I(ADDOUTID_63_0[7])
);
defparam \ADDOUTID_63_0_ibuf[7] .IOSTANDARD="SSTL12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[8]  (
	.O(ADDOUTID_63_0_c[8]),
	.I(ADDOUTID_63_0[8])
);
defparam \ADDOUTID_63_0_ibuf[8] .IOSTANDARD="SSTL12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[9]  (
	.O(ADDOUTID_63_0_c[9]),
	.I(ADDOUTID_63_0[9])
);
defparam \ADDOUTID_63_0_ibuf[9] .IOSTANDARD="LVCMOS12";
  IBUF \ADDOUTID_63_0_ibuf[10]  (
	.O(ADDOUTID_63_0_c[10]),
	.I(ADDOUTID_63_0[10])
);
defparam \ADDOUTID_63_0_ibuf[10] .IOSTANDARD="SSTL12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[11]  (
	.O(ADDOUTID_63_0_c[11]),
	.I(ADDOUTID_63_0[11])
);
defparam \ADDOUTID_63_0_ibuf[11] .IOSTANDARD="SSTL12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[12]  (
	.O(ADDOUTID_63_0_c[12]),
	.I(ADDOUTID_63_0[12])
);
defparam \ADDOUTID_63_0_ibuf[12] .IOSTANDARD="SSTL12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[13]  (
	.O(ADDOUTID_63_0_c[13]),
	.I(ADDOUTID_63_0[13])
);
defparam \ADDOUTID_63_0_ibuf[13] .IOSTANDARD="SSTL12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[14]  (
	.O(ADDOUTID_63_0_c[14]),
	.I(ADDOUTID_63_0[14])
);
defparam \ADDOUTID_63_0_ibuf[14] .IOSTANDARD="SSTL12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[15]  (
	.O(ADDOUTID_63_0_c[15]),
	.I(ADDOUTID_63_0[15])
);
defparam \ADDOUTID_63_0_ibuf[15] .IOSTANDARD="SSTL12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[16]  (
	.O(ADDOUTID_63_0_c[16]),
	.I(ADDOUTID_63_0[16])
);
defparam \ADDOUTID_63_0_ibuf[16] .IOSTANDARD="SSTL12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[17]  (
	.O(ADDOUTID_63_0_c[17]),
	.I(ADDOUTID_63_0[17])
);
defparam \ADDOUTID_63_0_ibuf[17] .IOSTANDARD="SSTL12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[18]  (
	.O(ADDOUTID_63_0_c[18]),
	.I(ADDOUTID_63_0[18])
);
defparam \ADDOUTID_63_0_ibuf[18] .IOSTANDARD="SSTL12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[19]  (
	.O(ADDOUTID_63_0_c[19]),
	.I(ADDOUTID_63_0[19])
);
defparam \ADDOUTID_63_0_ibuf[19] .IOSTANDARD="SSTL12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[20]  (
	.O(ADDOUTID_63_0_c[20]),
	.I(ADDOUTID_63_0[20])
);
defparam \ADDOUTID_63_0_ibuf[20] .IOSTANDARD="SSTL12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[21]  (
	.O(ADDOUTID_63_0_c[21]),
	.I(ADDOUTID_63_0[21])
);
defparam \ADDOUTID_63_0_ibuf[21] .IOSTANDARD="SSTL12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[22]  (
	.O(ADDOUTID_63_0_c[22]),
	.I(ADDOUTID_63_0[22])
);
defparam \ADDOUTID_63_0_ibuf[22] .IOSTANDARD="SSTL12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[23]  (
	.O(ADDOUTID_63_0_c[23]),
	.I(ADDOUTID_63_0[23])
);
defparam \ADDOUTID_63_0_ibuf[23] .IOSTANDARD="SSTL12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[24]  (
	.O(ADDOUTID_63_0_c[24]),
	.I(ADDOUTID_63_0[24])
);
defparam \ADDOUTID_63_0_ibuf[24] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[25]  (
	.O(ADDOUTID_63_0_c[25]),
	.I(ADDOUTID_63_0[25])
);
defparam \ADDOUTID_63_0_ibuf[25] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[26]  (
	.O(ADDOUTID_63_0_c[26]),
	.I(ADDOUTID_63_0[26])
);
defparam \ADDOUTID_63_0_ibuf[26] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[27]  (
	.O(ADDOUTID_63_0_c[27]),
	.I(ADDOUTID_63_0[27])
);
defparam \ADDOUTID_63_0_ibuf[27] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[28]  (
	.O(ADDOUTID_63_0_c[28]),
	.I(ADDOUTID_63_0[28])
);
defparam \ADDOUTID_63_0_ibuf[28] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[29]  (
	.O(ADDOUTID_63_0_c[29]),
	.I(ADDOUTID_63_0[29])
);
defparam \ADDOUTID_63_0_ibuf[29] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[30]  (
	.O(ADDOUTID_63_0_c[30]),
	.I(ADDOUTID_63_0[30])
);
defparam \ADDOUTID_63_0_ibuf[30] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[31]  (
	.O(ADDOUTID_63_0_c[31]),
	.I(ADDOUTID_63_0[31])
);
defparam \ADDOUTID_63_0_ibuf[31] .IOSTANDARD="LVCMOS12";
  IBUF \ADDOUTID_63_0_ibuf[32]  (
	.O(ADDOUTID_63_0_c[32]),
	.I(ADDOUTID_63_0[32])
);
defparam \ADDOUTID_63_0_ibuf[32] .IOSTANDARD="LVCMOS12";
  IBUF \ADDOUTID_63_0_ibuf[33]  (
	.O(ADDOUTID_63_0_c[33]),
	.I(ADDOUTID_63_0[33])
);
defparam \ADDOUTID_63_0_ibuf[33] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[34]  (
	.O(ADDOUTID_63_0_c[34]),
	.I(ADDOUTID_63_0[34])
);
defparam \ADDOUTID_63_0_ibuf[34] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[35]  (
	.O(ADDOUTID_63_0_c[35]),
	.I(ADDOUTID_63_0[35])
);
defparam \ADDOUTID_63_0_ibuf[35] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[36]  (
	.O(ADDOUTID_63_0_c[36]),
	.I(ADDOUTID_63_0[36])
);
defparam \ADDOUTID_63_0_ibuf[36] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[37]  (
	.O(ADDOUTID_63_0_c[37]),
	.I(ADDOUTID_63_0[37])
);
defparam \ADDOUTID_63_0_ibuf[37] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[38]  (
	.O(ADDOUTID_63_0_c[38]),
	.I(ADDOUTID_63_0[38])
);
defparam \ADDOUTID_63_0_ibuf[38] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[39]  (
	.O(ADDOUTID_63_0_c[39]),
	.I(ADDOUTID_63_0[39])
);
defparam \ADDOUTID_63_0_ibuf[39] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[40]  (
	.O(ADDOUTID_63_0_c[40]),
	.I(ADDOUTID_63_0[40])
);
defparam \ADDOUTID_63_0_ibuf[40] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[41]  (
	.O(ADDOUTID_63_0_c[41]),
	.I(ADDOUTID_63_0[41])
);
defparam \ADDOUTID_63_0_ibuf[41] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[42]  (
	.O(ADDOUTID_63_0_c[42]),
	.I(ADDOUTID_63_0[42])
);
defparam \ADDOUTID_63_0_ibuf[42] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[43]  (
	.O(ADDOUTID_63_0_c[43]),
	.I(ADDOUTID_63_0[43])
);
defparam \ADDOUTID_63_0_ibuf[43] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[44]  (
	.O(ADDOUTID_63_0_c[44]),
	.I(ADDOUTID_63_0[44])
);
defparam \ADDOUTID_63_0_ibuf[44] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[45]  (
	.O(ADDOUTID_63_0_c[45]),
	.I(ADDOUTID_63_0[45])
);
defparam \ADDOUTID_63_0_ibuf[45] .IOSTANDARD="LVCMOS12";
  IBUF \ADDOUTID_63_0_ibuf[46]  (
	.O(ADDOUTID_63_0_c[46]),
	.I(ADDOUTID_63_0[46])
);
defparam \ADDOUTID_63_0_ibuf[46] .IOSTANDARD="LVCMOS12";
  IBUF \ADDOUTID_63_0_ibuf[47]  (
	.O(ADDOUTID_63_0_c[47]),
	.I(ADDOUTID_63_0[47])
);
defparam \ADDOUTID_63_0_ibuf[47] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[48]  (
	.O(ADDOUTID_63_0_c[48]),
	.I(ADDOUTID_63_0[48])
);
defparam \ADDOUTID_63_0_ibuf[48] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[49]  (
	.O(ADDOUTID_63_0_c[49]),
	.I(ADDOUTID_63_0[49])
);
defparam \ADDOUTID_63_0_ibuf[49] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[50]  (
	.O(ADDOUTID_63_0_c[50]),
	.I(ADDOUTID_63_0[50])
);
defparam \ADDOUTID_63_0_ibuf[50] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[51]  (
	.O(ADDOUTID_63_0_c[51]),
	.I(ADDOUTID_63_0[51])
);
defparam \ADDOUTID_63_0_ibuf[51] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[52]  (
	.O(ADDOUTID_63_0_c[52]),
	.I(ADDOUTID_63_0[52])
);
defparam \ADDOUTID_63_0_ibuf[52] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[53]  (
	.O(ADDOUTID_63_0_c[53]),
	.I(ADDOUTID_63_0[53])
);
defparam \ADDOUTID_63_0_ibuf[53] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[54]  (
	.O(ADDOUTID_63_0_c[54]),
	.I(ADDOUTID_63_0[54])
);
defparam \ADDOUTID_63_0_ibuf[54] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[55]  (
	.O(ADDOUTID_63_0_c[55]),
	.I(ADDOUTID_63_0[55])
);
defparam \ADDOUTID_63_0_ibuf[55] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[56]  (
	.O(ADDOUTID_63_0_c[56]),
	.I(ADDOUTID_63_0[56])
);
defparam \ADDOUTID_63_0_ibuf[56] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[57]  (
	.O(ADDOUTID_63_0_c[57]),
	.I(ADDOUTID_63_0[57])
);
defparam \ADDOUTID_63_0_ibuf[57] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[58]  (
	.O(ADDOUTID_63_0_c[58]),
	.I(ADDOUTID_63_0[58])
);
defparam \ADDOUTID_63_0_ibuf[58] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[59]  (
	.O(ADDOUTID_63_0_c[59]),
	.I(ADDOUTID_63_0[59])
);
defparam \ADDOUTID_63_0_ibuf[59] .IOSTANDARD="LVCMOS12";
  IBUF \ADDOUTID_63_0_ibuf[60]  (
	.O(ADDOUTID_63_0_c[60]),
	.I(ADDOUTID_63_0[60])
);
defparam \ADDOUTID_63_0_ibuf[60] .IOSTANDARD="LVCMOS12";
  IBUF \ADDOUTID_63_0_ibuf[61]  (
	.O(ADDOUTID_63_0_c[61]),
	.I(ADDOUTID_63_0[61])
);
defparam \ADDOUTID_63_0_ibuf[61] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[62]  (
	.O(ADDOUTID_63_0_c[62]),
	.I(ADDOUTID_63_0[62])
);
defparam \ADDOUTID_63_0_ibuf[62] .IOSTANDARD="POD12_DCI";
  IBUF \ADDOUTID_63_0_ibuf[63]  (
	.O(ADDOUTID_63_0_c[63]),
	.I(ADDOUTID_63_0[63])
);
defparam \ADDOUTID_63_0_ibuf[63] .IOSTANDARD="POD12_DCI";
  IBUF PCSRCID_ibuf (
	.O(PCSRCID_c),
	.I(PCSRCID)
);
defparam PCSRCID_ibuf.IOSTANDARD="POD12_DCI";
  IBUF in_enable_ibuf (
	.O(in_enable_c),
	.I(in_enable)
);
defparam in_enable_ibuf.IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[0]  (
	.O(in_instruc_c[0]),
	.I(in_instruc[0])
);
defparam \in_instruc_ibuf[0] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[1]  (
	.O(in_instruc_c[1]),
	.I(in_instruc[1])
);
defparam \in_instruc_ibuf[1] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[2]  (
	.O(in_instruc_c[2]),
	.I(in_instruc[2])
);
defparam \in_instruc_ibuf[2] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[3]  (
	.O(in_instruc_c[3]),
	.I(in_instruc[3])
);
defparam \in_instruc_ibuf[3] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[4]  (
	.O(in_instruc_c[4]),
	.I(in_instruc[4])
);
defparam \in_instruc_ibuf[4] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[5]  (
	.O(in_instruc_c[5]),
	.I(in_instruc[5])
);
defparam \in_instruc_ibuf[5] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[6]  (
	.O(in_instruc_c[6]),
	.I(in_instruc[6])
);
defparam \in_instruc_ibuf[6] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[7]  (
	.O(in_instruc_c[7]),
	.I(in_instruc[7])
);
defparam \in_instruc_ibuf[7] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[8]  (
	.O(in_instruc_c[8]),
	.I(in_instruc[8])
);
defparam \in_instruc_ibuf[8] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[9]  (
	.O(in_instruc_c[9]),
	.I(in_instruc[9])
);
defparam \in_instruc_ibuf[9] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[10]  (
	.O(in_instruc_c[10]),
	.I(in_instruc[10])
);
defparam \in_instruc_ibuf[10] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[11]  (
	.O(in_instruc_c[11]),
	.I(in_instruc[11])
);
defparam \in_instruc_ibuf[11] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[12]  (
	.O(in_instruc_c[12]),
	.I(in_instruc[12])
);
defparam \in_instruc_ibuf[12] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[13]  (
	.O(in_instruc_c[13]),
	.I(in_instruc[13])
);
defparam \in_instruc_ibuf[13] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[14]  (
	.O(in_instruc_c[14]),
	.I(in_instruc[14])
);
defparam \in_instruc_ibuf[14] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[15]  (
	.O(in_instruc_c[15]),
	.I(in_instruc[15])
);
defparam \in_instruc_ibuf[15] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[16]  (
	.O(in_instruc_c[16]),
	.I(in_instruc[16])
);
defparam \in_instruc_ibuf[16] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[17]  (
	.O(in_instruc_c[17]),
	.I(in_instruc[17])
);
defparam \in_instruc_ibuf[17] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[18]  (
	.O(in_instruc_c[18]),
	.I(in_instruc[18])
);
defparam \in_instruc_ibuf[18] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[19]  (
	.O(in_instruc_c[19]),
	.I(in_instruc[19])
);
defparam \in_instruc_ibuf[19] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[20]  (
	.O(in_instruc_c[20]),
	.I(in_instruc[20])
);
defparam \in_instruc_ibuf[20] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[21]  (
	.O(in_instruc_c[21]),
	.I(in_instruc[21])
);
defparam \in_instruc_ibuf[21] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[22]  (
	.O(in_instruc_c[22]),
	.I(in_instruc[22])
);
defparam \in_instruc_ibuf[22] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[23]  (
	.O(in_instruc_c[23]),
	.I(in_instruc[23])
);
defparam \in_instruc_ibuf[23] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[24]  (
	.O(in_instruc_c[24]),
	.I(in_instruc[24])
);
defparam \in_instruc_ibuf[24] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[25]  (
	.O(in_instruc_c[25]),
	.I(in_instruc[25])
);
defparam \in_instruc_ibuf[25] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[26]  (
	.O(in_instruc_c[26]),
	.I(in_instruc[26])
);
defparam \in_instruc_ibuf[26] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[27]  (
	.O(in_instruc_c[27]),
	.I(in_instruc[27])
);
defparam \in_instruc_ibuf[27] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[28]  (
	.O(in_instruc_c[28]),
	.I(in_instruc[28])
);
defparam \in_instruc_ibuf[28] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[29]  (
	.O(in_instruc_c[29]),
	.I(in_instruc[29])
);
defparam \in_instruc_ibuf[29] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[30]  (
	.O(in_instruc_c[30]),
	.I(in_instruc[30])
);
defparam \in_instruc_ibuf[30] .IOSTANDARD="LVCMOS18";
  IBUF \in_instruc_ibuf[31]  (
	.O(in_instruc_c[31]),
	.I(in_instruc[31])
);
defparam \in_instruc_ibuf[31] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[2]  (
	.O(Addr_c[2]),
	.I(Addr[2])
);
defparam \Addr_ibuf[2] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[3]  (
	.O(Addr_c[3]),
	.I(Addr[3])
);
defparam \Addr_ibuf[3] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[4]  (
	.O(Addr_c[4]),
	.I(Addr[4])
);
defparam \Addr_ibuf[4] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[5]  (
	.O(Addr_c[5]),
	.I(Addr[5])
);
defparam \Addr_ibuf[5] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[6]  (
	.O(Addr_c[6]),
	.I(Addr[6])
);
defparam \Addr_ibuf[6] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[7]  (
	.O(Addr_c[7]),
	.I(Addr[7])
);
defparam \Addr_ibuf[7] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[8]  (
	.O(Addr_c[8]),
	.I(Addr[8])
);
defparam \Addr_ibuf[8] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[9]  (
	.O(Addr_c[9]),
	.I(Addr[9])
);
defparam \Addr_ibuf[9] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[10]  (
	.O(Addr_c[10]),
	.I(Addr[10])
);
defparam \Addr_ibuf[10] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[11]  (
	.O(Addr_c[11]),
	.I(Addr[11])
);
defparam \Addr_ibuf[11] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[12]  (
	.O(Addr_c[12]),
	.I(Addr[12])
);
defparam \Addr_ibuf[12] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[13]  (
	.O(Addr_c[13]),
	.I(Addr[13])
);
defparam \Addr_ibuf[13] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[14]  (
	.O(Addr_c[14]),
	.I(Addr[14])
);
defparam \Addr_ibuf[14] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[15]  (
	.O(Addr_c[15]),
	.I(Addr[15])
);
defparam \Addr_ibuf[15] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[16]  (
	.O(Addr_c[16]),
	.I(Addr[16])
);
defparam \Addr_ibuf[16] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[17]  (
	.O(Addr_c[17]),
	.I(Addr[17])
);
defparam \Addr_ibuf[17] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[18]  (
	.O(Addr_c[18]),
	.I(Addr[18])
);
defparam \Addr_ibuf[18] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[19]  (
	.O(Addr_c[19]),
	.I(Addr[19])
);
defparam \Addr_ibuf[19] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[20]  (
	.O(Addr_c[20]),
	.I(Addr[20])
);
defparam \Addr_ibuf[20] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[21]  (
	.O(Addr_c[21]),
	.I(Addr[21])
);
defparam \Addr_ibuf[21] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[22]  (
	.O(Addr_c[22]),
	.I(Addr[22])
);
defparam \Addr_ibuf[22] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[23]  (
	.O(Addr_c[23]),
	.I(Addr[23])
);
defparam \Addr_ibuf[23] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[24]  (
	.O(Addr_c[24]),
	.I(Addr[24])
);
defparam \Addr_ibuf[24] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[25]  (
	.O(Addr_c[25]),
	.I(Addr[25])
);
defparam \Addr_ibuf[25] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[26]  (
	.O(Addr_c[26]),
	.I(Addr[26])
);
defparam \Addr_ibuf[26] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[27]  (
	.O(Addr_c[27]),
	.I(Addr[27])
);
defparam \Addr_ibuf[27] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[28]  (
	.O(Addr_c[28]),
	.I(Addr[28])
);
defparam \Addr_ibuf[28] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[29]  (
	.O(Addr_c[29]),
	.I(Addr[29])
);
defparam \Addr_ibuf[29] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[30]  (
	.O(Addr_c[30]),
	.I(Addr[30])
);
defparam \Addr_ibuf[30] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[31]  (
	.O(Addr_c[31]),
	.I(Addr[31])
);
defparam \Addr_ibuf[31] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[32]  (
	.O(Addr_c[32]),
	.I(Addr[32])
);
defparam \Addr_ibuf[32] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[33]  (
	.O(Addr_c[33]),
	.I(Addr[33])
);
defparam \Addr_ibuf[33] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[34]  (
	.O(Addr_c[34]),
	.I(Addr[34])
);
defparam \Addr_ibuf[34] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[35]  (
	.O(Addr_c[35]),
	.I(Addr[35])
);
defparam \Addr_ibuf[35] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[36]  (
	.O(Addr_c[36]),
	.I(Addr[36])
);
defparam \Addr_ibuf[36] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[37]  (
	.O(Addr_c[37]),
	.I(Addr[37])
);
defparam \Addr_ibuf[37] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[38]  (
	.O(Addr_c[38]),
	.I(Addr[38])
);
defparam \Addr_ibuf[38] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[39]  (
	.O(Addr_c[39]),
	.I(Addr[39])
);
defparam \Addr_ibuf[39] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[40]  (
	.O(Addr_c[40]),
	.I(Addr[40])
);
defparam \Addr_ibuf[40] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[41]  (
	.O(Addr_c[41]),
	.I(Addr[41])
);
defparam \Addr_ibuf[41] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[42]  (
	.O(Addr_c[42]),
	.I(Addr[42])
);
defparam \Addr_ibuf[42] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[43]  (
	.O(Addr_c[43]),
	.I(Addr[43])
);
defparam \Addr_ibuf[43] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[44]  (
	.O(Addr_c[44]),
	.I(Addr[44])
);
defparam \Addr_ibuf[44] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[45]  (
	.O(Addr_c[45]),
	.I(Addr[45])
);
defparam \Addr_ibuf[45] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[46]  (
	.O(Addr_c[46]),
	.I(Addr[46])
);
defparam \Addr_ibuf[46] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[47]  (
	.O(Addr_c[47]),
	.I(Addr[47])
);
defparam \Addr_ibuf[47] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[48]  (
	.O(Addr_c[48]),
	.I(Addr[48])
);
defparam \Addr_ibuf[48] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[49]  (
	.O(Addr_c[49]),
	.I(Addr[49])
);
defparam \Addr_ibuf[49] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[50]  (
	.O(Addr_c[50]),
	.I(Addr[50])
);
defparam \Addr_ibuf[50] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[51]  (
	.O(Addr_c[51]),
	.I(Addr[51])
);
defparam \Addr_ibuf[51] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[52]  (
	.O(Addr_c[52]),
	.I(Addr[52])
);
defparam \Addr_ibuf[52] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[53]  (
	.O(Addr_c[53]),
	.I(Addr[53])
);
defparam \Addr_ibuf[53] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[54]  (
	.O(Addr_c[54]),
	.I(Addr[54])
);
defparam \Addr_ibuf[54] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[55]  (
	.O(Addr_c[55]),
	.I(Addr[55])
);
defparam \Addr_ibuf[55] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[56]  (
	.O(Addr_c[56]),
	.I(Addr[56])
);
defparam \Addr_ibuf[56] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[57]  (
	.O(Addr_c[57]),
	.I(Addr[57])
);
defparam \Addr_ibuf[57] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[58]  (
	.O(Addr_c[58]),
	.I(Addr[58])
);
defparam \Addr_ibuf[58] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[59]  (
	.O(Addr_c[59]),
	.I(Addr[59])
);
defparam \Addr_ibuf[59] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[60]  (
	.O(Addr_c[60]),
	.I(Addr[60])
);
defparam \Addr_ibuf[60] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[61]  (
	.O(Addr_c[61]),
	.I(Addr[61])
);
defparam \Addr_ibuf[61] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[62]  (
	.O(Addr_c[62]),
	.I(Addr[62])
);
defparam \Addr_ibuf[62] .IOSTANDARD="LVCMOS18";
  IBUF \Addr_ibuf[63]  (
	.O(Addr_c[63]),
	.I(Addr[63])
);
defparam \Addr_ibuf[63] .IOSTANDARD="LVCMOS18";
  IBUF stall_0_ibuf (
	.O(stall_0_c),
	.I(stall_0)
);
defparam stall_0_ibuf.IOSTANDARD="POD12_DCI";
  IBUF MEMREADEX_ibuf (
	.O(MEMREADEX_c),
	.I(MEMREADEX)
);
defparam MEMREADEX_ibuf.IOSTANDARD="LVCMOS12";
  IBUF MEMREADMEM_aptn_ft_ibuf (
	.O(MEMREADMEM_aptn_ft_c),
	.I(MEMREADMEM_aptn_ft)
);
defparam MEMREADMEM_aptn_ft_ibuf.IOSTANDARD="POD12_DCI";
  IBUF REGWRITEWB_0_ibuf (
	.O(REGWRITEWB_0_c),
	.I(REGWRITEWB_0)
);
defparam REGWRITEWB_0_ibuf.IOSTANDARD="POD12_DCI";
  IBUF \ALUOUTMEM_aptn_ft_ibuf[0]  (
	.O(ALUOUTMEM_aptn_ft_c[0]),
	.I(ALUOUTMEM_aptn_ft[0])
);
defparam \ALUOUTMEM_aptn_ft_ibuf[0] .IOSTANDARD="POD12_DCI";
  IBUF \ALUOUTMEM_aptn_ft_ibuf[1]  (
	.O(ALUOUTMEM_aptn_ft_c[1]),
	.I(ALUOUTMEM_aptn_ft[1])
);
defparam \ALUOUTMEM_aptn_ft_ibuf[1] .IOSTANDARD="POD12_DCI";
  IBUF \ALUOUTMEM_aptn_ft_ibuf[2]  (
	.O(ALUOUTMEM_aptn_ft_c[2]),
	.I(ALUOUTMEM_aptn_ft[2])
);
defparam \ALUOUTMEM_aptn_ft_ibuf[2] .IOSTANDARD="POD12_DCI";
  IBUF \ALUOUTMEM_aptn_ft_ibuf[3]  (
	.O(ALUOUTMEM_aptn_ft_c[3]),
	.I(ALUOUTMEM_aptn_ft[3])
);
defparam \ALUOUTMEM_aptn_ft_ibuf[3] .IOSTANDARD="POD12_DCI";
  IBUF \ALUOUTMEM_aptn_ft_ibuf[4]  (
	.O(ALUOUTMEM_aptn_ft_c[4]),
	.I(ALUOUTMEM_aptn_ft[4])
);
defparam \ALUOUTMEM_aptn_ft_ibuf[4] .IOSTANDARD="POD12_DCI";
  IBUF \ALUOUTMEM_aptn_ft_ibuf[5]  (
	.O(ALUOUTMEM_aptn_ft_c[5]),
	.I(ALUOUTMEM_aptn_ft[5])
);
defparam \ALUOUTMEM_aptn_ft_ibuf[5] .IOSTANDARD="POD12_DCI";
  IBUF \ALUOUTMEM_aptn_ft_ibuf[6]  (
	.O(ALUOUTMEM_aptn_ft_c[6]),
	.I(ALUOUTMEM_aptn_ft[6])
);
defparam \ALUOUTMEM_aptn_ft_ibuf[6] .IOSTANDARD="POD12_DCI";
  IBUF \ALUOUTMEM_aptn_ft_ibuf[7]  (
	.O(ALUOUTMEM_aptn_ft_c[7]),
	.I(ALUOUTMEM_aptn_ft[7])
);
defparam \ALUOUTMEM_aptn_ft_ibuf[7] .IOSTANDARD="POD12_DCI";
  IBUF \ALUOUTMEM_aptn_ft_ibuf[8]  (
	.O(ALUOUTMEM_aptn_ft_c[8]),
	.I(ALUOUTMEM_aptn_ft[8])
);
defparam \ALUOUTMEM_aptn_ft_ibuf[8] .IOSTANDARD="POD12_DCI";
  IBUF \ALUOUTMEM_aptn_ft_ibuf[9]  (
	.O(ALUOUTMEM_aptn_ft_c[9]),
	.I(ALUOUTMEM_aptn_ft[9])
);
defparam \ALUOUTMEM_aptn_ft_ibuf[9] .IOSTANDARD="POD12_DCI";
  IBUF \ALUOUTMEM_aptn_ft_ibuf[10]  (
	.O(ALUOUTMEM_aptn_ft_c[10]),
	.I(ALUOUTMEM_aptn_ft[10])
);
defparam \ALUOUTMEM_aptn_ft_ibuf[10] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[0]  (
	.O(DMOUTWB_c[0]),
	.I(DMOUTWB[0])
);
defparam \DMOUTWB_ibuf[0] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[1]  (
	.O(DMOUTWB_c[1]),
	.I(DMOUTWB[1])
);
defparam \DMOUTWB_ibuf[1] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[2]  (
	.O(DMOUTWB_c[2]),
	.I(DMOUTWB[2])
);
defparam \DMOUTWB_ibuf[2] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[3]  (
	.O(DMOUTWB_c[3]),
	.I(DMOUTWB[3])
);
defparam \DMOUTWB_ibuf[3] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[4]  (
	.O(DMOUTWB_c[4]),
	.I(DMOUTWB[4])
);
defparam \DMOUTWB_ibuf[4] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[5]  (
	.O(DMOUTWB_c[5]),
	.I(DMOUTWB[5])
);
defparam \DMOUTWB_ibuf[5] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[6]  (
	.O(DMOUTWB_c[6]),
	.I(DMOUTWB[6])
);
defparam \DMOUTWB_ibuf[6] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[7]  (
	.O(DMOUTWB_c[7]),
	.I(DMOUTWB[7])
);
defparam \DMOUTWB_ibuf[7] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[8]  (
	.O(DMOUTWB_c[8]),
	.I(DMOUTWB[8])
);
defparam \DMOUTWB_ibuf[8] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[9]  (
	.O(DMOUTWB_c[9]),
	.I(DMOUTWB[9])
);
defparam \DMOUTWB_ibuf[9] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[10]  (
	.O(DMOUTWB_c[10]),
	.I(DMOUTWB[10])
);
defparam \DMOUTWB_ibuf[10] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[11]  (
	.O(DMOUTWB_c[11]),
	.I(DMOUTWB[11])
);
defparam \DMOUTWB_ibuf[11] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[12]  (
	.O(DMOUTWB_c[12]),
	.I(DMOUTWB[12])
);
defparam \DMOUTWB_ibuf[12] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[13]  (
	.O(DMOUTWB_c[13]),
	.I(DMOUTWB[13])
);
defparam \DMOUTWB_ibuf[13] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[14]  (
	.O(DMOUTWB_c[14]),
	.I(DMOUTWB[14])
);
defparam \DMOUTWB_ibuf[14] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[15]  (
	.O(DMOUTWB_c[15]),
	.I(DMOUTWB[15])
);
defparam \DMOUTWB_ibuf[15] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[16]  (
	.O(DMOUTWB_c[16]),
	.I(DMOUTWB[16])
);
defparam \DMOUTWB_ibuf[16] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[17]  (
	.O(DMOUTWB_c[17]),
	.I(DMOUTWB[17])
);
defparam \DMOUTWB_ibuf[17] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[18]  (
	.O(DMOUTWB_c[18]),
	.I(DMOUTWB[18])
);
defparam \DMOUTWB_ibuf[18] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[19]  (
	.O(DMOUTWB_c[19]),
	.I(DMOUTWB[19])
);
defparam \DMOUTWB_ibuf[19] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[20]  (
	.O(DMOUTWB_c[20]),
	.I(DMOUTWB[20])
);
defparam \DMOUTWB_ibuf[20] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[21]  (
	.O(DMOUTWB_c[21]),
	.I(DMOUTWB[21])
);
defparam \DMOUTWB_ibuf[21] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[22]  (
	.O(DMOUTWB_c[22]),
	.I(DMOUTWB[22])
);
defparam \DMOUTWB_ibuf[22] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[23]  (
	.O(DMOUTWB_c[23]),
	.I(DMOUTWB[23])
);
defparam \DMOUTWB_ibuf[23] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[24]  (
	.O(DMOUTWB_c[24]),
	.I(DMOUTWB[24])
);
defparam \DMOUTWB_ibuf[24] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[25]  (
	.O(DMOUTWB_c[25]),
	.I(DMOUTWB[25])
);
defparam \DMOUTWB_ibuf[25] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[26]  (
	.O(DMOUTWB_c[26]),
	.I(DMOUTWB[26])
);
defparam \DMOUTWB_ibuf[26] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[27]  (
	.O(DMOUTWB_c[27]),
	.I(DMOUTWB[27])
);
defparam \DMOUTWB_ibuf[27] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[28]  (
	.O(DMOUTWB_c[28]),
	.I(DMOUTWB[28])
);
defparam \DMOUTWB_ibuf[28] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[29]  (
	.O(DMOUTWB_c[29]),
	.I(DMOUTWB[29])
);
defparam \DMOUTWB_ibuf[29] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[30]  (
	.O(DMOUTWB_c[30]),
	.I(DMOUTWB[30])
);
defparam \DMOUTWB_ibuf[30] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[31]  (
	.O(DMOUTWB_c[31]),
	.I(DMOUTWB[31])
);
defparam \DMOUTWB_ibuf[31] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[32]  (
	.O(DMOUTWB_c[32]),
	.I(DMOUTWB[32])
);
defparam \DMOUTWB_ibuf[32] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[33]  (
	.O(DMOUTWB_c[33]),
	.I(DMOUTWB[33])
);
defparam \DMOUTWB_ibuf[33] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[34]  (
	.O(DMOUTWB_c[34]),
	.I(DMOUTWB[34])
);
defparam \DMOUTWB_ibuf[34] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[35]  (
	.O(DMOUTWB_c[35]),
	.I(DMOUTWB[35])
);
defparam \DMOUTWB_ibuf[35] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[36]  (
	.O(DMOUTWB_c[36]),
	.I(DMOUTWB[36])
);
defparam \DMOUTWB_ibuf[36] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[37]  (
	.O(DMOUTWB_c[37]),
	.I(DMOUTWB[37])
);
defparam \DMOUTWB_ibuf[37] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[38]  (
	.O(DMOUTWB_c[38]),
	.I(DMOUTWB[38])
);
defparam \DMOUTWB_ibuf[38] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[39]  (
	.O(DMOUTWB_c[39]),
	.I(DMOUTWB[39])
);
defparam \DMOUTWB_ibuf[39] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[40]  (
	.O(DMOUTWB_c[40]),
	.I(DMOUTWB[40])
);
defparam \DMOUTWB_ibuf[40] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[41]  (
	.O(DMOUTWB_c[41]),
	.I(DMOUTWB[41])
);
defparam \DMOUTWB_ibuf[41] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[42]  (
	.O(DMOUTWB_c[42]),
	.I(DMOUTWB[42])
);
defparam \DMOUTWB_ibuf[42] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[43]  (
	.O(DMOUTWB_c[43]),
	.I(DMOUTWB[43])
);
defparam \DMOUTWB_ibuf[43] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[44]  (
	.O(DMOUTWB_c[44]),
	.I(DMOUTWB[44])
);
defparam \DMOUTWB_ibuf[44] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[45]  (
	.O(DMOUTWB_c[45]),
	.I(DMOUTWB[45])
);
defparam \DMOUTWB_ibuf[45] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[46]  (
	.O(DMOUTWB_c[46]),
	.I(DMOUTWB[46])
);
defparam \DMOUTWB_ibuf[46] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[47]  (
	.O(DMOUTWB_c[47]),
	.I(DMOUTWB[47])
);
defparam \DMOUTWB_ibuf[47] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[48]  (
	.O(DMOUTWB_c[48]),
	.I(DMOUTWB[48])
);
defparam \DMOUTWB_ibuf[48] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[49]  (
	.O(DMOUTWB_c[49]),
	.I(DMOUTWB[49])
);
defparam \DMOUTWB_ibuf[49] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[50]  (
	.O(DMOUTWB_c[50]),
	.I(DMOUTWB[50])
);
defparam \DMOUTWB_ibuf[50] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[51]  (
	.O(DMOUTWB_c[51]),
	.I(DMOUTWB[51])
);
defparam \DMOUTWB_ibuf[51] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[52]  (
	.O(DMOUTWB_c[52]),
	.I(DMOUTWB[52])
);
defparam \DMOUTWB_ibuf[52] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[53]  (
	.O(DMOUTWB_c[53]),
	.I(DMOUTWB[53])
);
defparam \DMOUTWB_ibuf[53] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[54]  (
	.O(DMOUTWB_c[54]),
	.I(DMOUTWB[54])
);
defparam \DMOUTWB_ibuf[54] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[55]  (
	.O(DMOUTWB_c[55]),
	.I(DMOUTWB[55])
);
defparam \DMOUTWB_ibuf[55] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[56]  (
	.O(DMOUTWB_c[56]),
	.I(DMOUTWB[56])
);
defparam \DMOUTWB_ibuf[56] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[57]  (
	.O(DMOUTWB_c[57]),
	.I(DMOUTWB[57])
);
defparam \DMOUTWB_ibuf[57] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[58]  (
	.O(DMOUTWB_c[58]),
	.I(DMOUTWB[58])
);
defparam \DMOUTWB_ibuf[58] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[59]  (
	.O(DMOUTWB_c[59]),
	.I(DMOUTWB[59])
);
defparam \DMOUTWB_ibuf[59] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[60]  (
	.O(DMOUTWB_c[60]),
	.I(DMOUTWB[60])
);
defparam \DMOUTWB_ibuf[60] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[61]  (
	.O(DMOUTWB_c[61]),
	.I(DMOUTWB[61])
);
defparam \DMOUTWB_ibuf[61] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[62]  (
	.O(DMOUTWB_c[62]),
	.I(DMOUTWB[62])
);
defparam \DMOUTWB_ibuf[62] .IOSTANDARD="POD12_DCI";
  IBUF \DMOUTWB_ibuf[63]  (
	.O(DMOUTWB_c[63]),
	.I(DMOUTWB[63])
);
defparam \DMOUTWB_ibuf[63] .IOSTANDARD="POD12_DCI";
  IBUF \WREX_ibuf[0]  (
	.O(WREX_c[0]),
	.I(WREX[0])
);
defparam \WREX_ibuf[0] .IOSTANDARD="POD12_DCI";
  IBUF \WREX_ibuf[1]  (
	.O(WREX_c[1]),
	.I(WREX[1])
);
defparam \WREX_ibuf[1] .IOSTANDARD="POD12_DCI";
  IBUF \WREX_ibuf[2]  (
	.O(WREX_c[2]),
	.I(WREX[2])
);
defparam \WREX_ibuf[2] .IOSTANDARD="POD12_DCI";
  IBUF \WREX_ibuf[3]  (
	.O(WREX_c[3]),
	.I(WREX[3])
);
defparam \WREX_ibuf[3] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[0]  (
	.O(WRITEDATAWB_c[0]),
	.I(WRITEDATAWB[0])
);
defparam \WRITEDATAWB_ibuf[0] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[1]  (
	.O(WRITEDATAWB_c[1]),
	.I(WRITEDATAWB[1])
);
defparam \WRITEDATAWB_ibuf[1] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[2]  (
	.O(WRITEDATAWB_c[2]),
	.I(WRITEDATAWB[2])
);
defparam \WRITEDATAWB_ibuf[2] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[3]  (
	.O(WRITEDATAWB_c[3]),
	.I(WRITEDATAWB[3])
);
defparam \WRITEDATAWB_ibuf[3] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[4]  (
	.O(WRITEDATAWB_c[4]),
	.I(WRITEDATAWB[4])
);
defparam \WRITEDATAWB_ibuf[4] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[5]  (
	.O(WRITEDATAWB_c[5]),
	.I(WRITEDATAWB[5])
);
defparam \WRITEDATAWB_ibuf[5] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[6]  (
	.O(WRITEDATAWB_c[6]),
	.I(WRITEDATAWB[6])
);
defparam \WRITEDATAWB_ibuf[6] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[7]  (
	.O(WRITEDATAWB_c[7]),
	.I(WRITEDATAWB[7])
);
defparam \WRITEDATAWB_ibuf[7] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[8]  (
	.O(WRITEDATAWB_c[8]),
	.I(WRITEDATAWB[8])
);
defparam \WRITEDATAWB_ibuf[8] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[9]  (
	.O(WRITEDATAWB_c[9]),
	.I(WRITEDATAWB[9])
);
defparam \WRITEDATAWB_ibuf[9] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[10]  (
	.O(WRITEDATAWB_c[10]),
	.I(WRITEDATAWB[10])
);
defparam \WRITEDATAWB_ibuf[10] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[11]  (
	.O(WRITEDATAWB_c[11]),
	.I(WRITEDATAWB[11])
);
defparam \WRITEDATAWB_ibuf[11] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[12]  (
	.O(WRITEDATAWB_c[12]),
	.I(WRITEDATAWB[12])
);
defparam \WRITEDATAWB_ibuf[12] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[13]  (
	.O(WRITEDATAWB_c[13]),
	.I(WRITEDATAWB[13])
);
defparam \WRITEDATAWB_ibuf[13] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[14]  (
	.O(WRITEDATAWB_c[14]),
	.I(WRITEDATAWB[14])
);
defparam \WRITEDATAWB_ibuf[14] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[15]  (
	.O(WRITEDATAWB_c[15]),
	.I(WRITEDATAWB[15])
);
defparam \WRITEDATAWB_ibuf[15] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[16]  (
	.O(WRITEDATAWB_c[16]),
	.I(WRITEDATAWB[16])
);
defparam \WRITEDATAWB_ibuf[16] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[17]  (
	.O(WRITEDATAWB_c[17]),
	.I(WRITEDATAWB[17])
);
defparam \WRITEDATAWB_ibuf[17] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[18]  (
	.O(WRITEDATAWB_c[18]),
	.I(WRITEDATAWB[18])
);
defparam \WRITEDATAWB_ibuf[18] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[19]  (
	.O(WRITEDATAWB_c[19]),
	.I(WRITEDATAWB[19])
);
defparam \WRITEDATAWB_ibuf[19] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[20]  (
	.O(WRITEDATAWB_c[20]),
	.I(WRITEDATAWB[20])
);
defparam \WRITEDATAWB_ibuf[20] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[21]  (
	.O(WRITEDATAWB_c[21]),
	.I(WRITEDATAWB[21])
);
defparam \WRITEDATAWB_ibuf[21] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[22]  (
	.O(WRITEDATAWB_c[22]),
	.I(WRITEDATAWB[22])
);
defparam \WRITEDATAWB_ibuf[22] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[23]  (
	.O(WRITEDATAWB_c[23]),
	.I(WRITEDATAWB[23])
);
defparam \WRITEDATAWB_ibuf[23] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[24]  (
	.O(WRITEDATAWB_c[24]),
	.I(WRITEDATAWB[24])
);
defparam \WRITEDATAWB_ibuf[24] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[25]  (
	.O(WRITEDATAWB_c[25]),
	.I(WRITEDATAWB[25])
);
defparam \WRITEDATAWB_ibuf[25] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[26]  (
	.O(WRITEDATAWB_c[26]),
	.I(WRITEDATAWB[26])
);
defparam \WRITEDATAWB_ibuf[26] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[27]  (
	.O(WRITEDATAWB_c[27]),
	.I(WRITEDATAWB[27])
);
defparam \WRITEDATAWB_ibuf[27] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[28]  (
	.O(WRITEDATAWB_c[28]),
	.I(WRITEDATAWB[28])
);
defparam \WRITEDATAWB_ibuf[28] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[29]  (
	.O(WRITEDATAWB_c[29]),
	.I(WRITEDATAWB[29])
);
defparam \WRITEDATAWB_ibuf[29] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[30]  (
	.O(WRITEDATAWB_c[30]),
	.I(WRITEDATAWB[30])
);
defparam \WRITEDATAWB_ibuf[30] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[31]  (
	.O(WRITEDATAWB_c[31]),
	.I(WRITEDATAWB[31])
);
defparam \WRITEDATAWB_ibuf[31] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[32]  (
	.O(WRITEDATAWB_c[32]),
	.I(WRITEDATAWB[32])
);
defparam \WRITEDATAWB_ibuf[32] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[33]  (
	.O(WRITEDATAWB_c[33]),
	.I(WRITEDATAWB[33])
);
defparam \WRITEDATAWB_ibuf[33] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[34]  (
	.O(WRITEDATAWB_c[34]),
	.I(WRITEDATAWB[34])
);
defparam \WRITEDATAWB_ibuf[34] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[35]  (
	.O(WRITEDATAWB_c[35]),
	.I(WRITEDATAWB[35])
);
defparam \WRITEDATAWB_ibuf[35] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[36]  (
	.O(WRITEDATAWB_c[36]),
	.I(WRITEDATAWB[36])
);
defparam \WRITEDATAWB_ibuf[36] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[37]  (
	.O(WRITEDATAWB_c[37]),
	.I(WRITEDATAWB[37])
);
defparam \WRITEDATAWB_ibuf[37] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[38]  (
	.O(WRITEDATAWB_c[38]),
	.I(WRITEDATAWB[38])
);
defparam \WRITEDATAWB_ibuf[38] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[39]  (
	.O(WRITEDATAWB_c[39]),
	.I(WRITEDATAWB[39])
);
defparam \WRITEDATAWB_ibuf[39] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[40]  (
	.O(WRITEDATAWB_c[40]),
	.I(WRITEDATAWB[40])
);
defparam \WRITEDATAWB_ibuf[40] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[41]  (
	.O(WRITEDATAWB_c[41]),
	.I(WRITEDATAWB[41])
);
defparam \WRITEDATAWB_ibuf[41] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[42]  (
	.O(WRITEDATAWB_c[42]),
	.I(WRITEDATAWB[42])
);
defparam \WRITEDATAWB_ibuf[42] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[43]  (
	.O(WRITEDATAWB_c[43]),
	.I(WRITEDATAWB[43])
);
defparam \WRITEDATAWB_ibuf[43] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[44]  (
	.O(WRITEDATAWB_c[44]),
	.I(WRITEDATAWB[44])
);
defparam \WRITEDATAWB_ibuf[44] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[45]  (
	.O(WRITEDATAWB_c[45]),
	.I(WRITEDATAWB[45])
);
defparam \WRITEDATAWB_ibuf[45] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[46]  (
	.O(WRITEDATAWB_c[46]),
	.I(WRITEDATAWB[46])
);
defparam \WRITEDATAWB_ibuf[46] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[47]  (
	.O(WRITEDATAWB_c[47]),
	.I(WRITEDATAWB[47])
);
defparam \WRITEDATAWB_ibuf[47] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[48]  (
	.O(WRITEDATAWB_c[48]),
	.I(WRITEDATAWB[48])
);
defparam \WRITEDATAWB_ibuf[48] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[49]  (
	.O(WRITEDATAWB_c[49]),
	.I(WRITEDATAWB[49])
);
defparam \WRITEDATAWB_ibuf[49] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[50]  (
	.O(WRITEDATAWB_c[50]),
	.I(WRITEDATAWB[50])
);
defparam \WRITEDATAWB_ibuf[50] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[51]  (
	.O(WRITEDATAWB_c[51]),
	.I(WRITEDATAWB[51])
);
defparam \WRITEDATAWB_ibuf[51] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[52]  (
	.O(WRITEDATAWB_c[52]),
	.I(WRITEDATAWB[52])
);
defparam \WRITEDATAWB_ibuf[52] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[53]  (
	.O(WRITEDATAWB_c[53]),
	.I(WRITEDATAWB[53])
);
defparam \WRITEDATAWB_ibuf[53] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[54]  (
	.O(WRITEDATAWB_c[54]),
	.I(WRITEDATAWB[54])
);
defparam \WRITEDATAWB_ibuf[54] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[55]  (
	.O(WRITEDATAWB_c[55]),
	.I(WRITEDATAWB[55])
);
defparam \WRITEDATAWB_ibuf[55] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[56]  (
	.O(WRITEDATAWB_c[56]),
	.I(WRITEDATAWB[56])
);
defparam \WRITEDATAWB_ibuf[56] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[57]  (
	.O(WRITEDATAWB_c[57]),
	.I(WRITEDATAWB[57])
);
defparam \WRITEDATAWB_ibuf[57] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[58]  (
	.O(WRITEDATAWB_c[58]),
	.I(WRITEDATAWB[58])
);
defparam \WRITEDATAWB_ibuf[58] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[59]  (
	.O(WRITEDATAWB_c[59]),
	.I(WRITEDATAWB[59])
);
defparam \WRITEDATAWB_ibuf[59] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[60]  (
	.O(WRITEDATAWB_c[60]),
	.I(WRITEDATAWB[60])
);
defparam \WRITEDATAWB_ibuf[60] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[61]  (
	.O(WRITEDATAWB_c[61]),
	.I(WRITEDATAWB[61])
);
defparam \WRITEDATAWB_ibuf[61] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[62]  (
	.O(WRITEDATAWB_c[62]),
	.I(WRITEDATAWB[62])
);
defparam \WRITEDATAWB_ibuf[62] .IOSTANDARD="POD12_DCI";
  IBUF \WRITEDATAWB_ibuf[63]  (
	.O(WRITEDATAWB_c[63]),
	.I(WRITEDATAWB[63])
);
defparam \WRITEDATAWB_ibuf[63] .IOSTANDARD="POD12_DCI";
  IBUF \WRMEM_aptn_ft_ibuf[0]  (
	.O(WRMEM_aptn_ft_c[0]),
	.I(WRMEM_aptn_ft[0])
);
defparam \WRMEM_aptn_ft_ibuf[0] .IOSTANDARD="POD12_DCI";
  IBUF \WRMEM_aptn_ft_ibuf[1]  (
	.O(WRMEM_aptn_ft_c[1]),
	.I(WRMEM_aptn_ft[1])
);
defparam \WRMEM_aptn_ft_ibuf[1] .IOSTANDARD="POD12_DCI";
  IBUF \WRMEM_aptn_ft_ibuf[2]  (
	.O(WRMEM_aptn_ft_c[2]),
	.I(WRMEM_aptn_ft[2])
);
defparam \WRMEM_aptn_ft_ibuf[2] .IOSTANDARD="POD12_DCI";
  IBUF \WRMEM_aptn_ft_ibuf[3]  (
	.O(WRMEM_aptn_ft_c[3]),
	.I(WRMEM_aptn_ft[3])
);
defparam \WRMEM_aptn_ft_ibuf[3] .IOSTANDARD="POD12_DCI";
  IBUF \WRMEM_aptn_ft_ibuf[4]  (
	.O(WRMEM_aptn_ft_c[4]),
	.I(WRMEM_aptn_ft[4])
);
defparam \WRMEM_aptn_ft_ibuf[4] .IOSTANDARD="POD12_DCI";
  IBUF \WRWB_ibuf[0]  (
	.O(WRWB_c[0]),
	.I(WRWB[0])
);
defparam \WRWB_ibuf[0] .IOSTANDARD="POD12_DCI";
  IBUF \WRWB_ibuf[1]  (
	.O(WRWB_c[1]),
	.I(WRWB[1])
);
defparam \WRWB_ibuf[1] .IOSTANDARD="POD12_DCI";
  IBUF \WRWB_ibuf[2]  (
	.O(WRWB_c[2]),
	.I(WRWB[2])
);
defparam \WRWB_ibuf[2] .IOSTANDARD="POD12_DCI";
  IBUF \WRWB_ibuf[3]  (
	.O(WRWB_c[3]),
	.I(WRWB[3])
);
defparam \WRWB_ibuf[3] .IOSTANDARD="POD12_DCI";
  IBUF \WRWB_ibuf[4]  (
	.O(WRWB_c[4]),
	.I(WRWB[4])
);
defparam \WRWB_ibuf[4] .IOSTANDARD="POD12_DCI";
  IBUF \UMR3_SIB_LINK_IN_ibuf[0]  (
	.O(UMR3_SIB_LINK_IN_c[0]),
	.I(UMR3_SIB_LINK_IN[0])
);
defparam \UMR3_SIB_LINK_IN_ibuf[0] .IOSTANDARD="LVDCI_18";
  IBUF \UMR3_SIB_LINK_IN_ibuf[1]  (
	.O(UMR3_SIB_LINK_IN_c[1]),
	.I(UMR3_SIB_LINK_IN[1])
);
defparam \UMR3_SIB_LINK_IN_ibuf[1] .IOSTANDARD="LVDCI_18";
  IBUF \AFPGA_LOCK_CDO_GLNK_I_ibuf[0]  (
	.O(AFPGA_LOCK_CDO_GLNK_I_c[0]),
	.I(AFPGA_LOCK_CDO_GLNK_I[0])
);
defparam \AFPGA_LOCK_CDO_GLNK_I_ibuf[0] .IOSTANDARD="LVCMOS18";
  IBUF AFPGA_LOCK_CLK_I_ibuf (
	.O(AFPGA_LOCK_CLK_I_c),
	.I(AFPGA_LOCK_CLK_I)
);
defparam AFPGA_LOCK_CLK_I_ibuf.IOSTANDARD="LVCMOS18";
  IBUF AFPGA_LOCK_CE_I_ibuf (
	.O(AFPGA_LOCK_CE_I_c),
	.I(AFPGA_LOCK_CE_I)
);
defparam AFPGA_LOCK_CE_I_ibuf.IOSTANDARD="LVCMOS18";
  IBUF REF_RESET_ibuf (
	.O(REF_RESET_c),
	.I(REF_RESET)
);
defparam REF_RESET_ibuf.IOSTANDARD="LVCMOS18";
  IBUF MNGLINK_RX_ibuf (
	.O(MNGLINK_RX_c),
	.I(MNGLINK_RX)
);
defparam MNGLINK_RX_ibuf.IOSTANDARD="LVCMOS18";
  OBUF rst_n_obuf (
	.O(rst_n),
	.I(rst_n_c)
);
defparam rst_n_obuf.IOSTANDARD="LVCMOS12";
  OBUF \IMMID_obuf[53]  (
	.O(IMMID[53]),
	.I(IMMID_c[53])
);
defparam \IMMID_obuf[53] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_obuf[54]  (
	.O(IMMID[54]),
	.I(IMMID_c[54])
);
defparam \IMMID_obuf[54] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_obuf[55]  (
	.O(IMMID[55]),
	.I(IMMID_c[55])
);
defparam \IMMID_obuf[55] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_obuf[56]  (
	.O(IMMID[56]),
	.I(IMMID_c[56])
);
defparam \IMMID_obuf[56] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_obuf[57]  (
	.O(IMMID[57]),
	.I(IMMID_c[57])
);
defparam \IMMID_obuf[57] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_obuf[58]  (
	.O(IMMID[58]),
	.I(IMMID_c[58])
);
defparam \IMMID_obuf[58] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_obuf[59]  (
	.O(IMMID[59]),
	.I(IMMID_c[59])
);
defparam \IMMID_obuf[59] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_obuf[60]  (
	.O(IMMID[60]),
	.I(IMMID_c[60])
);
defparam \IMMID_obuf[60] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_obuf[61]  (
	.O(IMMID[61]),
	.I(IMMID_c[61])
);
defparam \IMMID_obuf[61] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_obuf[62]  (
	.O(IMMID[62]),
	.I(IMMID_c[62])
);
defparam \IMMID_obuf[62] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_obuf[63]  (
	.O(IMMID[63]),
	.I(IMMID_c[63])
);
defparam \IMMID_obuf[63] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[0]  (
	.O(PC[0]),
	.I(PC_c[0])
);
defparam \PC_obuf[0] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[1]  (
	.O(PC[1]),
	.I(PC_c[1])
);
defparam \PC_obuf[1] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[2]  (
	.O(PC[2]),
	.I(PC_c[2])
);
defparam \PC_obuf[2] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[3]  (
	.O(PC[3]),
	.I(PC_c[3])
);
defparam \PC_obuf[3] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[4]  (
	.O(PC[4]),
	.I(PC_c[4])
);
defparam \PC_obuf[4] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[5]  (
	.O(PC[5]),
	.I(PC_c[5])
);
defparam \PC_obuf[5] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[6]  (
	.O(PC[6]),
	.I(PC_c[6])
);
defparam \PC_obuf[6] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[7]  (
	.O(PC[7]),
	.I(PC_c[7])
);
defparam \PC_obuf[7] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[8]  (
	.O(PC[8]),
	.I(PC_c[8])
);
defparam \PC_obuf[8] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[9]  (
	.O(PC[9]),
	.I(PC_c[9])
);
defparam \PC_obuf[9] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[10]  (
	.O(PC[10]),
	.I(PC_c[10])
);
defparam \PC_obuf[10] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[11]  (
	.O(PC[11]),
	.I(PC_c[11])
);
defparam \PC_obuf[11] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[12]  (
	.O(PC[12]),
	.I(PC_c[12])
);
defparam \PC_obuf[12] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[13]  (
	.O(PC[13]),
	.I(PC_c[13])
);
defparam \PC_obuf[13] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[14]  (
	.O(PC[14]),
	.I(PC_c[14])
);
defparam \PC_obuf[14] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[15]  (
	.O(PC[15]),
	.I(PC_c[15])
);
defparam \PC_obuf[15] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[16]  (
	.O(PC[16]),
	.I(PC_c[16])
);
defparam \PC_obuf[16] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[17]  (
	.O(PC[17]),
	.I(PC_c[17])
);
defparam \PC_obuf[17] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[18]  (
	.O(PC[18]),
	.I(PC_c[18])
);
defparam \PC_obuf[18] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[19]  (
	.O(PC[19]),
	.I(PC_c[19])
);
defparam \PC_obuf[19] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[20]  (
	.O(PC[20]),
	.I(PC_c[20])
);
defparam \PC_obuf[20] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[21]  (
	.O(PC[21]),
	.I(PC_c[21])
);
defparam \PC_obuf[21] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[22]  (
	.O(PC[22]),
	.I(PC_c[22])
);
defparam \PC_obuf[22] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[23]  (
	.O(PC[23]),
	.I(PC_c[23])
);
defparam \PC_obuf[23] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[24]  (
	.O(PC[24]),
	.I(PC_c[24])
);
defparam \PC_obuf[24] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[25]  (
	.O(PC[25]),
	.I(PC_c[25])
);
defparam \PC_obuf[25] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[26]  (
	.O(PC[26]),
	.I(PC_c[26])
);
defparam \PC_obuf[26] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[27]  (
	.O(PC[27]),
	.I(PC_c[27])
);
defparam \PC_obuf[27] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[28]  (
	.O(PC[28]),
	.I(PC_c[28])
);
defparam \PC_obuf[28] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[29]  (
	.O(PC[29]),
	.I(PC_c[29])
);
defparam \PC_obuf[29] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[30]  (
	.O(PC[30]),
	.I(PC_c[30])
);
defparam \PC_obuf[30] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[31]  (
	.O(PC[31]),
	.I(PC_c[31])
);
defparam \PC_obuf[31] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[32]  (
	.O(PC[32]),
	.I(PC_c[32])
);
defparam \PC_obuf[32] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[33]  (
	.O(PC[33]),
	.I(PC_c[33])
);
defparam \PC_obuf[33] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[34]  (
	.O(PC[34]),
	.I(PC_c[34])
);
defparam \PC_obuf[34] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[35]  (
	.O(PC[35]),
	.I(PC_c[35])
);
defparam \PC_obuf[35] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[36]  (
	.O(PC[36]),
	.I(PC_c[36])
);
defparam \PC_obuf[36] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[37]  (
	.O(PC[37]),
	.I(PC_c[37])
);
defparam \PC_obuf[37] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[38]  (
	.O(PC[38]),
	.I(PC_c[38])
);
defparam \PC_obuf[38] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[39]  (
	.O(PC[39]),
	.I(PC_c[39])
);
defparam \PC_obuf[39] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[40]  (
	.O(PC[40]),
	.I(PC_c[40])
);
defparam \PC_obuf[40] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[41]  (
	.O(PC[41]),
	.I(PC_c[41])
);
defparam \PC_obuf[41] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[42]  (
	.O(PC[42]),
	.I(PC_c[42])
);
defparam \PC_obuf[42] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[43]  (
	.O(PC[43]),
	.I(PC_c[43])
);
defparam \PC_obuf[43] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[44]  (
	.O(PC[44]),
	.I(PC_c[44])
);
defparam \PC_obuf[44] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[45]  (
	.O(PC[45]),
	.I(PC_c[45])
);
defparam \PC_obuf[45] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[46]  (
	.O(PC[46]),
	.I(PC_c[46])
);
defparam \PC_obuf[46] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[47]  (
	.O(PC[47]),
	.I(PC_c[47])
);
defparam \PC_obuf[47] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[48]  (
	.O(PC[48]),
	.I(PC_c[48])
);
defparam \PC_obuf[48] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[49]  (
	.O(PC[49]),
	.I(PC_c[49])
);
defparam \PC_obuf[49] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[50]  (
	.O(PC[50]),
	.I(PC_c[50])
);
defparam \PC_obuf[50] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[51]  (
	.O(PC[51]),
	.I(PC_c[51])
);
defparam \PC_obuf[51] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[52]  (
	.O(PC[52]),
	.I(PC_c[52])
);
defparam \PC_obuf[52] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[53]  (
	.O(PC[53]),
	.I(PC_c[53])
);
defparam \PC_obuf[53] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[54]  (
	.O(PC[54]),
	.I(PC_c[54])
);
defparam \PC_obuf[54] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[55]  (
	.O(PC[55]),
	.I(PC_c[55])
);
defparam \PC_obuf[55] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[56]  (
	.O(PC[56]),
	.I(PC_c[56])
);
defparam \PC_obuf[56] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[57]  (
	.O(PC[57]),
	.I(PC_c[57])
);
defparam \PC_obuf[57] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[58]  (
	.O(PC[58]),
	.I(PC_c[58])
);
defparam \PC_obuf[58] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[59]  (
	.O(PC[59]),
	.I(PC_c[59])
);
defparam \PC_obuf[59] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[60]  (
	.O(PC[60]),
	.I(PC_c[60])
);
defparam \PC_obuf[60] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[61]  (
	.O(PC[61]),
	.I(PC_c[61])
);
defparam \PC_obuf[61] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[62]  (
	.O(PC[62]),
	.I(PC_c[62])
);
defparam \PC_obuf[62] .IOSTANDARD="LVCMOS18";
  OBUF \PC_obuf[63]  (
	.O(PC[63]),
	.I(PC_c[63])
);
defparam \PC_obuf[63] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_11_to_20_obuf[11]  (
	.O(IMMID_11_to_20[11]),
	.I(IMMID_11_to_20_c[11])
);
defparam \IMMID_11_to_20_obuf[11] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_11_to_20_obuf[12]  (
	.O(IMMID_11_to_20[12]),
	.I(IMMID_11_to_20_c[12])
);
defparam \IMMID_11_to_20_obuf[12] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_11_to_20_obuf[13]  (
	.O(IMMID_11_to_20[13]),
	.I(IMMID_11_to_20_c[13])
);
defparam \IMMID_11_to_20_obuf[13] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_11_to_20_obuf[14]  (
	.O(IMMID_11_to_20[14]),
	.I(IMMID_11_to_20_c[14])
);
defparam \IMMID_11_to_20_obuf[14] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_11_to_20_obuf[15]  (
	.O(IMMID_11_to_20[15]),
	.I(IMMID_11_to_20_c[15])
);
defparam \IMMID_11_to_20_obuf[15] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_11_to_20_obuf[16]  (
	.O(IMMID_11_to_20[16]),
	.I(IMMID_11_to_20_c[16])
);
defparam \IMMID_11_to_20_obuf[16] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_11_to_20_obuf[17]  (
	.O(IMMID_11_to_20[17]),
	.I(IMMID_11_to_20_c[17])
);
defparam \IMMID_11_to_20_obuf[17] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_11_to_20_obuf[18]  (
	.O(IMMID_11_to_20[18]),
	.I(IMMID_11_to_20_c[18])
);
defparam \IMMID_11_to_20_obuf[18] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_11_to_20_obuf[19]  (
	.O(IMMID_11_to_20[19]),
	.I(IMMID_11_to_20_c[19])
);
defparam \IMMID_11_to_20_obuf[19] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_11_to_20_obuf[20]  (
	.O(IMMID_11_to_20[20]),
	.I(IMMID_11_to_20_c[20])
);
defparam \IMMID_11_to_20_obuf[20] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_22_to_22_obuf[22]  (
	.O(IMMID_22_to_22[22]),
	.I(IMMID_22_to_22_c[22])
);
defparam \IMMID_22_to_22_obuf[22] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_24_to_26_obuf[24]  (
	.O(IMMID_24_to_26[24]),
	.I(IMMID_24_to_26_c[24])
);
defparam \IMMID_24_to_26_obuf[24] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_24_to_26_obuf[25]  (
	.O(IMMID_24_to_26[25]),
	.I(IMMID_24_to_26_c[25])
);
defparam \IMMID_24_to_26_obuf[25] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_24_to_26_obuf[26]  (
	.O(IMMID_24_to_26[26]),
	.I(IMMID_24_to_26_c[26])
);
defparam \IMMID_24_to_26_obuf[26] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_28_to_51_obuf[28]  (
	.O(IMMID_28_to_51[28]),
	.I(IMMID_28_to_51_c[28])
);
defparam \IMMID_28_to_51_obuf[28] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_28_to_51_obuf[29]  (
	.O(IMMID_28_to_51[29]),
	.I(IMMID_28_to_51_c[29])
);
defparam \IMMID_28_to_51_obuf[29] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_28_to_51_obuf[30]  (
	.O(IMMID_28_to_51[30]),
	.I(IMMID_28_to_51_c[30])
);
defparam \IMMID_28_to_51_obuf[30] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_28_to_51_obuf[31]  (
	.O(IMMID_28_to_51[31]),
	.I(IMMID_28_to_51_c[31])
);
defparam \IMMID_28_to_51_obuf[31] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_28_to_51_obuf[32]  (
	.O(IMMID_28_to_51[32]),
	.I(IMMID_28_to_51_c[32])
);
defparam \IMMID_28_to_51_obuf[32] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_28_to_51_obuf[33]  (
	.O(IMMID_28_to_51[33]),
	.I(IMMID_28_to_51_c[33])
);
defparam \IMMID_28_to_51_obuf[33] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_28_to_51_obuf[34]  (
	.O(IMMID_28_to_51[34]),
	.I(IMMID_28_to_51_c[34])
);
defparam \IMMID_28_to_51_obuf[34] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_28_to_51_obuf[35]  (
	.O(IMMID_28_to_51[35]),
	.I(IMMID_28_to_51_c[35])
);
defparam \IMMID_28_to_51_obuf[35] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_28_to_51_obuf[36]  (
	.O(IMMID_28_to_51[36]),
	.I(IMMID_28_to_51_c[36])
);
defparam \IMMID_28_to_51_obuf[36] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_28_to_51_obuf[37]  (
	.O(IMMID_28_to_51[37]),
	.I(IMMID_28_to_51_c[37])
);
defparam \IMMID_28_to_51_obuf[37] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_28_to_51_obuf[38]  (
	.O(IMMID_28_to_51[38]),
	.I(IMMID_28_to_51_c[38])
);
defparam \IMMID_28_to_51_obuf[38] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_28_to_51_obuf[39]  (
	.O(IMMID_28_to_51[39]),
	.I(IMMID_28_to_51_c[39])
);
defparam \IMMID_28_to_51_obuf[39] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_28_to_51_obuf[40]  (
	.O(IMMID_28_to_51[40]),
	.I(IMMID_28_to_51_c[40])
);
defparam \IMMID_28_to_51_obuf[40] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_28_to_51_obuf[41]  (
	.O(IMMID_28_to_51[41]),
	.I(IMMID_28_to_51_c[41])
);
defparam \IMMID_28_to_51_obuf[41] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_28_to_51_obuf[42]  (
	.O(IMMID_28_to_51[42]),
	.I(IMMID_28_to_51_c[42])
);
defparam \IMMID_28_to_51_obuf[42] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_28_to_51_obuf[43]  (
	.O(IMMID_28_to_51[43]),
	.I(IMMID_28_to_51_c[43])
);
defparam \IMMID_28_to_51_obuf[43] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_28_to_51_obuf[44]  (
	.O(IMMID_28_to_51[44]),
	.I(IMMID_28_to_51_c[44])
);
defparam \IMMID_28_to_51_obuf[44] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_28_to_51_obuf[45]  (
	.O(IMMID_28_to_51[45]),
	.I(IMMID_28_to_51_c[45])
);
defparam \IMMID_28_to_51_obuf[45] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_28_to_51_obuf[46]  (
	.O(IMMID_28_to_51[46]),
	.I(IMMID_28_to_51_c[46])
);
defparam \IMMID_28_to_51_obuf[46] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_28_to_51_obuf[47]  (
	.O(IMMID_28_to_51[47]),
	.I(IMMID_28_to_51_c[47])
);
defparam \IMMID_28_to_51_obuf[47] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_28_to_51_obuf[48]  (
	.O(IMMID_28_to_51[48]),
	.I(IMMID_28_to_51_c[48])
);
defparam \IMMID_28_to_51_obuf[48] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_28_to_51_obuf[49]  (
	.O(IMMID_28_to_51[49]),
	.I(IMMID_28_to_51_c[49])
);
defparam \IMMID_28_to_51_obuf[49] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_28_to_51_obuf[50]  (
	.O(IMMID_28_to_51[50]),
	.I(IMMID_28_to_51_c[50])
);
defparam \IMMID_28_to_51_obuf[50] .IOSTANDARD="LVCMOS18";
  OBUF \IMMID_28_to_51_obuf[51]  (
	.O(IMMID_28_to_51[51]),
	.I(IMMID_28_to_51_c[51])
);
defparam \IMMID_28_to_51_obuf[51] .IOSTANDARD="LVCMOS18";
  OBUF MEMREADEX_aptn_ft_obuf (
	.O(MEMREADEX_aptn_ft),
	.I(MEMREADEX_aptn_ft_c)
);
defparam MEMREADEX_aptn_ft_obuf.IOSTANDARD="POD12_DCI";
defparam MEMREADEX_aptn_ft_obuf.SLEW="FAST";
defparam MEMREADEX_aptn_ft_obuf.DRIVE=12;
  OBUF MEMREADMEM_aptn_ft_0_obuf (
	.O(MEMREADMEM_aptn_ft_0),
	.I(MEMREADMEM_aptn_ft_0_c)
);
defparam MEMREADMEM_aptn_ft_0_obuf.IOSTANDARD="POD12_DCI";
  OBUF REGWRITEWB_aptn_ft_obuf (
	.O(REGWRITEWB_aptn_ft),
	.I(REGWRITEWB_aptn_ft_c)
);
defparam REGWRITEWB_aptn_ft_obuf.IOSTANDARD="LVCMOS12";
  OBUF rst_n_aptn_s_obuf (
	.O(rst_n_aptn_s),
	.I(rst_n_aptn_s_c)
);
defparam rst_n_aptn_s_obuf.IOSTANDARD="POD12_DCI";
defparam rst_n_aptn_s_obuf.SLEW="FAST";
defparam rst_n_aptn_s_obuf.DRIVE=12;
  OBUF \ALUOUTMEM_aptn_ft_0_obuf[0]  (
	.O(ALUOUTMEM_aptn_ft_0[0]),
	.I(ALUOUTMEM_aptn_ft_0_c[0])
);
defparam \ALUOUTMEM_aptn_ft_0_obuf[0] .IOSTANDARD="SSTL12_DCI";
  OBUF \ALUOUTMEM_aptn_ft_0_obuf[1]  (
	.O(ALUOUTMEM_aptn_ft_0[1]),
	.I(ALUOUTMEM_aptn_ft_0_c[1])
);
defparam \ALUOUTMEM_aptn_ft_0_obuf[1] .IOSTANDARD="SSTL12_DCI";
  OBUF \ALUOUTMEM_aptn_ft_0_obuf[2]  (
	.O(ALUOUTMEM_aptn_ft_0[2]),
	.I(ALUOUTMEM_aptn_ft_0_c[2])
);
defparam \ALUOUTMEM_aptn_ft_0_obuf[2] .IOSTANDARD="SSTL12_DCI";
  OBUF \ALUOUTMEM_aptn_ft_0_obuf[3]  (
	.O(ALUOUTMEM_aptn_ft_0[3]),
	.I(ALUOUTMEM_aptn_ft_0_c[3])
);
defparam \ALUOUTMEM_aptn_ft_0_obuf[3] .IOSTANDARD="SSTL12_DCI";
  OBUF \ALUOUTMEM_aptn_ft_0_obuf[4]  (
	.O(ALUOUTMEM_aptn_ft_0[4]),
	.I(ALUOUTMEM_aptn_ft_0_c[4])
);
defparam \ALUOUTMEM_aptn_ft_0_obuf[4] .IOSTANDARD="SSTL12_DCI";
  OBUF \ALUOUTMEM_aptn_ft_0_obuf[5]  (
	.O(ALUOUTMEM_aptn_ft_0[5]),
	.I(ALUOUTMEM_aptn_ft_0_c[5])
);
defparam \ALUOUTMEM_aptn_ft_0_obuf[5] .IOSTANDARD="SSTL12_DCI";
  OBUF \ALUOUTMEM_aptn_ft_0_obuf[6]  (
	.O(ALUOUTMEM_aptn_ft_0[6]),
	.I(ALUOUTMEM_aptn_ft_0_c[6])
);
defparam \ALUOUTMEM_aptn_ft_0_obuf[6] .IOSTANDARD="SSTL12_DCI";
  OBUF \ALUOUTMEM_aptn_ft_0_obuf[7]  (
	.O(ALUOUTMEM_aptn_ft_0[7]),
	.I(ALUOUTMEM_aptn_ft_0_c[7])
);
defparam \ALUOUTMEM_aptn_ft_0_obuf[7] .IOSTANDARD="SSTL12_DCI";
  OBUF \ALUOUTMEM_aptn_ft_0_obuf[8]  (
	.O(ALUOUTMEM_aptn_ft_0[8]),
	.I(ALUOUTMEM_aptn_ft_0_c[8])
);
defparam \ALUOUTMEM_aptn_ft_0_obuf[8] .IOSTANDARD="SSTL12_DCI";
  OBUF \ALUOUTMEM_aptn_ft_0_obuf[9]  (
	.O(ALUOUTMEM_aptn_ft_0[9]),
	.I(ALUOUTMEM_aptn_ft_0_c[9])
);
defparam \ALUOUTMEM_aptn_ft_0_obuf[9] .IOSTANDARD="SSTL12_DCI";
  OBUF \ALUOUTMEM_aptn_ft_0_obuf[10]  (
	.O(ALUOUTMEM_aptn_ft_0[10]),
	.I(ALUOUTMEM_aptn_ft_0_c[10])
);
defparam \ALUOUTMEM_aptn_ft_0_obuf[10] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[0]  (
	.O(DMOUTWB_aptn_ft[0]),
	.I(DMOUTWB_aptn_ft_c[0])
);
defparam \DMOUTWB_aptn_ft_obuf[0] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[1]  (
	.O(DMOUTWB_aptn_ft[1]),
	.I(DMOUTWB_aptn_ft_c[1])
);
defparam \DMOUTWB_aptn_ft_obuf[1] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[2]  (
	.O(DMOUTWB_aptn_ft[2]),
	.I(DMOUTWB_aptn_ft_c[2])
);
defparam \DMOUTWB_aptn_ft_obuf[2] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[3]  (
	.O(DMOUTWB_aptn_ft[3]),
	.I(DMOUTWB_aptn_ft_c[3])
);
defparam \DMOUTWB_aptn_ft_obuf[3] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[4]  (
	.O(DMOUTWB_aptn_ft[4]),
	.I(DMOUTWB_aptn_ft_c[4])
);
defparam \DMOUTWB_aptn_ft_obuf[4] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[5]  (
	.O(DMOUTWB_aptn_ft[5]),
	.I(DMOUTWB_aptn_ft_c[5])
);
defparam \DMOUTWB_aptn_ft_obuf[5] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[6]  (
	.O(DMOUTWB_aptn_ft[6]),
	.I(DMOUTWB_aptn_ft_c[6])
);
defparam \DMOUTWB_aptn_ft_obuf[6] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[7]  (
	.O(DMOUTWB_aptn_ft[7]),
	.I(DMOUTWB_aptn_ft_c[7])
);
defparam \DMOUTWB_aptn_ft_obuf[7] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[8]  (
	.O(DMOUTWB_aptn_ft[8]),
	.I(DMOUTWB_aptn_ft_c[8])
);
defparam \DMOUTWB_aptn_ft_obuf[8] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[9]  (
	.O(DMOUTWB_aptn_ft[9]),
	.I(DMOUTWB_aptn_ft_c[9])
);
defparam \DMOUTWB_aptn_ft_obuf[9] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[10]  (
	.O(DMOUTWB_aptn_ft[10]),
	.I(DMOUTWB_aptn_ft_c[10])
);
defparam \DMOUTWB_aptn_ft_obuf[10] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[11]  (
	.O(DMOUTWB_aptn_ft[11]),
	.I(DMOUTWB_aptn_ft_c[11])
);
defparam \DMOUTWB_aptn_ft_obuf[11] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[12]  (
	.O(DMOUTWB_aptn_ft[12]),
	.I(DMOUTWB_aptn_ft_c[12])
);
defparam \DMOUTWB_aptn_ft_obuf[12] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[13]  (
	.O(DMOUTWB_aptn_ft[13]),
	.I(DMOUTWB_aptn_ft_c[13])
);
defparam \DMOUTWB_aptn_ft_obuf[13] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[14]  (
	.O(DMOUTWB_aptn_ft[14]),
	.I(DMOUTWB_aptn_ft_c[14])
);
defparam \DMOUTWB_aptn_ft_obuf[14] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[15]  (
	.O(DMOUTWB_aptn_ft[15]),
	.I(DMOUTWB_aptn_ft_c[15])
);
defparam \DMOUTWB_aptn_ft_obuf[15] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[16]  (
	.O(DMOUTWB_aptn_ft[16]),
	.I(DMOUTWB_aptn_ft_c[16])
);
defparam \DMOUTWB_aptn_ft_obuf[16] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[17]  (
	.O(DMOUTWB_aptn_ft[17]),
	.I(DMOUTWB_aptn_ft_c[17])
);
defparam \DMOUTWB_aptn_ft_obuf[17] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[18]  (
	.O(DMOUTWB_aptn_ft[18]),
	.I(DMOUTWB_aptn_ft_c[18])
);
defparam \DMOUTWB_aptn_ft_obuf[18] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[19]  (
	.O(DMOUTWB_aptn_ft[19]),
	.I(DMOUTWB_aptn_ft_c[19])
);
defparam \DMOUTWB_aptn_ft_obuf[19] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[20]  (
	.O(DMOUTWB_aptn_ft[20]),
	.I(DMOUTWB_aptn_ft_c[20])
);
defparam \DMOUTWB_aptn_ft_obuf[20] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[21]  (
	.O(DMOUTWB_aptn_ft[21]),
	.I(DMOUTWB_aptn_ft_c[21])
);
defparam \DMOUTWB_aptn_ft_obuf[21] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[22]  (
	.O(DMOUTWB_aptn_ft[22]),
	.I(DMOUTWB_aptn_ft_c[22])
);
defparam \DMOUTWB_aptn_ft_obuf[22] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[23]  (
	.O(DMOUTWB_aptn_ft[23]),
	.I(DMOUTWB_aptn_ft_c[23])
);
defparam \DMOUTWB_aptn_ft_obuf[23] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[24]  (
	.O(DMOUTWB_aptn_ft[24]),
	.I(DMOUTWB_aptn_ft_c[24])
);
defparam \DMOUTWB_aptn_ft_obuf[24] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[25]  (
	.O(DMOUTWB_aptn_ft[25]),
	.I(DMOUTWB_aptn_ft_c[25])
);
defparam \DMOUTWB_aptn_ft_obuf[25] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[26]  (
	.O(DMOUTWB_aptn_ft[26]),
	.I(DMOUTWB_aptn_ft_c[26])
);
defparam \DMOUTWB_aptn_ft_obuf[26] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[27]  (
	.O(DMOUTWB_aptn_ft[27]),
	.I(DMOUTWB_aptn_ft_c[27])
);
defparam \DMOUTWB_aptn_ft_obuf[27] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[28]  (
	.O(DMOUTWB_aptn_ft[28]),
	.I(DMOUTWB_aptn_ft_c[28])
);
defparam \DMOUTWB_aptn_ft_obuf[28] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[29]  (
	.O(DMOUTWB_aptn_ft[29]),
	.I(DMOUTWB_aptn_ft_c[29])
);
defparam \DMOUTWB_aptn_ft_obuf[29] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[30]  (
	.O(DMOUTWB_aptn_ft[30]),
	.I(DMOUTWB_aptn_ft_c[30])
);
defparam \DMOUTWB_aptn_ft_obuf[30] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[31]  (
	.O(DMOUTWB_aptn_ft[31]),
	.I(DMOUTWB_aptn_ft_c[31])
);
defparam \DMOUTWB_aptn_ft_obuf[31] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[32]  (
	.O(DMOUTWB_aptn_ft[32]),
	.I(DMOUTWB_aptn_ft_c[32])
);
defparam \DMOUTWB_aptn_ft_obuf[32] .IOSTANDARD="SSTL12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[33]  (
	.O(DMOUTWB_aptn_ft[33]),
	.I(DMOUTWB_aptn_ft_c[33])
);
defparam \DMOUTWB_aptn_ft_obuf[33] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[34]  (
	.O(DMOUTWB_aptn_ft[34]),
	.I(DMOUTWB_aptn_ft_c[34])
);
defparam \DMOUTWB_aptn_ft_obuf[34] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[35]  (
	.O(DMOUTWB_aptn_ft[35]),
	.I(DMOUTWB_aptn_ft_c[35])
);
defparam \DMOUTWB_aptn_ft_obuf[35] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[36]  (
	.O(DMOUTWB_aptn_ft[36]),
	.I(DMOUTWB_aptn_ft_c[36])
);
defparam \DMOUTWB_aptn_ft_obuf[36] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[37]  (
	.O(DMOUTWB_aptn_ft[37]),
	.I(DMOUTWB_aptn_ft_c[37])
);
defparam \DMOUTWB_aptn_ft_obuf[37] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[38]  (
	.O(DMOUTWB_aptn_ft[38]),
	.I(DMOUTWB_aptn_ft_c[38])
);
defparam \DMOUTWB_aptn_ft_obuf[38] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[39]  (
	.O(DMOUTWB_aptn_ft[39]),
	.I(DMOUTWB_aptn_ft_c[39])
);
defparam \DMOUTWB_aptn_ft_obuf[39] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[40]  (
	.O(DMOUTWB_aptn_ft[40]),
	.I(DMOUTWB_aptn_ft_c[40])
);
defparam \DMOUTWB_aptn_ft_obuf[40] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[41]  (
	.O(DMOUTWB_aptn_ft[41]),
	.I(DMOUTWB_aptn_ft_c[41])
);
defparam \DMOUTWB_aptn_ft_obuf[41] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[42]  (
	.O(DMOUTWB_aptn_ft[42]),
	.I(DMOUTWB_aptn_ft_c[42])
);
defparam \DMOUTWB_aptn_ft_obuf[42] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[43]  (
	.O(DMOUTWB_aptn_ft[43]),
	.I(DMOUTWB_aptn_ft_c[43])
);
defparam \DMOUTWB_aptn_ft_obuf[43] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[44]  (
	.O(DMOUTWB_aptn_ft[44]),
	.I(DMOUTWB_aptn_ft_c[44])
);
defparam \DMOUTWB_aptn_ft_obuf[44] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[45]  (
	.O(DMOUTWB_aptn_ft[45]),
	.I(DMOUTWB_aptn_ft_c[45])
);
defparam \DMOUTWB_aptn_ft_obuf[45] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[46]  (
	.O(DMOUTWB_aptn_ft[46]),
	.I(DMOUTWB_aptn_ft_c[46])
);
defparam \DMOUTWB_aptn_ft_obuf[46] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[47]  (
	.O(DMOUTWB_aptn_ft[47]),
	.I(DMOUTWB_aptn_ft_c[47])
);
defparam \DMOUTWB_aptn_ft_obuf[47] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[48]  (
	.O(DMOUTWB_aptn_ft[48]),
	.I(DMOUTWB_aptn_ft_c[48])
);
defparam \DMOUTWB_aptn_ft_obuf[48] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[49]  (
	.O(DMOUTWB_aptn_ft[49]),
	.I(DMOUTWB_aptn_ft_c[49])
);
defparam \DMOUTWB_aptn_ft_obuf[49] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[50]  (
	.O(DMOUTWB_aptn_ft[50]),
	.I(DMOUTWB_aptn_ft_c[50])
);
defparam \DMOUTWB_aptn_ft_obuf[50] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[51]  (
	.O(DMOUTWB_aptn_ft[51]),
	.I(DMOUTWB_aptn_ft_c[51])
);
defparam \DMOUTWB_aptn_ft_obuf[51] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[52]  (
	.O(DMOUTWB_aptn_ft[52]),
	.I(DMOUTWB_aptn_ft_c[52])
);
defparam \DMOUTWB_aptn_ft_obuf[52] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[53]  (
	.O(DMOUTWB_aptn_ft[53]),
	.I(DMOUTWB_aptn_ft_c[53])
);
defparam \DMOUTWB_aptn_ft_obuf[53] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[54]  (
	.O(DMOUTWB_aptn_ft[54]),
	.I(DMOUTWB_aptn_ft_c[54])
);
defparam \DMOUTWB_aptn_ft_obuf[54] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[55]  (
	.O(DMOUTWB_aptn_ft[55]),
	.I(DMOUTWB_aptn_ft_c[55])
);
defparam \DMOUTWB_aptn_ft_obuf[55] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[56]  (
	.O(DMOUTWB_aptn_ft[56]),
	.I(DMOUTWB_aptn_ft_c[56])
);
defparam \DMOUTWB_aptn_ft_obuf[56] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[57]  (
	.O(DMOUTWB_aptn_ft[57]),
	.I(DMOUTWB_aptn_ft_c[57])
);
defparam \DMOUTWB_aptn_ft_obuf[57] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[58]  (
	.O(DMOUTWB_aptn_ft[58]),
	.I(DMOUTWB_aptn_ft_c[58])
);
defparam \DMOUTWB_aptn_ft_obuf[58] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[59]  (
	.O(DMOUTWB_aptn_ft[59]),
	.I(DMOUTWB_aptn_ft_c[59])
);
defparam \DMOUTWB_aptn_ft_obuf[59] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[60]  (
	.O(DMOUTWB_aptn_ft[60]),
	.I(DMOUTWB_aptn_ft_c[60])
);
defparam \DMOUTWB_aptn_ft_obuf[60] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[61]  (
	.O(DMOUTWB_aptn_ft[61]),
	.I(DMOUTWB_aptn_ft_c[61])
);
defparam \DMOUTWB_aptn_ft_obuf[61] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[62]  (
	.O(DMOUTWB_aptn_ft[62]),
	.I(DMOUTWB_aptn_ft_c[62])
);
defparam \DMOUTWB_aptn_ft_obuf[62] .IOSTANDARD="POD12_DCI";
  OBUF \DMOUTWB_aptn_ft_obuf[63]  (
	.O(DMOUTWB_aptn_ft[63]),
	.I(DMOUTWB_aptn_ft_c[63])
);
defparam \DMOUTWB_aptn_ft_obuf[63] .IOSTANDARD="POD12_DCI";
  OBUF \WREX_aptn_ft_obuf[0]  (
	.O(WREX_aptn_ft[0]),
	.I(WREX_aptn_ft_c[0])
);
defparam \WREX_aptn_ft_obuf[0] .IOSTANDARD="POD12_DCI";
defparam \WREX_aptn_ft_obuf[0] .SLEW="FAST";
defparam \WREX_aptn_ft_obuf[0] .DRIVE=12;
  OBUF \WREX_aptn_ft_obuf[1]  (
	.O(WREX_aptn_ft[1]),
	.I(WREX_aptn_ft_c[1])
);
defparam \WREX_aptn_ft_obuf[1] .IOSTANDARD="POD12_DCI";
defparam \WREX_aptn_ft_obuf[1] .SLEW="FAST";
defparam \WREX_aptn_ft_obuf[1] .DRIVE=12;
  OBUF \WREX_aptn_ft_obuf[2]  (
	.O(WREX_aptn_ft[2]),
	.I(WREX_aptn_ft_c[2])
);
defparam \WREX_aptn_ft_obuf[2] .IOSTANDARD="POD12_DCI";
defparam \WREX_aptn_ft_obuf[2] .SLEW="FAST";
defparam \WREX_aptn_ft_obuf[2] .DRIVE=12;
  OBUF \WREX_aptn_ft_obuf[3]  (
	.O(WREX_aptn_ft[3]),
	.I(WREX_aptn_ft_c[3])
);
defparam \WREX_aptn_ft_obuf[3] .IOSTANDARD="POD12_DCI";
defparam \WREX_aptn_ft_obuf[3] .SLEW="FAST";
defparam \WREX_aptn_ft_obuf[3] .DRIVE=12;
  OBUF \WRITEDATAWB_aptn_ft_obuf[0]  (
	.O(WRITEDATAWB_aptn_ft[0]),
	.I(WRITEDATAWB_aptn_ft_c[0])
);
defparam \WRITEDATAWB_aptn_ft_obuf[0] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[1]  (
	.O(WRITEDATAWB_aptn_ft[1]),
	.I(WRITEDATAWB_aptn_ft_c[1])
);
defparam \WRITEDATAWB_aptn_ft_obuf[1] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[2]  (
	.O(WRITEDATAWB_aptn_ft[2]),
	.I(WRITEDATAWB_aptn_ft_c[2])
);
defparam \WRITEDATAWB_aptn_ft_obuf[2] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[3]  (
	.O(WRITEDATAWB_aptn_ft[3]),
	.I(WRITEDATAWB_aptn_ft_c[3])
);
defparam \WRITEDATAWB_aptn_ft_obuf[3] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[4]  (
	.O(WRITEDATAWB_aptn_ft[4]),
	.I(WRITEDATAWB_aptn_ft_c[4])
);
defparam \WRITEDATAWB_aptn_ft_obuf[4] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[5]  (
	.O(WRITEDATAWB_aptn_ft[5]),
	.I(WRITEDATAWB_aptn_ft_c[5])
);
defparam \WRITEDATAWB_aptn_ft_obuf[5] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[6]  (
	.O(WRITEDATAWB_aptn_ft[6]),
	.I(WRITEDATAWB_aptn_ft_c[6])
);
defparam \WRITEDATAWB_aptn_ft_obuf[6] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[7]  (
	.O(WRITEDATAWB_aptn_ft[7]),
	.I(WRITEDATAWB_aptn_ft_c[7])
);
defparam \WRITEDATAWB_aptn_ft_obuf[7] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[8]  (
	.O(WRITEDATAWB_aptn_ft[8]),
	.I(WRITEDATAWB_aptn_ft_c[8])
);
defparam \WRITEDATAWB_aptn_ft_obuf[8] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[9]  (
	.O(WRITEDATAWB_aptn_ft[9]),
	.I(WRITEDATAWB_aptn_ft_c[9])
);
defparam \WRITEDATAWB_aptn_ft_obuf[9] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[10]  (
	.O(WRITEDATAWB_aptn_ft[10]),
	.I(WRITEDATAWB_aptn_ft_c[10])
);
defparam \WRITEDATAWB_aptn_ft_obuf[10] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[11]  (
	.O(WRITEDATAWB_aptn_ft[11]),
	.I(WRITEDATAWB_aptn_ft_c[11])
);
defparam \WRITEDATAWB_aptn_ft_obuf[11] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[12]  (
	.O(WRITEDATAWB_aptn_ft[12]),
	.I(WRITEDATAWB_aptn_ft_c[12])
);
defparam \WRITEDATAWB_aptn_ft_obuf[12] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[13]  (
	.O(WRITEDATAWB_aptn_ft[13]),
	.I(WRITEDATAWB_aptn_ft_c[13])
);
defparam \WRITEDATAWB_aptn_ft_obuf[13] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[14]  (
	.O(WRITEDATAWB_aptn_ft[14]),
	.I(WRITEDATAWB_aptn_ft_c[14])
);
defparam \WRITEDATAWB_aptn_ft_obuf[14] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[15]  (
	.O(WRITEDATAWB_aptn_ft[15]),
	.I(WRITEDATAWB_aptn_ft_c[15])
);
defparam \WRITEDATAWB_aptn_ft_obuf[15] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[16]  (
	.O(WRITEDATAWB_aptn_ft[16]),
	.I(WRITEDATAWB_aptn_ft_c[16])
);
defparam \WRITEDATAWB_aptn_ft_obuf[16] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[17]  (
	.O(WRITEDATAWB_aptn_ft[17]),
	.I(WRITEDATAWB_aptn_ft_c[17])
);
defparam \WRITEDATAWB_aptn_ft_obuf[17] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[18]  (
	.O(WRITEDATAWB_aptn_ft[18]),
	.I(WRITEDATAWB_aptn_ft_c[18])
);
defparam \WRITEDATAWB_aptn_ft_obuf[18] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[19]  (
	.O(WRITEDATAWB_aptn_ft[19]),
	.I(WRITEDATAWB_aptn_ft_c[19])
);
defparam \WRITEDATAWB_aptn_ft_obuf[19] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[20]  (
	.O(WRITEDATAWB_aptn_ft[20]),
	.I(WRITEDATAWB_aptn_ft_c[20])
);
defparam \WRITEDATAWB_aptn_ft_obuf[20] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[21]  (
	.O(WRITEDATAWB_aptn_ft[21]),
	.I(WRITEDATAWB_aptn_ft_c[21])
);
defparam \WRITEDATAWB_aptn_ft_obuf[21] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[22]  (
	.O(WRITEDATAWB_aptn_ft[22]),
	.I(WRITEDATAWB_aptn_ft_c[22])
);
defparam \WRITEDATAWB_aptn_ft_obuf[22] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[23]  (
	.O(WRITEDATAWB_aptn_ft[23]),
	.I(WRITEDATAWB_aptn_ft_c[23])
);
defparam \WRITEDATAWB_aptn_ft_obuf[23] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[24]  (
	.O(WRITEDATAWB_aptn_ft[24]),
	.I(WRITEDATAWB_aptn_ft_c[24])
);
defparam \WRITEDATAWB_aptn_ft_obuf[24] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[25]  (
	.O(WRITEDATAWB_aptn_ft[25]),
	.I(WRITEDATAWB_aptn_ft_c[25])
);
defparam \WRITEDATAWB_aptn_ft_obuf[25] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[26]  (
	.O(WRITEDATAWB_aptn_ft[26]),
	.I(WRITEDATAWB_aptn_ft_c[26])
);
defparam \WRITEDATAWB_aptn_ft_obuf[26] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[27]  (
	.O(WRITEDATAWB_aptn_ft[27]),
	.I(WRITEDATAWB_aptn_ft_c[27])
);
defparam \WRITEDATAWB_aptn_ft_obuf[27] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[28]  (
	.O(WRITEDATAWB_aptn_ft[28]),
	.I(WRITEDATAWB_aptn_ft_c[28])
);
defparam \WRITEDATAWB_aptn_ft_obuf[28] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[29]  (
	.O(WRITEDATAWB_aptn_ft[29]),
	.I(WRITEDATAWB_aptn_ft_c[29])
);
defparam \WRITEDATAWB_aptn_ft_obuf[29] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[30]  (
	.O(WRITEDATAWB_aptn_ft[30]),
	.I(WRITEDATAWB_aptn_ft_c[30])
);
defparam \WRITEDATAWB_aptn_ft_obuf[30] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[31]  (
	.O(WRITEDATAWB_aptn_ft[31]),
	.I(WRITEDATAWB_aptn_ft_c[31])
);
defparam \WRITEDATAWB_aptn_ft_obuf[31] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[32]  (
	.O(WRITEDATAWB_aptn_ft[32]),
	.I(WRITEDATAWB_aptn_ft_c[32])
);
defparam \WRITEDATAWB_aptn_ft_obuf[32] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[33]  (
	.O(WRITEDATAWB_aptn_ft[33]),
	.I(WRITEDATAWB_aptn_ft_c[33])
);
defparam \WRITEDATAWB_aptn_ft_obuf[33] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[34]  (
	.O(WRITEDATAWB_aptn_ft[34]),
	.I(WRITEDATAWB_aptn_ft_c[34])
);
defparam \WRITEDATAWB_aptn_ft_obuf[34] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[35]  (
	.O(WRITEDATAWB_aptn_ft[35]),
	.I(WRITEDATAWB_aptn_ft_c[35])
);
defparam \WRITEDATAWB_aptn_ft_obuf[35] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[36]  (
	.O(WRITEDATAWB_aptn_ft[36]),
	.I(WRITEDATAWB_aptn_ft_c[36])
);
defparam \WRITEDATAWB_aptn_ft_obuf[36] .IOSTANDARD="LVCMOS12";
  OBUF \WRITEDATAWB_aptn_ft_obuf[37]  (
	.O(WRITEDATAWB_aptn_ft[37]),
	.I(WRITEDATAWB_aptn_ft_c[37])
);
defparam \WRITEDATAWB_aptn_ft_obuf[37] .IOSTANDARD="POD12_DCI";
  OBUF \WRITEDATAWB_aptn_ft_obuf[38]  (
	.O(WRITEDATAWB_aptn_ft[38]),
	.I(WRITEDATAWB_aptn_ft_c[38])
);
defparam \WRITEDATAWB_aptn_ft_obuf[38] .IOSTANDARD="POD12_DCI";
  OBUF \WRITEDATAWB_aptn_ft_obuf[39]  (
	.O(WRITEDATAWB_aptn_ft[39]),
	.I(WRITEDATAWB_aptn_ft_c[39])
);
defparam \WRITEDATAWB_aptn_ft_obuf[39] .IOSTANDARD="POD12_DCI";
  OBUF \WRITEDATAWB_aptn_ft_obuf[40]  (
	.O(WRITEDATAWB_aptn_ft[40]),
	.I(WRITEDATAWB_aptn_ft_c[40])
);
defparam \WRITEDATAWB_aptn_ft_obuf[40] .IOSTANDARD="POD12_DCI";
  OBUF \WRITEDATAWB_aptn_ft_obuf[41]  (
	.O(WRITEDATAWB_aptn_ft[41]),
	.I(WRITEDATAWB_aptn_ft_c[41])
);
defparam \WRITEDATAWB_aptn_ft_obuf[41] .IOSTANDARD="POD12_DCI";
  OBUF \WRITEDATAWB_aptn_ft_obuf[42]  (
	.O(WRITEDATAWB_aptn_ft[42]),
	.I(WRITEDATAWB_aptn_ft_c[42])
);
defparam \WRITEDATAWB_aptn_ft_obuf[42] .IOSTANDARD="POD12_DCI";
  OBUF \WRITEDATAWB_aptn_ft_obuf[43]  (
	.O(WRITEDATAWB_aptn_ft[43]),
	.I(WRITEDATAWB_aptn_ft_c[43])
);
defparam \WRITEDATAWB_aptn_ft_obuf[43] .IOSTANDARD="POD12_DCI";
  OBUF \WRITEDATAWB_aptn_ft_obuf[44]  (
	.O(WRITEDATAWB_aptn_ft[44]),
	.I(WRITEDATAWB_aptn_ft_c[44])
);
defparam \WRITEDATAWB_aptn_ft_obuf[44] .IOSTANDARD="POD12_DCI";
  OBUF \WRITEDATAWB_aptn_ft_obuf[45]  (
	.O(WRITEDATAWB_aptn_ft[45]),
	.I(WRITEDATAWB_aptn_ft_c[45])
);
defparam \WRITEDATAWB_aptn_ft_obuf[45] .IOSTANDARD="POD12_DCI";
  OBUF \WRITEDATAWB_aptn_ft_obuf[46]  (
	.O(WRITEDATAWB_aptn_ft[46]),
	.I(WRITEDATAWB_aptn_ft_c[46])
);
defparam \WRITEDATAWB_aptn_ft_obuf[46] .IOSTANDARD="POD12_DCI";
  OBUF \WRITEDATAWB_aptn_ft_obuf[47]  (
	.O(WRITEDATAWB_aptn_ft[47]),
	.I(WRITEDATAWB_aptn_ft_c[47])
);
defparam \WRITEDATAWB_aptn_ft_obuf[47] .IOSTANDARD="POD12_DCI";
  OBUF \WRITEDATAWB_aptn_ft_obuf[48]  (
	.O(WRITEDATAWB_aptn_ft[48]),
	.I(WRITEDATAWB_aptn_ft_c[48])
);
defparam \WRITEDATAWB_aptn_ft_obuf[48] .IOSTANDARD="POD12_DCI";
  OBUF \WRITEDATAWB_aptn_ft_obuf[49]  (
	.O(WRITEDATAWB_aptn_ft[49]),
	.I(WRITEDATAWB_aptn_ft_c[49])
);
defparam \WRITEDATAWB_aptn_ft_obuf[49] .IOSTANDARD="POD12_DCI";
  OBUF \WRITEDATAWB_aptn_ft_obuf[50]  (
	.O(WRITEDATAWB_aptn_ft[50]),
	.I(WRITEDATAWB_aptn_ft_c[50])
);
defparam \WRITEDATAWB_aptn_ft_obuf[50] .IOSTANDARD="POD12_DCI";
  OBUF \WRITEDATAWB_aptn_ft_obuf[51]  (
	.O(WRITEDATAWB_aptn_ft[51]),
	.I(WRITEDATAWB_aptn_ft_c[51])
);
defparam \WRITEDATAWB_aptn_ft_obuf[51] .IOSTANDARD="POD12_DCI";
  OBUF \WRITEDATAWB_aptn_ft_obuf[52]  (
	.O(WRITEDATAWB_aptn_ft[52]),
	.I(WRITEDATAWB_aptn_ft_c[52])
);
defparam \WRITEDATAWB_aptn_ft_obuf[52] .IOSTANDARD="POD12_DCI";
  OBUF \WRITEDATAWB_aptn_ft_obuf[53]  (
	.O(WRITEDATAWB_aptn_ft[53]),
	.I(WRITEDATAWB_aptn_ft_c[53])
);
defparam \WRITEDATAWB_aptn_ft_obuf[53] .IOSTANDARD="POD12_DCI";
  OBUF \WRITEDATAWB_aptn_ft_obuf[54]  (
	.O(WRITEDATAWB_aptn_ft[54]),
	.I(WRITEDATAWB_aptn_ft_c[54])
);
defparam \WRITEDATAWB_aptn_ft_obuf[54] .IOSTANDARD="POD12_DCI";
  OBUF \WRITEDATAWB_aptn_ft_obuf[55]  (
	.O(WRITEDATAWB_aptn_ft[55]),
	.I(WRITEDATAWB_aptn_ft_c[55])
);
defparam \WRITEDATAWB_aptn_ft_obuf[55] .IOSTANDARD="POD12_DCI";
  OBUF \WRITEDATAWB_aptn_ft_obuf[56]  (
	.O(WRITEDATAWB_aptn_ft[56]),
	.I(WRITEDATAWB_aptn_ft_c[56])
);
defparam \WRITEDATAWB_aptn_ft_obuf[56] .IOSTANDARD="POD12_DCI";
  OBUF \WRITEDATAWB_aptn_ft_obuf[57]  (
	.O(WRITEDATAWB_aptn_ft[57]),
	.I(WRITEDATAWB_aptn_ft_c[57])
);
defparam \WRITEDATAWB_aptn_ft_obuf[57] .IOSTANDARD="POD12_DCI";
  OBUF \WRITEDATAWB_aptn_ft_obuf[58]  (
	.O(WRITEDATAWB_aptn_ft[58]),
	.I(WRITEDATAWB_aptn_ft_c[58])
);
defparam \WRITEDATAWB_aptn_ft_obuf[58] .IOSTANDARD="POD12_DCI";
  OBUF \WRITEDATAWB_aptn_ft_obuf[59]  (
	.O(WRITEDATAWB_aptn_ft[59]),
	.I(WRITEDATAWB_aptn_ft_c[59])
);
defparam \WRITEDATAWB_aptn_ft_obuf[59] .IOSTANDARD="POD12_DCI";
  OBUF \WRITEDATAWB_aptn_ft_obuf[60]  (
	.O(WRITEDATAWB_aptn_ft[60]),
	.I(WRITEDATAWB_aptn_ft_c[60])
);
defparam \WRITEDATAWB_aptn_ft_obuf[60] .IOSTANDARD="POD12_DCI";
  OBUF \WRITEDATAWB_aptn_ft_obuf[61]  (
	.O(WRITEDATAWB_aptn_ft[61]),
	.I(WRITEDATAWB_aptn_ft_c[61])
);
defparam \WRITEDATAWB_aptn_ft_obuf[61] .IOSTANDARD="POD12_DCI";
  OBUF \WRITEDATAWB_aptn_ft_obuf[62]  (
	.O(WRITEDATAWB_aptn_ft[62]),
	.I(WRITEDATAWB_aptn_ft_c[62])
);
defparam \WRITEDATAWB_aptn_ft_obuf[62] .IOSTANDARD="POD12_DCI";
  OBUF \WRITEDATAWB_aptn_ft_obuf[63]  (
	.O(WRITEDATAWB_aptn_ft[63]),
	.I(WRITEDATAWB_aptn_ft_c[63])
);
defparam \WRITEDATAWB_aptn_ft_obuf[63] .IOSTANDARD="POD12_DCI";
  OBUF \WRMEM_aptn_ft_0_obuf[0]  (
	.O(WRMEM_aptn_ft_0[0]),
	.I(WRMEM_aptn_ft_0_c[0])
);
defparam \WRMEM_aptn_ft_0_obuf[0] .IOSTANDARD="POD12_DCI";
  OBUF \WRMEM_aptn_ft_0_obuf[1]  (
	.O(WRMEM_aptn_ft_0[1]),
	.I(WRMEM_aptn_ft_0_c[1])
);
defparam \WRMEM_aptn_ft_0_obuf[1] .IOSTANDARD="POD12_DCI";
  OBUF \WRMEM_aptn_ft_0_obuf[2]  (
	.O(WRMEM_aptn_ft_0[2]),
	.I(WRMEM_aptn_ft_0_c[2])
);
defparam \WRMEM_aptn_ft_0_obuf[2] .IOSTANDARD="POD12_DCI";
  OBUF \WRMEM_aptn_ft_0_obuf[3]  (
	.O(WRMEM_aptn_ft_0[3]),
	.I(WRMEM_aptn_ft_0_c[3])
);
defparam \WRMEM_aptn_ft_0_obuf[3] .IOSTANDARD="POD12_DCI";
  OBUF \WRMEM_aptn_ft_0_obuf[4]  (
	.O(WRMEM_aptn_ft_0[4]),
	.I(WRMEM_aptn_ft_0_c[4])
);
defparam \WRMEM_aptn_ft_0_obuf[4] .IOSTANDARD="POD12_DCI";
  OBUF \WRWB_aptn_ft_obuf[0]  (
	.O(WRWB_aptn_ft[0]),
	.I(WRWB_aptn_ft_c[0])
);
defparam \WRWB_aptn_ft_obuf[0] .IOSTANDARD="LVCMOS12";
  OBUF \WRWB_aptn_ft_obuf[1]  (
	.O(WRWB_aptn_ft[1]),
	.I(WRWB_aptn_ft_c[1])
);
defparam \WRWB_aptn_ft_obuf[1] .IOSTANDARD="LVCMOS12";
  OBUF \WRWB_aptn_ft_obuf[2]  (
	.O(WRWB_aptn_ft[2]),
	.I(WRWB_aptn_ft_c[2])
);
defparam \WRWB_aptn_ft_obuf[2] .IOSTANDARD="LVCMOS12";
  OBUF \WRWB_aptn_ft_obuf[3]  (
	.O(WRWB_aptn_ft[3]),
	.I(WRWB_aptn_ft_c[3])
);
defparam \WRWB_aptn_ft_obuf[3] .IOSTANDARD="LVCMOS12";
  OBUF \WRWB_aptn_ft_obuf[4]  (
	.O(WRWB_aptn_ft[4]),
	.I(WRWB_aptn_ft_c[4])
);
defparam \WRWB_aptn_ft_obuf[4] .IOSTANDARD="LVCMOS12";
  OBUF \INSTRUCID_0_11_obuf[11]  (
	.O(INSTRUCID_0_11[11]),
	.I(INSTRUCID_0_11_c[11])
);
defparam \INSTRUCID_0_11_obuf[11] .IOSTANDARD="POD12_DCI";
  OBUF \INSTRUCID_0_11_obuf[10]  (
	.O(INSTRUCID_0_11[10]),
	.I(INSTRUCID_0_11_c[10])
);
defparam \INSTRUCID_0_11_obuf[10] .IOSTANDARD="POD12_DCI";
  OBUF \INSTRUCID_0_11_obuf[9]  (
	.O(INSTRUCID_0_11[9]),
	.I(INSTRUCID_0_11_c[9])
);
defparam \INSTRUCID_0_11_obuf[9] .IOSTANDARD="POD12_DCI";
  OBUF \INSTRUCID_0_11_obuf[8]  (
	.O(INSTRUCID_0_11[8]),
	.I(INSTRUCID_0_11_c[8])
);
defparam \INSTRUCID_0_11_obuf[8] .IOSTANDARD="POD12_DCI";
  OBUF \INSTRUCID_0_11_obuf[7]  (
	.O(INSTRUCID_0_11[7]),
	.I(INSTRUCID_0_11_c[7])
);
defparam \INSTRUCID_0_11_obuf[7] .IOSTANDARD="POD12_DCI";
  OBUF \INSTRUCID_0_11_obuf[6]  (
	.O(INSTRUCID_0_11[6]),
	.I(INSTRUCID_0_11_c[6])
);
defparam \INSTRUCID_0_11_obuf[6] .IOSTANDARD="POD12_DCI";
  OBUF \INSTRUCID_0_11_obuf[5]  (
	.O(INSTRUCID_0_11[5]),
	.I(INSTRUCID_0_11_c[5])
);
defparam \INSTRUCID_0_11_obuf[5] .IOSTANDARD="POD12_DCI";
  OBUF \INSTRUCID_0_11_obuf[4]  (
	.O(INSTRUCID_0_11[4]),
	.I(INSTRUCID_0_11_c[4])
);
defparam \INSTRUCID_0_11_obuf[4] .IOSTANDARD="POD12_DCI";
  OBUF \INSTRUCID_0_11_obuf[3]  (
	.O(INSTRUCID_0_11[3]),
	.I(INSTRUCID_0_11_c[3])
);
defparam \INSTRUCID_0_11_obuf[3] .IOSTANDARD="POD12_DCI";
  OBUF \INSTRUCID_0_11_obuf[2]  (
	.O(INSTRUCID_0_11[2]),
	.I(INSTRUCID_0_11_c[2])
);
defparam \INSTRUCID_0_11_obuf[2] .IOSTANDARD="POD12_DCI";
  OBUF \INSTRUCID_0_11_obuf[1]  (
	.O(INSTRUCID_0_11[1]),
	.I(INSTRUCID_0_11_c[1])
);
defparam \INSTRUCID_0_11_obuf[1] .IOSTANDARD="POD12_DCI";
  OBUF \INSTRUCID_0_11_obuf[0]  (
	.O(INSTRUCID_0_11[0]),
	.I(INSTRUCID_0_11_c[0])
);
defparam \INSTRUCID_0_11_obuf[0] .IOSTANDARD="POD12_DCI";
  OBUF \INSTRUCID_15_26_obuf[26]  (
	.O(INSTRUCID_15_26[26]),
	.I(INSTRUCID_15_26_c[26])
);
defparam \INSTRUCID_15_26_obuf[26] .IOSTANDARD="POD12_DCI";
  OBUF \INSTRUCID_15_26_obuf[25]  (
	.O(INSTRUCID_15_26[25]),
	.I(INSTRUCID_15_26_c[25])
);
defparam \INSTRUCID_15_26_obuf[25] .IOSTANDARD="POD12_DCI";
  OBUF \INSTRUCID_15_26_obuf[24]  (
	.O(INSTRUCID_15_26[24]),
	.I(INSTRUCID_15_26_c[24])
);
defparam \INSTRUCID_15_26_obuf[24] .IOSTANDARD="POD12_DCI";
  OBUF \INSTRUCID_15_26_obuf[23]  (
	.O(INSTRUCID_15_26[23]),
	.I(INSTRUCID_15_26_c[23])
);
defparam \INSTRUCID_15_26_obuf[23] .IOSTANDARD="POD12_DCI";
  OBUF \INSTRUCID_15_26_obuf[22]  (
	.O(INSTRUCID_15_26[22]),
	.I(INSTRUCID_15_26_c[22])
);
defparam \INSTRUCID_15_26_obuf[22] .IOSTANDARD="POD12_DCI";
  OBUF \INSTRUCID_15_26_obuf[21]  (
	.O(INSTRUCID_15_26[21]),
	.I(INSTRUCID_15_26_c[21])
);
defparam \INSTRUCID_15_26_obuf[21] .IOSTANDARD="POD12_DCI";
  OBUF \INSTRUCID_15_26_obuf[20]  (
	.O(INSTRUCID_15_26[20]),
	.I(INSTRUCID_15_26_c[20])
);
defparam \INSTRUCID_15_26_obuf[20] .IOSTANDARD="POD12_DCI";
  OBUF \INSTRUCID_15_26_obuf[19]  (
	.O(INSTRUCID_15_26[19]),
	.I(INSTRUCID_15_26_c[19])
);
defparam \INSTRUCID_15_26_obuf[19] .IOSTANDARD="POD12_DCI";
  OBUF \INSTRUCID_15_26_obuf[18]  (
	.O(INSTRUCID_15_26[18]),
	.I(INSTRUCID_15_26_c[18])
);
defparam \INSTRUCID_15_26_obuf[18] .IOSTANDARD="POD12_DCI";
  OBUF \INSTRUCID_15_26_obuf[17]  (
	.O(INSTRUCID_15_26[17]),
	.I(INSTRUCID_15_26_c[17])
);
defparam \INSTRUCID_15_26_obuf[17] .IOSTANDARD="POD12_DCI";
  OBUF \INSTRUCID_15_26_obuf[16]  (
	.O(INSTRUCID_15_26[16]),
	.I(INSTRUCID_15_26_c[16])
);
defparam \INSTRUCID_15_26_obuf[16] .IOSTANDARD="POD12_DCI";
  OBUF \INSTRUCID_15_26_obuf[15]  (
	.O(INSTRUCID_15_26[15]),
	.I(INSTRUCID_15_26_c[15])
);
defparam \INSTRUCID_15_26_obuf[15] .IOSTANDARD="POD12_DCI";
  OBUF \INSTRUCID_28_29_obuf[29]  (
	.O(INSTRUCID_28_29[29]),
	.I(INSTRUCID_28_29_c[29])
);
defparam \INSTRUCID_28_29_obuf[29] .IOSTANDARD="POD12_DCI";
  OBUF \INSTRUCID_28_29_obuf[28]  (
	.O(INSTRUCID_28_29[28]),
	.I(INSTRUCID_28_29_c[28])
);
defparam \INSTRUCID_28_29_obuf[28] .IOSTANDARD="POD12_DCI";
  OBUF \INSTRUCID_31_obuf[31]  (
	.O(INSTRUCID_31[31]),
	.I(INSTRUCID_31_c[31])
);
defparam \INSTRUCID_31_obuf[31] .IOSTANDARD="POD12_DCI";
  OBUF \UMR3_SIB_LINK_OUT_obuf[0]  (
	.O(UMR3_SIB_LINK_OUT[0]),
	.I(UMR3_SIB_LINK_OUT_c[0])
);
defparam \UMR3_SIB_LINK_OUT_obuf[0] .IOSTANDARD="LVDCI_18";
  OBUF \UMR3_SIB_LINK_OUT_obuf[1]  (
	.O(UMR3_SIB_LINK_OUT[1]),
	.I(UMR3_SIB_LINK_OUT_c[1])
);
defparam \UMR3_SIB_LINK_OUT_obuf[1] .IOSTANDARD="LVDCI_18";
  OBUF AFPGA_GLNK_OUT_obuf (
	.O(AFPGA_GLNK_OUT),
	.I(AFPGA_GLNK_OUT_c)
);
defparam AFPGA_GLNK_OUT_obuf.IOSTANDARD="LVCMOS18";
  OBUF AFPGA_LOCK_CDi_O_obuf (
	.O(AFPGA_LOCK_CDi_O),
	.I(AFPGA_LOCK_CDi_O_c)
);
defparam AFPGA_LOCK_CDi_O_obuf.IOSTANDARD="LVCMOS18";
  OBUF DUMMY_PORT_obuf (
	.O(DUMMY_PORT),
	.I(DUMMY_PORT_c)
);
defparam DUMMY_PORT_obuf.IOSTANDARD="LVCMOS18";
  OBUF DUMMY_GSR_PORT_obuf (
	.O(DUMMY_GSR_PORT),
	.I(DUMMY_GSR_PORT_c)
);
defparam DUMMY_GSR_PORT_obuf.IOSTANDARD="LVCMOS18";
  OBUF MNGLINK_TX_obuf (
	.O(MNGLINK_TX),
	.I(MNGLINK_TX_c)
);
defparam MNGLINK_TX_obuf.IOSTANDARD="LVCMOS18";
  OBUF DBG_DOUT_0_obuf (
	.O(DBG_DOUT_0),
	.I(GND)
);
defparam DBG_DOUT_0_obuf.IOSTANDARD="LVCMOS18";
  OBUF DBG_DOUT_1_obuf (
	.O(DBG_DOUT_1),
	.I(GND)
);
defparam DBG_DOUT_1_obuf.IOSTANDARD="LVCMOS18";
  OBUF DBG_DOUT_2_obuf (
	.O(DBG_DOUT_2),
	.I(GND)
);
defparam DBG_DOUT_2_obuf.IOSTANDARD="LVCMOS18";
  OBUF DBG_DOUT_3_obuf (
	.O(DBG_DOUT_3),
	.I(GND)
);
defparam DBG_DOUT_3_obuf.IOSTANDARD="LVCMOS18";
  OBUF DBG_DOUT_4_obuf (
	.O(DBG_DOUT_4),
	.I(GND)
);
defparam DBG_DOUT_4_obuf.IOSTANDARD="LVCMOS18";
  OBUF DBG_DOUT_5_obuf (
	.O(DBG_DOUT_5),
	.I(GND)
);
defparam DBG_DOUT_5_obuf.IOSTANDARD="LVCMOS18";
  OBUF DBG_DOUT_6_obuf (
	.O(DBG_DOUT_6),
	.I(GND)
);
defparam DBG_DOUT_6_obuf.IOSTANDARD="LVCMOS18";
  OBUF DBG_DOUT_7_obuf (
	.O(DBG_DOUT_7),
	.I(GND)
);
defparam DBG_DOUT_7_obuf.IOSTANDARD="LVCMOS18";
  BUFG clk_bufg_cZ (
	.I(clk_bufg),
	.O(clkz)
);
  IBUFGDS clk_ibufgds (
	.O(clk_bufg),
	.I(clk),
	.IB(clk_0)
);
defparam clk_ibufgds.IOSTANDARD="DIFF_POD12_DCI";
(* haps_ip_type="bsa19_system_ip_wrapper" *)  bsa19_system_ip_wrapper_256s_0_25s_1_1_1_1_1611514078 sysip_inst (
	.hstdm_system_capim_interface_ctrl_data_out(hstdm_system_capim_interface_ctrl_data_out[27:0]),
	.hstdm_controller_system_capim_data_out(hstdm_controller_system_capim_data_out[31:0]),
	.hstdm_system_capim_interface_mem_data_out(hstdm_system_capim_interface_mem_data_out[27:0]),
	.hstdm_memory_system_capim_data_out(hstdm_memory_system_capim_data_out[31:0]),
	.haps_system_memory_interface_raddr_raw(haps_system_memory_interface_raddr_raw[27:0]),
	.haps_system_memory_data_out(haps_system_memory_data_out[31:0]),
	.DBG_REFCLKN_0(DBG_REFCLKN_0[3:0]),
	.DBG_REFCLKP_0(DBG_REFCLKP_0[3:0]),
	.DBG_TXN(DBG_TXN[7:0]),
	.DBG_TXP(DBG_TXP[7:0]),
	.DBG_RXN(DBG_RXN[7:0]),
	.DBG_RXP(DBG_RXP[7:0]),
	.GT1_RXN({GT1_RXN[3], GT1_RXN[2], GT1_RXN[1], GT1_RXN[0]}),
	.GT1_RXP({GT1_RXP[3], GT1_RXP[2], GT1_RXP[1], GT1_RXP[0]}),
	.GT1_TXN({GT1_TXN[3], GT1_TXN[2], GT1_TXN[1], GT1_TXN[0]}),
	.GT1_TXP({GT1_TXP[3], GT1_TXP[2], GT1_TXP[1], GT1_TXP[0]}),
	.AFPGA_LOCK_CDO_GLNK_I_c_0(AFPGA_LOCK_CDO_GLNK_I_c[0]),
	.UMR3_SIB_LINK_OUT_c(UMR3_SIB_LINK_OUT_c[1:0]),
	.UMR3_SIB_LINK_IN_c(UMR3_SIB_LINK_IN_c[1:0]),
	.umr2_clk(umr2_clk),
	.umr3_clk(umr3_clk),
	.hstdm_refclk_100(hstdm_refclk_100),
	.ufpga_lock_cdi_i(CDO_28),
	.umr3_reset(umr3_reset),
	.hstdm_system_capim_interface_enable_ctrl_out(hstdm_system_capim_interface_enable_ctrl_out),
	.hstdm_system_capim_interface_ctrl_wr_out(hstdm_system_capim_interface_ctrl_wr_out),
	.hstdm_system_capim_interface_ctrl_rd_out(hstdm_system_capim_interface_ctrl_rd_out),
	.hstdm_system_capim_interface_enable_memory_out(hstdm_system_capim_interface_enable_memory_out),
	.hstdm_system_capim_interface_mem_wr_out(hstdm_system_capim_interface_mem_wr_out),
	.hstdm_system_capim_interface_mem_rd_out(hstdm_system_capim_interface_mem_rd_out),
	.haps_system_memory_interface_enable_in(haps_system_memory_interface_enable_in),
	.haps_system_memory_interface_wr_raw(haps_system_memory_interface_wr_raw),
	.haps_system_memory_interface_rd_raw(haps_system_memory_interface_rd_raw),
	.ufpga_reset_n_o(ufpga_reset_n_o),
	.ufpga_lock_cdo_o(ufpga_lock_cdo_o),
	.ufpga_lock_ce_o(ufpga_lock_ce_o),
	.ufpga_lock_clk_o(ufpga_lock_clk_o),
	.DUMMY_GSR_PORT_c(DUMMY_GSR_PORT_c),
	.GT1_REFCLK_N(GT1_REFCLK_N),
	.GT1_REFCLK_P(GT1_REFCLK_P),
	.MNGLINK_RX_c(MNGLINK_RX_c),
	.MNGLINK_TX_c(MNGLINK_TX_c),
	.DUMMY_PORT_c(DUMMY_PORT_c),
	.REF_RESET_c(REF_RESET_c),
	.REF_CLK_N(REF_CLK_N),
	.REF_CLK_P(REF_CLK_P),
	.AFPGA_LOCK_CDi_O_c(AFPGA_LOCK_CDi_O_c),
	.AFPGA_LOCK_CE_I_c(AFPGA_LOCK_CE_I_c),
	.AFPGA_LOCK_CLK_I_c(AFPGA_LOCK_CLK_I_c),
	.AFPGA_GLNK_OUT_c(AFPGA_GLNK_OUT_c)
);
endmodule /* FB1_uA */

